cyber_modules {
  key: "Camera"
  value: {
    dag_files: "/apollo/modules/drivers/camera/dag/camera.dag"
    dag_files: "/apollo/modules/drivers/video/dag/video.dag"
  }
}
cyber_modules {
  key: "Canbus"
  value: {
    dag_files: "/apollo/modules/canbus/dag/canbus.dag"
  }
}
cyber_modules {
  key: "Control"
  value: {
    dag_files: "/apollo/modules/control/control_component/dag/control.dag"
  }
}
cyber_modules {
  key: "GPS"
  value: {
    dag_files: "/apollo/modules/drivers/gnss/dag/gnss.dag"
  }
}
cyber_modules {
  key: "Guardian"
  value: {
    dag_files: "/apollo/modules/guardian/dag/guardian.dag"
  }
}
cyber_modules {
  key: "Localization"
  value: {
    dag_files: "/apollo/modules/localization/dag/dag_streaming_rtk_localization.dag"
  }
}
cyber_modules {
  key: "Perception"
  value: {
    dag_files: "/apollo/modules/perception/multi_sensor_fusion/dag/multi_sensor_fusion.dag"
    dag_files: "/apollo/modules/prediction/dag/prediction_navi.dag"
    dag_files: "/apollo/modules/perception/camera_detection_multi_stage/dag/camera_detection_multi_stage_front.dag"
    dag_files: "/apollo/modules/perception/camera_location_estimation/dag/camera_location_estimation_front.dag"
    dag_files: "/apollo/modules/perception/camera_location_refinement/dag/camera_location_refinement_front.dag"
    dag_files: "/apollo/modules/perception/camera_tracking/dag/camera_tracking_front.dag"
    dag_files: "/apollo/modules/perception/camera_detection_multi_stage/dag/camera_detection_multi_stage_rear.dag"
    dag_files: "/apollo/modules/perception/camera_location_estimation/dag/camera_location_estimation_rear.dag"
    dag_files: "/apollo/modules/perception/camera_location_refinement/dag/camera_location_refinement_rear.dag"
    dag_files: "/apollo/modules/perception/camera_tracking/dag/camera_tracking_rear.dag"
    dag_files: "/apollo/modules/perception/pointcloud_preprocess/dag/pointcloud_preprocess.dag"
    dag_files: "/apollo/modules/perception/pointcloud_map_based_roi/dag/pointcloud_map_based_roi.dag"
    dag_files: "/apollo/modules/perception/pointcloud_ground_detection/dag/pointcloud_ground_detection.dag"
    dag_files: "/apollo/modules/perception/lidar_detection/dag/lidar_detection.dag"
    dag_files: "/apollo/modules/perception/lidar_detection_filter/dag/lidar_detection_filter.dag"
    dag_files: "/apollo/modules/perception/lidar_tracking/dag/lidar_tracking.dag"
    dag_files: "/apollo/modules/perception/radar_detection/dag/radar_detection_front.dag"
  }
}
cyber_modules {
  key: "Traffic Light"
  value: {
    dag_files: "/apollo/modules/perception/production/dag/dag_streaming_perception_trafficlights.dag"
  }
}
cyber_modules {
  key: "Planning"
  value: {
    dag_files: "/apollo/modules/planning/planning_component/dag/planning.dag"
    dag_files: "/apollo/modules/external_command/process_component/dag/external_command_process.dag"
  }
}
cyber_modules {
  key: "Storytelling"
  value: {
    dag_files: "/apollo/modules/storytelling/dag/storytelling.dag"
  }
}
cyber_modules {
  key: "Prediction"
  value: {
    dag_files: "/apollo/modules/prediction/dag/prediction.dag"
  }
}
cyber_modules {
  key: "Radar"
  value: {
    dag_files: "/apollo/modules/drivers/radar/conti_radar/dag/conti_radar.dag"
  }
}
cyber_modules {
  key: "Transform"
  value: {
    dag_files: "/apollo/modules/transform/dag/static_transform.dag"
  }
}
cyber_modules {
  key: "Velodyne"
  value: {
    dag_files: "/apollo/modules/drivers/lidar/velodyne/dag/velodyne.dag"
  }
}
modules {
  key: "Recorder"
  value: {
    start_command: "/apollo/scripts/record_bag.py --start"
    stop_command: "/apollo/scripts/record_bag.py --stop"
    process_monitor_config {
      command_keywords: "cyber_recorder record"
    }
  }
}
monitored_components {
  key: "Recorder"
  value: {
    process {
      command_keywords: "cyber_recorder record"
    }
    resource {
      disk_spaces {
        # For logs.
        path: "/apollo/data"
        insufficient_space_warning: 8
        insufficient_space_error: 2
      }
      disk_spaces {
        # For records.
        path: "/media/apollo/internal_nvme"
        insufficient_space_warning: 128
        insufficient_space_error: 32
      }
    }
  }
}
monitored_components {
  key: "GPS"
  value: {
    process {
      command_keywords: "mainboard"
      command_keywords: "/apollo/modules/drivers/gnss/dag/gnss.dag"
    }
    # We also have a special GPSMonitor to check message status.
  }
}
monitored_components {
  key: "Localization"
  value: {
    # Special LocalizationMonitor.
  }
}
monitored_components {
  key: "Lidar 128"
  value: {
    channel {
      name: "/apollo/sensor/lidar128/compensator/PointCloud2"
    }
  }
}

modules {
  key: "Compositor 0"
  value: {
    start_command: "run_teleop_compositor0.bash start"
    stop_command: "run_teleop_compositor0.bash kill"
    process_monitor_config {
      command_keywords: "python"
      command_keywords: "compositor.py 0"
    }
  }
}
modules {
  key: "Compositor 1"
  value: {
    start_command: "run_teleop_compositor1.bash start"
    stop_command: "run_teleop_compositor1.bash kill"
    process_monitor_config {
      command_keywords: "python"
      command_keywords: "compositor.py 1"
    }
  }
}
modules {
  key: "Compositor 2"
  value: {
    start_command: "run_teleop_compositor2.bash start"
    stop_command: "run_teleop_compositor2.bash kill"
    process_monitor_config {
      command_keywords: "python"
      command_keywords: "compositor.py 2"
    }
  }
}
modules {
  key: "Daemon"
  value: {
    start_command: "run_teleop_daemon.bash start"
    stop_command: "run_teleop_daemon.bash kill"
    process_monitor_config {
      command_keywords: "python"
      command_keywords: "daemon.py"
    }
  }
}
modules {
  key: "Modem"
  value: {
    start_command: "run_teleop_modem.bash start"
    stop_command: "run_teleop_modem.bash kill"
    process_monitor_config {
      command_keywords: "python"
      command_keywords: "modem.py"
    }
  }
}
modules {
  key: "Router"
  value: {
    start_command: "run_teleop_router.bash start"
    stop_command: "run_teleop_router.bash kill"
    process_monitor_config {
      command_keywords: "python"
      command_keywords: "router.py"
    }
  }
}
modules {
  key: "Voip Decoder"
  value: {
    start_command: "run_teleop_voip_decoder.bash start"
    stop_command: "run_teleop_voip_decoder.bash kill"
    process_monitor_config {
      command_keywords: "python"
      command_keywords: "voip_decoder.py"
    }
  }
}
