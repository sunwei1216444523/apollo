import * as $protobuf from "protobufjs";
import Long = require("long");
/** Namespace apollo. */
export namespace apollo {

    /** Namespace cyber. */
    namespace cyber {

        /** Namespace proto. */
        namespace proto {

            /** SectionType enum. */
            enum SectionType {
                SECTION_HEADER = 0,
                SECTION_CHUNK_HEADER = 1,
                SECTION_CHUNK_BODY = 2,
                SECTION_INDEX = 3,
                SECTION_CHANNEL = 4
            }

            /** CompressType enum. */
            enum CompressType {
                COMPRESS_NONE = 0,
                COMPRESS_BZ2 = 1,
                COMPRESS_LZ4 = 2
            }

            /** Properties of a SingleIndex. */
            interface ISingleIndex {

                /** SingleIndex type */
                type?: (apollo.cyber.proto.SectionType|null);

                /** SingleIndex position */
                position?: (number|Long|null);

                /** SingleIndex channelCache */
                channelCache?: (apollo.cyber.proto.IChannelCache|null);

                /** SingleIndex chunkHeaderCache */
                chunkHeaderCache?: (apollo.cyber.proto.IChunkHeaderCache|null);

                /** SingleIndex chunkBodyCache */
                chunkBodyCache?: (apollo.cyber.proto.IChunkBodyCache|null);
            }

            /** Represents a SingleIndex. */
            class SingleIndex implements ISingleIndex {

                /**
                 * Constructs a new SingleIndex.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.ISingleIndex);

                /** SingleIndex type. */
                public type: apollo.cyber.proto.SectionType;

                /** SingleIndex position. */
                public position: (number|Long);

                /** SingleIndex channelCache. */
                public channelCache?: (apollo.cyber.proto.IChannelCache|null);

                /** SingleIndex chunkHeaderCache. */
                public chunkHeaderCache?: (apollo.cyber.proto.IChunkHeaderCache|null);

                /** SingleIndex chunkBodyCache. */
                public chunkBodyCache?: (apollo.cyber.proto.IChunkBodyCache|null);

                /** SingleIndex cache. */
                public cache?: ("channelCache"|"chunkHeaderCache"|"chunkBodyCache");

                /**
                 * Creates a new SingleIndex instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SingleIndex instance
                 */
                public static create(properties?: apollo.cyber.proto.ISingleIndex): apollo.cyber.proto.SingleIndex;

                /**
                 * Encodes the specified SingleIndex message. Does not implicitly {@link apollo.cyber.proto.SingleIndex.verify|verify} messages.
                 * @param message SingleIndex message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.ISingleIndex, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SingleIndex message, length delimited. Does not implicitly {@link apollo.cyber.proto.SingleIndex.verify|verify} messages.
                 * @param message SingleIndex message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.ISingleIndex, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SingleIndex message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SingleIndex
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.SingleIndex;

                /**
                 * Decodes a SingleIndex message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SingleIndex
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.SingleIndex;

                /**
                 * Verifies a SingleIndex message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SingleIndex message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SingleIndex
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.SingleIndex;

                /**
                 * Creates a plain object from a SingleIndex message. Also converts values to other types if specified.
                 * @param message SingleIndex
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.SingleIndex, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SingleIndex to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SingleIndex
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChunkHeaderCache. */
            interface IChunkHeaderCache {

                /** ChunkHeaderCache messageNumber */
                messageNumber?: (number|Long|null);

                /** ChunkHeaderCache beginTime */
                beginTime?: (number|Long|null);

                /** ChunkHeaderCache endTime */
                endTime?: (number|Long|null);

                /** ChunkHeaderCache rawSize */
                rawSize?: (number|Long|null);
            }

            /** Represents a ChunkHeaderCache. */
            class ChunkHeaderCache implements IChunkHeaderCache {

                /**
                 * Constructs a new ChunkHeaderCache.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IChunkHeaderCache);

                /** ChunkHeaderCache messageNumber. */
                public messageNumber: (number|Long);

                /** ChunkHeaderCache beginTime. */
                public beginTime: (number|Long);

                /** ChunkHeaderCache endTime. */
                public endTime: (number|Long);

                /** ChunkHeaderCache rawSize. */
                public rawSize: (number|Long);

                /**
                 * Creates a new ChunkHeaderCache instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChunkHeaderCache instance
                 */
                public static create(properties?: apollo.cyber.proto.IChunkHeaderCache): apollo.cyber.proto.ChunkHeaderCache;

                /**
                 * Encodes the specified ChunkHeaderCache message. Does not implicitly {@link apollo.cyber.proto.ChunkHeaderCache.verify|verify} messages.
                 * @param message ChunkHeaderCache message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IChunkHeaderCache, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChunkHeaderCache message, length delimited. Does not implicitly {@link apollo.cyber.proto.ChunkHeaderCache.verify|verify} messages.
                 * @param message ChunkHeaderCache message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IChunkHeaderCache, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChunkHeaderCache message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChunkHeaderCache
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.ChunkHeaderCache;

                /**
                 * Decodes a ChunkHeaderCache message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChunkHeaderCache
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.ChunkHeaderCache;

                /**
                 * Verifies a ChunkHeaderCache message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChunkHeaderCache message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChunkHeaderCache
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.ChunkHeaderCache;

                /**
                 * Creates a plain object from a ChunkHeaderCache message. Also converts values to other types if specified.
                 * @param message ChunkHeaderCache
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.ChunkHeaderCache, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChunkHeaderCache to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChunkHeaderCache
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChunkBodyCache. */
            interface IChunkBodyCache {

                /** ChunkBodyCache messageNumber */
                messageNumber?: (number|Long|null);
            }

            /** Represents a ChunkBodyCache. */
            class ChunkBodyCache implements IChunkBodyCache {

                /**
                 * Constructs a new ChunkBodyCache.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IChunkBodyCache);

                /** ChunkBodyCache messageNumber. */
                public messageNumber: (number|Long);

                /**
                 * Creates a new ChunkBodyCache instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChunkBodyCache instance
                 */
                public static create(properties?: apollo.cyber.proto.IChunkBodyCache): apollo.cyber.proto.ChunkBodyCache;

                /**
                 * Encodes the specified ChunkBodyCache message. Does not implicitly {@link apollo.cyber.proto.ChunkBodyCache.verify|verify} messages.
                 * @param message ChunkBodyCache message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IChunkBodyCache, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChunkBodyCache message, length delimited. Does not implicitly {@link apollo.cyber.proto.ChunkBodyCache.verify|verify} messages.
                 * @param message ChunkBodyCache message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IChunkBodyCache, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChunkBodyCache message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChunkBodyCache
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.ChunkBodyCache;

                /**
                 * Decodes a ChunkBodyCache message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChunkBodyCache
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.ChunkBodyCache;

                /**
                 * Verifies a ChunkBodyCache message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChunkBodyCache message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChunkBodyCache
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.ChunkBodyCache;

                /**
                 * Creates a plain object from a ChunkBodyCache message. Also converts values to other types if specified.
                 * @param message ChunkBodyCache
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.ChunkBodyCache, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChunkBodyCache to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChunkBodyCache
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChannelCache. */
            interface IChannelCache {

                /** ChannelCache messageNumber */
                messageNumber?: (number|Long|null);

                /** ChannelCache name */
                name?: (string|null);

                /** ChannelCache messageType */
                messageType?: (string|null);

                /** ChannelCache protoDesc */
                protoDesc?: (Uint8Array|null);
            }

            /** Represents a ChannelCache. */
            class ChannelCache implements IChannelCache {

                /**
                 * Constructs a new ChannelCache.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IChannelCache);

                /** ChannelCache messageNumber. */
                public messageNumber: (number|Long);

                /** ChannelCache name. */
                public name: string;

                /** ChannelCache messageType. */
                public messageType: string;

                /** ChannelCache protoDesc. */
                public protoDesc: Uint8Array;

                /**
                 * Creates a new ChannelCache instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChannelCache instance
                 */
                public static create(properties?: apollo.cyber.proto.IChannelCache): apollo.cyber.proto.ChannelCache;

                /**
                 * Encodes the specified ChannelCache message. Does not implicitly {@link apollo.cyber.proto.ChannelCache.verify|verify} messages.
                 * @param message ChannelCache message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IChannelCache, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChannelCache message, length delimited. Does not implicitly {@link apollo.cyber.proto.ChannelCache.verify|verify} messages.
                 * @param message ChannelCache message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IChannelCache, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChannelCache message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChannelCache
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.ChannelCache;

                /**
                 * Decodes a ChannelCache message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChannelCache
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.ChannelCache;

                /**
                 * Verifies a ChannelCache message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChannelCache message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChannelCache
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.ChannelCache;

                /**
                 * Creates a plain object from a ChannelCache message. Also converts values to other types if specified.
                 * @param message ChannelCache
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.ChannelCache, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChannelCache to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChannelCache
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SingleMessage. */
            interface ISingleMessage {

                /** SingleMessage channelName */
                channelName?: (string|null);

                /** SingleMessage time */
                time?: (number|Long|null);

                /** SingleMessage content */
                content?: (Uint8Array|null);
            }

            /** Represents a SingleMessage. */
            class SingleMessage implements ISingleMessage {

                /**
                 * Constructs a new SingleMessage.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.ISingleMessage);

                /** SingleMessage channelName. */
                public channelName: string;

                /** SingleMessage time. */
                public time: (number|Long);

                /** SingleMessage content. */
                public content: Uint8Array;

                /**
                 * Creates a new SingleMessage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SingleMessage instance
                 */
                public static create(properties?: apollo.cyber.proto.ISingleMessage): apollo.cyber.proto.SingleMessage;

                /**
                 * Encodes the specified SingleMessage message. Does not implicitly {@link apollo.cyber.proto.SingleMessage.verify|verify} messages.
                 * @param message SingleMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.ISingleMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SingleMessage message, length delimited. Does not implicitly {@link apollo.cyber.proto.SingleMessage.verify|verify} messages.
                 * @param message SingleMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.ISingleMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SingleMessage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SingleMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.SingleMessage;

                /**
                 * Decodes a SingleMessage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SingleMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.SingleMessage;

                /**
                 * Verifies a SingleMessage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SingleMessage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SingleMessage
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.SingleMessage;

                /**
                 * Creates a plain object from a SingleMessage message. Also converts values to other types if specified.
                 * @param message SingleMessage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.SingleMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SingleMessage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SingleMessage
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a MapInfo. */
            interface IMapInfo {

                /** MapInfo name */
                name?: (string|null);

                /** MapInfo version */
                version?: (string|null);
            }

            /** Represents a MapInfo. */
            class MapInfo implements IMapInfo {

                /**
                 * Constructs a new MapInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IMapInfo);

                /** MapInfo name. */
                public name: string;

                /** MapInfo version. */
                public version: string;

                /**
                 * Creates a new MapInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MapInfo instance
                 */
                public static create(properties?: apollo.cyber.proto.IMapInfo): apollo.cyber.proto.MapInfo;

                /**
                 * Encodes the specified MapInfo message. Does not implicitly {@link apollo.cyber.proto.MapInfo.verify|verify} messages.
                 * @param message MapInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IMapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MapInfo message, length delimited. Does not implicitly {@link apollo.cyber.proto.MapInfo.verify|verify} messages.
                 * @param message MapInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IMapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MapInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MapInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.MapInfo;

                /**
                 * Decodes a MapInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MapInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.MapInfo;

                /**
                 * Verifies a MapInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MapInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MapInfo
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.MapInfo;

                /**
                 * Creates a plain object from a MapInfo message. Also converts values to other types if specified.
                 * @param message MapInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.MapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MapInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MapInfo
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a VehicleInfo. */
            interface IVehicleInfo {

                /** VehicleInfo name */
                name?: (string|null);
            }

            /** Represents a VehicleInfo. */
            class VehicleInfo implements IVehicleInfo {

                /**
                 * Constructs a new VehicleInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IVehicleInfo);

                /** VehicleInfo name. */
                public name: string;

                /**
                 * Creates a new VehicleInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns VehicleInfo instance
                 */
                public static create(properties?: apollo.cyber.proto.IVehicleInfo): apollo.cyber.proto.VehicleInfo;

                /**
                 * Encodes the specified VehicleInfo message. Does not implicitly {@link apollo.cyber.proto.VehicleInfo.verify|verify} messages.
                 * @param message VehicleInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IVehicleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VehicleInfo message, length delimited. Does not implicitly {@link apollo.cyber.proto.VehicleInfo.verify|verify} messages.
                 * @param message VehicleInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IVehicleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VehicleInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VehicleInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.VehicleInfo;

                /**
                 * Decodes a VehicleInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VehicleInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.VehicleInfo;

                /**
                 * Verifies a VehicleInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VehicleInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VehicleInfo
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.VehicleInfo;

                /**
                 * Creates a plain object from a VehicleInfo message. Also converts values to other types if specified.
                 * @param message VehicleInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.VehicleInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VehicleInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for VehicleInfo
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a Header. */
            interface IHeader {

                /** Header majorVersion */
                majorVersion?: (number|null);

                /** Header minorVersion */
                minorVersion?: (number|null);

                /** Header compress */
                compress?: (apollo.cyber.proto.CompressType|null);

                /** Header chunkInterval */
                chunkInterval?: (number|Long|null);

                /** Header segmentInterval */
                segmentInterval?: (number|Long|null);

                /** Header indexPosition */
                indexPosition?: (number|Long|null);

                /** Header chunkNumber */
                chunkNumber?: (number|Long|null);

                /** Header channelNumber */
                channelNumber?: (number|Long|null);

                /** Header beginTime */
                beginTime?: (number|Long|null);

                /** Header endTime */
                endTime?: (number|Long|null);

                /** Header messageNumber */
                messageNumber?: (number|Long|null);

                /** Header size */
                size?: (number|Long|null);

                /** Header isComplete */
                isComplete?: (boolean|null);

                /** Header chunkRawSize */
                chunkRawSize?: (number|Long|null);

                /** Header segmentRawSize */
                segmentRawSize?: (number|Long|null);

                /** Header mapInfo */
                mapInfo?: (apollo.cyber.proto.IMapInfo|null);

                /** Header vehicleInfo */
                vehicleInfo?: (apollo.cyber.proto.IVehicleInfo|null);
            }

            /** Represents a Header. */
            class Header implements IHeader {

                /**
                 * Constructs a new Header.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IHeader);

                /** Header majorVersion. */
                public majorVersion: number;

                /** Header minorVersion. */
                public minorVersion: number;

                /** Header compress. */
                public compress: apollo.cyber.proto.CompressType;

                /** Header chunkInterval. */
                public chunkInterval: (number|Long);

                /** Header segmentInterval. */
                public segmentInterval: (number|Long);

                /** Header indexPosition. */
                public indexPosition: (number|Long);

                /** Header chunkNumber. */
                public chunkNumber: (number|Long);

                /** Header channelNumber. */
                public channelNumber: (number|Long);

                /** Header beginTime. */
                public beginTime: (number|Long);

                /** Header endTime. */
                public endTime: (number|Long);

                /** Header messageNumber. */
                public messageNumber: (number|Long);

                /** Header size. */
                public size: (number|Long);

                /** Header isComplete. */
                public isComplete: boolean;

                /** Header chunkRawSize. */
                public chunkRawSize: (number|Long);

                /** Header segmentRawSize. */
                public segmentRawSize: (number|Long);

                /** Header mapInfo. */
                public mapInfo?: (apollo.cyber.proto.IMapInfo|null);

                /** Header vehicleInfo. */
                public vehicleInfo?: (apollo.cyber.proto.IVehicleInfo|null);

                /**
                 * Creates a new Header instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Header instance
                 */
                public static create(properties?: apollo.cyber.proto.IHeader): apollo.cyber.proto.Header;

                /**
                 * Encodes the specified Header message. Does not implicitly {@link apollo.cyber.proto.Header.verify|verify} messages.
                 * @param message Header message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Header message, length delimited. Does not implicitly {@link apollo.cyber.proto.Header.verify|verify} messages.
                 * @param message Header message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Header message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Header
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.Header;

                /**
                 * Decodes a Header message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Header
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.Header;

                /**
                 * Verifies a Header message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Header message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Header
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.Header;

                /**
                 * Creates a plain object from a Header message. Also converts values to other types if specified.
                 * @param message Header
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Header to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Header
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a Channel. */
            interface IChannel {

                /** Channel name */
                name?: (string|null);

                /** Channel messageType */
                messageType?: (string|null);

                /** Channel protoDesc */
                protoDesc?: (Uint8Array|null);
            }

            /** Represents a Channel. */
            class Channel implements IChannel {

                /**
                 * Constructs a new Channel.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IChannel);

                /** Channel name. */
                public name: string;

                /** Channel messageType. */
                public messageType: string;

                /** Channel protoDesc. */
                public protoDesc: Uint8Array;

                /**
                 * Creates a new Channel instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Channel instance
                 */
                public static create(properties?: apollo.cyber.proto.IChannel): apollo.cyber.proto.Channel;

                /**
                 * Encodes the specified Channel message. Does not implicitly {@link apollo.cyber.proto.Channel.verify|verify} messages.
                 * @param message Channel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Channel message, length delimited. Does not implicitly {@link apollo.cyber.proto.Channel.verify|verify} messages.
                 * @param message Channel message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IChannel, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Channel message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Channel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.Channel;

                /**
                 * Decodes a Channel message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Channel
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.Channel;

                /**
                 * Verifies a Channel message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Channel message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Channel
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.Channel;

                /**
                 * Creates a plain object from a Channel message. Also converts values to other types if specified.
                 * @param message Channel
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.Channel, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Channel to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Channel
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChunkHeader. */
            interface IChunkHeader {

                /** ChunkHeader beginTime */
                beginTime?: (number|Long|null);

                /** ChunkHeader endTime */
                endTime?: (number|Long|null);

                /** ChunkHeader messageNumber */
                messageNumber?: (number|Long|null);

                /** ChunkHeader rawSize */
                rawSize?: (number|Long|null);
            }

            /** Represents a ChunkHeader. */
            class ChunkHeader implements IChunkHeader {

                /**
                 * Constructs a new ChunkHeader.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IChunkHeader);

                /** ChunkHeader beginTime. */
                public beginTime: (number|Long);

                /** ChunkHeader endTime. */
                public endTime: (number|Long);

                /** ChunkHeader messageNumber. */
                public messageNumber: (number|Long);

                /** ChunkHeader rawSize. */
                public rawSize: (number|Long);

                /**
                 * Creates a new ChunkHeader instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChunkHeader instance
                 */
                public static create(properties?: apollo.cyber.proto.IChunkHeader): apollo.cyber.proto.ChunkHeader;

                /**
                 * Encodes the specified ChunkHeader message. Does not implicitly {@link apollo.cyber.proto.ChunkHeader.verify|verify} messages.
                 * @param message ChunkHeader message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IChunkHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChunkHeader message, length delimited. Does not implicitly {@link apollo.cyber.proto.ChunkHeader.verify|verify} messages.
                 * @param message ChunkHeader message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IChunkHeader, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChunkHeader message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChunkHeader
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.ChunkHeader;

                /**
                 * Decodes a ChunkHeader message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChunkHeader
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.ChunkHeader;

                /**
                 * Verifies a ChunkHeader message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChunkHeader message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChunkHeader
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.ChunkHeader;

                /**
                 * Creates a plain object from a ChunkHeader message. Also converts values to other types if specified.
                 * @param message ChunkHeader
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.ChunkHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChunkHeader to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChunkHeader
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChunkBody. */
            interface IChunkBody {

                /** ChunkBody messages */
                messages?: (apollo.cyber.proto.ISingleMessage[]|null);
            }

            /** Represents a ChunkBody. */
            class ChunkBody implements IChunkBody {

                /**
                 * Constructs a new ChunkBody.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IChunkBody);

                /** ChunkBody messages. */
                public messages: apollo.cyber.proto.ISingleMessage[];

                /**
                 * Creates a new ChunkBody instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChunkBody instance
                 */
                public static create(properties?: apollo.cyber.proto.IChunkBody): apollo.cyber.proto.ChunkBody;

                /**
                 * Encodes the specified ChunkBody message. Does not implicitly {@link apollo.cyber.proto.ChunkBody.verify|verify} messages.
                 * @param message ChunkBody message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IChunkBody, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChunkBody message, length delimited. Does not implicitly {@link apollo.cyber.proto.ChunkBody.verify|verify} messages.
                 * @param message ChunkBody message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IChunkBody, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChunkBody message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChunkBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.ChunkBody;

                /**
                 * Decodes a ChunkBody message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChunkBody
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.ChunkBody;

                /**
                 * Verifies a ChunkBody message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChunkBody message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChunkBody
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.ChunkBody;

                /**
                 * Creates a plain object from a ChunkBody message. Also converts values to other types if specified.
                 * @param message ChunkBody
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.ChunkBody, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChunkBody to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChunkBody
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an Index. */
            interface IIndex {

                /** Index indexes */
                indexes?: (apollo.cyber.proto.ISingleIndex[]|null);
            }

            /** Represents an Index. */
            class Index implements IIndex {

                /**
                 * Constructs a new Index.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IIndex);

                /** Index indexes. */
                public indexes: apollo.cyber.proto.ISingleIndex[];

                /**
                 * Creates a new Index instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Index instance
                 */
                public static create(properties?: apollo.cyber.proto.IIndex): apollo.cyber.proto.Index;

                /**
                 * Encodes the specified Index message. Does not implicitly {@link apollo.cyber.proto.Index.verify|verify} messages.
                 * @param message Index message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IIndex, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Index message, length delimited. Does not implicitly {@link apollo.cyber.proto.Index.verify|verify} messages.
                 * @param message Index message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IIndex, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Index message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Index
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.Index;

                /**
                 * Decodes an Index message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Index
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.Index;

                /**
                 * Verifies an Index message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Index message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Index
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.Index;

                /**
                 * Creates a plain object from an Index message. Also converts values to other types if specified.
                 * @param message Index
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.Index, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Index to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Index
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RecordInfo. */
            interface IRecordInfo {

                /** RecordInfo recordName */
                recordName?: (string|null);

                /** RecordInfo totalTimeS */
                totalTimeS?: (number|null);

                /** RecordInfo currTimeS */
                currTimeS?: (number|null);

                /** RecordInfo progress */
                progress?: (number|null);
            }

            /** Represents a RecordInfo. */
            class RecordInfo implements IRecordInfo {

                /**
                 * Constructs a new RecordInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.cyber.proto.IRecordInfo);

                /** RecordInfo recordName. */
                public recordName: string;

                /** RecordInfo totalTimeS. */
                public totalTimeS: number;

                /** RecordInfo currTimeS. */
                public currTimeS: number;

                /** RecordInfo progress. */
                public progress: number;

                /**
                 * Creates a new RecordInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RecordInfo instance
                 */
                public static create(properties?: apollo.cyber.proto.IRecordInfo): apollo.cyber.proto.RecordInfo;

                /**
                 * Encodes the specified RecordInfo message. Does not implicitly {@link apollo.cyber.proto.RecordInfo.verify|verify} messages.
                 * @param message RecordInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.cyber.proto.IRecordInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RecordInfo message, length delimited. Does not implicitly {@link apollo.cyber.proto.RecordInfo.verify|verify} messages.
                 * @param message RecordInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.cyber.proto.IRecordInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RecordInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RecordInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.cyber.proto.RecordInfo;

                /**
                 * Decodes a RecordInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RecordInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.cyber.proto.RecordInfo;

                /**
                 * Verifies a RecordInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RecordInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RecordInfo
                 */
                public static fromObject(object: { [k: string]: any }): apollo.cyber.proto.RecordInfo;

                /**
                 * Creates a plain object from a RecordInfo message. Also converts values to other types if specified.
                 * @param message RecordInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.cyber.proto.RecordInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RecordInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RecordInfo
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }
    }

    /** Namespace dreamview. */
    namespace dreamview {

        /** Properties of a CameraUpdate. */
        interface ICameraUpdate {

            /** CameraUpdate localization */
            localization?: (number[]|null);

            /** CameraUpdate localization2cameraTf */
            localization2cameraTf?: (number[]|null);

            /** CameraUpdate image */
            image?: (Uint8Array|null);

            /** CameraUpdate imageAspectRatio */
            imageAspectRatio?: (number|null);

            /** CameraUpdate bbox2d */
            bbox2d?: (apollo.perception.IBBox2D[]|null);

            /** CameraUpdate obstaclesId */
            obstaclesId?: (number[]|null);

            /** CameraUpdate obstaclesSubType */
            obstaclesSubType?: (apollo.dreamview.CameraUpdate.SubType[]|null);

            /** CameraUpdate kImageScale */
            kImageScale?: (number|null);
        }

        /** Represents a CameraUpdate. */
        class CameraUpdate implements ICameraUpdate {

            /**
             * Constructs a new CameraUpdate.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.ICameraUpdate);

            /** CameraUpdate localization. */
            public localization: number[];

            /** CameraUpdate localization2cameraTf. */
            public localization2cameraTf: number[];

            /** CameraUpdate image. */
            public image: Uint8Array;

            /** CameraUpdate imageAspectRatio. */
            public imageAspectRatio: number;

            /** CameraUpdate bbox2d. */
            public bbox2d: apollo.perception.IBBox2D[];

            /** CameraUpdate obstaclesId. */
            public obstaclesId: number[];

            /** CameraUpdate obstaclesSubType. */
            public obstaclesSubType: apollo.dreamview.CameraUpdate.SubType[];

            /** CameraUpdate kImageScale. */
            public kImageScale: number;

            /**
             * Creates a new CameraUpdate instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CameraUpdate instance
             */
            public static create(properties?: apollo.dreamview.ICameraUpdate): apollo.dreamview.CameraUpdate;

            /**
             * Encodes the specified CameraUpdate message. Does not implicitly {@link apollo.dreamview.CameraUpdate.verify|verify} messages.
             * @param message CameraUpdate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.ICameraUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CameraUpdate message, length delimited. Does not implicitly {@link apollo.dreamview.CameraUpdate.verify|verify} messages.
             * @param message CameraUpdate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.ICameraUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CameraUpdate message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CameraUpdate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.CameraUpdate;

            /**
             * Decodes a CameraUpdate message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CameraUpdate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.CameraUpdate;

            /**
             * Verifies a CameraUpdate message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CameraUpdate message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CameraUpdate
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.CameraUpdate;

            /**
             * Creates a plain object from a CameraUpdate message. Also converts values to other types if specified.
             * @param message CameraUpdate
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.CameraUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CameraUpdate to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CameraUpdate
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace CameraUpdate {

            /** SubType enum. */
            enum SubType {
                ST_UNKNOWN = 0,
                ST_UNKNOWN_MOVABLE = 1,
                ST_UNKNOWN_UNMOVABLE = 2,
                ST_CAR = 3,
                ST_VAN = 4,
                ST_TRUCK = 5,
                ST_BUS = 6,
                ST_CYCLIST = 7,
                ST_MOTORCYCLIST = 8,
                ST_TRICYCLIST = 9,
                ST_PEDESTRIAN = 10,
                ST_TRAFFICCONE = 11
            }
        }

        /** Properties of a WebsocketInfo. */
        interface IWebsocketInfo {

            /** WebsocketInfo websocketName */
            websocketName?: (string|null);

            /** WebsocketInfo websocketPipe */
            websocketPipe?: (string|null);
        }

        /** Represents a WebsocketInfo. */
        class WebsocketInfo implements IWebsocketInfo {

            /**
             * Constructs a new WebsocketInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IWebsocketInfo);

            /** WebsocketInfo websocketName. */
            public websocketName: string;

            /** WebsocketInfo websocketPipe. */
            public websocketPipe: string;

            /**
             * Creates a new WebsocketInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WebsocketInfo instance
             */
            public static create(properties?: apollo.dreamview.IWebsocketInfo): apollo.dreamview.WebsocketInfo;

            /**
             * Encodes the specified WebsocketInfo message. Does not implicitly {@link apollo.dreamview.WebsocketInfo.verify|verify} messages.
             * @param message WebsocketInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IWebsocketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified WebsocketInfo message, length delimited. Does not implicitly {@link apollo.dreamview.WebsocketInfo.verify|verify} messages.
             * @param message WebsocketInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IWebsocketInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a WebsocketInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WebsocketInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.WebsocketInfo;

            /**
             * Decodes a WebsocketInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WebsocketInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.WebsocketInfo;

            /**
             * Verifies a WebsocketInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WebsocketInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WebsocketInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.WebsocketInfo;

            /**
             * Creates a plain object from a WebsocketInfo message. Also converts values to other types if specified.
             * @param message WebsocketInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.WebsocketInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WebsocketInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for WebsocketInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ChannelInfo. */
        interface IChannelInfo {

            /** ChannelInfo channelName */
            channelName?: (string|null);

            /** ChannelInfo protoPath */
            protoPath?: (string|null);

            /** ChannelInfo msgType */
            msgType?: (string|null);
        }

        /** Represents a ChannelInfo. */
        class ChannelInfo implements IChannelInfo {

            /**
             * Constructs a new ChannelInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IChannelInfo);

            /** ChannelInfo channelName. */
            public channelName: string;

            /** ChannelInfo protoPath. */
            public protoPath: string;

            /** ChannelInfo msgType. */
            public msgType: string;

            /**
             * Creates a new ChannelInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChannelInfo instance
             */
            public static create(properties?: apollo.dreamview.IChannelInfo): apollo.dreamview.ChannelInfo;

            /**
             * Encodes the specified ChannelInfo message. Does not implicitly {@link apollo.dreamview.ChannelInfo.verify|verify} messages.
             * @param message ChannelInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IChannelInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChannelInfo message, length delimited. Does not implicitly {@link apollo.dreamview.ChannelInfo.verify|verify} messages.
             * @param message ChannelInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IChannelInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChannelInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChannelInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ChannelInfo;

            /**
             * Decodes a ChannelInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChannelInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ChannelInfo;

            /**
             * Verifies a ChannelInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChannelInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChannelInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ChannelInfo;

            /**
             * Creates a plain object from a ChannelInfo message. Also converts values to other types if specified.
             * @param message ChannelInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ChannelInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChannelInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ChannelInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DataHandlerInfo. */
        interface IDataHandlerInfo {

            /** DataHandlerInfo dataName */
            dataName?: (string|null);

            /** DataHandlerInfo protoPath */
            protoPath?: (string|null);

            /** DataHandlerInfo msgType */
            msgType?: (string|null);

            /** DataHandlerInfo websocketInfo */
            websocketInfo?: (apollo.dreamview.IWebsocketInfo|null);

            /** DataHandlerInfo differentForChannels */
            differentForChannels?: (boolean|null);

            /** DataHandlerInfo channels */
            channels?: (apollo.dreamview.IChannelInfo[]|null);
        }

        /** Represents a DataHandlerInfo. */
        class DataHandlerInfo implements IDataHandlerInfo {

            /**
             * Constructs a new DataHandlerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IDataHandlerInfo);

            /** DataHandlerInfo dataName. */
            public dataName: string;

            /** DataHandlerInfo protoPath. */
            public protoPath: string;

            /** DataHandlerInfo msgType. */
            public msgType: string;

            /** DataHandlerInfo websocketInfo. */
            public websocketInfo?: (apollo.dreamview.IWebsocketInfo|null);

            /** DataHandlerInfo differentForChannels. */
            public differentForChannels: boolean;

            /** DataHandlerInfo channels. */
            public channels: apollo.dreamview.IChannelInfo[];

            /**
             * Creates a new DataHandlerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataHandlerInfo instance
             */
            public static create(properties?: apollo.dreamview.IDataHandlerInfo): apollo.dreamview.DataHandlerInfo;

            /**
             * Encodes the specified DataHandlerInfo message. Does not implicitly {@link apollo.dreamview.DataHandlerInfo.verify|verify} messages.
             * @param message DataHandlerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IDataHandlerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DataHandlerInfo message, length delimited. Does not implicitly {@link apollo.dreamview.DataHandlerInfo.verify|verify} messages.
             * @param message DataHandlerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IDataHandlerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DataHandlerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataHandlerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.DataHandlerInfo;

            /**
             * Decodes a DataHandlerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataHandlerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.DataHandlerInfo;

            /**
             * Verifies a DataHandlerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataHandlerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataHandlerInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.DataHandlerInfo;

            /**
             * Creates a plain object from a DataHandlerInfo message. Also converts values to other types if specified.
             * @param message DataHandlerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.DataHandlerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataHandlerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DataHandlerInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DataHandlerConf. */
        interface IDataHandlerConf {

            /** DataHandlerConf dataHandlerInfo */
            dataHandlerInfo?: ({ [k: string]: apollo.dreamview.IDataHandlerInfo }|null);
        }

        /** Represents a DataHandlerConf. */
        class DataHandlerConf implements IDataHandlerConf {

            /**
             * Constructs a new DataHandlerConf.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IDataHandlerConf);

            /** DataHandlerConf dataHandlerInfo. */
            public dataHandlerInfo: { [k: string]: apollo.dreamview.IDataHandlerInfo };

            /**
             * Creates a new DataHandlerConf instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataHandlerConf instance
             */
            public static create(properties?: apollo.dreamview.IDataHandlerConf): apollo.dreamview.DataHandlerConf;

            /**
             * Encodes the specified DataHandlerConf message. Does not implicitly {@link apollo.dreamview.DataHandlerConf.verify|verify} messages.
             * @param message DataHandlerConf message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IDataHandlerConf, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DataHandlerConf message, length delimited. Does not implicitly {@link apollo.dreamview.DataHandlerConf.verify|verify} messages.
             * @param message DataHandlerConf message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IDataHandlerConf, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DataHandlerConf message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataHandlerConf
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.DataHandlerConf;

            /**
             * Decodes a DataHandlerConf message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataHandlerConf
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.DataHandlerConf;

            /**
             * Verifies a DataHandlerConf message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataHandlerConf message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataHandlerConf
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.DataHandlerConf;

            /**
             * Creates a plain object from a DataHandlerConf message. Also converts values to other types if specified.
             * @param message DataHandlerConf
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.DataHandlerConf, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataHandlerConf to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DataHandlerConf
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a StreamData. */
        interface IStreamData {

            /** StreamData type */
            type?: (string|null);

            /** StreamData action */
            action?: (string|null);

            /** StreamData dataName */
            dataName?: (string|null);

            /** StreamData channelName */
            channelName?: (string|null);

            /** StreamData data */
            data?: (Uint8Array|null);
        }

        /** Represents a StreamData. */
        class StreamData implements IStreamData {

            /**
             * Constructs a new StreamData.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IStreamData);

            /** StreamData type. */
            public type: string;

            /** StreamData action. */
            public action: string;

            /** StreamData dataName. */
            public dataName: string;

            /** StreamData channelName. */
            public channelName: string;

            /** StreamData data. */
            public data: Uint8Array;

            /**
             * Creates a new StreamData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StreamData instance
             */
            public static create(properties?: apollo.dreamview.IStreamData): apollo.dreamview.StreamData;

            /**
             * Encodes the specified StreamData message. Does not implicitly {@link apollo.dreamview.StreamData.verify|verify} messages.
             * @param message StreamData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IStreamData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StreamData message, length delimited. Does not implicitly {@link apollo.dreamview.StreamData.verify|verify} messages.
             * @param message StreamData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IStreamData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StreamData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StreamData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.StreamData;

            /**
             * Decodes a StreamData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StreamData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.StreamData;

            /**
             * Verifies a StreamData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StreamData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StreamData
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.StreamData;

            /**
             * Creates a plain object from a StreamData message. Also converts values to other types if specified.
             * @param message StreamData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.StreamData, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StreamData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for StreamData
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Obstacles. */
        interface IObstacles {

            /** Obstacles obstacle */
            obstacle?: (apollo.dreamview.IObject[]|null);

            /** Obstacles autoDrivingCar */
            autoDrivingCar?: (apollo.dreamview.IObject|null);

            /** Obstacles sensorMeasurements */
            sensorMeasurements?: ({ [k: string]: apollo.dreamview.ISensorMeasurements }|null);
        }

        /** Represents an Obstacles. */
        class Obstacles implements IObstacles {

            /**
             * Constructs a new Obstacles.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IObstacles);

            /** Obstacles obstacle. */
            public obstacle: apollo.dreamview.IObject[];

            /** Obstacles autoDrivingCar. */
            public autoDrivingCar?: (apollo.dreamview.IObject|null);

            /** Obstacles sensorMeasurements. */
            public sensorMeasurements: { [k: string]: apollo.dreamview.ISensorMeasurements };

            /**
             * Creates a new Obstacles instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Obstacles instance
             */
            public static create(properties?: apollo.dreamview.IObstacles): apollo.dreamview.Obstacles;

            /**
             * Encodes the specified Obstacles message. Does not implicitly {@link apollo.dreamview.Obstacles.verify|verify} messages.
             * @param message Obstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Obstacles message, length delimited. Does not implicitly {@link apollo.dreamview.Obstacles.verify|verify} messages.
             * @param message Obstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Obstacles message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Obstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Obstacles;

            /**
             * Decodes an Obstacles message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Obstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Obstacles;

            /**
             * Verifies an Obstacles message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Obstacles message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Obstacles
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Obstacles;

            /**
             * Creates a plain object from an Obstacles message. Also converts values to other types if specified.
             * @param message Obstacles
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Obstacles, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Obstacles to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Obstacles
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Options. */
        interface IOptions {

            /** Options legendDisplay */
            legendDisplay?: (boolean|null);

            /** Options x */
            x?: (apollo.dreamview.Options.IAxis|null);

            /** Options y */
            y?: (apollo.dreamview.Options.IAxis|null);

            /** Options aspectRatio */
            aspectRatio?: (number|null);

            /** Options syncXyWindowSize */
            syncXyWindowSize?: (boolean|null);
        }

        /** Represents an Options. */
        class Options implements IOptions {

            /**
             * Constructs a new Options.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IOptions);

            /** Options legendDisplay. */
            public legendDisplay: boolean;

            /** Options x. */
            public x?: (apollo.dreamview.Options.IAxis|null);

            /** Options y. */
            public y?: (apollo.dreamview.Options.IAxis|null);

            /** Options aspectRatio. */
            public aspectRatio: number;

            /** Options syncXyWindowSize. */
            public syncXyWindowSize: boolean;

            /**
             * Creates a new Options instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Options instance
             */
            public static create(properties?: apollo.dreamview.IOptions): apollo.dreamview.Options;

            /**
             * Encodes the specified Options message. Does not implicitly {@link apollo.dreamview.Options.verify|verify} messages.
             * @param message Options message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Options message, length delimited. Does not implicitly {@link apollo.dreamview.Options.verify|verify} messages.
             * @param message Options message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Options message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Options
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Options;

            /**
             * Decodes an Options message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Options
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Options;

            /**
             * Verifies an Options message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Options message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Options
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Options;

            /**
             * Creates a plain object from an Options message. Also converts values to other types if specified.
             * @param message Options
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Options, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Options to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Options
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Options {

            /** Properties of an Axis. */
            interface IAxis {

                /** Axis min */
                min?: (number|null);

                /** Axis max */
                max?: (number|null);

                /** Axis labelString */
                labelString?: (string|null);

                /** Axis windowSize */
                windowSize?: (number|null);

                /** Axis stepSize */
                stepSize?: (number|null);

                /** Axis midValue */
                midValue?: (number|null);
            }

            /** Represents an Axis. */
            class Axis implements IAxis {

                /**
                 * Constructs a new Axis.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.dreamview.Options.IAxis);

                /** Axis min. */
                public min: number;

                /** Axis max. */
                public max: number;

                /** Axis labelString. */
                public labelString: string;

                /** Axis windowSize. */
                public windowSize: number;

                /** Axis stepSize. */
                public stepSize: number;

                /** Axis midValue. */
                public midValue: number;

                /**
                 * Creates a new Axis instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Axis instance
                 */
                public static create(properties?: apollo.dreamview.Options.IAxis): apollo.dreamview.Options.Axis;

                /**
                 * Encodes the specified Axis message. Does not implicitly {@link apollo.dreamview.Options.Axis.verify|verify} messages.
                 * @param message Axis message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.dreamview.Options.IAxis, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Axis message, length delimited. Does not implicitly {@link apollo.dreamview.Options.Axis.verify|verify} messages.
                 * @param message Axis message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.dreamview.Options.IAxis, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Axis message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Axis
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Options.Axis;

                /**
                 * Decodes an Axis message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Axis
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Options.Axis;

                /**
                 * Verifies an Axis message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Axis message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Axis
                 */
                public static fromObject(object: { [k: string]: any }): apollo.dreamview.Options.Axis;

                /**
                 * Creates a plain object from an Axis message. Also converts values to other types if specified.
                 * @param message Axis
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.dreamview.Options.Axis, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Axis to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Axis
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Properties of a Line. */
        interface ILine {

            /** Line label */
            label?: (string|null);

            /** Line hideLabelInLegend */
            hideLabelInLegend?: (boolean|null);

            /** Line point */
            point?: (apollo.common.IPoint2D[]|null);

            /** Line properties */
            properties?: ({ [k: string]: string }|null);
        }

        /** Represents a Line. */
        class Line implements ILine {

            /**
             * Constructs a new Line.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.ILine);

            /** Line label. */
            public label: string;

            /** Line hideLabelInLegend. */
            public hideLabelInLegend: boolean;

            /** Line point. */
            public point: apollo.common.IPoint2D[];

            /** Line properties. */
            public properties: { [k: string]: string };

            /**
             * Creates a new Line instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Line instance
             */
            public static create(properties?: apollo.dreamview.ILine): apollo.dreamview.Line;

            /**
             * Encodes the specified Line message. Does not implicitly {@link apollo.dreamview.Line.verify|verify} messages.
             * @param message Line message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.ILine, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Line message, length delimited. Does not implicitly {@link apollo.dreamview.Line.verify|verify} messages.
             * @param message Line message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.ILine, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Line message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Line
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Line;

            /**
             * Decodes a Line message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Line
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Line;

            /**
             * Verifies a Line message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Line message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Line
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Line;

            /**
             * Creates a plain object from a Line message. Also converts values to other types if specified.
             * @param message Line
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Line, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Line to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Line
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Polygon. */
        interface IPolygon {

            /** Polygon label */
            label?: (string|null);

            /** Polygon hideLabelInLegend */
            hideLabelInLegend?: (boolean|null);

            /** Polygon point */
            point?: (apollo.common.IPoint2D[]|null);

            /** Polygon properties */
            properties?: ({ [k: string]: string }|null);
        }

        /** Represents a Polygon. */
        class Polygon implements IPolygon {

            /**
             * Constructs a new Polygon.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IPolygon);

            /** Polygon label. */
            public label: string;

            /** Polygon hideLabelInLegend. */
            public hideLabelInLegend: boolean;

            /** Polygon point. */
            public point: apollo.common.IPoint2D[];

            /** Polygon properties. */
            public properties: { [k: string]: string };

            /**
             * Creates a new Polygon instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Polygon instance
             */
            public static create(properties?: apollo.dreamview.IPolygon): apollo.dreamview.Polygon;

            /**
             * Encodes the specified Polygon message. Does not implicitly {@link apollo.dreamview.Polygon.verify|verify} messages.
             * @param message Polygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Polygon message, length delimited. Does not implicitly {@link apollo.dreamview.Polygon.verify|verify} messages.
             * @param message Polygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Polygon message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Polygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Polygon;

            /**
             * Decodes a Polygon message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Polygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Polygon;

            /**
             * Verifies a Polygon message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Polygon message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Polygon
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Polygon;

            /**
             * Creates a plain object from a Polygon message. Also converts values to other types if specified.
             * @param message Polygon
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Polygon, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Polygon to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Polygon
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Car. */
        interface ICar {

            /** Car label */
            label?: (string|null);

            /** Car hideLabelInLegend */
            hideLabelInLegend?: (boolean|null);

            /** Car x */
            x?: (number|null);

            /** Car y */
            y?: (number|null);

            /** Car heading */
            heading?: (number|null);

            /** Car color */
            color?: (string|null);
        }

        /** Represents a Car. */
        class Car implements ICar {

            /**
             * Constructs a new Car.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.ICar);

            /** Car label. */
            public label: string;

            /** Car hideLabelInLegend. */
            public hideLabelInLegend: boolean;

            /** Car x. */
            public x: number;

            /** Car y. */
            public y: number;

            /** Car heading. */
            public heading: number;

            /** Car color. */
            public color: string;

            /**
             * Creates a new Car instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Car instance
             */
            public static create(properties?: apollo.dreamview.ICar): apollo.dreamview.Car;

            /**
             * Encodes the specified Car message. Does not implicitly {@link apollo.dreamview.Car.verify|verify} messages.
             * @param message Car message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.ICar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Car message, length delimited. Does not implicitly {@link apollo.dreamview.Car.verify|verify} messages.
             * @param message Car message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.ICar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Car message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Car
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Car;

            /**
             * Decodes a Car message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Car
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Car;

            /**
             * Verifies a Car message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Car message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Car
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Car;

            /**
             * Creates a plain object from a Car message. Also converts values to other types if specified.
             * @param message Car
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Car, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Car to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Car
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Chart. */
        interface IChart {

            /** Chart title */
            title?: (string|null);

            /** Chart options */
            options?: (apollo.dreamview.IOptions|null);

            /** Chart line */
            line?: (apollo.dreamview.ILine[]|null);

            /** Chart polygon */
            polygon?: (apollo.dreamview.IPolygon[]|null);

            /** Chart car */
            car?: (apollo.dreamview.ICar[]|null);
        }

        /** Represents a Chart. */
        class Chart implements IChart {

            /**
             * Constructs a new Chart.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IChart);

            /** Chart title. */
            public title: string;

            /** Chart options. */
            public options?: (apollo.dreamview.IOptions|null);

            /** Chart line. */
            public line: apollo.dreamview.ILine[];

            /** Chart polygon. */
            public polygon: apollo.dreamview.IPolygon[];

            /** Chart car. */
            public car: apollo.dreamview.ICar[];

            /**
             * Creates a new Chart instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Chart instance
             */
            public static create(properties?: apollo.dreamview.IChart): apollo.dreamview.Chart;

            /**
             * Encodes the specified Chart message. Does not implicitly {@link apollo.dreamview.Chart.verify|verify} messages.
             * @param message Chart message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IChart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Chart message, length delimited. Does not implicitly {@link apollo.dreamview.Chart.verify|verify} messages.
             * @param message Chart message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IChart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Chart message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Chart
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Chart;

            /**
             * Decodes a Chart message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Chart
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Chart;

            /**
             * Verifies a Chart message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Chart message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Chart
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Chart;

            /**
             * Creates a plain object from a Chart message. Also converts values to other types if specified.
             * @param message Chart
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Chart, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Chart to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Chart
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** HMIAction enum. */
        enum HMIAction {
            NONE = 0,
            SETUP_MODE = 1,
            RESET_MODE = 2,
            ENTER_AUTO_MODE = 3,
            DISENGAGE = 4,
            CHANGE_MODE = 5,
            CHANGE_MAP = 6,
            CHANGE_VEHICLE = 7,
            START_MODULE = 8,
            STOP_MODULE = 9,
            CHANGE_SCENARIO = 10,
            CHANGE_SCENARIO_SET = 11,
            LOAD_SCENARIOS = 12,
            DELETE_SCENARIO_SET = 13,
            LOAD_DYNAMIC_MODELS = 14,
            CHANGE_DYNAMIC_MODEL = 15,
            DELETE_DYNAMIC_MODEL = 16,
            CHANGE_RECORD = 17,
            DELETE_RECORD = 18,
            LOAD_RECORDS = 19,
            STOP_RECORD = 20,
            CHANGE_OPERATION = 21,
            DELETE_VEHICLE_CONF = 22,
            DELETE_V2X_CONF = 23,
            DELETE_MAP = 24
        }

        /** Properties of a HMIConfig. */
        interface IHMIConfig {

            /** HMIConfig modes */
            modes?: ({ [k: string]: string }|null);

            /** HMIConfig maps */
            maps?: ({ [k: string]: string }|null);

            /** HMIConfig vehicles */
            vehicles?: ({ [k: string]: string }|null);
        }

        /** Represents a HMIConfig. */
        class HMIConfig implements IHMIConfig {

            /**
             * Constructs a new HMIConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IHMIConfig);

            /** HMIConfig modes. */
            public modes: { [k: string]: string };

            /** HMIConfig maps. */
            public maps: { [k: string]: string };

            /** HMIConfig vehicles. */
            public vehicles: { [k: string]: string };

            /**
             * Creates a new HMIConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HMIConfig instance
             */
            public static create(properties?: apollo.dreamview.IHMIConfig): apollo.dreamview.HMIConfig;

            /**
             * Encodes the specified HMIConfig message. Does not implicitly {@link apollo.dreamview.HMIConfig.verify|verify} messages.
             * @param message HMIConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IHMIConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HMIConfig message, length delimited. Does not implicitly {@link apollo.dreamview.HMIConfig.verify|verify} messages.
             * @param message HMIConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IHMIConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HMIConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HMIConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.HMIConfig;

            /**
             * Decodes a HMIConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HMIConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.HMIConfig;

            /**
             * Verifies a HMIConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HMIConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HMIConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.HMIConfig;

            /**
             * Creates a plain object from a HMIConfig message. Also converts values to other types if specified.
             * @param message HMIConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.HMIConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HMIConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for HMIConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a VehicleData. */
        interface IVehicleData {

            /** VehicleData dataFiles */
            dataFiles?: (apollo.dreamview.VehicleData.IDataFile[]|null);
        }

        /** Represents a VehicleData. */
        class VehicleData implements IVehicleData {

            /**
             * Constructs a new VehicleData.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IVehicleData);

            /** VehicleData dataFiles. */
            public dataFiles: apollo.dreamview.VehicleData.IDataFile[];

            /**
             * Creates a new VehicleData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleData instance
             */
            public static create(properties?: apollo.dreamview.IVehicleData): apollo.dreamview.VehicleData;

            /**
             * Encodes the specified VehicleData message. Does not implicitly {@link apollo.dreamview.VehicleData.verify|verify} messages.
             * @param message VehicleData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IVehicleData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleData message, length delimited. Does not implicitly {@link apollo.dreamview.VehicleData.verify|verify} messages.
             * @param message VehicleData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IVehicleData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.VehicleData;

            /**
             * Decodes a VehicleData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.VehicleData;

            /**
             * Verifies a VehicleData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleData
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.VehicleData;

            /**
             * Creates a plain object from a VehicleData message. Also converts values to other types if specified.
             * @param message VehicleData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.VehicleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleData
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace VehicleData {

            /** Properties of a DataFile. */
            interface IDataFile {

                /** DataFile sourcePath */
                sourcePath?: (string|null);

                /** DataFile destPath */
                destPath?: (string|null);
            }

            /** Represents a DataFile. */
            class DataFile implements IDataFile {

                /**
                 * Constructs a new DataFile.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.dreamview.VehicleData.IDataFile);

                /** DataFile sourcePath. */
                public sourcePath: string;

                /** DataFile destPath. */
                public destPath: string;

                /**
                 * Creates a new DataFile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataFile instance
                 */
                public static create(properties?: apollo.dreamview.VehicleData.IDataFile): apollo.dreamview.VehicleData.DataFile;

                /**
                 * Encodes the specified DataFile message. Does not implicitly {@link apollo.dreamview.VehicleData.DataFile.verify|verify} messages.
                 * @param message DataFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.dreamview.VehicleData.IDataFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DataFile message, length delimited. Does not implicitly {@link apollo.dreamview.VehicleData.DataFile.verify|verify} messages.
                 * @param message DataFile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.dreamview.VehicleData.IDataFile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DataFile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.VehicleData.DataFile;

                /**
                 * Decodes a DataFile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataFile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.VehicleData.DataFile;

                /**
                 * Verifies a DataFile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataFile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataFile
                 */
                public static fromObject(object: { [k: string]: any }): apollo.dreamview.VehicleData.DataFile;

                /**
                 * Creates a plain object from a DataFile message. Also converts values to other types if specified.
                 * @param message DataFile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.dreamview.VehicleData.DataFile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataFile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DataFile
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Properties of a ProcessMonitorConfig. */
        interface IProcessMonitorConfig {

            /** ProcessMonitorConfig commandKeywords */
            commandKeywords?: (string[]|null);
        }

        /** Represents a ProcessMonitorConfig. */
        class ProcessMonitorConfig implements IProcessMonitorConfig {

            /**
             * Constructs a new ProcessMonitorConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IProcessMonitorConfig);

            /** ProcessMonitorConfig commandKeywords. */
            public commandKeywords: string[];

            /**
             * Creates a new ProcessMonitorConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ProcessMonitorConfig instance
             */
            public static create(properties?: apollo.dreamview.IProcessMonitorConfig): apollo.dreamview.ProcessMonitorConfig;

            /**
             * Encodes the specified ProcessMonitorConfig message. Does not implicitly {@link apollo.dreamview.ProcessMonitorConfig.verify|verify} messages.
             * @param message ProcessMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IProcessMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProcessMonitorConfig message, length delimited. Does not implicitly {@link apollo.dreamview.ProcessMonitorConfig.verify|verify} messages.
             * @param message ProcessMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IProcessMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProcessMonitorConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProcessMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ProcessMonitorConfig;

            /**
             * Decodes a ProcessMonitorConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProcessMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ProcessMonitorConfig;

            /**
             * Verifies a ProcessMonitorConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProcessMonitorConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProcessMonitorConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ProcessMonitorConfig;

            /**
             * Creates a plain object from a ProcessMonitorConfig message. Also converts values to other types if specified.
             * @param message ProcessMonitorConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ProcessMonitorConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProcessMonitorConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ProcessMonitorConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ModuleMonitorConfig. */
        interface IModuleMonitorConfig {

            /** ModuleMonitorConfig nodeName */
            nodeName?: (string[]|null);
        }

        /** Represents a ModuleMonitorConfig. */
        class ModuleMonitorConfig implements IModuleMonitorConfig {

            /**
             * Constructs a new ModuleMonitorConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IModuleMonitorConfig);

            /** ModuleMonitorConfig nodeName. */
            public nodeName: string[];

            /**
             * Creates a new ModuleMonitorConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ModuleMonitorConfig instance
             */
            public static create(properties?: apollo.dreamview.IModuleMonitorConfig): apollo.dreamview.ModuleMonitorConfig;

            /**
             * Encodes the specified ModuleMonitorConfig message. Does not implicitly {@link apollo.dreamview.ModuleMonitorConfig.verify|verify} messages.
             * @param message ModuleMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IModuleMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ModuleMonitorConfig message, length delimited. Does not implicitly {@link apollo.dreamview.ModuleMonitorConfig.verify|verify} messages.
             * @param message ModuleMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IModuleMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ModuleMonitorConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ModuleMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ModuleMonitorConfig;

            /**
             * Decodes a ModuleMonitorConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ModuleMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ModuleMonitorConfig;

            /**
             * Verifies a ModuleMonitorConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ModuleMonitorConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ModuleMonitorConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ModuleMonitorConfig;

            /**
             * Creates a plain object from a ModuleMonitorConfig message. Also converts values to other types if specified.
             * @param message ModuleMonitorConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ModuleMonitorConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ModuleMonitorConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ModuleMonitorConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ChannelMonitorConfig. */
        interface IChannelMonitorConfig {

            /** ChannelMonitorConfig name */
            name?: (string|null);

            /** ChannelMonitorConfig delayFatal */
            delayFatal?: (number|null);

            /** ChannelMonitorConfig mandatoryFields */
            mandatoryFields?: (string[]|null);

            /** ChannelMonitorConfig minFrequencyAllowed */
            minFrequencyAllowed?: (number|null);

            /** ChannelMonitorConfig maxFrequencyAllowed */
            maxFrequencyAllowed?: (number|null);
        }

        /** Represents a ChannelMonitorConfig. */
        class ChannelMonitorConfig implements IChannelMonitorConfig {

            /**
             * Constructs a new ChannelMonitorConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IChannelMonitorConfig);

            /** ChannelMonitorConfig name. */
            public name: string;

            /** ChannelMonitorConfig delayFatal. */
            public delayFatal: number;

            /** ChannelMonitorConfig mandatoryFields. */
            public mandatoryFields: string[];

            /** ChannelMonitorConfig minFrequencyAllowed. */
            public minFrequencyAllowed: number;

            /** ChannelMonitorConfig maxFrequencyAllowed. */
            public maxFrequencyAllowed: number;

            /**
             * Creates a new ChannelMonitorConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChannelMonitorConfig instance
             */
            public static create(properties?: apollo.dreamview.IChannelMonitorConfig): apollo.dreamview.ChannelMonitorConfig;

            /**
             * Encodes the specified ChannelMonitorConfig message. Does not implicitly {@link apollo.dreamview.ChannelMonitorConfig.verify|verify} messages.
             * @param message ChannelMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IChannelMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChannelMonitorConfig message, length delimited. Does not implicitly {@link apollo.dreamview.ChannelMonitorConfig.verify|verify} messages.
             * @param message ChannelMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IChannelMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChannelMonitorConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChannelMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ChannelMonitorConfig;

            /**
             * Decodes a ChannelMonitorConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChannelMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ChannelMonitorConfig;

            /**
             * Verifies a ChannelMonitorConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChannelMonitorConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChannelMonitorConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ChannelMonitorConfig;

            /**
             * Creates a plain object from a ChannelMonitorConfig message. Also converts values to other types if specified.
             * @param message ChannelMonitorConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ChannelMonitorConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChannelMonitorConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ChannelMonitorConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ResourceMonitorConfig. */
        interface IResourceMonitorConfig {

            /** ResourceMonitorConfig diskSpaces */
            diskSpaces?: (apollo.dreamview.ResourceMonitorConfig.IDiskSpace[]|null);

            /** ResourceMonitorConfig cpuUsages */
            cpuUsages?: (apollo.dreamview.ResourceMonitorConfig.ICPUUsage[]|null);

            /** ResourceMonitorConfig memoryUsages */
            memoryUsages?: (apollo.dreamview.ResourceMonitorConfig.IMemoryUsage[]|null);

            /** ResourceMonitorConfig diskLoadUsages */
            diskLoadUsages?: (apollo.dreamview.ResourceMonitorConfig.IDiskLoad[]|null);
        }

        /** Represents a ResourceMonitorConfig. */
        class ResourceMonitorConfig implements IResourceMonitorConfig {

            /**
             * Constructs a new ResourceMonitorConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IResourceMonitorConfig);

            /** ResourceMonitorConfig diskSpaces. */
            public diskSpaces: apollo.dreamview.ResourceMonitorConfig.IDiskSpace[];

            /** ResourceMonitorConfig cpuUsages. */
            public cpuUsages: apollo.dreamview.ResourceMonitorConfig.ICPUUsage[];

            /** ResourceMonitorConfig memoryUsages. */
            public memoryUsages: apollo.dreamview.ResourceMonitorConfig.IMemoryUsage[];

            /** ResourceMonitorConfig diskLoadUsages. */
            public diskLoadUsages: apollo.dreamview.ResourceMonitorConfig.IDiskLoad[];

            /**
             * Creates a new ResourceMonitorConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResourceMonitorConfig instance
             */
            public static create(properties?: apollo.dreamview.IResourceMonitorConfig): apollo.dreamview.ResourceMonitorConfig;

            /**
             * Encodes the specified ResourceMonitorConfig message. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.verify|verify} messages.
             * @param message ResourceMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IResourceMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResourceMonitorConfig message, length delimited. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.verify|verify} messages.
             * @param message ResourceMonitorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IResourceMonitorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResourceMonitorConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResourceMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ResourceMonitorConfig;

            /**
             * Decodes a ResourceMonitorConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResourceMonitorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ResourceMonitorConfig;

            /**
             * Verifies a ResourceMonitorConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResourceMonitorConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResourceMonitorConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ResourceMonitorConfig;

            /**
             * Creates a plain object from a ResourceMonitorConfig message. Also converts values to other types if specified.
             * @param message ResourceMonitorConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ResourceMonitorConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResourceMonitorConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ResourceMonitorConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ResourceMonitorConfig {

            /** Properties of a DiskSpace. */
            interface IDiskSpace {

                /** DiskSpace path */
                path?: (string|null);

                /** DiskSpace insufficientSpaceWarning */
                insufficientSpaceWarning?: (number|null);

                /** DiskSpace insufficientSpaceError */
                insufficientSpaceError?: (number|null);
            }

            /** Represents a DiskSpace. */
            class DiskSpace implements IDiskSpace {

                /**
                 * Constructs a new DiskSpace.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.dreamview.ResourceMonitorConfig.IDiskSpace);

                /** DiskSpace path. */
                public path: string;

                /** DiskSpace insufficientSpaceWarning. */
                public insufficientSpaceWarning: number;

                /** DiskSpace insufficientSpaceError. */
                public insufficientSpaceError: number;

                /**
                 * Creates a new DiskSpace instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DiskSpace instance
                 */
                public static create(properties?: apollo.dreamview.ResourceMonitorConfig.IDiskSpace): apollo.dreamview.ResourceMonitorConfig.DiskSpace;

                /**
                 * Encodes the specified DiskSpace message. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.DiskSpace.verify|verify} messages.
                 * @param message DiskSpace message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.dreamview.ResourceMonitorConfig.IDiskSpace, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DiskSpace message, length delimited. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.DiskSpace.verify|verify} messages.
                 * @param message DiskSpace message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.dreamview.ResourceMonitorConfig.IDiskSpace, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DiskSpace message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DiskSpace
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ResourceMonitorConfig.DiskSpace;

                /**
                 * Decodes a DiskSpace message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DiskSpace
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ResourceMonitorConfig.DiskSpace;

                /**
                 * Verifies a DiskSpace message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DiskSpace message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DiskSpace
                 */
                public static fromObject(object: { [k: string]: any }): apollo.dreamview.ResourceMonitorConfig.DiskSpace;

                /**
                 * Creates a plain object from a DiskSpace message. Also converts values to other types if specified.
                 * @param message DiskSpace
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.dreamview.ResourceMonitorConfig.DiskSpace, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DiskSpace to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DiskSpace
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CPUUsage. */
            interface ICPUUsage {

                /** CPUUsage highCpuUsageWarning */
                highCpuUsageWarning?: (number|null);

                /** CPUUsage highCpuUsageError */
                highCpuUsageError?: (number|null);

                /** CPUUsage processDagPath */
                processDagPath?: (string|null);
            }

            /** Represents a CPUUsage. */
            class CPUUsage implements ICPUUsage {

                /**
                 * Constructs a new CPUUsage.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.dreamview.ResourceMonitorConfig.ICPUUsage);

                /** CPUUsage highCpuUsageWarning. */
                public highCpuUsageWarning: number;

                /** CPUUsage highCpuUsageError. */
                public highCpuUsageError: number;

                /** CPUUsage processDagPath. */
                public processDagPath: string;

                /**
                 * Creates a new CPUUsage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CPUUsage instance
                 */
                public static create(properties?: apollo.dreamview.ResourceMonitorConfig.ICPUUsage): apollo.dreamview.ResourceMonitorConfig.CPUUsage;

                /**
                 * Encodes the specified CPUUsage message. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.CPUUsage.verify|verify} messages.
                 * @param message CPUUsage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.dreamview.ResourceMonitorConfig.ICPUUsage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CPUUsage message, length delimited. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.CPUUsage.verify|verify} messages.
                 * @param message CPUUsage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.dreamview.ResourceMonitorConfig.ICPUUsage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CPUUsage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CPUUsage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ResourceMonitorConfig.CPUUsage;

                /**
                 * Decodes a CPUUsage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CPUUsage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ResourceMonitorConfig.CPUUsage;

                /**
                 * Verifies a CPUUsage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CPUUsage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CPUUsage
                 */
                public static fromObject(object: { [k: string]: any }): apollo.dreamview.ResourceMonitorConfig.CPUUsage;

                /**
                 * Creates a plain object from a CPUUsage message. Also converts values to other types if specified.
                 * @param message CPUUsage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.dreamview.ResourceMonitorConfig.CPUUsage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CPUUsage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CPUUsage
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a MemoryUsage. */
            interface IMemoryUsage {

                /** MemoryUsage highMemoryUsageWarning */
                highMemoryUsageWarning?: (number|null);

                /** MemoryUsage highMemoryUsageError */
                highMemoryUsageError?: (number|null);

                /** MemoryUsage processDagPath */
                processDagPath?: (string|null);
            }

            /** Represents a MemoryUsage. */
            class MemoryUsage implements IMemoryUsage {

                /**
                 * Constructs a new MemoryUsage.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.dreamview.ResourceMonitorConfig.IMemoryUsage);

                /** MemoryUsage highMemoryUsageWarning. */
                public highMemoryUsageWarning: number;

                /** MemoryUsage highMemoryUsageError. */
                public highMemoryUsageError: number;

                /** MemoryUsage processDagPath. */
                public processDagPath: string;

                /**
                 * Creates a new MemoryUsage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MemoryUsage instance
                 */
                public static create(properties?: apollo.dreamview.ResourceMonitorConfig.IMemoryUsage): apollo.dreamview.ResourceMonitorConfig.MemoryUsage;

                /**
                 * Encodes the specified MemoryUsage message. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.MemoryUsage.verify|verify} messages.
                 * @param message MemoryUsage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.dreamview.ResourceMonitorConfig.IMemoryUsage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MemoryUsage message, length delimited. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.MemoryUsage.verify|verify} messages.
                 * @param message MemoryUsage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.dreamview.ResourceMonitorConfig.IMemoryUsage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MemoryUsage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MemoryUsage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ResourceMonitorConfig.MemoryUsage;

                /**
                 * Decodes a MemoryUsage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MemoryUsage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ResourceMonitorConfig.MemoryUsage;

                /**
                 * Verifies a MemoryUsage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MemoryUsage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MemoryUsage
                 */
                public static fromObject(object: { [k: string]: any }): apollo.dreamview.ResourceMonitorConfig.MemoryUsage;

                /**
                 * Creates a plain object from a MemoryUsage message. Also converts values to other types if specified.
                 * @param message MemoryUsage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.dreamview.ResourceMonitorConfig.MemoryUsage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MemoryUsage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MemoryUsage
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DiskLoad. */
            interface IDiskLoad {

                /** DiskLoad highDiskLoadWarning */
                highDiskLoadWarning?: (number|null);

                /** DiskLoad highDiskLoadError */
                highDiskLoadError?: (number|null);

                /** DiskLoad deviceName */
                deviceName?: (string|null);
            }

            /** Represents a DiskLoad. */
            class DiskLoad implements IDiskLoad {

                /**
                 * Constructs a new DiskLoad.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.dreamview.ResourceMonitorConfig.IDiskLoad);

                /** DiskLoad highDiskLoadWarning. */
                public highDiskLoadWarning: number;

                /** DiskLoad highDiskLoadError. */
                public highDiskLoadError: number;

                /** DiskLoad deviceName. */
                public deviceName: string;

                /**
                 * Creates a new DiskLoad instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DiskLoad instance
                 */
                public static create(properties?: apollo.dreamview.ResourceMonitorConfig.IDiskLoad): apollo.dreamview.ResourceMonitorConfig.DiskLoad;

                /**
                 * Encodes the specified DiskLoad message. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.DiskLoad.verify|verify} messages.
                 * @param message DiskLoad message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.dreamview.ResourceMonitorConfig.IDiskLoad, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DiskLoad message, length delimited. Does not implicitly {@link apollo.dreamview.ResourceMonitorConfig.DiskLoad.verify|verify} messages.
                 * @param message DiskLoad message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.dreamview.ResourceMonitorConfig.IDiskLoad, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DiskLoad message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DiskLoad
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ResourceMonitorConfig.DiskLoad;

                /**
                 * Decodes a DiskLoad message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DiskLoad
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ResourceMonitorConfig.DiskLoad;

                /**
                 * Verifies a DiskLoad message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DiskLoad message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DiskLoad
                 */
                public static fromObject(object: { [k: string]: any }): apollo.dreamview.ResourceMonitorConfig.DiskLoad;

                /**
                 * Creates a plain object from a DiskLoad message. Also converts values to other types if specified.
                 * @param message DiskLoad
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.dreamview.ResourceMonitorConfig.DiskLoad, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DiskLoad to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DiskLoad
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Properties of a MonitoredComponent. */
        interface IMonitoredComponent {

            /** MonitoredComponent process */
            process?: (apollo.dreamview.IProcessMonitorConfig|null);

            /** MonitoredComponent channel */
            channel?: (apollo.dreamview.IChannelMonitorConfig|null);

            /** MonitoredComponent resource */
            resource?: (apollo.dreamview.IResourceMonitorConfig|null);

            /** MonitoredComponent requiredForSafety */
            requiredForSafety?: (boolean|null);

            /** MonitoredComponent module */
            module?: (apollo.dreamview.IModuleMonitorConfig|null);
        }

        /** Represents a MonitoredComponent. */
        class MonitoredComponent implements IMonitoredComponent {

            /**
             * Constructs a new MonitoredComponent.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IMonitoredComponent);

            /** MonitoredComponent process. */
            public process?: (apollo.dreamview.IProcessMonitorConfig|null);

            /** MonitoredComponent channel. */
            public channel?: (apollo.dreamview.IChannelMonitorConfig|null);

            /** MonitoredComponent resource. */
            public resource?: (apollo.dreamview.IResourceMonitorConfig|null);

            /** MonitoredComponent requiredForSafety. */
            public requiredForSafety: boolean;

            /** MonitoredComponent module. */
            public module?: (apollo.dreamview.IModuleMonitorConfig|null);

            /**
             * Creates a new MonitoredComponent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MonitoredComponent instance
             */
            public static create(properties?: apollo.dreamview.IMonitoredComponent): apollo.dreamview.MonitoredComponent;

            /**
             * Encodes the specified MonitoredComponent message. Does not implicitly {@link apollo.dreamview.MonitoredComponent.verify|verify} messages.
             * @param message MonitoredComponent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IMonitoredComponent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MonitoredComponent message, length delimited. Does not implicitly {@link apollo.dreamview.MonitoredComponent.verify|verify} messages.
             * @param message MonitoredComponent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IMonitoredComponent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MonitoredComponent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MonitoredComponent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.MonitoredComponent;

            /**
             * Decodes a MonitoredComponent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MonitoredComponent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.MonitoredComponent;

            /**
             * Verifies a MonitoredComponent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MonitoredComponent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MonitoredComponent
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.MonitoredComponent;

            /**
             * Creates a plain object from a MonitoredComponent message. Also converts values to other types if specified.
             * @param message MonitoredComponent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.MonitoredComponent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MonitoredComponent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MonitoredComponent
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Module. */
        interface IModule {

            /** Module startCommand */
            startCommand?: (string|null);

            /** Module stopCommand */
            stopCommand?: (string|null);

            /** Module processMonitorConfig */
            processMonitorConfig?: (apollo.dreamview.IProcessMonitorConfig|null);

            /** Module requiredForSafety */
            requiredForSafety?: (boolean|null);
        }

        /** Represents a Module. */
        class Module implements IModule {

            /**
             * Constructs a new Module.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IModule);

            /** Module startCommand. */
            public startCommand: string;

            /** Module stopCommand. */
            public stopCommand: string;

            /** Module processMonitorConfig. */
            public processMonitorConfig?: (apollo.dreamview.IProcessMonitorConfig|null);

            /** Module requiredForSafety. */
            public requiredForSafety: boolean;

            /**
             * Creates a new Module instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Module instance
             */
            public static create(properties?: apollo.dreamview.IModule): apollo.dreamview.Module;

            /**
             * Encodes the specified Module message. Does not implicitly {@link apollo.dreamview.Module.verify|verify} messages.
             * @param message Module message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IModule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Module message, length delimited. Does not implicitly {@link apollo.dreamview.Module.verify|verify} messages.
             * @param message Module message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IModule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Module message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Module
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Module;

            /**
             * Decodes a Module message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Module
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Module;

            /**
             * Verifies a Module message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Module message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Module
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Module;

            /**
             * Creates a plain object from a Module message. Also converts values to other types if specified.
             * @param message Module
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Module, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Module to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Module
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CyberModule. */
        interface ICyberModule {

            /** CyberModule dagFiles */
            dagFiles?: (string[]|null);

            /** CyberModule requiredForSafety */
            requiredForSafety?: (boolean|null);

            /** CyberModule processGroup */
            processGroup?: (string|null);
        }

        /** Represents a CyberModule. */
        class CyberModule implements ICyberModule {

            /**
             * Constructs a new CyberModule.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.ICyberModule);

            /** CyberModule dagFiles. */
            public dagFiles: string[];

            /** CyberModule requiredForSafety. */
            public requiredForSafety: boolean;

            /** CyberModule processGroup. */
            public processGroup: string;

            /**
             * Creates a new CyberModule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CyberModule instance
             */
            public static create(properties?: apollo.dreamview.ICyberModule): apollo.dreamview.CyberModule;

            /**
             * Encodes the specified CyberModule message. Does not implicitly {@link apollo.dreamview.CyberModule.verify|verify} messages.
             * @param message CyberModule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.ICyberModule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CyberModule message, length delimited. Does not implicitly {@link apollo.dreamview.CyberModule.verify|verify} messages.
             * @param message CyberModule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.ICyberModule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CyberModule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CyberModule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.CyberModule;

            /**
             * Decodes a CyberModule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CyberModule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.CyberModule;

            /**
             * Verifies a CyberModule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CyberModule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CyberModule
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.CyberModule;

            /**
             * Creates a plain object from a CyberModule message. Also converts values to other types if specified.
             * @param message CyberModule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.CyberModule, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CyberModule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CyberModule
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a HMIMode. */
        interface IHMIMode {

            /** HMIMode cyberModules */
            cyberModules?: ({ [k: string]: apollo.dreamview.ICyberModule }|null);

            /** HMIMode modules */
            modules?: ({ [k: string]: apollo.dreamview.IModule }|null);

            /** HMIMode monitoredComponents */
            monitoredComponents?: ({ [k: string]: apollo.dreamview.IMonitoredComponent }|null);

            /** HMIMode otherComponents */
            otherComponents?: ({ [k: string]: apollo.dreamview.IProcessMonitorConfig }|null);

            /** HMIMode operations */
            operations?: (apollo.dreamview.HMIModeOperation[]|null);

            /** HMIMode defaultOperation */
            defaultOperation?: (apollo.dreamview.HMIModeOperation|null);

            /** HMIMode layout */
            layout?: (string|null);

            /** HMIMode dataRecorderComponent */
            dataRecorderComponent?: (apollo.dreamview.IMonitoredComponent|null);

            /** HMIMode terminalComponent */
            terminalComponent?: (apollo.dreamview.IMonitoredComponent|null);
        }

        /** Represents a HMIMode. */
        class HMIMode implements IHMIMode {

            /**
             * Constructs a new HMIMode.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IHMIMode);

            /** HMIMode cyberModules. */
            public cyberModules: { [k: string]: apollo.dreamview.ICyberModule };

            /** HMIMode modules. */
            public modules: { [k: string]: apollo.dreamview.IModule };

            /** HMIMode monitoredComponents. */
            public monitoredComponents: { [k: string]: apollo.dreamview.IMonitoredComponent };

            /** HMIMode otherComponents. */
            public otherComponents: { [k: string]: apollo.dreamview.IProcessMonitorConfig };

            /** HMIMode operations. */
            public operations: apollo.dreamview.HMIModeOperation[];

            /** HMIMode defaultOperation. */
            public defaultOperation: apollo.dreamview.HMIModeOperation;

            /** HMIMode layout. */
            public layout: string;

            /** HMIMode dataRecorderComponent. */
            public dataRecorderComponent?: (apollo.dreamview.IMonitoredComponent|null);

            /** HMIMode terminalComponent. */
            public terminalComponent?: (apollo.dreamview.IMonitoredComponent|null);

            /**
             * Creates a new HMIMode instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HMIMode instance
             */
            public static create(properties?: apollo.dreamview.IHMIMode): apollo.dreamview.HMIMode;

            /**
             * Encodes the specified HMIMode message. Does not implicitly {@link apollo.dreamview.HMIMode.verify|verify} messages.
             * @param message HMIMode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IHMIMode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HMIMode message, length delimited. Does not implicitly {@link apollo.dreamview.HMIMode.verify|verify} messages.
             * @param message HMIMode message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IHMIMode, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HMIMode message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HMIMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.HMIMode;

            /**
             * Decodes a HMIMode message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HMIMode
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.HMIMode;

            /**
             * Verifies a HMIMode message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HMIMode message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HMIMode
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.HMIMode;

            /**
             * Creates a plain object from a HMIMode message. Also converts values to other types if specified.
             * @param message HMIMode
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.HMIMode, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HMIMode to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for HMIMode
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ScenarioInfo. */
        interface IScenarioInfo {

            /** ScenarioInfo scenarioId */
            scenarioId?: (string|null);

            /** ScenarioInfo scenarioName */
            scenarioName?: (string|null);

            /** ScenarioInfo mapName */
            mapName?: (string|null);

            /** ScenarioInfo startPoint */
            startPoint?: (apollo.common.IPoint2D|null);

            /** ScenarioInfo endPoint */
            endPoint?: (apollo.common.IPoint2D|null);
        }

        /** Represents a ScenarioInfo. */
        class ScenarioInfo implements IScenarioInfo {

            /**
             * Constructs a new ScenarioInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IScenarioInfo);

            /** ScenarioInfo scenarioId. */
            public scenarioId: string;

            /** ScenarioInfo scenarioName. */
            public scenarioName: string;

            /** ScenarioInfo mapName. */
            public mapName: string;

            /** ScenarioInfo startPoint. */
            public startPoint?: (apollo.common.IPoint2D|null);

            /** ScenarioInfo endPoint. */
            public endPoint?: (apollo.common.IPoint2D|null);

            /**
             * Creates a new ScenarioInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ScenarioInfo instance
             */
            public static create(properties?: apollo.dreamview.IScenarioInfo): apollo.dreamview.ScenarioInfo;

            /**
             * Encodes the specified ScenarioInfo message. Does not implicitly {@link apollo.dreamview.ScenarioInfo.verify|verify} messages.
             * @param message ScenarioInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IScenarioInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ScenarioInfo message, length delimited. Does not implicitly {@link apollo.dreamview.ScenarioInfo.verify|verify} messages.
             * @param message ScenarioInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IScenarioInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ScenarioInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ScenarioInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ScenarioInfo;

            /**
             * Decodes a ScenarioInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ScenarioInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ScenarioInfo;

            /**
             * Verifies a ScenarioInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ScenarioInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ScenarioInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ScenarioInfo;

            /**
             * Creates a plain object from a ScenarioInfo message. Also converts values to other types if specified.
             * @param message ScenarioInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ScenarioInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ScenarioInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ScenarioInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ScenarioSet. */
        interface IScenarioSet {

            /** ScenarioSet scenarioSetName */
            scenarioSetName?: (string|null);

            /** ScenarioSet scenarios */
            scenarios?: (apollo.dreamview.IScenarioInfo[]|null);
        }

        /** Represents a ScenarioSet. */
        class ScenarioSet implements IScenarioSet {

            /**
             * Constructs a new ScenarioSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IScenarioSet);

            /** ScenarioSet scenarioSetName. */
            public scenarioSetName: string;

            /** ScenarioSet scenarios. */
            public scenarios: apollo.dreamview.IScenarioInfo[];

            /**
             * Creates a new ScenarioSet instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ScenarioSet instance
             */
            public static create(properties?: apollo.dreamview.IScenarioSet): apollo.dreamview.ScenarioSet;

            /**
             * Encodes the specified ScenarioSet message. Does not implicitly {@link apollo.dreamview.ScenarioSet.verify|verify} messages.
             * @param message ScenarioSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IScenarioSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ScenarioSet message, length delimited. Does not implicitly {@link apollo.dreamview.ScenarioSet.verify|verify} messages.
             * @param message ScenarioSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IScenarioSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ScenarioSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ScenarioSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ScenarioSet;

            /**
             * Decodes a ScenarioSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ScenarioSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ScenarioSet;

            /**
             * Verifies a ScenarioSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ScenarioSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ScenarioSet
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ScenarioSet;

            /**
             * Creates a plain object from a ScenarioSet message. Also converts values to other types if specified.
             * @param message ScenarioSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ScenarioSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ScenarioSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ScenarioSet
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** PlayRecordStatus enum. */
        enum PlayRecordStatus {
            RUNNING = 0,
            PAUSED = 1,
            CLOSED = 2
        }

        /** Properties of a RecordStatus. */
        interface IRecordStatus {

            /** RecordStatus currentRecordId */
            currentRecordId?: (string|null);

            /** RecordStatus playRecordStatus */
            playRecordStatus?: (apollo.dreamview.PlayRecordStatus|null);

            /** RecordStatus currTimeS */
            currTimeS?: (number|null);
        }

        /** Represents a RecordStatus. */
        class RecordStatus implements IRecordStatus {

            /**
             * Constructs a new RecordStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IRecordStatus);

            /** RecordStatus currentRecordId. */
            public currentRecordId: string;

            /** RecordStatus playRecordStatus. */
            public playRecordStatus: apollo.dreamview.PlayRecordStatus;

            /** RecordStatus currTimeS. */
            public currTimeS: number;

            /**
             * Creates a new RecordStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RecordStatus instance
             */
            public static create(properties?: apollo.dreamview.IRecordStatus): apollo.dreamview.RecordStatus;

            /**
             * Encodes the specified RecordStatus message. Does not implicitly {@link apollo.dreamview.RecordStatus.verify|verify} messages.
             * @param message RecordStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RecordStatus message, length delimited. Does not implicitly {@link apollo.dreamview.RecordStatus.verify|verify} messages.
             * @param message RecordStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IRecordStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RecordStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RecordStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.RecordStatus;

            /**
             * Decodes a RecordStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RecordStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.RecordStatus;

            /**
             * Verifies a RecordStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RecordStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RecordStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.RecordStatus;

            /**
             * Creates a plain object from a RecordStatus message. Also converts values to other types if specified.
             * @param message RecordStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.RecordStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RecordStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RecordStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** HMIModeOperation enum. */
        enum HMIModeOperation {
            None = 0,
            SIM_DEBUG = 1,
            Sim_Control = 2,
            Auto_Drive = 3,
            TRACE = 4,
            Scenario_Sim = 5,
            Record = 6,
            Waypoint_Follow = 7
        }

        /** Properties of a HMIStatus. */
        interface IHMIStatus {

            /** HMIStatus header */
            header?: (apollo.common.IHeader|null);

            /** HMIStatus modes */
            modes?: (string[]|null);

            /** HMIStatus currentMode */
            currentMode?: (string|null);

            /** HMIStatus maps */
            maps?: (string[]|null);

            /** HMIStatus currentMap */
            currentMap?: (string|null);

            /** HMIStatus vehicles */
            vehicles?: (string[]|null);

            /** HMIStatus currentVehicle */
            currentVehicle?: (string|null);

            /** HMIStatus modules */
            modules?: ({ [k: string]: boolean }|null);

            /** HMIStatus monitoredComponents */
            monitoredComponents?: ({ [k: string]: apollo.monitor.IComponentStatus }|null);

            /** HMIStatus dockerImage */
            dockerImage?: (string|null);

            /** HMIStatus utmZoneId */
            utmZoneId?: (number|null);

            /** HMIStatus passengerMsg */
            passengerMsg?: (string|null);

            /** HMIStatus otherComponents */
            otherComponents?: ({ [k: string]: apollo.monitor.IComponentStatus }|null);

            /** HMIStatus scenarioSet */
            scenarioSet?: ({ [k: string]: apollo.dreamview.IScenarioSet }|null);

            /** HMIStatus currentScenarioSetId */
            currentScenarioSetId?: (string|null);

            /** HMIStatus currentScenarioId */
            currentScenarioId?: (string|null);

            /** HMIStatus dynamicModels */
            dynamicModels?: (string[]|null);

            /** HMIStatus currentDynamicModel */
            currentDynamicModel?: (string|null);

            /** HMIStatus currentRecordId */
            currentRecordId?: (string|null);

            /** HMIStatus records */
            records?: ({ [k: string]: number }|null);

            /** HMIStatus currentVehicleType */
            currentVehicleType?: (number|null);

            /** HMIStatus currentCameraSensorChannel */
            currentCameraSensorChannel?: (string|null);

            /** HMIStatus currentPointCloudChannel */
            currentPointCloudChannel?: (string|null);

            /** HMIStatus operations */
            operations?: (apollo.dreamview.HMIModeOperation[]|null);

            /** HMIStatus currentOperation */
            currentOperation?: (apollo.dreamview.HMIModeOperation|null);

            /** HMIStatus currentLayout */
            currentLayout?: (string|null);

            /** HMIStatus currentRecordStatus */
            currentRecordStatus?: (apollo.dreamview.IRecordStatus|null);

            /** HMIStatus dataRecorderComponent */
            dataRecorderComponent?: (apollo.monitor.IComponent|null);

            /** HMIStatus expectedModules */
            expectedModules?: (number|null);

            /** HMIStatus modulesLock */
            modulesLock?: ({ [k: string]: boolean }|null);

            /** HMIStatus backendShutdown */
            backendShutdown?: (boolean|null);

            /** HMIStatus terminalComponent */
            terminalComponent?: (apollo.monitor.IComponent|null);
        }

        /** Represents a HMIStatus. */
        class HMIStatus implements IHMIStatus {

            /**
             * Constructs a new HMIStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IHMIStatus);

            /** HMIStatus header. */
            public header?: (apollo.common.IHeader|null);

            /** HMIStatus modes. */
            public modes: string[];

            /** HMIStatus currentMode. */
            public currentMode: string;

            /** HMIStatus maps. */
            public maps: string[];

            /** HMIStatus currentMap. */
            public currentMap: string;

            /** HMIStatus vehicles. */
            public vehicles: string[];

            /** HMIStatus currentVehicle. */
            public currentVehicle: string;

            /** HMIStatus modules. */
            public modules: { [k: string]: boolean };

            /** HMIStatus monitoredComponents. */
            public monitoredComponents: { [k: string]: apollo.monitor.IComponentStatus };

            /** HMIStatus dockerImage. */
            public dockerImage: string;

            /** HMIStatus utmZoneId. */
            public utmZoneId: number;

            /** HMIStatus passengerMsg. */
            public passengerMsg: string;

            /** HMIStatus otherComponents. */
            public otherComponents: { [k: string]: apollo.monitor.IComponentStatus };

            /** HMIStatus scenarioSet. */
            public scenarioSet: { [k: string]: apollo.dreamview.IScenarioSet };

            /** HMIStatus currentScenarioSetId. */
            public currentScenarioSetId: string;

            /** HMIStatus currentScenarioId. */
            public currentScenarioId: string;

            /** HMIStatus dynamicModels. */
            public dynamicModels: string[];

            /** HMIStatus currentDynamicModel. */
            public currentDynamicModel: string;

            /** HMIStatus currentRecordId. */
            public currentRecordId: string;

            /** HMIStatus records. */
            public records: { [k: string]: number };

            /** HMIStatus currentVehicleType. */
            public currentVehicleType: number;

            /** HMIStatus currentCameraSensorChannel. */
            public currentCameraSensorChannel: string;

            /** HMIStatus currentPointCloudChannel. */
            public currentPointCloudChannel: string;

            /** HMIStatus operations. */
            public operations: apollo.dreamview.HMIModeOperation[];

            /** HMIStatus currentOperation. */
            public currentOperation: apollo.dreamview.HMIModeOperation;

            /** HMIStatus currentLayout. */
            public currentLayout: string;

            /** HMIStatus currentRecordStatus. */
            public currentRecordStatus?: (apollo.dreamview.IRecordStatus|null);

            /** HMIStatus dataRecorderComponent. */
            public dataRecorderComponent?: (apollo.monitor.IComponent|null);

            /** HMIStatus expectedModules. */
            public expectedModules: number;

            /** HMIStatus modulesLock. */
            public modulesLock: { [k: string]: boolean };

            /** HMIStatus backendShutdown. */
            public backendShutdown: boolean;

            /** HMIStatus terminalComponent. */
            public terminalComponent?: (apollo.monitor.IComponent|null);

            /**
             * Creates a new HMIStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HMIStatus instance
             */
            public static create(properties?: apollo.dreamview.IHMIStatus): apollo.dreamview.HMIStatus;

            /**
             * Encodes the specified HMIStatus message. Does not implicitly {@link apollo.dreamview.HMIStatus.verify|verify} messages.
             * @param message HMIStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IHMIStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HMIStatus message, length delimited. Does not implicitly {@link apollo.dreamview.HMIStatus.verify|verify} messages.
             * @param message HMIStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IHMIStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HMIStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HMIStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.HMIStatus;

            /**
             * Decodes a HMIStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HMIStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.HMIStatus;

            /**
             * Verifies a HMIStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HMIStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HMIStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.HMIStatus;

            /**
             * Creates a plain object from a HMIStatus message. Also converts values to other types if specified.
             * @param message HMIStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.HMIStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HMIStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for HMIStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PolygonPoint. */
        interface IPolygonPoint {

            /** PolygonPoint x */
            x?: (number|null);

            /** PolygonPoint y */
            y?: (number|null);

            /** PolygonPoint z */
            z?: (number|null);

            /** PolygonPoint gaussianInfo */
            gaussianInfo?: (apollo.common.IGaussianInfo|null);
        }

        /** Represents a PolygonPoint. */
        class PolygonPoint implements IPolygonPoint {

            /**
             * Constructs a new PolygonPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IPolygonPoint);

            /** PolygonPoint x. */
            public x: number;

            /** PolygonPoint y. */
            public y: number;

            /** PolygonPoint z. */
            public z: number;

            /** PolygonPoint gaussianInfo. */
            public gaussianInfo?: (apollo.common.IGaussianInfo|null);

            /**
             * Creates a new PolygonPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PolygonPoint instance
             */
            public static create(properties?: apollo.dreamview.IPolygonPoint): apollo.dreamview.PolygonPoint;

            /**
             * Encodes the specified PolygonPoint message. Does not implicitly {@link apollo.dreamview.PolygonPoint.verify|verify} messages.
             * @param message PolygonPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IPolygonPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PolygonPoint message, length delimited. Does not implicitly {@link apollo.dreamview.PolygonPoint.verify|verify} messages.
             * @param message PolygonPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IPolygonPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PolygonPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PolygonPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.PolygonPoint;

            /**
             * Decodes a PolygonPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PolygonPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.PolygonPoint;

            /**
             * Verifies a PolygonPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PolygonPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PolygonPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.PolygonPoint;

            /**
             * Creates a plain object from a PolygonPoint message. Also converts values to other types if specified.
             * @param message PolygonPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.PolygonPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PolygonPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PolygonPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Prediction. */
        interface IPrediction {

            /** Prediction probability */
            probability?: (number|null);

            /** Prediction predictedTrajectory */
            predictedTrajectory?: (apollo.dreamview.IPolygonPoint[]|null);
        }

        /** Represents a Prediction. */
        class Prediction implements IPrediction {

            /**
             * Constructs a new Prediction.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IPrediction);

            /** Prediction probability. */
            public probability: number;

            /** Prediction predictedTrajectory. */
            public predictedTrajectory: apollo.dreamview.IPolygonPoint[];

            /**
             * Creates a new Prediction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Prediction instance
             */
            public static create(properties?: apollo.dreamview.IPrediction): apollo.dreamview.Prediction;

            /**
             * Encodes the specified Prediction message. Does not implicitly {@link apollo.dreamview.Prediction.verify|verify} messages.
             * @param message Prediction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IPrediction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Prediction message, length delimited. Does not implicitly {@link apollo.dreamview.Prediction.verify|verify} messages.
             * @param message Prediction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IPrediction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Prediction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Prediction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Prediction;

            /**
             * Decodes a Prediction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Prediction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Prediction;

            /**
             * Verifies a Prediction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Prediction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Prediction
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Prediction;

            /**
             * Creates a plain object from a Prediction message. Also converts values to other types if specified.
             * @param message Prediction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Prediction, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Prediction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Prediction
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Decision. */
        interface IDecision {

            /** Decision type */
            type?: (apollo.dreamview.Decision.Type|null);

            /** Decision polygonPoint */
            polygonPoint?: (apollo.dreamview.IPolygonPoint[]|null);

            /** Decision heading */
            heading?: (number|null);

            /** Decision latitude */
            latitude?: (number|null);

            /** Decision longitude */
            longitude?: (number|null);

            /** Decision positionX */
            positionX?: (number|null);

            /** Decision positionY */
            positionY?: (number|null);

            /** Decision length */
            length?: (number|null);

            /** Decision width */
            width?: (number|null);

            /** Decision height */
            height?: (number|null);

            /** Decision stopReason */
            stopReason?: (apollo.dreamview.Decision.StopReasonCode|null);

            /** Decision changeLaneType */
            changeLaneType?: (apollo.routing.ChangeLaneType|null);
        }

        /** Represents a Decision. */
        class Decision implements IDecision {

            /**
             * Constructs a new Decision.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IDecision);

            /** Decision type. */
            public type: apollo.dreamview.Decision.Type;

            /** Decision polygonPoint. */
            public polygonPoint: apollo.dreamview.IPolygonPoint[];

            /** Decision heading. */
            public heading: number;

            /** Decision latitude. */
            public latitude: number;

            /** Decision longitude. */
            public longitude: number;

            /** Decision positionX. */
            public positionX: number;

            /** Decision positionY. */
            public positionY: number;

            /** Decision length. */
            public length: number;

            /** Decision width. */
            public width: number;

            /** Decision height. */
            public height: number;

            /** Decision stopReason. */
            public stopReason: apollo.dreamview.Decision.StopReasonCode;

            /** Decision changeLaneType. */
            public changeLaneType: apollo.routing.ChangeLaneType;

            /**
             * Creates a new Decision instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Decision instance
             */
            public static create(properties?: apollo.dreamview.IDecision): apollo.dreamview.Decision;

            /**
             * Encodes the specified Decision message. Does not implicitly {@link apollo.dreamview.Decision.verify|verify} messages.
             * @param message Decision message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IDecision, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Decision message, length delimited. Does not implicitly {@link apollo.dreamview.Decision.verify|verify} messages.
             * @param message Decision message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IDecision, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Decision message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Decision
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Decision;

            /**
             * Decodes a Decision message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Decision
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Decision;

            /**
             * Verifies a Decision message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Decision message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Decision
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Decision;

            /**
             * Creates a plain object from a Decision message. Also converts values to other types if specified.
             * @param message Decision
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Decision, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Decision to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Decision
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Decision {

            /** Type enum. */
            enum Type {
                IGNORE = 0,
                STOP = 1,
                NUDGE = 2,
                YIELD = 3,
                OVERTAKE = 4,
                FOLLOW = 5,
                SIDEPASS = 6
            }

            /** StopReasonCode enum. */
            enum StopReasonCode {
                STOP_REASON_HEAD_VEHICLE = 1,
                STOP_REASON_DESTINATION = 2,
                STOP_REASON_PEDESTRIAN = 3,
                STOP_REASON_OBSTACLE = 4,
                STOP_REASON_SIGNAL = 100,
                STOP_REASON_STOP_SIGN = 101,
                STOP_REASON_YIELD_SIGN = 102,
                STOP_REASON_CLEAR_ZONE = 103,
                STOP_REASON_CROSSWALK = 104,
                STOP_REASON_EMERGENCY = 105,
                STOP_REASON_NOT_READY = 106,
                STOP_REASON_PULL_OVER = 107
            }
        }

        /** Properties of an Object. */
        interface IObject {

            /** Object id */
            id?: (string|null);

            /** Object polygonPoint */
            polygonPoint?: (apollo.dreamview.IPolygonPoint[]|null);

            /** Object heading */
            heading?: (number|null);

            /** Object latitude */
            latitude?: (number|null);

            /** Object longitude */
            longitude?: (number|null);

            /** Object positionX */
            positionX?: (number|null);

            /** Object positionY */
            positionY?: (number|null);

            /** Object length */
            length?: (number|null);

            /** Object width */
            width?: (number|null);

            /** Object height */
            height?: (number|null);

            /** Object speed */
            speed?: (number|null);

            /** Object speedAcceleration */
            speedAcceleration?: (number|null);

            /** Object speedJerk */
            speedJerk?: (number|null);

            /** Object spin */
            spin?: (number|null);

            /** Object spinAcceleration */
            spinAcceleration?: (number|null);

            /** Object spinJerk */
            spinJerk?: (number|null);

            /** Object speedHeading */
            speedHeading?: (number|null);

            /** Object kappa */
            kappa?: (number|null);

            /** Object dkappa */
            dkappa?: (number|null);

            /** Object signalSet */
            signalSet?: (string[]|null);

            /** Object currentSignal */
            currentSignal?: (string|null);

            /** Object timestampSec */
            timestampSec?: (number|null);

            /** Object decision */
            decision?: (apollo.dreamview.IDecision[]|null);

            /** Object yieldedObstacle */
            yieldedObstacle?: (boolean|null);

            /** Object throttlePercentage */
            throttlePercentage?: (number|null);

            /** Object brakePercentage */
            brakePercentage?: (number|null);

            /** Object steeringPercentage */
            steeringPercentage?: (number|null);

            /** Object steeringAngle */
            steeringAngle?: (number|null);

            /** Object steeringRatio */
            steeringRatio?: (number|null);

            /** Object batteryPercentage */
            batteryPercentage?: (number|null);

            /** Object gearLocation */
            gearLocation?: (apollo.canbus.Chassis.GearPosition|null);

            /** Object disengageType */
            disengageType?: (apollo.dreamview.Object.DisengageType|null);

            /** Object type */
            type?: (apollo.dreamview.Object.Type|null);

            /** Object subType */
            subType?: (apollo.perception.PerceptionObstacle.SubType|null);

            /** Object prediction */
            prediction?: (apollo.dreamview.IPrediction[]|null);

            /** Object confidence */
            confidence?: (number|null);

            /** Object obstaclePriority */
            obstaclePriority?: (apollo.prediction.IObstaclePriority|null);

            /** Object interactiveTag */
            interactiveTag?: (apollo.prediction.IObstacleInteractiveTag|null);

            /** Object source */
            source?: (apollo.perception.PerceptionObstacle.Source|null);

            /** Object v2xInfo */
            v2xInfo?: (apollo.perception.IV2XInformation|null);
        }

        /** Represents an Object. */
        class Object implements IObject {

            /**
             * Constructs a new Object.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IObject);

            /** Object id. */
            public id: string;

            /** Object polygonPoint. */
            public polygonPoint: apollo.dreamview.IPolygonPoint[];

            /** Object heading. */
            public heading: number;

            /** Object latitude. */
            public latitude: number;

            /** Object longitude. */
            public longitude: number;

            /** Object positionX. */
            public positionX: number;

            /** Object positionY. */
            public positionY: number;

            /** Object length. */
            public length: number;

            /** Object width. */
            public width: number;

            /** Object height. */
            public height: number;

            /** Object speed. */
            public speed: number;

            /** Object speedAcceleration. */
            public speedAcceleration: number;

            /** Object speedJerk. */
            public speedJerk: number;

            /** Object spin. */
            public spin: number;

            /** Object spinAcceleration. */
            public spinAcceleration: number;

            /** Object spinJerk. */
            public spinJerk: number;

            /** Object speedHeading. */
            public speedHeading: number;

            /** Object kappa. */
            public kappa: number;

            /** Object dkappa. */
            public dkappa: number;

            /** Object signalSet. */
            public signalSet: string[];

            /** Object currentSignal. */
            public currentSignal: string;

            /** Object timestampSec. */
            public timestampSec: number;

            /** Object decision. */
            public decision: apollo.dreamview.IDecision[];

            /** Object yieldedObstacle. */
            public yieldedObstacle: boolean;

            /** Object throttlePercentage. */
            public throttlePercentage: number;

            /** Object brakePercentage. */
            public brakePercentage: number;

            /** Object steeringPercentage. */
            public steeringPercentage: number;

            /** Object steeringAngle. */
            public steeringAngle: number;

            /** Object steeringRatio. */
            public steeringRatio: number;

            /** Object batteryPercentage. */
            public batteryPercentage: number;

            /** Object gearLocation. */
            public gearLocation: apollo.canbus.Chassis.GearPosition;

            /** Object disengageType. */
            public disengageType: apollo.dreamview.Object.DisengageType;

            /** Object type. */
            public type: apollo.dreamview.Object.Type;

            /** Object subType. */
            public subType: apollo.perception.PerceptionObstacle.SubType;

            /** Object prediction. */
            public prediction: apollo.dreamview.IPrediction[];

            /** Object confidence. */
            public confidence: number;

            /** Object obstaclePriority. */
            public obstaclePriority?: (apollo.prediction.IObstaclePriority|null);

            /** Object interactiveTag. */
            public interactiveTag?: (apollo.prediction.IObstacleInteractiveTag|null);

            /** Object source. */
            public source: apollo.perception.PerceptionObstacle.Source;

            /** Object v2xInfo. */
            public v2xInfo?: (apollo.perception.IV2XInformation|null);

            /**
             * Creates a new Object instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Object instance
             */
            public static create(properties?: apollo.dreamview.IObject): apollo.dreamview.object;

            /**
             * Encodes the specified Object message. Does not implicitly {@link apollo.dreamview.Object.verify|verify} messages.
             * @param message Object message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IObject, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Object message, length delimited. Does not implicitly {@link apollo.dreamview.Object.verify|verify} messages.
             * @param message Object message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IObject, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Object message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Object
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.object;

            /**
             * Decodes an Object message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Object
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.object;

            /**
             * Verifies an Object message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Object message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Object
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.object;

            /**
             * Creates a plain object from an Object message. Also converts values to other types if specified.
             * @param message Object
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.object, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Object to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Object
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Object {

            /** DisengageType enum. */
            enum DisengageType {
                DISENGAGE_NONE = 0,
                DISENGAGE_UNKNOWN = 1,
                DISENGAGE_MANUAL = 2,
                DISENGAGE_EMERGENCY = 3,
                DISENGAGE_AUTO_STEER_ONLY = 4,
                DISENGAGE_AUTO_SPEED_ONLY = 5,
                DISENGAGE_CHASSIS_ERROR = 6
            }

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                UNKNOWN_MOVABLE = 1,
                UNKNOWN_UNMOVABLE = 2,
                PEDESTRIAN = 3,
                BICYCLE = 4,
                VEHICLE = 5,
                VIRTUAL = 6,
                CIPV = 7
            }
        }

        /** Properties of a DelaysInMs. */
        interface IDelaysInMs {

            /** DelaysInMs chassis */
            chassis?: (number|null);

            /** DelaysInMs localization */
            localization?: (number|null);

            /** DelaysInMs perceptionObstacle */
            perceptionObstacle?: (number|null);

            /** DelaysInMs planning */
            planning?: (number|null);

            /** DelaysInMs prediction */
            prediction?: (number|null);

            /** DelaysInMs trafficLight */
            trafficLight?: (number|null);

            /** DelaysInMs control */
            control?: (number|null);
        }

        /** Represents a DelaysInMs. */
        class DelaysInMs implements IDelaysInMs {

            /**
             * Constructs a new DelaysInMs.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IDelaysInMs);

            /** DelaysInMs chassis. */
            public chassis: number;

            /** DelaysInMs localization. */
            public localization: number;

            /** DelaysInMs perceptionObstacle. */
            public perceptionObstacle: number;

            /** DelaysInMs planning. */
            public planning: number;

            /** DelaysInMs prediction. */
            public prediction: number;

            /** DelaysInMs trafficLight. */
            public trafficLight: number;

            /** DelaysInMs control. */
            public control: number;

            /**
             * Creates a new DelaysInMs instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DelaysInMs instance
             */
            public static create(properties?: apollo.dreamview.IDelaysInMs): apollo.dreamview.DelaysInMs;

            /**
             * Encodes the specified DelaysInMs message. Does not implicitly {@link apollo.dreamview.DelaysInMs.verify|verify} messages.
             * @param message DelaysInMs message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IDelaysInMs, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DelaysInMs message, length delimited. Does not implicitly {@link apollo.dreamview.DelaysInMs.verify|verify} messages.
             * @param message DelaysInMs message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IDelaysInMs, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DelaysInMs message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DelaysInMs
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.DelaysInMs;

            /**
             * Decodes a DelaysInMs message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DelaysInMs
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.DelaysInMs;

            /**
             * Verifies a DelaysInMs message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DelaysInMs message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DelaysInMs
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.DelaysInMs;

            /**
             * Creates a plain object from a DelaysInMs message. Also converts values to other types if specified.
             * @param message DelaysInMs
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.DelaysInMs, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DelaysInMs to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DelaysInMs
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoutePath. */
        interface IRoutePath {

            /** RoutePath point */
            point?: (apollo.dreamview.IPolygonPoint[]|null);
        }

        /** Represents a RoutePath. */
        class RoutePath implements IRoutePath {

            /**
             * Constructs a new RoutePath.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IRoutePath);

            /** RoutePath point. */
            public point: apollo.dreamview.IPolygonPoint[];

            /**
             * Creates a new RoutePath instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoutePath instance
             */
            public static create(properties?: apollo.dreamview.IRoutePath): apollo.dreamview.RoutePath;

            /**
             * Encodes the specified RoutePath message. Does not implicitly {@link apollo.dreamview.RoutePath.verify|verify} messages.
             * @param message RoutePath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IRoutePath, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoutePath message, length delimited. Does not implicitly {@link apollo.dreamview.RoutePath.verify|verify} messages.
             * @param message RoutePath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IRoutePath, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoutePath message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoutePath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.RoutePath;

            /**
             * Decodes a RoutePath message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoutePath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.RoutePath;

            /**
             * Verifies a RoutePath message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoutePath message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoutePath
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.RoutePath;

            /**
             * Creates a plain object from a RoutePath message. Also converts values to other types if specified.
             * @param message RoutePath
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.RoutePath, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoutePath to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoutePath
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Latency. */
        interface ILatency {

            /** Latency timestampSec */
            timestampSec?: (number|null);

            /** Latency totalTimeMs */
            totalTimeMs?: (number|null);
        }

        /** Represents a Latency. */
        class Latency implements ILatency {

            /**
             * Constructs a new Latency.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.ILatency);

            /** Latency timestampSec. */
            public timestampSec: number;

            /** Latency totalTimeMs. */
            public totalTimeMs: number;

            /**
             * Creates a new Latency instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Latency instance
             */
            public static create(properties?: apollo.dreamview.ILatency): apollo.dreamview.Latency;

            /**
             * Encodes the specified Latency message. Does not implicitly {@link apollo.dreamview.Latency.verify|verify} messages.
             * @param message Latency message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.ILatency, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Latency message, length delimited. Does not implicitly {@link apollo.dreamview.Latency.verify|verify} messages.
             * @param message Latency message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.ILatency, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Latency message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Latency
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Latency;

            /**
             * Decodes a Latency message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Latency
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Latency;

            /**
             * Verifies a Latency message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Latency message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Latency
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Latency;

            /**
             * Creates a plain object from a Latency message. Also converts values to other types if specified.
             * @param message Latency
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Latency, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Latency to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Latency
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MapElementIds. */
        interface IMapElementIds {

            /** MapElementIds lane */
            lane?: (string[]|null);

            /** MapElementIds crosswalk */
            crosswalk?: (string[]|null);

            /** MapElementIds junction */
            junction?: (string[]|null);

            /** MapElementIds signal */
            signal?: (string[]|null);

            /** MapElementIds stopSign */
            stopSign?: (string[]|null);

            /** MapElementIds yield */
            "yield"?: (string[]|null);

            /** MapElementIds overlap */
            overlap?: (string[]|null);

            /** MapElementIds road */
            road?: (string[]|null);

            /** MapElementIds clearArea */
            clearArea?: (string[]|null);

            /** MapElementIds parkingSpace */
            parkingSpace?: (string[]|null);

            /** MapElementIds speedBump */
            speedBump?: (string[]|null);

            /** MapElementIds pncJunction */
            pncJunction?: (string[]|null);
        }

        /** Represents a MapElementIds. */
        class MapElementIds implements IMapElementIds {

            /**
             * Constructs a new MapElementIds.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IMapElementIds);

            /** MapElementIds lane. */
            public lane: string[];

            /** MapElementIds crosswalk. */
            public crosswalk: string[];

            /** MapElementIds junction. */
            public junction: string[];

            /** MapElementIds signal. */
            public signal: string[];

            /** MapElementIds stopSign. */
            public stopSign: string[];

            /** MapElementIds yield. */
            public yield: string[];

            /** MapElementIds overlap. */
            public overlap: string[];

            /** MapElementIds road. */
            public road: string[];

            /** MapElementIds clearArea. */
            public clearArea: string[];

            /** MapElementIds parkingSpace. */
            public parkingSpace: string[];

            /** MapElementIds speedBump. */
            public speedBump: string[];

            /** MapElementIds pncJunction. */
            public pncJunction: string[];

            /**
             * Creates a new MapElementIds instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapElementIds instance
             */
            public static create(properties?: apollo.dreamview.IMapElementIds): apollo.dreamview.MapElementIds;

            /**
             * Encodes the specified MapElementIds message. Does not implicitly {@link apollo.dreamview.MapElementIds.verify|verify} messages.
             * @param message MapElementIds message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IMapElementIds, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MapElementIds message, length delimited. Does not implicitly {@link apollo.dreamview.MapElementIds.verify|verify} messages.
             * @param message MapElementIds message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IMapElementIds, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MapElementIds message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapElementIds
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.MapElementIds;

            /**
             * Decodes a MapElementIds message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapElementIds
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.MapElementIds;

            /**
             * Verifies a MapElementIds message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapElementIds message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapElementIds
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.MapElementIds;

            /**
             * Creates a plain object from a MapElementIds message. Also converts values to other types if specified.
             * @param message MapElementIds
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.MapElementIds, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapElementIds to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MapElementIds
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ControlData. */
        interface IControlData {

            /** ControlData timestampSec */
            timestampSec?: (number|null);

            /** ControlData stationError */
            stationError?: (number|null);

            /** ControlData lateralError */
            lateralError?: (number|null);

            /** ControlData headingError */
            headingError?: (number|null);

            /** ControlData currentTargetPoint */
            currentTargetPoint?: (apollo.common.ITrajectoryPoint|null);
        }

        /** Represents a ControlData. */
        class ControlData implements IControlData {

            /**
             * Constructs a new ControlData.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IControlData);

            /** ControlData timestampSec. */
            public timestampSec: number;

            /** ControlData stationError. */
            public stationError: number;

            /** ControlData lateralError. */
            public lateralError: number;

            /** ControlData headingError. */
            public headingError: number;

            /** ControlData currentTargetPoint. */
            public currentTargetPoint?: (apollo.common.ITrajectoryPoint|null);

            /**
             * Creates a new ControlData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ControlData instance
             */
            public static create(properties?: apollo.dreamview.IControlData): apollo.dreamview.ControlData;

            /**
             * Encodes the specified ControlData message. Does not implicitly {@link apollo.dreamview.ControlData.verify|verify} messages.
             * @param message ControlData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IControlData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ControlData message, length delimited. Does not implicitly {@link apollo.dreamview.ControlData.verify|verify} messages.
             * @param message ControlData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IControlData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ControlData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ControlData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.ControlData;

            /**
             * Decodes a ControlData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ControlData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.ControlData;

            /**
             * Verifies a ControlData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ControlData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ControlData
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.ControlData;

            /**
             * Creates a plain object from a ControlData message. Also converts values to other types if specified.
             * @param message ControlData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.ControlData, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ControlData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ControlData
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Notification. */
        interface INotification {

            /** Notification timestampSec */
            timestampSec?: (number|null);

            /** Notification item */
            item?: (apollo.common.monitor.IMonitorMessageItem|null);
        }

        /** Represents a Notification. */
        class Notification implements INotification {

            /**
             * Constructs a new Notification.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.INotification);

            /** Notification timestampSec. */
            public timestampSec: number;

            /** Notification item. */
            public item?: (apollo.common.monitor.IMonitorMessageItem|null);

            /**
             * Creates a new Notification instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Notification instance
             */
            public static create(properties?: apollo.dreamview.INotification): apollo.dreamview.Notification;

            /**
             * Encodes the specified Notification message. Does not implicitly {@link apollo.dreamview.Notification.verify|verify} messages.
             * @param message Notification message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.INotification, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Notification message, length delimited. Does not implicitly {@link apollo.dreamview.Notification.verify|verify} messages.
             * @param message Notification message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.INotification, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Notification message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Notification
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.Notification;

            /**
             * Decodes a Notification message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Notification
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.Notification;

            /**
             * Verifies a Notification message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Notification message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Notification
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.Notification;

            /**
             * Creates a plain object from a Notification message. Also converts values to other types if specified.
             * @param message Notification
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.Notification, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Notification to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Notification
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SensorMeasurements. */
        interface ISensorMeasurements {

            /** SensorMeasurements sensorMeasurement */
            sensorMeasurement?: (apollo.dreamview.IObject[]|null);
        }

        /** Represents a SensorMeasurements. */
        class SensorMeasurements implements ISensorMeasurements {

            /**
             * Constructs a new SensorMeasurements.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.ISensorMeasurements);

            /** SensorMeasurements sensorMeasurement. */
            public sensorMeasurement: apollo.dreamview.IObject[];

            /**
             * Creates a new SensorMeasurements instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SensorMeasurements instance
             */
            public static create(properties?: apollo.dreamview.ISensorMeasurements): apollo.dreamview.SensorMeasurements;

            /**
             * Encodes the specified SensorMeasurements message. Does not implicitly {@link apollo.dreamview.SensorMeasurements.verify|verify} messages.
             * @param message SensorMeasurements message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.ISensorMeasurements, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SensorMeasurements message, length delimited. Does not implicitly {@link apollo.dreamview.SensorMeasurements.verify|verify} messages.
             * @param message SensorMeasurements message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.ISensorMeasurements, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SensorMeasurements message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SensorMeasurements
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.SensorMeasurements;

            /**
             * Decodes a SensorMeasurements message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SensorMeasurements
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.SensorMeasurements;

            /**
             * Verifies a SensorMeasurements message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SensorMeasurements message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SensorMeasurements
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.SensorMeasurements;

            /**
             * Creates a plain object from a SensorMeasurements message. Also converts values to other types if specified.
             * @param message SensorMeasurements
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.SensorMeasurements, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SensorMeasurements to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SensorMeasurements
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SimulationWorld. */
        interface ISimulationWorld {

            /** SimulationWorld timestamp */
            timestamp?: (number|null);

            /** SimulationWorld sequenceNum */
            sequenceNum?: (number|null);

            /** SimulationWorld object */
            object?: (apollo.dreamview.IObject[]|null);

            /** SimulationWorld autoDrivingCar */
            autoDrivingCar?: (apollo.dreamview.IObject|null);

            /** SimulationWorld trafficSignal */
            trafficSignal?: (apollo.dreamview.IObject|null);

            /** SimulationWorld routePath */
            routePath?: (apollo.dreamview.IRoutePath[]|null);

            /** SimulationWorld routingTime */
            routingTime?: (number|null);

            /** SimulationWorld planningTrajectory */
            planningTrajectory?: (apollo.dreamview.IObject[]|null);

            /** SimulationWorld mainStop */
            mainStop?: (apollo.dreamview.IObject|null);

            /** SimulationWorld mainDecision */
            mainDecision?: (apollo.dreamview.IObject|null);

            /** SimulationWorld speedLimit */
            speedLimit?: (number|null);

            /** SimulationWorld delay */
            delay?: (apollo.dreamview.IDelaysInMs|null);

            /** SimulationWorld monitor */
            monitor?: (apollo.common.monitor.IMonitorMessage|null);

            /** SimulationWorld notification */
            notification?: (apollo.dreamview.INotification[]|null);

            /** SimulationWorld engageAdvice */
            engageAdvice?: (string|null);

            /** SimulationWorld latency */
            latency?: ({ [k: string]: apollo.dreamview.ILatency }|null);

            /** SimulationWorld mapElementIds */
            mapElementIds?: (apollo.dreamview.IMapElementIds|null);

            /** SimulationWorld mapHash */
            mapHash?: (number|Long|null);

            /** SimulationWorld mapRadius */
            mapRadius?: (number|null);

            /** SimulationWorld planningData */
            planningData?: (apollo.planning_internal.IPlanningData|null);

            /** SimulationWorld gps */
            gps?: (apollo.dreamview.IObject|null);

            /** SimulationWorld laneMarker */
            laneMarker?: (apollo.perception.ILaneMarkers|null);

            /** SimulationWorld controlData */
            controlData?: (apollo.dreamview.IControlData|null);

            /** SimulationWorld navigationPath */
            navigationPath?: (apollo.common.IPath[]|null);

            /** SimulationWorld isRssSafe */
            isRssSafe?: (boolean|null);

            /** SimulationWorld shadowLocalization */
            shadowLocalization?: (apollo.dreamview.IObject|null);

            /** SimulationWorld perceivedSignal */
            perceivedSignal?: (apollo.dreamview.IObject[]|null);

            /** SimulationWorld stories */
            stories?: ({ [k: string]: boolean }|null);

            /** SimulationWorld sensorMeasurements */
            sensorMeasurements?: ({ [k: string]: apollo.dreamview.ISensorMeasurements }|null);

            /** SimulationWorld isSirenOn */
            isSirenOn?: (boolean|null);

            /** SimulationWorld vehicleParam */
            vehicleParam?: (apollo.common.IVehicleParam|null);
        }

        /** Represents a SimulationWorld. */
        class SimulationWorld implements ISimulationWorld {

            /**
             * Constructs a new SimulationWorld.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.ISimulationWorld);

            /** SimulationWorld timestamp. */
            public timestamp: number;

            /** SimulationWorld sequenceNum. */
            public sequenceNum: number;

            /** SimulationWorld object. */
            public object: apollo.dreamview.IObject[];

            /** SimulationWorld autoDrivingCar. */
            public autoDrivingCar?: (apollo.dreamview.IObject|null);

            /** SimulationWorld trafficSignal. */
            public trafficSignal?: (apollo.dreamview.IObject|null);

            /** SimulationWorld routePath. */
            public routePath: apollo.dreamview.IRoutePath[];

            /** SimulationWorld routingTime. */
            public routingTime: number;

            /** SimulationWorld planningTrajectory. */
            public planningTrajectory: apollo.dreamview.IObject[];

            /** SimulationWorld mainStop. */
            public mainStop?: (apollo.dreamview.IObject|null);

            /** SimulationWorld mainDecision. */
            public mainDecision?: (apollo.dreamview.IObject|null);

            /** SimulationWorld speedLimit. */
            public speedLimit: number;

            /** SimulationWorld delay. */
            public delay?: (apollo.dreamview.IDelaysInMs|null);

            /** SimulationWorld monitor. */
            public monitor?: (apollo.common.monitor.IMonitorMessage|null);

            /** SimulationWorld notification. */
            public notification: apollo.dreamview.INotification[];

            /** SimulationWorld engageAdvice. */
            public engageAdvice: string;

            /** SimulationWorld latency. */
            public latency: { [k: string]: apollo.dreamview.ILatency };

            /** SimulationWorld mapElementIds. */
            public mapElementIds?: (apollo.dreamview.IMapElementIds|null);

            /** SimulationWorld mapHash. */
            public mapHash: (number|Long);

            /** SimulationWorld mapRadius. */
            public mapRadius: number;

            /** SimulationWorld planningData. */
            public planningData?: (apollo.planning_internal.IPlanningData|null);

            /** SimulationWorld gps. */
            public gps?: (apollo.dreamview.IObject|null);

            /** SimulationWorld laneMarker. */
            public laneMarker?: (apollo.perception.ILaneMarkers|null);

            /** SimulationWorld controlData. */
            public controlData?: (apollo.dreamview.IControlData|null);

            /** SimulationWorld navigationPath. */
            public navigationPath: apollo.common.IPath[];

            /** SimulationWorld isRssSafe. */
            public isRssSafe: boolean;

            /** SimulationWorld shadowLocalization. */
            public shadowLocalization?: (apollo.dreamview.IObject|null);

            /** SimulationWorld perceivedSignal. */
            public perceivedSignal: apollo.dreamview.IObject[];

            /** SimulationWorld stories. */
            public stories: { [k: string]: boolean };

            /** SimulationWorld sensorMeasurements. */
            public sensorMeasurements: { [k: string]: apollo.dreamview.ISensorMeasurements };

            /** SimulationWorld isSirenOn. */
            public isSirenOn: boolean;

            /** SimulationWorld vehicleParam. */
            public vehicleParam?: (apollo.common.IVehicleParam|null);

            /**
             * Creates a new SimulationWorld instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SimulationWorld instance
             */
            public static create(properties?: apollo.dreamview.ISimulationWorld): apollo.dreamview.SimulationWorld;

            /**
             * Encodes the specified SimulationWorld message. Does not implicitly {@link apollo.dreamview.SimulationWorld.verify|verify} messages.
             * @param message SimulationWorld message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.ISimulationWorld, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SimulationWorld message, length delimited. Does not implicitly {@link apollo.dreamview.SimulationWorld.verify|verify} messages.
             * @param message SimulationWorld message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.ISimulationWorld, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimulationWorld message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SimulationWorld
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.SimulationWorld;

            /**
             * Decodes a SimulationWorld message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SimulationWorld
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.SimulationWorld;

            /**
             * Verifies a SimulationWorld message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SimulationWorld message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SimulationWorld
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.SimulationWorld;

            /**
             * Creates a plain object from a SimulationWorld message. Also converts values to other types if specified.
             * @param message SimulationWorld
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.SimulationWorld, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SimulationWorld to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SimulationWorld
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PointCloud. */
        interface IPointCloud {

            /** PointCloud num */
            num?: (number[]|null);
        }

        /** Represents a PointCloud. */
        class PointCloud implements IPointCloud {

            /**
             * Constructs a new PointCloud.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.dreamview.IPointCloud);

            /** PointCloud num. */
            public num: number[];

            /**
             * Creates a new PointCloud instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PointCloud instance
             */
            public static create(properties?: apollo.dreamview.IPointCloud): apollo.dreamview.PointCloud;

            /**
             * Encodes the specified PointCloud message. Does not implicitly {@link apollo.dreamview.PointCloud.verify|verify} messages.
             * @param message PointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.dreamview.IPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PointCloud message, length delimited. Does not implicitly {@link apollo.dreamview.PointCloud.verify|verify} messages.
             * @param message PointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.dreamview.IPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PointCloud message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.dreamview.PointCloud;

            /**
             * Decodes a PointCloud message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.dreamview.PointCloud;

            /**
             * Verifies a PointCloud message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PointCloud message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PointCloud
             */
            public static fromObject(object: { [k: string]: any }): apollo.dreamview.PointCloud;

            /**
             * Creates a plain object from a PointCloud message. Also converts values to other types if specified.
             * @param message PointCloud
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.dreamview.PointCloud, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PointCloud to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PointCloud
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace relative_map. */
    namespace relative_map {

        /** Properties of a SampleParam. */
        interface ISampleParam {

            /** SampleParam straightSampleInterval */
            straightSampleInterval?: (number|null);

            /** SampleParam smallKappaSampleInterval */
            smallKappaSampleInterval?: (number|null);

            /** SampleParam middleKappaSampleInterval */
            middleKappaSampleInterval?: (number|null);

            /** SampleParam largeKappaSampleInterval */
            largeKappaSampleInterval?: (number|null);

            /** SampleParam smallKappa */
            smallKappa?: (number|null);

            /** SampleParam middleKappa */
            middleKappa?: (number|null);

            /** SampleParam largeKappa */
            largeKappa?: (number|null);
        }

        /** Represents a SampleParam. */
        class SampleParam implements ISampleParam {

            /**
             * Constructs a new SampleParam.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.ISampleParam);

            /** SampleParam straightSampleInterval. */
            public straightSampleInterval: number;

            /** SampleParam smallKappaSampleInterval. */
            public smallKappaSampleInterval: number;

            /** SampleParam middleKappaSampleInterval. */
            public middleKappaSampleInterval: number;

            /** SampleParam largeKappaSampleInterval. */
            public largeKappaSampleInterval: number;

            /** SampleParam smallKappa. */
            public smallKappa: number;

            /** SampleParam middleKappa. */
            public middleKappa: number;

            /** SampleParam largeKappa. */
            public largeKappa: number;

            /**
             * Creates a new SampleParam instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SampleParam instance
             */
            public static create(properties?: apollo.relative_map.ISampleParam): apollo.relative_map.SampleParam;

            /**
             * Encodes the specified SampleParam message. Does not implicitly {@link apollo.relative_map.SampleParam.verify|verify} messages.
             * @param message SampleParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.ISampleParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SampleParam message, length delimited. Does not implicitly {@link apollo.relative_map.SampleParam.verify|verify} messages.
             * @param message SampleParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.ISampleParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SampleParam message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SampleParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.SampleParam;

            /**
             * Decodes a SampleParam message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SampleParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.SampleParam;

            /**
             * Verifies a SampleParam message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SampleParam message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SampleParam
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.SampleParam;

            /**
             * Creates a plain object from a SampleParam message. Also converts values to other types if specified.
             * @param message SampleParam
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.SampleParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SampleParam to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SampleParam
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a NavigatorConfig. */
        interface INavigatorConfig {

            /** NavigatorConfig enableNavigatorDownsample */
            enableNavigatorDownsample?: (boolean|null);

            /** NavigatorConfig sampleParam */
            sampleParam?: (apollo.relative_map.ISampleParam|null);
        }

        /** Represents a NavigatorConfig. */
        class NavigatorConfig implements INavigatorConfig {

            /**
             * Constructs a new NavigatorConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.INavigatorConfig);

            /** NavigatorConfig enableNavigatorDownsample. */
            public enableNavigatorDownsample: boolean;

            /** NavigatorConfig sampleParam. */
            public sampleParam?: (apollo.relative_map.ISampleParam|null);

            /**
             * Creates a new NavigatorConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NavigatorConfig instance
             */
            public static create(properties?: apollo.relative_map.INavigatorConfig): apollo.relative_map.NavigatorConfig;

            /**
             * Encodes the specified NavigatorConfig message. Does not implicitly {@link apollo.relative_map.NavigatorConfig.verify|verify} messages.
             * @param message NavigatorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.INavigatorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NavigatorConfig message, length delimited. Does not implicitly {@link apollo.relative_map.NavigatorConfig.verify|verify} messages.
             * @param message NavigatorConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.INavigatorConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NavigatorConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NavigatorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.NavigatorConfig;

            /**
             * Decodes a NavigatorConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NavigatorConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.NavigatorConfig;

            /**
             * Verifies a NavigatorConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NavigatorConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NavigatorConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.NavigatorConfig;

            /**
             * Creates a plain object from a NavigatorConfig message. Also converts values to other types if specified.
             * @param message NavigatorConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.NavigatorConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NavigatorConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for NavigatorConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MapGenerationParam. */
        interface IMapGenerationParam {

            /** MapGenerationParam defaultLeftWidth */
            defaultLeftWidth?: (number|null);

            /** MapGenerationParam defaultRightWidth */
            defaultRightWidth?: (number|null);

            /** MapGenerationParam defaultSpeedLimit */
            defaultSpeedLimit?: (number|null);
        }

        /** Represents a MapGenerationParam. */
        class MapGenerationParam implements IMapGenerationParam {

            /**
             * Constructs a new MapGenerationParam.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.IMapGenerationParam);

            /** MapGenerationParam defaultLeftWidth. */
            public defaultLeftWidth: number;

            /** MapGenerationParam defaultRightWidth. */
            public defaultRightWidth: number;

            /** MapGenerationParam defaultSpeedLimit. */
            public defaultSpeedLimit: number;

            /**
             * Creates a new MapGenerationParam instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapGenerationParam instance
             */
            public static create(properties?: apollo.relative_map.IMapGenerationParam): apollo.relative_map.MapGenerationParam;

            /**
             * Encodes the specified MapGenerationParam message. Does not implicitly {@link apollo.relative_map.MapGenerationParam.verify|verify} messages.
             * @param message MapGenerationParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.IMapGenerationParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MapGenerationParam message, length delimited. Does not implicitly {@link apollo.relative_map.MapGenerationParam.verify|verify} messages.
             * @param message MapGenerationParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.IMapGenerationParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MapGenerationParam message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapGenerationParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.MapGenerationParam;

            /**
             * Decodes a MapGenerationParam message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapGenerationParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.MapGenerationParam;

            /**
             * Verifies a MapGenerationParam message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapGenerationParam message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapGenerationParam
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.MapGenerationParam;

            /**
             * Creates a plain object from a MapGenerationParam message. Also converts values to other types if specified.
             * @param message MapGenerationParam
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.MapGenerationParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapGenerationParam to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MapGenerationParam
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a NavigationLaneConfig. */
        interface INavigationLaneConfig {

            /** NavigationLaneConfig minLaneMarkerQuality */
            minLaneMarkerQuality?: (number|null);

            /** NavigationLaneConfig laneSource */
            laneSource?: (apollo.relative_map.NavigationLaneConfig.LaneSource|null);

            /** NavigationLaneConfig maxLenFromNavigationLine */
            maxLenFromNavigationLine?: (number|null);

            /** NavigationLaneConfig minLenForNavigationLane */
            minLenForNavigationLane?: (number|null);

            /** NavigationLaneConfig maxLenForNavigationLane */
            maxLenForNavigationLane?: (number|null);

            /** NavigationLaneConfig ratioNavigationLaneLenToSpeed */
            ratioNavigationLaneLenToSpeed?: (number|null);

            /** NavigationLaneConfig maxDistanceToNavigationLine */
            maxDistanceToNavigationLine?: (number|null);

            /** NavigationLaneConfig minViewRangeToUseLaneMarker */
            minViewRangeToUseLaneMarker?: (number|null);

            /** NavigationLaneConfig minLaneHalfWidth */
            minLaneHalfWidth?: (number|null);

            /** NavigationLaneConfig maxLaneHalfWidth */
            maxLaneHalfWidth?: (number|null);

            /** NavigationLaneConfig laneMarkerWeight */
            laneMarkerWeight?: (number|null);
        }

        /** Represents a NavigationLaneConfig. */
        class NavigationLaneConfig implements INavigationLaneConfig {

            /**
             * Constructs a new NavigationLaneConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.INavigationLaneConfig);

            /** NavigationLaneConfig minLaneMarkerQuality. */
            public minLaneMarkerQuality: number;

            /** NavigationLaneConfig laneSource. */
            public laneSource: apollo.relative_map.NavigationLaneConfig.LaneSource;

            /** NavigationLaneConfig maxLenFromNavigationLine. */
            public maxLenFromNavigationLine: number;

            /** NavigationLaneConfig minLenForNavigationLane. */
            public minLenForNavigationLane: number;

            /** NavigationLaneConfig maxLenForNavigationLane. */
            public maxLenForNavigationLane: number;

            /** NavigationLaneConfig ratioNavigationLaneLenToSpeed. */
            public ratioNavigationLaneLenToSpeed: number;

            /** NavigationLaneConfig maxDistanceToNavigationLine. */
            public maxDistanceToNavigationLine: number;

            /** NavigationLaneConfig minViewRangeToUseLaneMarker. */
            public minViewRangeToUseLaneMarker: number;

            /** NavigationLaneConfig minLaneHalfWidth. */
            public minLaneHalfWidth: number;

            /** NavigationLaneConfig maxLaneHalfWidth. */
            public maxLaneHalfWidth: number;

            /** NavigationLaneConfig laneMarkerWeight. */
            public laneMarkerWeight: number;

            /**
             * Creates a new NavigationLaneConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NavigationLaneConfig instance
             */
            public static create(properties?: apollo.relative_map.INavigationLaneConfig): apollo.relative_map.NavigationLaneConfig;

            /**
             * Encodes the specified NavigationLaneConfig message. Does not implicitly {@link apollo.relative_map.NavigationLaneConfig.verify|verify} messages.
             * @param message NavigationLaneConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.INavigationLaneConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NavigationLaneConfig message, length delimited. Does not implicitly {@link apollo.relative_map.NavigationLaneConfig.verify|verify} messages.
             * @param message NavigationLaneConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.INavigationLaneConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NavigationLaneConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NavigationLaneConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.NavigationLaneConfig;

            /**
             * Decodes a NavigationLaneConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NavigationLaneConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.NavigationLaneConfig;

            /**
             * Verifies a NavigationLaneConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NavigationLaneConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NavigationLaneConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.NavigationLaneConfig;

            /**
             * Creates a plain object from a NavigationLaneConfig message. Also converts values to other types if specified.
             * @param message NavigationLaneConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.NavigationLaneConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NavigationLaneConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for NavigationLaneConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace NavigationLaneConfig {

            /** LaneSource enum. */
            enum LaneSource {
                PERCEPTION = 1,
                OFFLINE_GENERATED = 2
            }
        }

        /** Properties of a RelativeMapConfig. */
        interface IRelativeMapConfig {

            /** RelativeMapConfig mapParam */
            mapParam?: (apollo.relative_map.IMapGenerationParam|null);

            /** RelativeMapConfig navigationLane */
            navigationLane?: (apollo.relative_map.INavigationLaneConfig|null);
        }

        /** Represents a RelativeMapConfig. */
        class RelativeMapConfig implements IRelativeMapConfig {

            /**
             * Constructs a new RelativeMapConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.IRelativeMapConfig);

            /** RelativeMapConfig mapParam. */
            public mapParam?: (apollo.relative_map.IMapGenerationParam|null);

            /** RelativeMapConfig navigationLane. */
            public navigationLane?: (apollo.relative_map.INavigationLaneConfig|null);

            /**
             * Creates a new RelativeMapConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RelativeMapConfig instance
             */
            public static create(properties?: apollo.relative_map.IRelativeMapConfig): apollo.relative_map.RelativeMapConfig;

            /**
             * Encodes the specified RelativeMapConfig message. Does not implicitly {@link apollo.relative_map.RelativeMapConfig.verify|verify} messages.
             * @param message RelativeMapConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.IRelativeMapConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RelativeMapConfig message, length delimited. Does not implicitly {@link apollo.relative_map.RelativeMapConfig.verify|verify} messages.
             * @param message RelativeMapConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.IRelativeMapConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RelativeMapConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RelativeMapConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.RelativeMapConfig;

            /**
             * Decodes a RelativeMapConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RelativeMapConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.RelativeMapConfig;

            /**
             * Verifies a RelativeMapConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RelativeMapConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RelativeMapConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.RelativeMapConfig;

            /**
             * Creates a plain object from a RelativeMapConfig message. Also converts values to other types if specified.
             * @param message RelativeMapConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.RelativeMapConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RelativeMapConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RelativeMapConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a NavigationPath. */
        interface INavigationPath {

            /** NavigationPath path */
            path?: (apollo.common.IPath|null);

            /** NavigationPath pathPriority */
            pathPriority?: (number|null);
        }

        /** Represents a NavigationPath. */
        class NavigationPath implements INavigationPath {

            /**
             * Constructs a new NavigationPath.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.INavigationPath);

            /** NavigationPath path. */
            public path?: (apollo.common.IPath|null);

            /** NavigationPath pathPriority. */
            public pathPriority: number;

            /**
             * Creates a new NavigationPath instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NavigationPath instance
             */
            public static create(properties?: apollo.relative_map.INavigationPath): apollo.relative_map.NavigationPath;

            /**
             * Encodes the specified NavigationPath message. Does not implicitly {@link apollo.relative_map.NavigationPath.verify|verify} messages.
             * @param message NavigationPath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.INavigationPath, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NavigationPath message, length delimited. Does not implicitly {@link apollo.relative_map.NavigationPath.verify|verify} messages.
             * @param message NavigationPath message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.INavigationPath, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NavigationPath message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NavigationPath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.NavigationPath;

            /**
             * Decodes a NavigationPath message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NavigationPath
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.NavigationPath;

            /**
             * Verifies a NavigationPath message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NavigationPath message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NavigationPath
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.NavigationPath;

            /**
             * Creates a plain object from a NavigationPath message. Also converts values to other types if specified.
             * @param message NavigationPath
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.NavigationPath, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NavigationPath to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for NavigationPath
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a NavigationInfo. */
        interface INavigationInfo {

            /** NavigationInfo header */
            header?: (apollo.common.IHeader|null);

            /** NavigationInfo navigationPath */
            navigationPath?: (apollo.relative_map.INavigationPath[]|null);
        }

        /** Represents a NavigationInfo. */
        class NavigationInfo implements INavigationInfo {

            /**
             * Constructs a new NavigationInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.INavigationInfo);

            /** NavigationInfo header. */
            public header?: (apollo.common.IHeader|null);

            /** NavigationInfo navigationPath. */
            public navigationPath: apollo.relative_map.INavigationPath[];

            /**
             * Creates a new NavigationInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NavigationInfo instance
             */
            public static create(properties?: apollo.relative_map.INavigationInfo): apollo.relative_map.NavigationInfo;

            /**
             * Encodes the specified NavigationInfo message. Does not implicitly {@link apollo.relative_map.NavigationInfo.verify|verify} messages.
             * @param message NavigationInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.INavigationInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NavigationInfo message, length delimited. Does not implicitly {@link apollo.relative_map.NavigationInfo.verify|verify} messages.
             * @param message NavigationInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.INavigationInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NavigationInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NavigationInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.NavigationInfo;

            /**
             * Decodes a NavigationInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NavigationInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.NavigationInfo;

            /**
             * Verifies a NavigationInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NavigationInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NavigationInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.NavigationInfo;

            /**
             * Creates a plain object from a NavigationInfo message. Also converts values to other types if specified.
             * @param message NavigationInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.NavigationInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NavigationInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for NavigationInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MapMsg. */
        interface IMapMsg {

            /** MapMsg header */
            header?: (apollo.common.IHeader|null);

            /** MapMsg hdmap */
            hdmap?: (apollo.hdmap.IMap|null);

            /** MapMsg navigationPath */
            navigationPath?: ({ [k: string]: apollo.relative_map.INavigationPath }|null);

            /** MapMsg laneMarker */
            laneMarker?: (apollo.perception.ILaneMarkers|null);

            /** MapMsg localization */
            localization?: (apollo.localization.ILocalizationEstimate|null);
        }

        /** Represents a MapMsg. */
        class MapMsg implements IMapMsg {

            /**
             * Constructs a new MapMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.relative_map.IMapMsg);

            /** MapMsg header. */
            public header?: (apollo.common.IHeader|null);

            /** MapMsg hdmap. */
            public hdmap?: (apollo.hdmap.IMap|null);

            /** MapMsg navigationPath. */
            public navigationPath: { [k: string]: apollo.relative_map.INavigationPath };

            /** MapMsg laneMarker. */
            public laneMarker?: (apollo.perception.ILaneMarkers|null);

            /** MapMsg localization. */
            public localization?: (apollo.localization.ILocalizationEstimate|null);

            /**
             * Creates a new MapMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapMsg instance
             */
            public static create(properties?: apollo.relative_map.IMapMsg): apollo.relative_map.MapMsg;

            /**
             * Encodes the specified MapMsg message. Does not implicitly {@link apollo.relative_map.MapMsg.verify|verify} messages.
             * @param message MapMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.relative_map.IMapMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MapMsg message, length delimited. Does not implicitly {@link apollo.relative_map.MapMsg.verify|verify} messages.
             * @param message MapMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.relative_map.IMapMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MapMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.relative_map.MapMsg;

            /**
             * Decodes a MapMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.relative_map.MapMsg;

            /**
             * Verifies a MapMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapMsg
             */
            public static fromObject(object: { [k: string]: any }): apollo.relative_map.MapMsg;

            /**
             * Creates a plain object from a MapMsg message. Also converts values to other types if specified.
             * @param message MapMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.relative_map.MapMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MapMsg
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace audio. */
    namespace audio {

        /** Properties of an AudioDetection. */
        interface IAudioDetection {

            /** AudioDetection header */
            header?: (apollo.common.IHeader|null);

            /** AudioDetection isSiren */
            isSiren?: (boolean|null);

            /** AudioDetection movingResult */
            movingResult?: (apollo.audio.MovingResult|null);

            /** AudioDetection position */
            position?: (apollo.common.IPoint3D|null);

            /** AudioDetection sourceDegree */
            sourceDegree?: (number|null);
        }

        /** Represents an AudioDetection. */
        class AudioDetection implements IAudioDetection {

            /**
             * Constructs a new AudioDetection.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.audio.IAudioDetection);

            /** AudioDetection header. */
            public header?: (apollo.common.IHeader|null);

            /** AudioDetection isSiren. */
            public isSiren: boolean;

            /** AudioDetection movingResult. */
            public movingResult: apollo.audio.MovingResult;

            /** AudioDetection position. */
            public position?: (apollo.common.IPoint3D|null);

            /** AudioDetection sourceDegree. */
            public sourceDegree: number;

            /**
             * Creates a new AudioDetection instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AudioDetection instance
             */
            public static create(properties?: apollo.audio.IAudioDetection): apollo.audio.AudioDetection;

            /**
             * Encodes the specified AudioDetection message. Does not implicitly {@link apollo.audio.AudioDetection.verify|verify} messages.
             * @param message AudioDetection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.audio.IAudioDetection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AudioDetection message, length delimited. Does not implicitly {@link apollo.audio.AudioDetection.verify|verify} messages.
             * @param message AudioDetection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.audio.IAudioDetection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AudioDetection message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AudioDetection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.audio.AudioDetection;

            /**
             * Decodes an AudioDetection message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AudioDetection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.audio.AudioDetection;

            /**
             * Verifies an AudioDetection message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AudioDetection message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AudioDetection
             */
            public static fromObject(object: { [k: string]: any }): apollo.audio.AudioDetection;

            /**
             * Creates a plain object from an AudioDetection message. Also converts values to other types if specified.
             * @param message AudioDetection
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.audio.AudioDetection, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AudioDetection to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AudioDetection
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** MovingResult enum. */
        enum MovingResult {
            UNKNOWN = 0,
            APPROACHING = 1,
            DEPARTING = 2,
            STATIONARY = 3
        }

        /** AudioType enum. */
        enum AudioType {
            UNKNOWN_TYPE = 0,
            POLICE = 1,
            AMBULANCE = 2,
            FIRETRUCK = 3
        }

        /** AudioDirection enum. */
        enum AudioDirection {
            UNKNOWN_DIRECTION = 0,
            FRONT = 1,
            LEFT = 2,
            BACK = 3,
            RIGHT = 4
        }

        /** Properties of an AudioEvent. */
        interface IAudioEvent {

            /** AudioEvent header */
            header?: (apollo.common.IHeader|null);

            /** AudioEvent id */
            id?: (number|null);

            /** AudioEvent movingResult */
            movingResult?: (apollo.audio.MovingResult|null);

            /** AudioEvent audioType */
            audioType?: (apollo.audio.AudioType|null);

            /** AudioEvent sirenIsOn */
            sirenIsOn?: (boolean|null);

            /** AudioEvent audioDirection */
            audioDirection?: (apollo.audio.AudioDirection|null);

            /** AudioEvent pose */
            pose?: (apollo.localization.IPose|null);
        }

        /** Represents an AudioEvent. */
        class AudioEvent implements IAudioEvent {

            /**
             * Constructs a new AudioEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.audio.IAudioEvent);

            /** AudioEvent header. */
            public header?: (apollo.common.IHeader|null);

            /** AudioEvent id. */
            public id: number;

            /** AudioEvent movingResult. */
            public movingResult: apollo.audio.MovingResult;

            /** AudioEvent audioType. */
            public audioType: apollo.audio.AudioType;

            /** AudioEvent sirenIsOn. */
            public sirenIsOn: boolean;

            /** AudioEvent audioDirection. */
            public audioDirection: apollo.audio.AudioDirection;

            /** AudioEvent pose. */
            public pose?: (apollo.localization.IPose|null);

            /**
             * Creates a new AudioEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AudioEvent instance
             */
            public static create(properties?: apollo.audio.IAudioEvent): apollo.audio.AudioEvent;

            /**
             * Encodes the specified AudioEvent message. Does not implicitly {@link apollo.audio.AudioEvent.verify|verify} messages.
             * @param message AudioEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.audio.IAudioEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AudioEvent message, length delimited. Does not implicitly {@link apollo.audio.AudioEvent.verify|verify} messages.
             * @param message AudioEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.audio.IAudioEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AudioEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AudioEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.audio.AudioEvent;

            /**
             * Decodes an AudioEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AudioEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.audio.AudioEvent;

            /**
             * Verifies an AudioEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AudioEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AudioEvent
             */
            public static fromObject(object: { [k: string]: any }): apollo.audio.AudioEvent;

            /**
             * Creates a plain object from an AudioEvent message. Also converts values to other types if specified.
             * @param message AudioEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.audio.AudioEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AudioEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AudioEvent
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace common. */
    namespace common {

        /** Direction enum. */
        enum Direction {
            EAST = 0,
            WEST = 1,
            SOUTH = 2,
            NORTH = 3,
            NORTHEAST = 4,
            SOUTHEAST = 5,
            SOUTHWEST = 6,
            NORTHWEST = 7
        }

        /** Properties of a DriveEvent. */
        interface IDriveEvent {

            /** DriveEvent header */
            header?: (apollo.common.IHeader|null);

            /** DriveEvent event */
            event?: (string|null);

            /** DriveEvent location */
            location?: (apollo.localization.IPose|null);

            /** DriveEvent type */
            type?: (apollo.common.DriveEvent.Type[]|null);

            /** DriveEvent isReportable */
            isReportable?: (boolean|null);
        }

        /** Represents a DriveEvent. */
        class DriveEvent implements IDriveEvent {

            /**
             * Constructs a new DriveEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IDriveEvent);

            /** DriveEvent header. */
            public header?: (apollo.common.IHeader|null);

            /** DriveEvent event. */
            public event: string;

            /** DriveEvent location. */
            public location?: (apollo.localization.IPose|null);

            /** DriveEvent type. */
            public type: apollo.common.DriveEvent.Type[];

            /** DriveEvent isReportable. */
            public isReportable: boolean;

            /**
             * Creates a new DriveEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DriveEvent instance
             */
            public static create(properties?: apollo.common.IDriveEvent): apollo.common.DriveEvent;

            /**
             * Encodes the specified DriveEvent message. Does not implicitly {@link apollo.common.DriveEvent.verify|verify} messages.
             * @param message DriveEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IDriveEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DriveEvent message, length delimited. Does not implicitly {@link apollo.common.DriveEvent.verify|verify} messages.
             * @param message DriveEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IDriveEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DriveEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DriveEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.DriveEvent;

            /**
             * Decodes a DriveEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DriveEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.DriveEvent;

            /**
             * Verifies a DriveEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DriveEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DriveEvent
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.DriveEvent;

            /**
             * Creates a plain object from a DriveEvent message. Also converts values to other types if specified.
             * @param message DriveEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.DriveEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DriveEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DriveEvent
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace DriveEvent {

            /** Type enum. */
            enum Type {
                CRITICAL = 0,
                PROBLEM = 1,
                DESIRED = 2,
                OUT_OF_SCOPE = 3
            }
        }

        /** Properties of an EngageAdvice. */
        interface IEngageAdvice {

            /** EngageAdvice advice */
            advice?: (apollo.common.EngageAdvice.Advice|null);

            /** EngageAdvice reason */
            reason?: (string|null);
        }

        /** Represents an EngageAdvice. */
        class EngageAdvice implements IEngageAdvice {

            /**
             * Constructs a new EngageAdvice.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IEngageAdvice);

            /** EngageAdvice advice. */
            public advice: apollo.common.EngageAdvice.Advice;

            /** EngageAdvice reason. */
            public reason: string;

            /**
             * Creates a new EngageAdvice instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EngageAdvice instance
             */
            public static create(properties?: apollo.common.IEngageAdvice): apollo.common.EngageAdvice;

            /**
             * Encodes the specified EngageAdvice message. Does not implicitly {@link apollo.common.EngageAdvice.verify|verify} messages.
             * @param message EngageAdvice message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IEngageAdvice, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EngageAdvice message, length delimited. Does not implicitly {@link apollo.common.EngageAdvice.verify|verify} messages.
             * @param message EngageAdvice message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IEngageAdvice, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EngageAdvice message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EngageAdvice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.EngageAdvice;

            /**
             * Decodes an EngageAdvice message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EngageAdvice
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.EngageAdvice;

            /**
             * Verifies an EngageAdvice message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EngageAdvice message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EngageAdvice
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.EngageAdvice;

            /**
             * Creates a plain object from an EngageAdvice message. Also converts values to other types if specified.
             * @param message EngageAdvice
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.EngageAdvice, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EngageAdvice to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for EngageAdvice
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace EngageAdvice {

            /** Advice enum. */
            enum Advice {
                UNKNOWN = 0,
                DISALLOW_ENGAGE = 1,
                READY_TO_ENGAGE = 2,
                KEEP_ENGAGED = 3,
                PREPARE_DISENGAGE = 4
            }
        }

        /** ErrorCode enum. */
        enum ErrorCode {
            OK = 0,
            CONTROL_ERROR = 1000,
            CONTROL_INIT_ERROR = 1001,
            CONTROL_COMPUTE_ERROR = 1002,
            CONTROL_ESTOP_ERROR = 1003,
            PERFECT_CONTROL_ERROR = 1004,
            CANBUS_ERROR = 2000,
            CAN_CLIENT_ERROR_BASE = 2100,
            CAN_CLIENT_ERROR_OPEN_DEVICE_FAILED = 2101,
            CAN_CLIENT_ERROR_FRAME_NUM = 2102,
            CAN_CLIENT_ERROR_SEND_FAILED = 2103,
            CAN_CLIENT_ERROR_RECV_FAILED = 2104,
            LOCALIZATION_ERROR = 3000,
            LOCALIZATION_ERROR_MSG = 3100,
            LOCALIZATION_ERROR_LIDAR = 3200,
            LOCALIZATION_ERROR_INTEG = 3300,
            LOCALIZATION_ERROR_GNSS = 3400,
            PERCEPTION_ERROR = 4000,
            PERCEPTION_ERROR_TF = 4001,
            PERCEPTION_ERROR_PROCESS = 4002,
            PERCEPTION_FATAL = 4003,
            PERCEPTION_ERROR_NONE = 4004,
            PERCEPTION_ERROR_UNKNOWN = 4005,
            PREDICTION_ERROR = 5000,
            PLANNING_ERROR = 6000,
            PLANNING_ERROR_NOT_READY = 6001,
            HDMAP_DATA_ERROR = 7000,
            ROUTING_ERROR = 8000,
            ROUTING_ERROR_REQUEST = 8001,
            ROUTING_ERROR_RESPONSE = 8002,
            ROUTING_ERROR_NOT_READY = 8003,
            END_OF_INPUT = 9000,
            HTTP_LOGIC_ERROR = 10000,
            HTTP_RUNTIME_ERROR = 10001,
            RELATIVE_MAP_ERROR = 11000,
            RELATIVE_MAP_NOT_READY = 11001,
            DRIVER_ERROR_GNSS = 12000,
            DRIVER_ERROR_VELODYNE = 13000,
            STORYTELLING_ERROR = 14000
        }

        /** Properties of a StatusPb. */
        interface IStatusPb {

            /** StatusPb errorCode */
            errorCode?: (apollo.common.ErrorCode|null);

            /** StatusPb msg */
            msg?: (string|null);
        }

        /** Represents a StatusPb. */
        class StatusPb implements IStatusPb {

            /**
             * Constructs a new StatusPb.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IStatusPb);

            /** StatusPb errorCode. */
            public errorCode: apollo.common.ErrorCode;

            /** StatusPb msg. */
            public msg: string;

            /**
             * Creates a new StatusPb instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StatusPb instance
             */
            public static create(properties?: apollo.common.IStatusPb): apollo.common.StatusPb;

            /**
             * Encodes the specified StatusPb message. Does not implicitly {@link apollo.common.StatusPb.verify|verify} messages.
             * @param message StatusPb message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IStatusPb, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StatusPb message, length delimited. Does not implicitly {@link apollo.common.StatusPb.verify|verify} messages.
             * @param message StatusPb message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IStatusPb, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StatusPb message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StatusPb
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.StatusPb;

            /**
             * Decodes a StatusPb message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StatusPb
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.StatusPb;

            /**
             * Verifies a StatusPb message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StatusPb message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StatusPb
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.StatusPb;

            /**
             * Creates a plain object from a StatusPb message. Also converts values to other types if specified.
             * @param message StatusPb
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.StatusPb, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StatusPb to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for StatusPb
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PointENU. */
        interface IPointENU {

            /** PointENU x */
            x?: (number|null);

            /** PointENU y */
            y?: (number|null);

            /** PointENU z */
            z?: (number|null);
        }

        /** Represents a PointENU. */
        class PointENU implements IPointENU {

            /**
             * Constructs a new PointENU.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IPointENU);

            /** PointENU x. */
            public x: number;

            /** PointENU y. */
            public y: number;

            /** PointENU z. */
            public z: number;

            /**
             * Creates a new PointENU instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PointENU instance
             */
            public static create(properties?: apollo.common.IPointENU): apollo.common.PointENU;

            /**
             * Encodes the specified PointENU message. Does not implicitly {@link apollo.common.PointENU.verify|verify} messages.
             * @param message PointENU message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IPointENU, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PointENU message, length delimited. Does not implicitly {@link apollo.common.PointENU.verify|verify} messages.
             * @param message PointENU message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IPointENU, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PointENU message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PointENU
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.PointENU;

            /**
             * Decodes a PointENU message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PointENU
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.PointENU;

            /**
             * Verifies a PointENU message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PointENU message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PointENU
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.PointENU;

            /**
             * Creates a plain object from a PointENU message. Also converts values to other types if specified.
             * @param message PointENU
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.PointENU, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PointENU to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PointENU
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PointLLH. */
        interface IPointLLH {

            /** PointLLH lon */
            lon?: (number|null);

            /** PointLLH lat */
            lat?: (number|null);

            /** PointLLH height */
            height?: (number|null);
        }

        /** Represents a PointLLH. */
        class PointLLH implements IPointLLH {

            /**
             * Constructs a new PointLLH.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IPointLLH);

            /** PointLLH lon. */
            public lon: number;

            /** PointLLH lat. */
            public lat: number;

            /** PointLLH height. */
            public height: number;

            /**
             * Creates a new PointLLH instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PointLLH instance
             */
            public static create(properties?: apollo.common.IPointLLH): apollo.common.PointLLH;

            /**
             * Encodes the specified PointLLH message. Does not implicitly {@link apollo.common.PointLLH.verify|verify} messages.
             * @param message PointLLH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IPointLLH, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PointLLH message, length delimited. Does not implicitly {@link apollo.common.PointLLH.verify|verify} messages.
             * @param message PointLLH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IPointLLH, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PointLLH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PointLLH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.PointLLH;

            /**
             * Decodes a PointLLH message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PointLLH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.PointLLH;

            /**
             * Verifies a PointLLH message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PointLLH message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PointLLH
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.PointLLH;

            /**
             * Creates a plain object from a PointLLH message. Also converts values to other types if specified.
             * @param message PointLLH
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.PointLLH, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PointLLH to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PointLLH
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Point2D. */
        interface IPoint2D {

            /** Point2D x */
            x?: (number|null);

            /** Point2D y */
            y?: (number|null);
        }

        /** Represents a Point2D. */
        class Point2D implements IPoint2D {

            /**
             * Constructs a new Point2D.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IPoint2D);

            /** Point2D x. */
            public x: number;

            /** Point2D y. */
            public y: number;

            /**
             * Creates a new Point2D instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Point2D instance
             */
            public static create(properties?: apollo.common.IPoint2D): apollo.common.Point2D;

            /**
             * Encodes the specified Point2D message. Does not implicitly {@link apollo.common.Point2D.verify|verify} messages.
             * @param message Point2D message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IPoint2D, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Point2D message, length delimited. Does not implicitly {@link apollo.common.Point2D.verify|verify} messages.
             * @param message Point2D message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IPoint2D, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Point2D message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Point2D
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Point2D;

            /**
             * Decodes a Point2D message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Point2D
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Point2D;

            /**
             * Verifies a Point2D message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Point2D message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Point2D
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Point2D;

            /**
             * Creates a plain object from a Point2D message. Also converts values to other types if specified.
             * @param message Point2D
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Point2D, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Point2D to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Point2D
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Point3D. */
        interface IPoint3D {

            /** Point3D x */
            x?: (number|null);

            /** Point3D y */
            y?: (number|null);

            /** Point3D z */
            z?: (number|null);
        }

        /** Represents a Point3D. */
        class Point3D implements IPoint3D {

            /**
             * Constructs a new Point3D.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IPoint3D);

            /** Point3D x. */
            public x: number;

            /** Point3D y. */
            public y: number;

            /** Point3D z. */
            public z: number;

            /**
             * Creates a new Point3D instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Point3D instance
             */
            public static create(properties?: apollo.common.IPoint3D): apollo.common.Point3D;

            /**
             * Encodes the specified Point3D message. Does not implicitly {@link apollo.common.Point3D.verify|verify} messages.
             * @param message Point3D message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IPoint3D, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Point3D message, length delimited. Does not implicitly {@link apollo.common.Point3D.verify|verify} messages.
             * @param message Point3D message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IPoint3D, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Point3D message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Point3D
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Point3D;

            /**
             * Decodes a Point3D message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Point3D
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Point3D;

            /**
             * Verifies a Point3D message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Point3D message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Point3D
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Point3D;

            /**
             * Creates a plain object from a Point3D message. Also converts values to other types if specified.
             * @param message Point3D
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Point3D, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Point3D to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Point3D
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Quaternion. */
        interface IQuaternion {

            /** Quaternion qx */
            qx?: (number|null);

            /** Quaternion qy */
            qy?: (number|null);

            /** Quaternion qz */
            qz?: (number|null);

            /** Quaternion qw */
            qw?: (number|null);
        }

        /** Represents a Quaternion. */
        class Quaternion implements IQuaternion {

            /**
             * Constructs a new Quaternion.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IQuaternion);

            /** Quaternion qx. */
            public qx: number;

            /** Quaternion qy. */
            public qy: number;

            /** Quaternion qz. */
            public qz: number;

            /** Quaternion qw. */
            public qw: number;

            /**
             * Creates a new Quaternion instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Quaternion instance
             */
            public static create(properties?: apollo.common.IQuaternion): apollo.common.Quaternion;

            /**
             * Encodes the specified Quaternion message. Does not implicitly {@link apollo.common.Quaternion.verify|verify} messages.
             * @param message Quaternion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IQuaternion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Quaternion message, length delimited. Does not implicitly {@link apollo.common.Quaternion.verify|verify} messages.
             * @param message Quaternion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IQuaternion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Quaternion message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Quaternion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Quaternion;

            /**
             * Decodes a Quaternion message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Quaternion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Quaternion;

            /**
             * Verifies a Quaternion message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Quaternion message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Quaternion
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Quaternion;

            /**
             * Creates a plain object from a Quaternion message. Also converts values to other types if specified.
             * @param message Quaternion
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Quaternion, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Quaternion to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Quaternion
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Polygon. */
        interface IPolygon {

            /** Polygon point */
            point?: (apollo.common.IPoint3D[]|null);
        }

        /** Represents a Polygon. */
        class Polygon implements IPolygon {

            /**
             * Constructs a new Polygon.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IPolygon);

            /** Polygon point. */
            public point: apollo.common.IPoint3D[];

            /**
             * Creates a new Polygon instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Polygon instance
             */
            public static create(properties?: apollo.common.IPolygon): apollo.common.Polygon;

            /**
             * Encodes the specified Polygon message. Does not implicitly {@link apollo.common.Polygon.verify|verify} messages.
             * @param message Polygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Polygon message, length delimited. Does not implicitly {@link apollo.common.Polygon.verify|verify} messages.
             * @param message Polygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Polygon message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Polygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Polygon;

            /**
             * Decodes a Polygon message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Polygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Polygon;

            /**
             * Verifies a Polygon message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Polygon message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Polygon
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Polygon;

            /**
             * Creates a plain object from a Polygon message. Also converts values to other types if specified.
             * @param message Polygon
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Polygon, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Polygon to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Polygon
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Header. */
        interface IHeader {

            /** Header timestampSec */
            timestampSec?: (number|null);

            /** Header moduleName */
            moduleName?: (string|null);

            /** Header sequenceNum */
            sequenceNum?: (number|null);

            /** Header lidarTimestamp */
            lidarTimestamp?: (number|Long|null);

            /** Header cameraTimestamp */
            cameraTimestamp?: (number|Long|null);

            /** Header radarTimestamp */
            radarTimestamp?: (number|Long|null);

            /** Header version */
            version?: (number|null);

            /** Header status */
            status?: (apollo.common.IStatusPb|null);

            /** Header frameId */
            frameId?: (string|null);
        }

        /** Represents a Header. */
        class Header implements IHeader {

            /**
             * Constructs a new Header.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IHeader);

            /** Header timestampSec. */
            public timestampSec: number;

            /** Header moduleName. */
            public moduleName: string;

            /** Header sequenceNum. */
            public sequenceNum: number;

            /** Header lidarTimestamp. */
            public lidarTimestamp: (number|Long);

            /** Header cameraTimestamp. */
            public cameraTimestamp: (number|Long);

            /** Header radarTimestamp. */
            public radarTimestamp: (number|Long);

            /** Header version. */
            public version: number;

            /** Header status. */
            public status?: (apollo.common.IStatusPb|null);

            /** Header frameId. */
            public frameId: string;

            /**
             * Creates a new Header instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Header instance
             */
            public static create(properties?: apollo.common.IHeader): apollo.common.Header;

            /**
             * Encodes the specified Header message. Does not implicitly {@link apollo.common.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Header message, length delimited. Does not implicitly {@link apollo.common.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Header message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Header;

            /**
             * Decodes a Header message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Header;

            /**
             * Verifies a Header message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Header message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Header
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Header;

            /**
             * Creates a plain object from a Header message. Also converts values to other types if specified.
             * @param message Header
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Header to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Header
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SLPoint. */
        interface ISLPoint {

            /** SLPoint s */
            s?: (number|null);

            /** SLPoint l */
            l?: (number|null);
        }

        /** Represents a SLPoint. */
        class SLPoint implements ISLPoint {

            /**
             * Constructs a new SLPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.ISLPoint);

            /** SLPoint s. */
            public s: number;

            /** SLPoint l. */
            public l: number;

            /**
             * Creates a new SLPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SLPoint instance
             */
            public static create(properties?: apollo.common.ISLPoint): apollo.common.SLPoint;

            /**
             * Encodes the specified SLPoint message. Does not implicitly {@link apollo.common.SLPoint.verify|verify} messages.
             * @param message SLPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.ISLPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SLPoint message, length delimited. Does not implicitly {@link apollo.common.SLPoint.verify|verify} messages.
             * @param message SLPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.ISLPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SLPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SLPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.SLPoint;

            /**
             * Decodes a SLPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SLPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.SLPoint;

            /**
             * Verifies a SLPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SLPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SLPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.SLPoint;

            /**
             * Creates a plain object from a SLPoint message. Also converts values to other types if specified.
             * @param message SLPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.SLPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SLPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SLPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a FrenetFramePoint. */
        interface IFrenetFramePoint {

            /** FrenetFramePoint s */
            s?: (number|null);

            /** FrenetFramePoint l */
            l?: (number|null);

            /** FrenetFramePoint dl */
            dl?: (number|null);

            /** FrenetFramePoint ddl */
            ddl?: (number|null);
        }

        /** Represents a FrenetFramePoint. */
        class FrenetFramePoint implements IFrenetFramePoint {

            /**
             * Constructs a new FrenetFramePoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IFrenetFramePoint);

            /** FrenetFramePoint s. */
            public s: number;

            /** FrenetFramePoint l. */
            public l: number;

            /** FrenetFramePoint dl. */
            public dl: number;

            /** FrenetFramePoint ddl. */
            public ddl: number;

            /**
             * Creates a new FrenetFramePoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FrenetFramePoint instance
             */
            public static create(properties?: apollo.common.IFrenetFramePoint): apollo.common.FrenetFramePoint;

            /**
             * Encodes the specified FrenetFramePoint message. Does not implicitly {@link apollo.common.FrenetFramePoint.verify|verify} messages.
             * @param message FrenetFramePoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IFrenetFramePoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FrenetFramePoint message, length delimited. Does not implicitly {@link apollo.common.FrenetFramePoint.verify|verify} messages.
             * @param message FrenetFramePoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IFrenetFramePoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FrenetFramePoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FrenetFramePoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.FrenetFramePoint;

            /**
             * Decodes a FrenetFramePoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FrenetFramePoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.FrenetFramePoint;

            /**
             * Verifies a FrenetFramePoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FrenetFramePoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FrenetFramePoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.FrenetFramePoint;

            /**
             * Creates a plain object from a FrenetFramePoint message. Also converts values to other types if specified.
             * @param message FrenetFramePoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.FrenetFramePoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FrenetFramePoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for FrenetFramePoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpeedPoint. */
        interface ISpeedPoint {

            /** SpeedPoint s */
            s?: (number|null);

            /** SpeedPoint t */
            t?: (number|null);

            /** SpeedPoint v */
            v?: (number|null);

            /** SpeedPoint a */
            a?: (number|null);

            /** SpeedPoint da */
            da?: (number|null);
        }

        /** Represents a SpeedPoint. */
        class SpeedPoint implements ISpeedPoint {

            /**
             * Constructs a new SpeedPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.ISpeedPoint);

            /** SpeedPoint s. */
            public s: number;

            /** SpeedPoint t. */
            public t: number;

            /** SpeedPoint v. */
            public v: number;

            /** SpeedPoint a. */
            public a: number;

            /** SpeedPoint da. */
            public da: number;

            /**
             * Creates a new SpeedPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedPoint instance
             */
            public static create(properties?: apollo.common.ISpeedPoint): apollo.common.SpeedPoint;

            /**
             * Encodes the specified SpeedPoint message. Does not implicitly {@link apollo.common.SpeedPoint.verify|verify} messages.
             * @param message SpeedPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.ISpeedPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedPoint message, length delimited. Does not implicitly {@link apollo.common.SpeedPoint.verify|verify} messages.
             * @param message SpeedPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.ISpeedPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.SpeedPoint;

            /**
             * Decodes a SpeedPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.SpeedPoint;

            /**
             * Verifies a SpeedPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.SpeedPoint;

            /**
             * Creates a plain object from a SpeedPoint message. Also converts values to other types if specified.
             * @param message SpeedPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.SpeedPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PathPoint. */
        interface IPathPoint {

            /** PathPoint x */
            x?: (number|null);

            /** PathPoint y */
            y?: (number|null);

            /** PathPoint z */
            z?: (number|null);

            /** PathPoint theta */
            theta?: (number|null);

            /** PathPoint kappa */
            kappa?: (number|null);

            /** PathPoint s */
            s?: (number|null);

            /** PathPoint dkappa */
            dkappa?: (number|null);

            /** PathPoint ddkappa */
            ddkappa?: (number|null);

            /** PathPoint laneId */
            laneId?: (string|null);

            /** PathPoint xDerivative */
            xDerivative?: (number|null);

            /** PathPoint yDerivative */
            yDerivative?: (number|null);
        }

        /** Represents a PathPoint. */
        class PathPoint implements IPathPoint {

            /**
             * Constructs a new PathPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IPathPoint);

            /** PathPoint x. */
            public x: number;

            /** PathPoint y. */
            public y: number;

            /** PathPoint z. */
            public z: number;

            /** PathPoint theta. */
            public theta: number;

            /** PathPoint kappa. */
            public kappa: number;

            /** PathPoint s. */
            public s: number;

            /** PathPoint dkappa. */
            public dkappa: number;

            /** PathPoint ddkappa. */
            public ddkappa: number;

            /** PathPoint laneId. */
            public laneId: string;

            /** PathPoint xDerivative. */
            public xDerivative: number;

            /** PathPoint yDerivative. */
            public yDerivative: number;

            /**
             * Creates a new PathPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PathPoint instance
             */
            public static create(properties?: apollo.common.IPathPoint): apollo.common.PathPoint;

            /**
             * Encodes the specified PathPoint message. Does not implicitly {@link apollo.common.PathPoint.verify|verify} messages.
             * @param message PathPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IPathPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PathPoint message, length delimited. Does not implicitly {@link apollo.common.PathPoint.verify|verify} messages.
             * @param message PathPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IPathPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PathPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PathPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.PathPoint;

            /**
             * Decodes a PathPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PathPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.PathPoint;

            /**
             * Verifies a PathPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PathPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PathPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.PathPoint;

            /**
             * Creates a plain object from a PathPoint message. Also converts values to other types if specified.
             * @param message PathPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.PathPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PathPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PathPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Path. */
        interface IPath {

            /** Path name */
            name?: (string|null);

            /** Path pathPoint */
            pathPoint?: (apollo.common.IPathPoint[]|null);
        }

        /** Represents a Path. */
        class Path implements IPath {

            /**
             * Constructs a new Path.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IPath);

            /** Path name. */
            public name: string;

            /** Path pathPoint. */
            public pathPoint: apollo.common.IPathPoint[];

            /**
             * Creates a new Path instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Path instance
             */
            public static create(properties?: apollo.common.IPath): apollo.common.Path;

            /**
             * Encodes the specified Path message. Does not implicitly {@link apollo.common.Path.verify|verify} messages.
             * @param message Path message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IPath, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Path message, length delimited. Does not implicitly {@link apollo.common.Path.verify|verify} messages.
             * @param message Path message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IPath, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Path message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Path
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Path;

            /**
             * Decodes a Path message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Path
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Path;

            /**
             * Verifies a Path message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Path message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Path
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Path;

            /**
             * Creates a plain object from a Path message. Also converts values to other types if specified.
             * @param message Path
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Path, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Path to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Path
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TrajectoryPoint. */
        interface ITrajectoryPoint {

            /** TrajectoryPoint pathPoint */
            pathPoint?: (apollo.common.IPathPoint|null);

            /** TrajectoryPoint v */
            v?: (number|null);

            /** TrajectoryPoint a */
            a?: (number|null);

            /** TrajectoryPoint relativeTime */
            relativeTime?: (number|null);

            /** TrajectoryPoint da */
            da?: (number|null);

            /** TrajectoryPoint steer */
            steer?: (number|null);

            /** TrajectoryPoint gaussianInfo */
            gaussianInfo?: (apollo.common.IGaussianInfo|null);
        }

        /** Represents a TrajectoryPoint. */
        class TrajectoryPoint implements ITrajectoryPoint {

            /**
             * Constructs a new TrajectoryPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.ITrajectoryPoint);

            /** TrajectoryPoint pathPoint. */
            public pathPoint?: (apollo.common.IPathPoint|null);

            /** TrajectoryPoint v. */
            public v: number;

            /** TrajectoryPoint a. */
            public a: number;

            /** TrajectoryPoint relativeTime. */
            public relativeTime: number;

            /** TrajectoryPoint da. */
            public da: number;

            /** TrajectoryPoint steer. */
            public steer: number;

            /** TrajectoryPoint gaussianInfo. */
            public gaussianInfo?: (apollo.common.IGaussianInfo|null);

            /**
             * Creates a new TrajectoryPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TrajectoryPoint instance
             */
            public static create(properties?: apollo.common.ITrajectoryPoint): apollo.common.TrajectoryPoint;

            /**
             * Encodes the specified TrajectoryPoint message. Does not implicitly {@link apollo.common.TrajectoryPoint.verify|verify} messages.
             * @param message TrajectoryPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.ITrajectoryPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TrajectoryPoint message, length delimited. Does not implicitly {@link apollo.common.TrajectoryPoint.verify|verify} messages.
             * @param message TrajectoryPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.ITrajectoryPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TrajectoryPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TrajectoryPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.TrajectoryPoint;

            /**
             * Decodes a TrajectoryPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TrajectoryPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.TrajectoryPoint;

            /**
             * Verifies a TrajectoryPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TrajectoryPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TrajectoryPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.TrajectoryPoint;

            /**
             * Creates a plain object from a TrajectoryPoint message. Also converts values to other types if specified.
             * @param message TrajectoryPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.TrajectoryPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TrajectoryPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TrajectoryPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Trajectory. */
        interface ITrajectory {

            /** Trajectory name */
            name?: (string|null);

            /** Trajectory trajectoryPoint */
            trajectoryPoint?: (apollo.common.ITrajectoryPoint[]|null);
        }

        /** Represents a Trajectory. */
        class Trajectory implements ITrajectory {

            /**
             * Constructs a new Trajectory.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.ITrajectory);

            /** Trajectory name. */
            public name: string;

            /** Trajectory trajectoryPoint. */
            public trajectoryPoint: apollo.common.ITrajectoryPoint[];

            /**
             * Creates a new Trajectory instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Trajectory instance
             */
            public static create(properties?: apollo.common.ITrajectory): apollo.common.Trajectory;

            /**
             * Encodes the specified Trajectory message. Does not implicitly {@link apollo.common.Trajectory.verify|verify} messages.
             * @param message Trajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.ITrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Trajectory message, length delimited. Does not implicitly {@link apollo.common.Trajectory.verify|verify} messages.
             * @param message Trajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.ITrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Trajectory message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Trajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Trajectory;

            /**
             * Decodes a Trajectory message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Trajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Trajectory;

            /**
             * Verifies a Trajectory message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Trajectory message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Trajectory
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Trajectory;

            /**
             * Creates a plain object from a Trajectory message. Also converts values to other types if specified.
             * @param message Trajectory
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Trajectory, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Trajectory to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Trajectory
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a VehicleMotionPoint. */
        interface IVehicleMotionPoint {

            /** VehicleMotionPoint trajectoryPoint */
            trajectoryPoint?: (apollo.common.ITrajectoryPoint|null);

            /** VehicleMotionPoint steer */
            steer?: (number|null);
        }

        /** Represents a VehicleMotionPoint. */
        class VehicleMotionPoint implements IVehicleMotionPoint {

            /**
             * Constructs a new VehicleMotionPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IVehicleMotionPoint);

            /** VehicleMotionPoint trajectoryPoint. */
            public trajectoryPoint?: (apollo.common.ITrajectoryPoint|null);

            /** VehicleMotionPoint steer. */
            public steer: number;

            /**
             * Creates a new VehicleMotionPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleMotionPoint instance
             */
            public static create(properties?: apollo.common.IVehicleMotionPoint): apollo.common.VehicleMotionPoint;

            /**
             * Encodes the specified VehicleMotionPoint message. Does not implicitly {@link apollo.common.VehicleMotionPoint.verify|verify} messages.
             * @param message VehicleMotionPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IVehicleMotionPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleMotionPoint message, length delimited. Does not implicitly {@link apollo.common.VehicleMotionPoint.verify|verify} messages.
             * @param message VehicleMotionPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IVehicleMotionPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleMotionPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleMotionPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.VehicleMotionPoint;

            /**
             * Decodes a VehicleMotionPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleMotionPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.VehicleMotionPoint;

            /**
             * Verifies a VehicleMotionPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleMotionPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleMotionPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.VehicleMotionPoint;

            /**
             * Creates a plain object from a VehicleMotionPoint message. Also converts values to other types if specified.
             * @param message VehicleMotionPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.VehicleMotionPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleMotionPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleMotionPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a VehicleMotion. */
        interface IVehicleMotion {

            /** VehicleMotion name */
            name?: (string|null);

            /** VehicleMotion vehicleMotionPoint */
            vehicleMotionPoint?: (apollo.common.IVehicleMotionPoint[]|null);
        }

        /** Represents a VehicleMotion. */
        class VehicleMotion implements IVehicleMotion {

            /**
             * Constructs a new VehicleMotion.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IVehicleMotion);

            /** VehicleMotion name. */
            public name: string;

            /** VehicleMotion vehicleMotionPoint. */
            public vehicleMotionPoint: apollo.common.IVehicleMotionPoint[];

            /**
             * Creates a new VehicleMotion instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleMotion instance
             */
            public static create(properties?: apollo.common.IVehicleMotion): apollo.common.VehicleMotion;

            /**
             * Encodes the specified VehicleMotion message. Does not implicitly {@link apollo.common.VehicleMotion.verify|verify} messages.
             * @param message VehicleMotion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IVehicleMotion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleMotion message, length delimited. Does not implicitly {@link apollo.common.VehicleMotion.verify|verify} messages.
             * @param message VehicleMotion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IVehicleMotion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleMotion message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleMotion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.VehicleMotion;

            /**
             * Decodes a VehicleMotion message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleMotion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.VehicleMotion;

            /**
             * Verifies a VehicleMotion message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleMotion message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleMotion
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.VehicleMotion;

            /**
             * Creates a plain object from a VehicleMotion message. Also converts values to other types if specified.
             * @param message VehicleMotion
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.VehicleMotion, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleMotion to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleMotion
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a GaussianInfo. */
        interface IGaussianInfo {

            /** GaussianInfo sigmaX */
            sigmaX?: (number|null);

            /** GaussianInfo sigmaY */
            sigmaY?: (number|null);

            /** GaussianInfo correlation */
            correlation?: (number|null);

            /** GaussianInfo areaProbability */
            areaProbability?: (number|null);

            /** GaussianInfo ellipseA */
            ellipseA?: (number|null);

            /** GaussianInfo ellipseB */
            ellipseB?: (number|null);

            /** GaussianInfo thetaA */
            thetaA?: (number|null);
        }

        /** Represents a GaussianInfo. */
        class GaussianInfo implements IGaussianInfo {

            /**
             * Constructs a new GaussianInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IGaussianInfo);

            /** GaussianInfo sigmaX. */
            public sigmaX: number;

            /** GaussianInfo sigmaY. */
            public sigmaY: number;

            /** GaussianInfo correlation. */
            public correlation: number;

            /** GaussianInfo areaProbability. */
            public areaProbability: number;

            /** GaussianInfo ellipseA. */
            public ellipseA: number;

            /** GaussianInfo ellipseB. */
            public ellipseB: number;

            /** GaussianInfo thetaA. */
            public thetaA: number;

            /**
             * Creates a new GaussianInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GaussianInfo instance
             */
            public static create(properties?: apollo.common.IGaussianInfo): apollo.common.GaussianInfo;

            /**
             * Encodes the specified GaussianInfo message. Does not implicitly {@link apollo.common.GaussianInfo.verify|verify} messages.
             * @param message GaussianInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IGaussianInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GaussianInfo message, length delimited. Does not implicitly {@link apollo.common.GaussianInfo.verify|verify} messages.
             * @param message GaussianInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IGaussianInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GaussianInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GaussianInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.GaussianInfo;

            /**
             * Decodes a GaussianInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GaussianInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.GaussianInfo;

            /**
             * Verifies a GaussianInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GaussianInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GaussianInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.GaussianInfo;

            /**
             * Creates a plain object from a GaussianInfo message. Also converts values to other types if specified.
             * @param message GaussianInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.GaussianInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GaussianInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for GaussianInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a VehicleID. */
        interface IVehicleID {

            /** VehicleID vin */
            vin?: (string|null);

            /** VehicleID plate */
            plate?: (string|null);

            /** VehicleID otherUniqueId */
            otherUniqueId?: (string|null);
        }

        /** Represents a VehicleID. */
        class VehicleID implements IVehicleID {

            /**
             * Constructs a new VehicleID.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IVehicleID);

            /** VehicleID vin. */
            public vin: string;

            /** VehicleID plate. */
            public plate: string;

            /** VehicleID otherUniqueId. */
            public otherUniqueId: string;

            /**
             * Creates a new VehicleID instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleID instance
             */
            public static create(properties?: apollo.common.IVehicleID): apollo.common.VehicleID;

            /**
             * Encodes the specified VehicleID message. Does not implicitly {@link apollo.common.VehicleID.verify|verify} messages.
             * @param message VehicleID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IVehicleID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleID message, length delimited. Does not implicitly {@link apollo.common.VehicleID.verify|verify} messages.
             * @param message VehicleID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IVehicleID, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.VehicleID;

            /**
             * Decodes a VehicleID message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.VehicleID;

            /**
             * Verifies a VehicleID message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleID message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleID
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.VehicleID;

            /**
             * Creates a plain object from a VehicleID message. Also converts values to other types if specified.
             * @param message VehicleID
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.VehicleID, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleID to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleID
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a VehicleSignal. */
        interface IVehicleSignal {

            /** VehicleSignal turnSignal */
            turnSignal?: (apollo.common.VehicleSignal.TurnSignal|null);

            /** VehicleSignal highBeam */
            highBeam?: (boolean|null);

            /** VehicleSignal lowBeam */
            lowBeam?: (boolean|null);

            /** VehicleSignal horn */
            horn?: (boolean|null);

            /** VehicleSignal emergencyLight */
            emergencyLight?: (boolean|null);
        }

        /** Represents a VehicleSignal. */
        class VehicleSignal implements IVehicleSignal {

            /**
             * Constructs a new VehicleSignal.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IVehicleSignal);

            /** VehicleSignal turnSignal. */
            public turnSignal: apollo.common.VehicleSignal.TurnSignal;

            /** VehicleSignal highBeam. */
            public highBeam: boolean;

            /** VehicleSignal lowBeam. */
            public lowBeam: boolean;

            /** VehicleSignal horn. */
            public horn: boolean;

            /** VehicleSignal emergencyLight. */
            public emergencyLight: boolean;

            /**
             * Creates a new VehicleSignal instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleSignal instance
             */
            public static create(properties?: apollo.common.IVehicleSignal): apollo.common.VehicleSignal;

            /**
             * Encodes the specified VehicleSignal message. Does not implicitly {@link apollo.common.VehicleSignal.verify|verify} messages.
             * @param message VehicleSignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IVehicleSignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleSignal message, length delimited. Does not implicitly {@link apollo.common.VehicleSignal.verify|verify} messages.
             * @param message VehicleSignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IVehicleSignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleSignal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleSignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.VehicleSignal;

            /**
             * Decodes a VehicleSignal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleSignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.VehicleSignal;

            /**
             * Verifies a VehicleSignal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleSignal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleSignal
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.VehicleSignal;

            /**
             * Creates a plain object from a VehicleSignal message. Also converts values to other types if specified.
             * @param message VehicleSignal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.VehicleSignal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleSignal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleSignal
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace VehicleSignal {

            /** TurnSignal enum. */
            enum TurnSignal {
                TURN_NONE = 0,
                TURN_LEFT = 1,
                TURN_RIGHT = 2,
                TURN_HAZARD_WARNING = 3
            }
        }

        /** Properties of a Transform. */
        interface ITransform {

            /** Transform sourceFrame */
            sourceFrame?: (Uint8Array|null);

            /** Transform targetFrame */
            targetFrame?: (Uint8Array|null);

            /** Transform translation */
            translation?: (apollo.common.IPoint3D|null);

            /** Transform rotation */
            rotation?: (apollo.common.IQuaternion|null);
        }

        /** Represents a Transform. */
        class Transform implements ITransform {

            /**
             * Constructs a new Transform.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.ITransform);

            /** Transform sourceFrame. */
            public sourceFrame: Uint8Array;

            /** Transform targetFrame. */
            public targetFrame: Uint8Array;

            /** Transform translation. */
            public translation?: (apollo.common.IPoint3D|null);

            /** Transform rotation. */
            public rotation?: (apollo.common.IQuaternion|null);

            /**
             * Creates a new Transform instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Transform instance
             */
            public static create(properties?: apollo.common.ITransform): apollo.common.Transform;

            /**
             * Encodes the specified Transform message. Does not implicitly {@link apollo.common.Transform.verify|verify} messages.
             * @param message Transform message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.ITransform, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Transform message, length delimited. Does not implicitly {@link apollo.common.Transform.verify|verify} messages.
             * @param message Transform message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.ITransform, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Transform message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Transform
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Transform;

            /**
             * Decodes a Transform message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Transform
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Transform;

            /**
             * Verifies a Transform message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Transform message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Transform
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Transform;

            /**
             * Creates a plain object from a Transform message. Also converts values to other types if specified.
             * @param message Transform
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Transform, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Transform to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Transform
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Extrinsics. */
        interface IExtrinsics {

            /** Extrinsics tansforms */
            tansforms?: (apollo.common.ITransform[]|null);
        }

        /** Represents an Extrinsics. */
        class Extrinsics implements IExtrinsics {

            /**
             * Constructs a new Extrinsics.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IExtrinsics);

            /** Extrinsics tansforms. */
            public tansforms: apollo.common.ITransform[];

            /**
             * Creates a new Extrinsics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Extrinsics instance
             */
            public static create(properties?: apollo.common.IExtrinsics): apollo.common.Extrinsics;

            /**
             * Encodes the specified Extrinsics message. Does not implicitly {@link apollo.common.Extrinsics.verify|verify} messages.
             * @param message Extrinsics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IExtrinsics, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Extrinsics message, length delimited. Does not implicitly {@link apollo.common.Extrinsics.verify|verify} messages.
             * @param message Extrinsics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IExtrinsics, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Extrinsics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Extrinsics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.Extrinsics;

            /**
             * Decodes an Extrinsics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Extrinsics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.Extrinsics;

            /**
             * Verifies an Extrinsics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Extrinsics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Extrinsics
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.Extrinsics;

            /**
             * Creates a plain object from an Extrinsics message. Also converts values to other types if specified.
             * @param message Extrinsics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.Extrinsics, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Extrinsics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Extrinsics
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** VehicleBrand enum. */
        enum VehicleBrand {
            LINCOLN_MKZ = 0,
            GEM = 1,
            LEXUS = 2,
            TRANSIT = 3,
            GE3 = 4,
            WEY = 5,
            ZHONGYUN = 6,
            CH = 7,
            DKIT = 8,
            NEOLIX = 9
        }

        /** Properties of a LatencyParam. */
        interface ILatencyParam {

            /** LatencyParam deadTime */
            deadTime?: (number|null);

            /** LatencyParam riseTime */
            riseTime?: (number|null);

            /** LatencyParam peakTime */
            peakTime?: (number|null);

            /** LatencyParam settlingTime */
            settlingTime?: (number|null);
        }

        /** Represents a LatencyParam. */
        class LatencyParam implements ILatencyParam {

            /**
             * Constructs a new LatencyParam.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.ILatencyParam);

            /** LatencyParam deadTime. */
            public deadTime: number;

            /** LatencyParam riseTime. */
            public riseTime: number;

            /** LatencyParam peakTime. */
            public peakTime: number;

            /** LatencyParam settlingTime. */
            public settlingTime: number;

            /**
             * Creates a new LatencyParam instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LatencyParam instance
             */
            public static create(properties?: apollo.common.ILatencyParam): apollo.common.LatencyParam;

            /**
             * Encodes the specified LatencyParam message. Does not implicitly {@link apollo.common.LatencyParam.verify|verify} messages.
             * @param message LatencyParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.ILatencyParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LatencyParam message, length delimited. Does not implicitly {@link apollo.common.LatencyParam.verify|verify} messages.
             * @param message LatencyParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.ILatencyParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LatencyParam message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LatencyParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.LatencyParam;

            /**
             * Decodes a LatencyParam message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LatencyParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.LatencyParam;

            /**
             * Verifies a LatencyParam message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LatencyParam message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LatencyParam
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.LatencyParam;

            /**
             * Creates a plain object from a LatencyParam message. Also converts values to other types if specified.
             * @param message LatencyParam
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.LatencyParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LatencyParam to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LatencyParam
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a VehicleParam. */
        interface IVehicleParam {

            /** VehicleParam brand */
            brand?: (apollo.common.VehicleBrand|null);

            /** VehicleParam vehicleId */
            vehicleId?: (apollo.common.IVehicleID|null);

            /** VehicleParam frontEdgeToCenter */
            frontEdgeToCenter?: (number|null);

            /** VehicleParam backEdgeToCenter */
            backEdgeToCenter?: (number|null);

            /** VehicleParam leftEdgeToCenter */
            leftEdgeToCenter?: (number|null);

            /** VehicleParam rightEdgeToCenter */
            rightEdgeToCenter?: (number|null);

            /** VehicleParam length */
            length?: (number|null);

            /** VehicleParam width */
            width?: (number|null);

            /** VehicleParam height */
            height?: (number|null);

            /** VehicleParam minTurnRadius */
            minTurnRadius?: (number|null);

            /** VehicleParam maxAcceleration */
            maxAcceleration?: (number|null);

            /** VehicleParam maxDeceleration */
            maxDeceleration?: (number|null);

            /** VehicleParam maxSteerAngle */
            maxSteerAngle?: (number|null);

            /** VehicleParam maxSteerAngleRate */
            maxSteerAngleRate?: (number|null);

            /** VehicleParam minSteerAngleRate */
            minSteerAngleRate?: (number|null);

            /** VehicleParam steerRatio */
            steerRatio?: (number|null);

            /** VehicleParam wheelBase */
            wheelBase?: (number|null);

            /** VehicleParam wheelRollingRadius */
            wheelRollingRadius?: (number|null);

            /** VehicleParam maxAbsSpeedWhenStopped */
            maxAbsSpeedWhenStopped?: (number|null);

            /** VehicleParam brakeDeadzone */
            brakeDeadzone?: (number|null);

            /** VehicleParam throttleDeadzone */
            throttleDeadzone?: (number|null);

            /** VehicleParam steeringLatencyParam */
            steeringLatencyParam?: (apollo.common.ILatencyParam|null);

            /** VehicleParam throttleLatencyParam */
            throttleLatencyParam?: (apollo.common.ILatencyParam|null);

            /** VehicleParam brakeLatencyParam */
            brakeLatencyParam?: (apollo.common.ILatencyParam|null);
        }

        /** Represents a VehicleParam. */
        class VehicleParam implements IVehicleParam {

            /**
             * Constructs a new VehicleParam.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IVehicleParam);

            /** VehicleParam brand. */
            public brand: apollo.common.VehicleBrand;

            /** VehicleParam vehicleId. */
            public vehicleId?: (apollo.common.IVehicleID|null);

            /** VehicleParam frontEdgeToCenter. */
            public frontEdgeToCenter: number;

            /** VehicleParam backEdgeToCenter. */
            public backEdgeToCenter: number;

            /** VehicleParam leftEdgeToCenter. */
            public leftEdgeToCenter: number;

            /** VehicleParam rightEdgeToCenter. */
            public rightEdgeToCenter: number;

            /** VehicleParam length. */
            public length: number;

            /** VehicleParam width. */
            public width: number;

            /** VehicleParam height. */
            public height: number;

            /** VehicleParam minTurnRadius. */
            public minTurnRadius: number;

            /** VehicleParam maxAcceleration. */
            public maxAcceleration: number;

            /** VehicleParam maxDeceleration. */
            public maxDeceleration: number;

            /** VehicleParam maxSteerAngle. */
            public maxSteerAngle: number;

            /** VehicleParam maxSteerAngleRate. */
            public maxSteerAngleRate: number;

            /** VehicleParam minSteerAngleRate. */
            public minSteerAngleRate: number;

            /** VehicleParam steerRatio. */
            public steerRatio: number;

            /** VehicleParam wheelBase. */
            public wheelBase: number;

            /** VehicleParam wheelRollingRadius. */
            public wheelRollingRadius: number;

            /** VehicleParam maxAbsSpeedWhenStopped. */
            public maxAbsSpeedWhenStopped: number;

            /** VehicleParam brakeDeadzone. */
            public brakeDeadzone: number;

            /** VehicleParam throttleDeadzone. */
            public throttleDeadzone: number;

            /** VehicleParam steeringLatencyParam. */
            public steeringLatencyParam?: (apollo.common.ILatencyParam|null);

            /** VehicleParam throttleLatencyParam. */
            public throttleLatencyParam?: (apollo.common.ILatencyParam|null);

            /** VehicleParam brakeLatencyParam. */
            public brakeLatencyParam?: (apollo.common.ILatencyParam|null);

            /**
             * Creates a new VehicleParam instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleParam instance
             */
            public static create(properties?: apollo.common.IVehicleParam): apollo.common.VehicleParam;

            /**
             * Encodes the specified VehicleParam message. Does not implicitly {@link apollo.common.VehicleParam.verify|verify} messages.
             * @param message VehicleParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IVehicleParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleParam message, length delimited. Does not implicitly {@link apollo.common.VehicleParam.verify|verify} messages.
             * @param message VehicleParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IVehicleParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleParam message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.VehicleParam;

            /**
             * Decodes a VehicleParam message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.VehicleParam;

            /**
             * Verifies a VehicleParam message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleParam message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleParam
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.VehicleParam;

            /**
             * Creates a plain object from a VehicleParam message. Also converts values to other types if specified.
             * @param message VehicleParam
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.VehicleParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleParam to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleParam
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a VehicleConfig. */
        interface IVehicleConfig {

            /** VehicleConfig header */
            header?: (apollo.common.IHeader|null);

            /** VehicleConfig vehicleParam */
            vehicleParam?: (apollo.common.IVehicleParam|null);

            /** VehicleConfig extrinsics */
            extrinsics?: (apollo.common.IExtrinsics|null);
        }

        /** Represents a VehicleConfig. */
        class VehicleConfig implements IVehicleConfig {

            /**
             * Constructs a new VehicleConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.common.IVehicleConfig);

            /** VehicleConfig header. */
            public header?: (apollo.common.IHeader|null);

            /** VehicleConfig vehicleParam. */
            public vehicleParam?: (apollo.common.IVehicleParam|null);

            /** VehicleConfig extrinsics. */
            public extrinsics?: (apollo.common.IExtrinsics|null);

            /**
             * Creates a new VehicleConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleConfig instance
             */
            public static create(properties?: apollo.common.IVehicleConfig): apollo.common.VehicleConfig;

            /**
             * Encodes the specified VehicleConfig message. Does not implicitly {@link apollo.common.VehicleConfig.verify|verify} messages.
             * @param message VehicleConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.common.IVehicleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleConfig message, length delimited. Does not implicitly {@link apollo.common.VehicleConfig.verify|verify} messages.
             * @param message VehicleConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.common.IVehicleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.VehicleConfig;

            /**
             * Decodes a VehicleConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.VehicleConfig;

            /**
             * Verifies a VehicleConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.common.VehicleConfig;

            /**
             * Creates a plain object from a VehicleConfig message. Also converts values to other types if specified.
             * @param message VehicleConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.common.VehicleConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Namespace monitor. */
        namespace monitor {

            /** Properties of a MonitorMessageItem. */
            interface IMonitorMessageItem {

                /** MonitorMessageItem source */
                source?: (apollo.common.monitor.MonitorMessageItem.MessageSource|null);

                /** MonitorMessageItem msg */
                msg?: (string|null);

                /** MonitorMessageItem logLevel */
                logLevel?: (apollo.common.monitor.MonitorMessageItem.LogLevel|null);
            }

            /** Represents a MonitorMessageItem. */
            class MonitorMessageItem implements IMonitorMessageItem {

                /**
                 * Constructs a new MonitorMessageItem.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.common.monitor.IMonitorMessageItem);

                /** MonitorMessageItem source. */
                public source: apollo.common.monitor.MonitorMessageItem.MessageSource;

                /** MonitorMessageItem msg. */
                public msg: string;

                /** MonitorMessageItem logLevel. */
                public logLevel: apollo.common.monitor.MonitorMessageItem.LogLevel;

                /**
                 * Creates a new MonitorMessageItem instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MonitorMessageItem instance
                 */
                public static create(properties?: apollo.common.monitor.IMonitorMessageItem): apollo.common.monitor.MonitorMessageItem;

                /**
                 * Encodes the specified MonitorMessageItem message. Does not implicitly {@link apollo.common.monitor.MonitorMessageItem.verify|verify} messages.
                 * @param message MonitorMessageItem message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.common.monitor.IMonitorMessageItem, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MonitorMessageItem message, length delimited. Does not implicitly {@link apollo.common.monitor.MonitorMessageItem.verify|verify} messages.
                 * @param message MonitorMessageItem message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.common.monitor.IMonitorMessageItem, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MonitorMessageItem message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MonitorMessageItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.monitor.MonitorMessageItem;

                /**
                 * Decodes a MonitorMessageItem message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MonitorMessageItem
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.monitor.MonitorMessageItem;

                /**
                 * Verifies a MonitorMessageItem message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MonitorMessageItem message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MonitorMessageItem
                 */
                public static fromObject(object: { [k: string]: any }): apollo.common.monitor.MonitorMessageItem;

                /**
                 * Creates a plain object from a MonitorMessageItem message. Also converts values to other types if specified.
                 * @param message MonitorMessageItem
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.common.monitor.MonitorMessageItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MonitorMessageItem to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MonitorMessageItem
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace MonitorMessageItem {

                /** MessageSource enum. */
                enum MessageSource {
                    UNKNOWN = 1,
                    CANBUS = 2,
                    CONTROL = 3,
                    DECISION = 4,
                    LOCALIZATION = 5,
                    PLANNING = 6,
                    PREDICTION = 7,
                    SIMULATOR = 8,
                    HWSYS = 9,
                    ROUTING = 10,
                    MONITOR = 11,
                    HMI = 12,
                    RELATIVE_MAP = 13,
                    GNSS = 14,
                    CONTI_RADAR = 15,
                    RACOBIT_RADAR = 16,
                    ULTRASONIC_RADAR = 17,
                    MOBILEYE = 18,
                    DELPHI_ESR = 19,
                    STORYTELLING = 20,
                    TASK_MANAGER = 21
                }

                /** LogLevel enum. */
                enum LogLevel {
                    INFO = 0,
                    WARN = 1,
                    ERROR = 2,
                    FATAL = 3
                }
            }

            /** Properties of a MonitorMessage. */
            interface IMonitorMessage {

                /** MonitorMessage header */
                header?: (apollo.common.IHeader|null);

                /** MonitorMessage item */
                item?: (apollo.common.monitor.IMonitorMessageItem[]|null);
            }

            /** Represents a MonitorMessage. */
            class MonitorMessage implements IMonitorMessage {

                /**
                 * Constructs a new MonitorMessage.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.common.monitor.IMonitorMessage);

                /** MonitorMessage header. */
                public header?: (apollo.common.IHeader|null);

                /** MonitorMessage item. */
                public item: apollo.common.monitor.IMonitorMessageItem[];

                /**
                 * Creates a new MonitorMessage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MonitorMessage instance
                 */
                public static create(properties?: apollo.common.monitor.IMonitorMessage): apollo.common.monitor.MonitorMessage;

                /**
                 * Encodes the specified MonitorMessage message. Does not implicitly {@link apollo.common.monitor.MonitorMessage.verify|verify} messages.
                 * @param message MonitorMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.common.monitor.IMonitorMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MonitorMessage message, length delimited. Does not implicitly {@link apollo.common.monitor.MonitorMessage.verify|verify} messages.
                 * @param message MonitorMessage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.common.monitor.IMonitorMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MonitorMessage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MonitorMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.common.monitor.MonitorMessage;

                /**
                 * Decodes a MonitorMessage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MonitorMessage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.common.monitor.MonitorMessage;

                /**
                 * Verifies a MonitorMessage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MonitorMessage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MonitorMessage
                 */
                public static fromObject(object: { [k: string]: any }): apollo.common.monitor.MonitorMessage;

                /**
                 * Creates a plain object from a MonitorMessage message. Also converts values to other types if specified.
                 * @param message MonitorMessage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.common.monitor.MonitorMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MonitorMessage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MonitorMessage
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }
    }

    /** Namespace canbus. */
    namespace canbus {

        /** Properties of a Chassis. */
        interface IChassis {

            /** Chassis engineStarted */
            engineStarted?: (boolean|null);

            /** Chassis engineRpm */
            engineRpm?: (number|null);

            /** Chassis speedMps */
            speedMps?: (number|null);

            /** Chassis odometerM */
            odometerM?: (number|null);

            /** Chassis fuelRangeM */
            fuelRangeM?: (number|null);

            /** Chassis throttlePercentage */
            throttlePercentage?: (number|null);

            /** Chassis brakePercentage */
            brakePercentage?: (number|null);

            /** Chassis steeringPercentage */
            steeringPercentage?: (number|null);

            /** Chassis steeringTorqueNm */
            steeringTorqueNm?: (number|null);

            /** Chassis parkingBrake */
            parkingBrake?: (boolean|null);

            /** Chassis highBeamSignal */
            highBeamSignal?: (boolean|null);

            /** Chassis lowBeamSignal */
            lowBeamSignal?: (boolean|null);

            /** Chassis leftTurnSignal */
            leftTurnSignal?: (boolean|null);

            /** Chassis rightTurnSignal */
            rightTurnSignal?: (boolean|null);

            /** Chassis horn */
            horn?: (boolean|null);

            /** Chassis wiper */
            wiper?: (boolean|null);

            /** Chassis disengageStatus */
            disengageStatus?: (boolean|null);

            /** Chassis drivingMode */
            drivingMode?: (apollo.canbus.Chassis.DrivingMode|null);

            /** Chassis errorCode */
            errorCode?: (apollo.canbus.Chassis.ErrorCode|null);

            /** Chassis gearLocation */
            gearLocation?: (apollo.canbus.Chassis.GearPosition|null);

            /** Chassis steeringTimestamp */
            steeringTimestamp?: (number|null);

            /** Chassis header */
            header?: (apollo.common.IHeader|null);

            /** Chassis chassisErrorMask */
            chassisErrorMask?: (number|null);

            /** Chassis signal */
            signal?: (apollo.common.IVehicleSignal|null);

            /** Chassis chassisGps */
            chassisGps?: (apollo.canbus.IChassisGPS|null);

            /** Chassis engageAdvice */
            engageAdvice?: (apollo.common.IEngageAdvice|null);

            /** Chassis wheelSpeed */
            wheelSpeed?: (apollo.canbus.IWheelSpeed|null);

            /** Chassis surround */
            surround?: (apollo.canbus.ISurround|null);

            /** Chassis license */
            license?: (apollo.canbus.ILicense|null);

            /** Chassis vehicleId */
            vehicleId?: (apollo.common.IVehicleID|null);

            /** Chassis batterySocPercentage */
            batterySocPercentage?: (number|null);

            /** Chassis throttlePercentageCmd */
            throttlePercentageCmd?: (number|null);

            /** Chassis brakePercentageCmd */
            brakePercentageCmd?: (number|null);

            /** Chassis steeringPercentageCmd */
            steeringPercentageCmd?: (number|null);

            /** Chassis frontBumperEvent */
            frontBumperEvent?: (apollo.canbus.Chassis.BumperEvent|null);

            /** Chassis backBumperEvent */
            backBumperEvent?: (apollo.canbus.Chassis.BumperEvent|null);

            /** Chassis checkResponse */
            checkResponse?: (apollo.canbus.ICheckResponse|null);

            /** Chassis customStatus */
            customStatus?: (google.protobuf.IAny|null);
        }

        /** Represents a Chassis. */
        class Chassis implements IChassis {

            /**
             * Constructs a new Chassis.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IChassis);

            /** Chassis engineStarted. */
            public engineStarted: boolean;

            /** Chassis engineRpm. */
            public engineRpm: number;

            /** Chassis speedMps. */
            public speedMps: number;

            /** Chassis odometerM. */
            public odometerM: number;

            /** Chassis fuelRangeM. */
            public fuelRangeM: number;

            /** Chassis throttlePercentage. */
            public throttlePercentage: number;

            /** Chassis brakePercentage. */
            public brakePercentage: number;

            /** Chassis steeringPercentage. */
            public steeringPercentage: number;

            /** Chassis steeringTorqueNm. */
            public steeringTorqueNm: number;

            /** Chassis parkingBrake. */
            public parkingBrake: boolean;

            /** Chassis highBeamSignal. */
            public highBeamSignal: boolean;

            /** Chassis lowBeamSignal. */
            public lowBeamSignal: boolean;

            /** Chassis leftTurnSignal. */
            public leftTurnSignal: boolean;

            /** Chassis rightTurnSignal. */
            public rightTurnSignal: boolean;

            /** Chassis horn. */
            public horn: boolean;

            /** Chassis wiper. */
            public wiper: boolean;

            /** Chassis disengageStatus. */
            public disengageStatus: boolean;

            /** Chassis drivingMode. */
            public drivingMode: apollo.canbus.Chassis.DrivingMode;

            /** Chassis errorCode. */
            public errorCode: apollo.canbus.Chassis.ErrorCode;

            /** Chassis gearLocation. */
            public gearLocation: apollo.canbus.Chassis.GearPosition;

            /** Chassis steeringTimestamp. */
            public steeringTimestamp: number;

            /** Chassis header. */
            public header?: (apollo.common.IHeader|null);

            /** Chassis chassisErrorMask. */
            public chassisErrorMask: number;

            /** Chassis signal. */
            public signal?: (apollo.common.IVehicleSignal|null);

            /** Chassis chassisGps. */
            public chassisGps?: (apollo.canbus.IChassisGPS|null);

            /** Chassis engageAdvice. */
            public engageAdvice?: (apollo.common.IEngageAdvice|null);

            /** Chassis wheelSpeed. */
            public wheelSpeed?: (apollo.canbus.IWheelSpeed|null);

            /** Chassis surround. */
            public surround?: (apollo.canbus.ISurround|null);

            /** Chassis license. */
            public license?: (apollo.canbus.ILicense|null);

            /** Chassis vehicleId. */
            public vehicleId?: (apollo.common.IVehicleID|null);

            /** Chassis batterySocPercentage. */
            public batterySocPercentage: number;

            /** Chassis throttlePercentageCmd. */
            public throttlePercentageCmd: number;

            /** Chassis brakePercentageCmd. */
            public brakePercentageCmd: number;

            /** Chassis steeringPercentageCmd. */
            public steeringPercentageCmd: number;

            /** Chassis frontBumperEvent. */
            public frontBumperEvent: apollo.canbus.Chassis.BumperEvent;

            /** Chassis backBumperEvent. */
            public backBumperEvent: apollo.canbus.Chassis.BumperEvent;

            /** Chassis checkResponse. */
            public checkResponse?: (apollo.canbus.ICheckResponse|null);

            /** Chassis customStatus. */
            public customStatus?: (google.protobuf.IAny|null);

            /**
             * Creates a new Chassis instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Chassis instance
             */
            public static create(properties?: apollo.canbus.IChassis): apollo.canbus.Chassis;

            /**
             * Encodes the specified Chassis message. Does not implicitly {@link apollo.canbus.Chassis.verify|verify} messages.
             * @param message Chassis message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IChassis, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Chassis message, length delimited. Does not implicitly {@link apollo.canbus.Chassis.verify|verify} messages.
             * @param message Chassis message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IChassis, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Chassis message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Chassis
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Chassis;

            /**
             * Decodes a Chassis message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Chassis
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Chassis;

            /**
             * Verifies a Chassis message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Chassis message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Chassis
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Chassis;

            /**
             * Creates a plain object from a Chassis message. Also converts values to other types if specified.
             * @param message Chassis
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Chassis, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Chassis to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Chassis
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Chassis {

            /** DrivingMode enum. */
            enum DrivingMode {
                COMPLETE_MANUAL = 0,
                COMPLETE_AUTO_DRIVE = 1,
                AUTO_STEER_ONLY = 2,
                AUTO_SPEED_ONLY = 3,
                EMERGENCY_MODE = 4
            }

            /** ErrorCode enum. */
            enum ErrorCode {
                NO_ERROR = 0,
                CMD_NOT_IN_PERIOD = 1,
                CHASSIS_ERROR = 2,
                CHASSIS_ERROR_ON_STEER = 6,
                CHASSIS_ERROR_ON_BRAKE = 7,
                CHASSIS_ERROR_ON_THROTTLE = 8,
                CHASSIS_ERROR_ON_GEAR = 9,
                MANUAL_INTERVENTION = 3,
                CHASSIS_CAN_NOT_IN_PERIOD = 4,
                UNKNOWN_ERROR = 5
            }

            /** GearPosition enum. */
            enum GearPosition {
                GEAR_NEUTRAL = 0,
                GEAR_DRIVE = 1,
                GEAR_REVERSE = 2,
                GEAR_PARKING = 3,
                GEAR_LOW = 4,
                GEAR_INVALID = 5,
                GEAR_NONE = 6
            }

            /** BumperEvent enum. */
            enum BumperEvent {
                BUMPER_INVALID = 0,
                BUMPER_NORMAL = 1,
                BUMPER_PRESSED = 2
            }
        }

        /** Properties of a ChassisGPS. */
        interface IChassisGPS {

            /** ChassisGPS latitude */
            latitude?: (number|null);

            /** ChassisGPS longitude */
            longitude?: (number|null);

            /** ChassisGPS gpsValid */
            gpsValid?: (boolean|null);

            /** ChassisGPS year */
            year?: (number|null);

            /** ChassisGPS month */
            month?: (number|null);

            /** ChassisGPS day */
            day?: (number|null);

            /** ChassisGPS hours */
            hours?: (number|null);

            /** ChassisGPS minutes */
            minutes?: (number|null);

            /** ChassisGPS seconds */
            seconds?: (number|null);

            /** ChassisGPS compassDirection */
            compassDirection?: (number|null);

            /** ChassisGPS pdop */
            pdop?: (number|null);

            /** ChassisGPS isGpsFault */
            isGpsFault?: (boolean|null);

            /** ChassisGPS isInferred */
            isInferred?: (boolean|null);

            /** ChassisGPS altitude */
            altitude?: (number|null);

            /** ChassisGPS heading */
            heading?: (number|null);

            /** ChassisGPS hdop */
            hdop?: (number|null);

            /** ChassisGPS vdop */
            vdop?: (number|null);

            /** ChassisGPS quality */
            quality?: (apollo.canbus.GpsQuality|null);

            /** ChassisGPS numSatellites */
            numSatellites?: (number|null);

            /** ChassisGPS gpsSpeed */
            gpsSpeed?: (number|null);
        }

        /** Represents a ChassisGPS. */
        class ChassisGPS implements IChassisGPS {

            /**
             * Constructs a new ChassisGPS.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IChassisGPS);

            /** ChassisGPS latitude. */
            public latitude: number;

            /** ChassisGPS longitude. */
            public longitude: number;

            /** ChassisGPS gpsValid. */
            public gpsValid: boolean;

            /** ChassisGPS year. */
            public year: number;

            /** ChassisGPS month. */
            public month: number;

            /** ChassisGPS day. */
            public day: number;

            /** ChassisGPS hours. */
            public hours: number;

            /** ChassisGPS minutes. */
            public minutes: number;

            /** ChassisGPS seconds. */
            public seconds: number;

            /** ChassisGPS compassDirection. */
            public compassDirection: number;

            /** ChassisGPS pdop. */
            public pdop: number;

            /** ChassisGPS isGpsFault. */
            public isGpsFault: boolean;

            /** ChassisGPS isInferred. */
            public isInferred: boolean;

            /** ChassisGPS altitude. */
            public altitude: number;

            /** ChassisGPS heading. */
            public heading: number;

            /** ChassisGPS hdop. */
            public hdop: number;

            /** ChassisGPS vdop. */
            public vdop: number;

            /** ChassisGPS quality. */
            public quality: apollo.canbus.GpsQuality;

            /** ChassisGPS numSatellites. */
            public numSatellites: number;

            /** ChassisGPS gpsSpeed. */
            public gpsSpeed: number;

            /**
             * Creates a new ChassisGPS instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChassisGPS instance
             */
            public static create(properties?: apollo.canbus.IChassisGPS): apollo.canbus.ChassisGPS;

            /**
             * Encodes the specified ChassisGPS message. Does not implicitly {@link apollo.canbus.ChassisGPS.verify|verify} messages.
             * @param message ChassisGPS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IChassisGPS, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChassisGPS message, length delimited. Does not implicitly {@link apollo.canbus.ChassisGPS.verify|verify} messages.
             * @param message ChassisGPS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IChassisGPS, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChassisGPS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChassisGPS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.ChassisGPS;

            /**
             * Decodes a ChassisGPS message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChassisGPS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.ChassisGPS;

            /**
             * Verifies a ChassisGPS message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChassisGPS message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChassisGPS
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.ChassisGPS;

            /**
             * Creates a plain object from a ChassisGPS message. Also converts values to other types if specified.
             * @param message ChassisGPS
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.ChassisGPS, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChassisGPS to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ChassisGPS
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** GpsQuality enum. */
        enum GpsQuality {
            FIX_NO = 0,
            FIX_2D = 1,
            FIX_3D = 2,
            FIX_INVALID = 3
        }

        /** Properties of a WheelSpeed. */
        interface IWheelSpeed {

            /** WheelSpeed isWheelSpdRrValid */
            isWheelSpdRrValid?: (boolean|null);

            /** WheelSpeed wheelDirectionRr */
            wheelDirectionRr?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** WheelSpeed wheelSpdRr */
            wheelSpdRr?: (number|null);

            /** WheelSpeed isWheelSpdRlValid */
            isWheelSpdRlValid?: (boolean|null);

            /** WheelSpeed wheelDirectionRl */
            wheelDirectionRl?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** WheelSpeed wheelSpdRl */
            wheelSpdRl?: (number|null);

            /** WheelSpeed isWheelSpdFrValid */
            isWheelSpdFrValid?: (boolean|null);

            /** WheelSpeed wheelDirectionFr */
            wheelDirectionFr?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** WheelSpeed wheelSpdFr */
            wheelSpdFr?: (number|null);

            /** WheelSpeed isWheelSpdFlValid */
            isWheelSpdFlValid?: (boolean|null);

            /** WheelSpeed wheelDirectionFl */
            wheelDirectionFl?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** WheelSpeed wheelSpdFl */
            wheelSpdFl?: (number|null);
        }

        /** Represents a WheelSpeed. */
        class WheelSpeed implements IWheelSpeed {

            /**
             * Constructs a new WheelSpeed.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IWheelSpeed);

            /** WheelSpeed isWheelSpdRrValid. */
            public isWheelSpdRrValid: boolean;

            /** WheelSpeed wheelDirectionRr. */
            public wheelDirectionRr: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** WheelSpeed wheelSpdRr. */
            public wheelSpdRr: number;

            /** WheelSpeed isWheelSpdRlValid. */
            public isWheelSpdRlValid: boolean;

            /** WheelSpeed wheelDirectionRl. */
            public wheelDirectionRl: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** WheelSpeed wheelSpdRl. */
            public wheelSpdRl: number;

            /** WheelSpeed isWheelSpdFrValid. */
            public isWheelSpdFrValid: boolean;

            /** WheelSpeed wheelDirectionFr. */
            public wheelDirectionFr: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** WheelSpeed wheelSpdFr. */
            public wheelSpdFr: number;

            /** WheelSpeed isWheelSpdFlValid. */
            public isWheelSpdFlValid: boolean;

            /** WheelSpeed wheelDirectionFl. */
            public wheelDirectionFl: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** WheelSpeed wheelSpdFl. */
            public wheelSpdFl: number;

            /**
             * Creates a new WheelSpeed instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WheelSpeed instance
             */
            public static create(properties?: apollo.canbus.IWheelSpeed): apollo.canbus.WheelSpeed;

            /**
             * Encodes the specified WheelSpeed message. Does not implicitly {@link apollo.canbus.WheelSpeed.verify|verify} messages.
             * @param message WheelSpeed message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IWheelSpeed, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified WheelSpeed message, length delimited. Does not implicitly {@link apollo.canbus.WheelSpeed.verify|verify} messages.
             * @param message WheelSpeed message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IWheelSpeed, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a WheelSpeed message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WheelSpeed
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.WheelSpeed;

            /**
             * Decodes a WheelSpeed message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WheelSpeed
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.WheelSpeed;

            /**
             * Verifies a WheelSpeed message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WheelSpeed message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WheelSpeed
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.WheelSpeed;

            /**
             * Creates a plain object from a WheelSpeed message. Also converts values to other types if specified.
             * @param message WheelSpeed
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.WheelSpeed, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WheelSpeed to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for WheelSpeed
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace WheelSpeed {

            /** WheelSpeedType enum. */
            enum WheelSpeedType {
                FORWARD = 0,
                BACKWARD = 1,
                STANDSTILL = 2,
                INVALID = 3
            }
        }

        /** Properties of a Sonar. */
        interface ISonar {

            /** Sonar range */
            range?: (number|null);

            /** Sonar translation */
            translation?: (apollo.common.IPoint3D|null);

            /** Sonar rotation */
            rotation?: (apollo.common.IQuaternion|null);
        }

        /** Represents a Sonar. */
        class Sonar implements ISonar {

            /**
             * Constructs a new Sonar.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISonar);

            /** Sonar range. */
            public range: number;

            /** Sonar translation. */
            public translation?: (apollo.common.IPoint3D|null);

            /** Sonar rotation. */
            public rotation?: (apollo.common.IQuaternion|null);

            /**
             * Creates a new Sonar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Sonar instance
             */
            public static create(properties?: apollo.canbus.ISonar): apollo.canbus.Sonar;

            /**
             * Encodes the specified Sonar message. Does not implicitly {@link apollo.canbus.Sonar.verify|verify} messages.
             * @param message Sonar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISonar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Sonar message, length delimited. Does not implicitly {@link apollo.canbus.Sonar.verify|verify} messages.
             * @param message Sonar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISonar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Sonar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Sonar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Sonar;

            /**
             * Decodes a Sonar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Sonar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Sonar;

            /**
             * Verifies a Sonar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Sonar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Sonar
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Sonar;

            /**
             * Creates a plain object from a Sonar message. Also converts values to other types if specified.
             * @param message Sonar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Sonar, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Sonar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Sonar
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Surround. */
        interface ISurround {

            /** Surround crossTrafficAlertLeft */
            crossTrafficAlertLeft?: (boolean|null);

            /** Surround crossTrafficAlertLeftEnabled */
            crossTrafficAlertLeftEnabled?: (boolean|null);

            /** Surround blindSpotLeftAlert */
            blindSpotLeftAlert?: (boolean|null);

            /** Surround blindSpotLeftAlertEnabled */
            blindSpotLeftAlertEnabled?: (boolean|null);

            /** Surround crossTrafficAlertRight */
            crossTrafficAlertRight?: (boolean|null);

            /** Surround crossTrafficAlertRightEnabled */
            crossTrafficAlertRightEnabled?: (boolean|null);

            /** Surround blindSpotRightAlert */
            blindSpotRightAlert?: (boolean|null);

            /** Surround blindSpotRightAlertEnabled */
            blindSpotRightAlertEnabled?: (boolean|null);

            /** Surround sonar00 */
            sonar00?: (number|null);

            /** Surround sonar01 */
            sonar01?: (number|null);

            /** Surround sonar02 */
            sonar02?: (number|null);

            /** Surround sonar03 */
            sonar03?: (number|null);

            /** Surround sonar04 */
            sonar04?: (number|null);

            /** Surround sonar05 */
            sonar05?: (number|null);

            /** Surround sonar06 */
            sonar06?: (number|null);

            /** Surround sonar07 */
            sonar07?: (number|null);

            /** Surround sonar08 */
            sonar08?: (number|null);

            /** Surround sonar09 */
            sonar09?: (number|null);

            /** Surround sonar10 */
            sonar10?: (number|null);

            /** Surround sonar11 */
            sonar11?: (number|null);

            /** Surround sonarEnabled */
            sonarEnabled?: (boolean|null);

            /** Surround sonarFault */
            sonarFault?: (boolean|null);

            /** Surround sonarRange */
            sonarRange?: (number[]|null);

            /** Surround sonar */
            sonar?: (apollo.canbus.ISonar[]|null);
        }

        /** Represents a Surround. */
        class Surround implements ISurround {

            /**
             * Constructs a new Surround.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISurround);

            /** Surround crossTrafficAlertLeft. */
            public crossTrafficAlertLeft: boolean;

            /** Surround crossTrafficAlertLeftEnabled. */
            public crossTrafficAlertLeftEnabled: boolean;

            /** Surround blindSpotLeftAlert. */
            public blindSpotLeftAlert: boolean;

            /** Surround blindSpotLeftAlertEnabled. */
            public blindSpotLeftAlertEnabled: boolean;

            /** Surround crossTrafficAlertRight. */
            public crossTrafficAlertRight: boolean;

            /** Surround crossTrafficAlertRightEnabled. */
            public crossTrafficAlertRightEnabled: boolean;

            /** Surround blindSpotRightAlert. */
            public blindSpotRightAlert: boolean;

            /** Surround blindSpotRightAlertEnabled. */
            public blindSpotRightAlertEnabled: boolean;

            /** Surround sonar00. */
            public sonar00: number;

            /** Surround sonar01. */
            public sonar01: number;

            /** Surround sonar02. */
            public sonar02: number;

            /** Surround sonar03. */
            public sonar03: number;

            /** Surround sonar04. */
            public sonar04: number;

            /** Surround sonar05. */
            public sonar05: number;

            /** Surround sonar06. */
            public sonar06: number;

            /** Surround sonar07. */
            public sonar07: number;

            /** Surround sonar08. */
            public sonar08: number;

            /** Surround sonar09. */
            public sonar09: number;

            /** Surround sonar10. */
            public sonar10: number;

            /** Surround sonar11. */
            public sonar11: number;

            /** Surround sonarEnabled. */
            public sonarEnabled: boolean;

            /** Surround sonarFault. */
            public sonarFault: boolean;

            /** Surround sonarRange. */
            public sonarRange: number[];

            /** Surround sonar. */
            public sonar: apollo.canbus.ISonar[];

            /**
             * Creates a new Surround instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Surround instance
             */
            public static create(properties?: apollo.canbus.ISurround): apollo.canbus.Surround;

            /**
             * Encodes the specified Surround message. Does not implicitly {@link apollo.canbus.Surround.verify|verify} messages.
             * @param message Surround message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISurround, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Surround message, length delimited. Does not implicitly {@link apollo.canbus.Surround.verify|verify} messages.
             * @param message Surround message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISurround, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Surround message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Surround
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Surround;

            /**
             * Decodes a Surround message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Surround
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Surround;

            /**
             * Verifies a Surround message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Surround message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Surround
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Surround;

            /**
             * Creates a plain object from a Surround message. Also converts values to other types if specified.
             * @param message Surround
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Surround, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Surround to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Surround
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a License. */
        interface ILicense {

            /** License vin */
            vin?: (string|null);
        }

        /** Represents a License. */
        class License implements ILicense {

            /**
             * Constructs a new License.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ILicense);

            /** License vin. */
            public vin: string;

            /**
             * Creates a new License instance using the specified properties.
             * @param [properties] Properties to set
             * @returns License instance
             */
            public static create(properties?: apollo.canbus.ILicense): apollo.canbus.License;

            /**
             * Encodes the specified License message. Does not implicitly {@link apollo.canbus.License.verify|verify} messages.
             * @param message License message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified License message, length delimited. Does not implicitly {@link apollo.canbus.License.verify|verify} messages.
             * @param message License message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ILicense, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a License message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns License
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.License;

            /**
             * Decodes a License message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns License
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.License;

            /**
             * Verifies a License message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a License message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns License
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.License;

            /**
             * Creates a plain object from a License message. Also converts values to other types if specified.
             * @param message License
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.License, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this License to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for License
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CheckResponse. */
        interface ICheckResponse {

            /** CheckResponse isEpsOnline */
            isEpsOnline?: (boolean|null);

            /** CheckResponse isEpbOnline */
            isEpbOnline?: (boolean|null);

            /** CheckResponse isEspOnline */
            isEspOnline?: (boolean|null);

            /** CheckResponse isVtogOnline */
            isVtogOnline?: (boolean|null);

            /** CheckResponse isScuOnline */
            isScuOnline?: (boolean|null);

            /** CheckResponse isSwitchOnline */
            isSwitchOnline?: (boolean|null);

            /** CheckResponse isVcuOnline */
            isVcuOnline?: (boolean|null);
        }

        /** Represents a CheckResponse. */
        class CheckResponse implements ICheckResponse {

            /**
             * Constructs a new CheckResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ICheckResponse);

            /** CheckResponse isEpsOnline. */
            public isEpsOnline: boolean;

            /** CheckResponse isEpbOnline. */
            public isEpbOnline: boolean;

            /** CheckResponse isEspOnline. */
            public isEspOnline: boolean;

            /** CheckResponse isVtogOnline. */
            public isVtogOnline: boolean;

            /** CheckResponse isScuOnline. */
            public isScuOnline: boolean;

            /** CheckResponse isSwitchOnline. */
            public isSwitchOnline: boolean;

            /** CheckResponse isVcuOnline. */
            public isVcuOnline: boolean;

            /**
             * Creates a new CheckResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckResponse instance
             */
            public static create(properties?: apollo.canbus.ICheckResponse): apollo.canbus.CheckResponse;

            /**
             * Encodes the specified CheckResponse message. Does not implicitly {@link apollo.canbus.CheckResponse.verify|verify} messages.
             * @param message CheckResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ICheckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckResponse message, length delimited. Does not implicitly {@link apollo.canbus.CheckResponse.verify|verify} messages.
             * @param message CheckResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ICheckResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.CheckResponse;

            /**
             * Decodes a CheckResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.CheckResponse;

            /**
             * Verifies a CheckResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckResponse
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.CheckResponse;

            /**
             * Creates a plain object from a CheckResponse message. Also converts values to other types if specified.
             * @param message CheckResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.CheckResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CheckResponse
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ChassisDetail. */
        interface IChassisDetail {

            /** ChassisDetail carType */
            carType?: (apollo.canbus.ChassisDetail.Type|null);

            /** ChassisDetail basic */
            basic?: (apollo.canbus.IBasicInfo|null);

            /** ChassisDetail safety */
            safety?: (apollo.canbus.ISafety|null);

            /** ChassisDetail gear */
            gear?: (apollo.canbus.IGear|null);

            /** ChassisDetail ems */
            ems?: (apollo.canbus.IEms|null);

            /** ChassisDetail esp */
            esp?: (apollo.canbus.IEsp|null);

            /** ChassisDetail gas */
            gas?: (apollo.canbus.IGas|null);

            /** ChassisDetail epb */
            epb?: (apollo.canbus.IEpb|null);

            /** ChassisDetail brake */
            brake?: (apollo.canbus.IBrake|null);

            /** ChassisDetail deceleration */
            deceleration?: (apollo.canbus.IDeceleration|null);

            /** ChassisDetail vehicleSpd */
            vehicleSpd?: (apollo.canbus.IVehicleSpd|null);

            /** ChassisDetail eps */
            eps?: (apollo.canbus.IEps|null);

            /** ChassisDetail light */
            light?: (apollo.canbus.ILight|null);

            /** ChassisDetail battery */
            battery?: (apollo.canbus.IBattery|null);

            /** ChassisDetail checkResponse */
            checkResponse?: (apollo.canbus.ICheckResponseSignal|null);

            /** ChassisDetail license */
            license?: (apollo.canbus.ILicense|null);

            /** ChassisDetail surround */
            surround?: (apollo.canbus.ISurround|null);

            /** ChassisDetail vehicleId */
            vehicleId?: (apollo.common.IVehicleID|null);
        }

        /** Represents a ChassisDetail. */
        class ChassisDetail implements IChassisDetail {

            /**
             * Constructs a new ChassisDetail.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IChassisDetail);

            /** ChassisDetail carType. */
            public carType: apollo.canbus.ChassisDetail.Type;

            /** ChassisDetail basic. */
            public basic?: (apollo.canbus.IBasicInfo|null);

            /** ChassisDetail safety. */
            public safety?: (apollo.canbus.ISafety|null);

            /** ChassisDetail gear. */
            public gear?: (apollo.canbus.IGear|null);

            /** ChassisDetail ems. */
            public ems?: (apollo.canbus.IEms|null);

            /** ChassisDetail esp. */
            public esp?: (apollo.canbus.IEsp|null);

            /** ChassisDetail gas. */
            public gas?: (apollo.canbus.IGas|null);

            /** ChassisDetail epb. */
            public epb?: (apollo.canbus.IEpb|null);

            /** ChassisDetail brake. */
            public brake?: (apollo.canbus.IBrake|null);

            /** ChassisDetail deceleration. */
            public deceleration?: (apollo.canbus.IDeceleration|null);

            /** ChassisDetail vehicleSpd. */
            public vehicleSpd?: (apollo.canbus.IVehicleSpd|null);

            /** ChassisDetail eps. */
            public eps?: (apollo.canbus.IEps|null);

            /** ChassisDetail light. */
            public light?: (apollo.canbus.ILight|null);

            /** ChassisDetail battery. */
            public battery?: (apollo.canbus.IBattery|null);

            /** ChassisDetail checkResponse. */
            public checkResponse?: (apollo.canbus.ICheckResponseSignal|null);

            /** ChassisDetail license. */
            public license?: (apollo.canbus.ILicense|null);

            /** ChassisDetail surround. */
            public surround?: (apollo.canbus.ISurround|null);

            /** ChassisDetail vehicleId. */
            public vehicleId?: (apollo.common.IVehicleID|null);

            /**
             * Creates a new ChassisDetail instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChassisDetail instance
             */
            public static create(properties?: apollo.canbus.IChassisDetail): apollo.canbus.ChassisDetail;

            /**
             * Encodes the specified ChassisDetail message. Does not implicitly {@link apollo.canbus.ChassisDetail.verify|verify} messages.
             * @param message ChassisDetail message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IChassisDetail, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChassisDetail message, length delimited. Does not implicitly {@link apollo.canbus.ChassisDetail.verify|verify} messages.
             * @param message ChassisDetail message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IChassisDetail, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChassisDetail message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChassisDetail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.ChassisDetail;

            /**
             * Decodes a ChassisDetail message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChassisDetail
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.ChassisDetail;

            /**
             * Verifies a ChassisDetail message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChassisDetail message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChassisDetail
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.ChassisDetail;

            /**
             * Creates a plain object from a ChassisDetail message. Also converts values to other types if specified.
             * @param message ChassisDetail
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.ChassisDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChassisDetail to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ChassisDetail
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ChassisDetail {

            /** Type enum. */
            enum Type {
                QIRUI_EQ_15 = 0,
                CHANGAN_RUICHENG = 1
            }
        }

        /** Properties of a CheckResponseSignal. */
        interface ICheckResponseSignal {

            /** CheckResponseSignal isEpsOnline */
            isEpsOnline?: (boolean|null);

            /** CheckResponseSignal isEpbOnline */
            isEpbOnline?: (boolean|null);

            /** CheckResponseSignal isEspOnline */
            isEspOnline?: (boolean|null);

            /** CheckResponseSignal isVtogOnline */
            isVtogOnline?: (boolean|null);

            /** CheckResponseSignal isScuOnline */
            isScuOnline?: (boolean|null);

            /** CheckResponseSignal isSwitchOnline */
            isSwitchOnline?: (boolean|null);

            /** CheckResponseSignal isVcuOnline */
            isVcuOnline?: (boolean|null);
        }

        /** Represents a CheckResponseSignal. */
        class CheckResponseSignal implements ICheckResponseSignal {

            /**
             * Constructs a new CheckResponseSignal.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ICheckResponseSignal);

            /** CheckResponseSignal isEpsOnline. */
            public isEpsOnline: boolean;

            /** CheckResponseSignal isEpbOnline. */
            public isEpbOnline: boolean;

            /** CheckResponseSignal isEspOnline. */
            public isEspOnline: boolean;

            /** CheckResponseSignal isVtogOnline. */
            public isVtogOnline: boolean;

            /** CheckResponseSignal isScuOnline. */
            public isScuOnline: boolean;

            /** CheckResponseSignal isSwitchOnline. */
            public isSwitchOnline: boolean;

            /** CheckResponseSignal isVcuOnline. */
            public isVcuOnline: boolean;

            /**
             * Creates a new CheckResponseSignal instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckResponseSignal instance
             */
            public static create(properties?: apollo.canbus.ICheckResponseSignal): apollo.canbus.CheckResponseSignal;

            /**
             * Encodes the specified CheckResponseSignal message. Does not implicitly {@link apollo.canbus.CheckResponseSignal.verify|verify} messages.
             * @param message CheckResponseSignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ICheckResponseSignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckResponseSignal message, length delimited. Does not implicitly {@link apollo.canbus.CheckResponseSignal.verify|verify} messages.
             * @param message CheckResponseSignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ICheckResponseSignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckResponseSignal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckResponseSignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.CheckResponseSignal;

            /**
             * Decodes a CheckResponseSignal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckResponseSignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.CheckResponseSignal;

            /**
             * Verifies a CheckResponseSignal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckResponseSignal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckResponseSignal
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.CheckResponseSignal;

            /**
             * Creates a plain object from a CheckResponseSignal message. Also converts values to other types if specified.
             * @param message CheckResponseSignal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.CheckResponseSignal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckResponseSignal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CheckResponseSignal
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Battery. */
        interface IBattery {

            /** Battery batteryPercent */
            batteryPercent?: (number|null);

            /** Battery fuelLevel */
            fuelLevel?: (number|null);
        }

        /** Represents a Battery. */
        class Battery implements IBattery {

            /**
             * Constructs a new Battery.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBattery);

            /** Battery batteryPercent. */
            public batteryPercent: number;

            /** Battery fuelLevel. */
            public fuelLevel: number;

            /**
             * Creates a new Battery instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Battery instance
             */
            public static create(properties?: apollo.canbus.IBattery): apollo.canbus.Battery;

            /**
             * Encodes the specified Battery message. Does not implicitly {@link apollo.canbus.Battery.verify|verify} messages.
             * @param message Battery message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBattery, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Battery message, length delimited. Does not implicitly {@link apollo.canbus.Battery.verify|verify} messages.
             * @param message Battery message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBattery, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Battery message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Battery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Battery;

            /**
             * Decodes a Battery message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Battery
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Battery;

            /**
             * Verifies a Battery message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Battery message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Battery
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Battery;

            /**
             * Creates a plain object from a Battery message. Also converts values to other types if specified.
             * @param message Battery
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Battery, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Battery to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Battery
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Light. */
        interface ILight {

            /** Light turnLightType */
            turnLightType?: (apollo.canbus.Light.TurnLightType|null);

            /** Light beamLampType */
            beamLampType?: (apollo.canbus.Light.BeamLampType|null);

            /** Light isBrakeLampOn */
            isBrakeLampOn?: (boolean|null);

            /** Light isAutoLight */
            isAutoLight?: (boolean|null);

            /** Light wiperGear */
            wiperGear?: (number|null);

            /** Light lotionGear */
            lotionGear?: (number|null);

            /** Light isHornOn */
            isHornOn?: (boolean|null);

            /** Light lincolnLampType */
            lincolnLampType?: (apollo.canbus.Light.LincolnLampType|null);

            /** Light lincolnWiper */
            lincolnWiper?: (apollo.canbus.Light.LincolnWiperType|null);

            /** Light lincolnAmbient */
            lincolnAmbient?: (apollo.canbus.Light.LincolnAmbientType|null);
        }

        /** Represents a Light. */
        class Light implements ILight {

            /**
             * Constructs a new Light.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ILight);

            /** Light turnLightType. */
            public turnLightType: apollo.canbus.Light.TurnLightType;

            /** Light beamLampType. */
            public beamLampType: apollo.canbus.Light.BeamLampType;

            /** Light isBrakeLampOn. */
            public isBrakeLampOn: boolean;

            /** Light isAutoLight. */
            public isAutoLight: boolean;

            /** Light wiperGear. */
            public wiperGear: number;

            /** Light lotionGear. */
            public lotionGear: number;

            /** Light isHornOn. */
            public isHornOn: boolean;

            /** Light lincolnLampType. */
            public lincolnLampType: apollo.canbus.Light.LincolnLampType;

            /** Light lincolnWiper. */
            public lincolnWiper: apollo.canbus.Light.LincolnWiperType;

            /** Light lincolnAmbient. */
            public lincolnAmbient: apollo.canbus.Light.LincolnAmbientType;

            /**
             * Creates a new Light instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Light instance
             */
            public static create(properties?: apollo.canbus.ILight): apollo.canbus.Light;

            /**
             * Encodes the specified Light message. Does not implicitly {@link apollo.canbus.Light.verify|verify} messages.
             * @param message Light message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ILight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Light message, length delimited. Does not implicitly {@link apollo.canbus.Light.verify|verify} messages.
             * @param message Light message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ILight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Light message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Light
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Light;

            /**
             * Decodes a Light message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Light
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Light;

            /**
             * Verifies a Light message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Light message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Light
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Light;

            /**
             * Creates a plain object from a Light message. Also converts values to other types if specified.
             * @param message Light
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Light, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Light to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Light
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Light {

            /** TurnLightType enum. */
            enum TurnLightType {
                TURN_LIGHT_OFF = 0,
                TURN_LEFT_ON = 1,
                TURN_RIGHT_ON = 2,
                TURN_LIGHT_ON = 3
            }

            /** BeamLampType enum. */
            enum BeamLampType {
                BEAM_OFF = 0,
                HIGH_BEAM_ON = 1,
                LOW_BEAM_ON = 2
            }

            /** LincolnLampType enum. */
            enum LincolnLampType {
                BEAM_NULL = 0,
                BEAM_FLASH_TO_PASS = 1,
                BEAM_HIGH = 2,
                BEAM_INVALID = 3
            }

            /** LincolnWiperType enum. */
            enum LincolnWiperType {
                WIPER_OFF = 0,
                WIPER_AUTO_OFF = 1,
                WIPER_OFF_MOVING = 2,
                WIPER_MANUAL_OFF = 3,
                WIPER_MANUAL_ON = 4,
                WIPER_MANUAL_LOW = 5,
                WIPER_MANUAL_HIGH = 6,
                WIPER_MIST_FLICK = 7,
                WIPER_WASH = 8,
                WIPER_AUTO_LOW = 9,
                WIPER_AUTO_HIGH = 10,
                WIPER_COURTESY_WIPE = 11,
                WIPER_AUTO_ADJUST = 12,
                WIPER_RESERVED = 13,
                WIPER_STALLED = 14,
                WIPER_NO_DATA = 15
            }

            /** LincolnAmbientType enum. */
            enum LincolnAmbientType {
                AMBIENT_DARK = 0,
                AMBIENT_LIGHT = 1,
                AMBIENT_TWILIGHT = 2,
                AMBIENT_TUNNEL_ON = 3,
                AMBIENT_TUNNEL_OFF = 4,
                AMBIENT_INVALID = 5,
                AMBIENT_NO_DATA = 7
            }
        }

        /** Properties of an Eps. */
        interface IEps {

            /** Eps isEpsFail */
            isEpsFail?: (boolean|null);

            /** Eps epsControlState */
            epsControlState?: (apollo.canbus.Eps.Type|null);

            /** Eps epsDriverHandTorq */
            epsDriverHandTorq?: (number|null);

            /** Eps isSteeringAngleValid */
            isSteeringAngleValid?: (boolean|null);

            /** Eps steeringAngle */
            steeringAngle?: (number|null);

            /** Eps steeringAngleSpd */
            steeringAngleSpd?: (number|null);

            /** Eps isTrimmingStatus */
            isTrimmingStatus?: (boolean|null);

            /** Eps isCalibrationStatus */
            isCalibrationStatus?: (boolean|null);

            /** Eps isFailureStatus */
            isFailureStatus?: (boolean|null);

            /** Eps allowEnterAutonomousMode */
            allowEnterAutonomousMode?: (number|null);

            /** Eps currentDrivingMode */
            currentDrivingMode?: (number|null);

            /** Eps steeringAngleCmd */
            steeringAngleCmd?: (number|null);

            /** Eps vehicleSpeed */
            vehicleSpeed?: (number|null);

            /** Eps epasTorque */
            epasTorque?: (number|null);

            /** Eps steeringEnabled */
            steeringEnabled?: (boolean|null);

            /** Eps driverOverride */
            driverOverride?: (boolean|null);

            /** Eps driverActivity */
            driverActivity?: (boolean|null);

            /** Eps watchdogFault */
            watchdogFault?: (boolean|null);

            /** Eps channel_1Fault */
            channel_1Fault?: (boolean|null);

            /** Eps channel_2Fault */
            channel_2Fault?: (boolean|null);

            /** Eps calibrationFault */
            calibrationFault?: (boolean|null);

            /** Eps connectorFault */
            connectorFault?: (boolean|null);

            /** Eps timestamp_65 */
            timestamp_65?: (number|null);

            /** Eps majorVersion */
            majorVersion?: (number|null);

            /** Eps minorVersion */
            minorVersion?: (number|null);

            /** Eps buildNumber */
            buildNumber?: (number|null);
        }

        /** Represents an Eps. */
        class Eps implements IEps {

            /**
             * Constructs a new Eps.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IEps);

            /** Eps isEpsFail. */
            public isEpsFail: boolean;

            /** Eps epsControlState. */
            public epsControlState: apollo.canbus.Eps.Type;

            /** Eps epsDriverHandTorq. */
            public epsDriverHandTorq: number;

            /** Eps isSteeringAngleValid. */
            public isSteeringAngleValid: boolean;

            /** Eps steeringAngle. */
            public steeringAngle: number;

            /** Eps steeringAngleSpd. */
            public steeringAngleSpd: number;

            /** Eps isTrimmingStatus. */
            public isTrimmingStatus: boolean;

            /** Eps isCalibrationStatus. */
            public isCalibrationStatus: boolean;

            /** Eps isFailureStatus. */
            public isFailureStatus: boolean;

            /** Eps allowEnterAutonomousMode. */
            public allowEnterAutonomousMode: number;

            /** Eps currentDrivingMode. */
            public currentDrivingMode: number;

            /** Eps steeringAngleCmd. */
            public steeringAngleCmd: number;

            /** Eps vehicleSpeed. */
            public vehicleSpeed: number;

            /** Eps epasTorque. */
            public epasTorque: number;

            /** Eps steeringEnabled. */
            public steeringEnabled: boolean;

            /** Eps driverOverride. */
            public driverOverride: boolean;

            /** Eps driverActivity. */
            public driverActivity: boolean;

            /** Eps watchdogFault. */
            public watchdogFault: boolean;

            /** Eps channel_1Fault. */
            public channel_1Fault: boolean;

            /** Eps channel_2Fault. */
            public channel_2Fault: boolean;

            /** Eps calibrationFault. */
            public calibrationFault: boolean;

            /** Eps connectorFault. */
            public connectorFault: boolean;

            /** Eps timestamp_65. */
            public timestamp_65: number;

            /** Eps majorVersion. */
            public majorVersion: number;

            /** Eps minorVersion. */
            public minorVersion: number;

            /** Eps buildNumber. */
            public buildNumber: number;

            /**
             * Creates a new Eps instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Eps instance
             */
            public static create(properties?: apollo.canbus.IEps): apollo.canbus.Eps;

            /**
             * Encodes the specified Eps message. Does not implicitly {@link apollo.canbus.Eps.verify|verify} messages.
             * @param message Eps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IEps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Eps message, length delimited. Does not implicitly {@link apollo.canbus.Eps.verify|verify} messages.
             * @param message Eps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IEps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Eps message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Eps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Eps;

            /**
             * Decodes an Eps message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Eps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Eps;

            /**
             * Verifies an Eps message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Eps message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Eps
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Eps;

            /**
             * Creates a plain object from an Eps message. Also converts values to other types if specified.
             * @param message Eps
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Eps, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Eps to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Eps
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Eps {

            /** Type enum. */
            enum Type {
                NOT_AVAILABLE = 0,
                READY = 1,
                ACTIVE = 2,
                INVALID = 3
            }
        }

        /** Properties of a VehicleSpd. */
        interface IVehicleSpd {

            /** VehicleSpd isVehicleStandstill */
            isVehicleStandstill?: (boolean|null);

            /** VehicleSpd isVehicleSpdValid */
            isVehicleSpdValid?: (boolean|null);

            /** VehicleSpd vehicleSpd */
            vehicleSpd?: (number|null);

            /** VehicleSpd isWheelSpdRrValid */
            isWheelSpdRrValid?: (boolean|null);

            /** VehicleSpd wheelDirectionRr */
            wheelDirectionRr?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** VehicleSpd wheelSpdRr */
            wheelSpdRr?: (number|null);

            /** VehicleSpd isWheelSpdRlValid */
            isWheelSpdRlValid?: (boolean|null);

            /** VehicleSpd wheelDirectionRl */
            wheelDirectionRl?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** VehicleSpd wheelSpdRl */
            wheelSpdRl?: (number|null);

            /** VehicleSpd isWheelSpdFrValid */
            isWheelSpdFrValid?: (boolean|null);

            /** VehicleSpd wheelDirectionFr */
            wheelDirectionFr?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** VehicleSpd wheelSpdFr */
            wheelSpdFr?: (number|null);

            /** VehicleSpd isWheelSpdFlValid */
            isWheelSpdFlValid?: (boolean|null);

            /** VehicleSpd wheelDirectionFl */
            wheelDirectionFl?: (apollo.canbus.WheelSpeed.WheelSpeedType|null);

            /** VehicleSpd wheelSpdFl */
            wheelSpdFl?: (number|null);

            /** VehicleSpd isYawRateValid */
            isYawRateValid?: (boolean|null);

            /** VehicleSpd yawRate */
            yawRate?: (number|null);

            /** VehicleSpd yawRateOffset */
            yawRateOffset?: (number|null);

            /** VehicleSpd isAxValid */
            isAxValid?: (boolean|null);

            /** VehicleSpd ax */
            ax?: (number|null);

            /** VehicleSpd axOffset */
            axOffset?: (number|null);

            /** VehicleSpd isAyValid */
            isAyValid?: (boolean|null);

            /** VehicleSpd ay */
            ay?: (number|null);

            /** VehicleSpd ayOffset */
            ayOffset?: (number|null);

            /** VehicleSpd latAcc */
            latAcc?: (number|null);

            /** VehicleSpd longAcc */
            longAcc?: (number|null);

            /** VehicleSpd vertAcc */
            vertAcc?: (number|null);

            /** VehicleSpd rollRate */
            rollRate?: (number|null);

            /** VehicleSpd accEst */
            accEst?: (number|null);

            /** VehicleSpd timestampSec */
            timestampSec?: (number|null);
        }

        /** Represents a VehicleSpd. */
        class VehicleSpd implements IVehicleSpd {

            /**
             * Constructs a new VehicleSpd.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IVehicleSpd);

            /** VehicleSpd isVehicleStandstill. */
            public isVehicleStandstill: boolean;

            /** VehicleSpd isVehicleSpdValid. */
            public isVehicleSpdValid: boolean;

            /** VehicleSpd vehicleSpd. */
            public vehicleSpd: number;

            /** VehicleSpd isWheelSpdRrValid. */
            public isWheelSpdRrValid: boolean;

            /** VehicleSpd wheelDirectionRr. */
            public wheelDirectionRr: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** VehicleSpd wheelSpdRr. */
            public wheelSpdRr: number;

            /** VehicleSpd isWheelSpdRlValid. */
            public isWheelSpdRlValid: boolean;

            /** VehicleSpd wheelDirectionRl. */
            public wheelDirectionRl: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** VehicleSpd wheelSpdRl. */
            public wheelSpdRl: number;

            /** VehicleSpd isWheelSpdFrValid. */
            public isWheelSpdFrValid: boolean;

            /** VehicleSpd wheelDirectionFr. */
            public wheelDirectionFr: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** VehicleSpd wheelSpdFr. */
            public wheelSpdFr: number;

            /** VehicleSpd isWheelSpdFlValid. */
            public isWheelSpdFlValid: boolean;

            /** VehicleSpd wheelDirectionFl. */
            public wheelDirectionFl: apollo.canbus.WheelSpeed.WheelSpeedType;

            /** VehicleSpd wheelSpdFl. */
            public wheelSpdFl: number;

            /** VehicleSpd isYawRateValid. */
            public isYawRateValid: boolean;

            /** VehicleSpd yawRate. */
            public yawRate: number;

            /** VehicleSpd yawRateOffset. */
            public yawRateOffset: number;

            /** VehicleSpd isAxValid. */
            public isAxValid: boolean;

            /** VehicleSpd ax. */
            public ax: number;

            /** VehicleSpd axOffset. */
            public axOffset: number;

            /** VehicleSpd isAyValid. */
            public isAyValid: boolean;

            /** VehicleSpd ay. */
            public ay: number;

            /** VehicleSpd ayOffset. */
            public ayOffset: number;

            /** VehicleSpd latAcc. */
            public latAcc: number;

            /** VehicleSpd longAcc. */
            public longAcc: number;

            /** VehicleSpd vertAcc. */
            public vertAcc: number;

            /** VehicleSpd rollRate. */
            public rollRate: number;

            /** VehicleSpd accEst. */
            public accEst: number;

            /** VehicleSpd timestampSec. */
            public timestampSec: number;

            /**
             * Creates a new VehicleSpd instance using the specified properties.
             * @param [properties] Properties to set
             * @returns VehicleSpd instance
             */
            public static create(properties?: apollo.canbus.IVehicleSpd): apollo.canbus.VehicleSpd;

            /**
             * Encodes the specified VehicleSpd message. Does not implicitly {@link apollo.canbus.VehicleSpd.verify|verify} messages.
             * @param message VehicleSpd message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IVehicleSpd, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified VehicleSpd message, length delimited. Does not implicitly {@link apollo.canbus.VehicleSpd.verify|verify} messages.
             * @param message VehicleSpd message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IVehicleSpd, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a VehicleSpd message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VehicleSpd
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.VehicleSpd;

            /**
             * Decodes a VehicleSpd message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns VehicleSpd
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.VehicleSpd;

            /**
             * Verifies a VehicleSpd message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a VehicleSpd message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns VehicleSpd
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.VehicleSpd;

            /**
             * Creates a plain object from a VehicleSpd message. Also converts values to other types if specified.
             * @param message VehicleSpd
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.VehicleSpd, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this VehicleSpd to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for VehicleSpd
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Deceleration. */
        interface IDeceleration {

            /** Deceleration isDecelerationAvailable */
            isDecelerationAvailable?: (boolean|null);

            /** Deceleration isDecelerationActive */
            isDecelerationActive?: (boolean|null);

            /** Deceleration deceleration */
            deceleration?: (number|null);

            /** Deceleration isEvbFail */
            isEvbFail?: (number|null);

            /** Deceleration evbPressure */
            evbPressure?: (number|null);

            /** Deceleration brakePressure */
            brakePressure?: (number|null);

            /** Deceleration brakePressureSpd */
            brakePressureSpd?: (number|null);
        }

        /** Represents a Deceleration. */
        class Deceleration implements IDeceleration {

            /**
             * Constructs a new Deceleration.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IDeceleration);

            /** Deceleration isDecelerationAvailable. */
            public isDecelerationAvailable: boolean;

            /** Deceleration isDecelerationActive. */
            public isDecelerationActive: boolean;

            /** Deceleration deceleration. */
            public deceleration: number;

            /** Deceleration isEvbFail. */
            public isEvbFail: number;

            /** Deceleration evbPressure. */
            public evbPressure: number;

            /** Deceleration brakePressure. */
            public brakePressure: number;

            /** Deceleration brakePressureSpd. */
            public brakePressureSpd: number;

            /**
             * Creates a new Deceleration instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Deceleration instance
             */
            public static create(properties?: apollo.canbus.IDeceleration): apollo.canbus.Deceleration;

            /**
             * Encodes the specified Deceleration message. Does not implicitly {@link apollo.canbus.Deceleration.verify|verify} messages.
             * @param message Deceleration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IDeceleration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Deceleration message, length delimited. Does not implicitly {@link apollo.canbus.Deceleration.verify|verify} messages.
             * @param message Deceleration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IDeceleration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Deceleration message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Deceleration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Deceleration;

            /**
             * Decodes a Deceleration message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Deceleration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Deceleration;

            /**
             * Verifies a Deceleration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Deceleration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Deceleration
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Deceleration;

            /**
             * Creates a plain object from a Deceleration message. Also converts values to other types if specified.
             * @param message Deceleration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Deceleration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Deceleration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Deceleration
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Brake. */
        interface IBrake {

            /** Brake isBrakePedalPressed */
            isBrakePedalPressed?: (boolean|null);

            /** Brake isBrakeForceExist */
            isBrakeForceExist?: (boolean|null);

            /** Brake isBrakeOverHeat */
            isBrakeOverHeat?: (boolean|null);

            /** Brake isHandBrakeOn */
            isHandBrakeOn?: (boolean|null);

            /** Brake brakePedalPosition */
            brakePedalPosition?: (number|null);

            /** Brake isBrakeValid */
            isBrakeValid?: (boolean|null);

            /** Brake brakeInput */
            brakeInput?: (number|null);

            /** Brake brakeCmd */
            brakeCmd?: (number|null);

            /** Brake brakeOutput */
            brakeOutput?: (number|null);

            /** Brake booInput */
            booInput?: (boolean|null);

            /** Brake booCmd */
            booCmd?: (boolean|null);

            /** Brake booOutput */
            booOutput?: (boolean|null);

            /** Brake watchdogApplyingBrakes */
            watchdogApplyingBrakes?: (boolean|null);

            /** Brake watchdogSource */
            watchdogSource?: (number|null);

            /** Brake brakeEnabled */
            brakeEnabled?: (boolean|null);

            /** Brake driverOverride */
            driverOverride?: (boolean|null);

            /** Brake driverActivity */
            driverActivity?: (boolean|null);

            /** Brake watchdogFault */
            watchdogFault?: (boolean|null);

            /** Brake channel_1Fault */
            channel_1Fault?: (boolean|null);

            /** Brake channel_2Fault */
            channel_2Fault?: (boolean|null);

            /** Brake booFault */
            booFault?: (boolean|null);

            /** Brake connectorFault */
            connectorFault?: (boolean|null);

            /** Brake brakeTorqueReq */
            brakeTorqueReq?: (number|null);

            /** Brake hsaStatus */
            hsaStatus?: (apollo.canbus.Brake.HSAStatusType|null);

            /** Brake brakeTorqueAct */
            brakeTorqueAct?: (number|null);

            /** Brake hsaMode */
            hsaMode?: (apollo.canbus.Brake.HSAModeType|null);

            /** Brake wheelTorqueAct */
            wheelTorqueAct?: (number|null);

            /** Brake majorVersion */
            majorVersion?: (number|null);

            /** Brake minorVersion */
            minorVersion?: (number|null);

            /** Brake buildNumber */
            buildNumber?: (number|null);
        }

        /** Represents a Brake. */
        class Brake implements IBrake {

            /**
             * Constructs a new Brake.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBrake);

            /** Brake isBrakePedalPressed. */
            public isBrakePedalPressed: boolean;

            /** Brake isBrakeForceExist. */
            public isBrakeForceExist: boolean;

            /** Brake isBrakeOverHeat. */
            public isBrakeOverHeat: boolean;

            /** Brake isHandBrakeOn. */
            public isHandBrakeOn: boolean;

            /** Brake brakePedalPosition. */
            public brakePedalPosition: number;

            /** Brake isBrakeValid. */
            public isBrakeValid: boolean;

            /** Brake brakeInput. */
            public brakeInput: number;

            /** Brake brakeCmd. */
            public brakeCmd: number;

            /** Brake brakeOutput. */
            public brakeOutput: number;

            /** Brake booInput. */
            public booInput: boolean;

            /** Brake booCmd. */
            public booCmd: boolean;

            /** Brake booOutput. */
            public booOutput: boolean;

            /** Brake watchdogApplyingBrakes. */
            public watchdogApplyingBrakes: boolean;

            /** Brake watchdogSource. */
            public watchdogSource: number;

            /** Brake brakeEnabled. */
            public brakeEnabled: boolean;

            /** Brake driverOverride. */
            public driverOverride: boolean;

            /** Brake driverActivity. */
            public driverActivity: boolean;

            /** Brake watchdogFault. */
            public watchdogFault: boolean;

            /** Brake channel_1Fault. */
            public channel_1Fault: boolean;

            /** Brake channel_2Fault. */
            public channel_2Fault: boolean;

            /** Brake booFault. */
            public booFault: boolean;

            /** Brake connectorFault. */
            public connectorFault: boolean;

            /** Brake brakeTorqueReq. */
            public brakeTorqueReq: number;

            /** Brake hsaStatus. */
            public hsaStatus: apollo.canbus.Brake.HSAStatusType;

            /** Brake brakeTorqueAct. */
            public brakeTorqueAct: number;

            /** Brake hsaMode. */
            public hsaMode: apollo.canbus.Brake.HSAModeType;

            /** Brake wheelTorqueAct. */
            public wheelTorqueAct: number;

            /** Brake majorVersion. */
            public majorVersion: number;

            /** Brake minorVersion. */
            public minorVersion: number;

            /** Brake buildNumber. */
            public buildNumber: number;

            /**
             * Creates a new Brake instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Brake instance
             */
            public static create(properties?: apollo.canbus.IBrake): apollo.canbus.Brake;

            /**
             * Encodes the specified Brake message. Does not implicitly {@link apollo.canbus.Brake.verify|verify} messages.
             * @param message Brake message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBrake, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Brake message, length delimited. Does not implicitly {@link apollo.canbus.Brake.verify|verify} messages.
             * @param message Brake message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBrake, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Brake message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Brake
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Brake;

            /**
             * Decodes a Brake message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Brake
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Brake;

            /**
             * Verifies a Brake message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Brake message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Brake
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Brake;

            /**
             * Creates a plain object from a Brake message. Also converts values to other types if specified.
             * @param message Brake
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Brake, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Brake to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Brake
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Brake {

            /** HSAStatusType enum. */
            enum HSAStatusType {
                HSA_INACTIVE = 0,
                HSA_FINDING_GRADIENT = 1,
                HSA_ACTIVE_PRESSED = 2,
                HSA_ACTIVE_RELEASED = 3,
                HSA_FAST_RELEASE = 4,
                HSA_SLOW_RELEASE = 5,
                HSA_FAILED = 6,
                HSA_UNDEFINED = 7
            }

            /** HSAModeType enum. */
            enum HSAModeType {
                HSA_OFF = 0,
                HSA_AUTO = 1,
                HSA_MANUAL = 2,
                HSA_MODE_UNDEFINED = 3
            }
        }

        /** Properties of an Epb. */
        interface IEpb {

            /** Epb isEpbError */
            isEpbError?: (boolean|null);

            /** Epb isEpbReleased */
            isEpbReleased?: (boolean|null);

            /** Epb epbStatus */
            epbStatus?: (number|null);

            /** Epb parkingBrakeStatus */
            parkingBrakeStatus?: (apollo.canbus.Epb.PBrakeType|null);
        }

        /** Represents an Epb. */
        class Epb implements IEpb {

            /**
             * Constructs a new Epb.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IEpb);

            /** Epb isEpbError. */
            public isEpbError: boolean;

            /** Epb isEpbReleased. */
            public isEpbReleased: boolean;

            /** Epb epbStatus. */
            public epbStatus: number;

            /** Epb parkingBrakeStatus. */
            public parkingBrakeStatus: apollo.canbus.Epb.PBrakeType;

            /**
             * Creates a new Epb instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Epb instance
             */
            public static create(properties?: apollo.canbus.IEpb): apollo.canbus.Epb;

            /**
             * Encodes the specified Epb message. Does not implicitly {@link apollo.canbus.Epb.verify|verify} messages.
             * @param message Epb message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IEpb, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Epb message, length delimited. Does not implicitly {@link apollo.canbus.Epb.verify|verify} messages.
             * @param message Epb message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IEpb, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Epb message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Epb
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Epb;

            /**
             * Decodes an Epb message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Epb
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Epb;

            /**
             * Verifies an Epb message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Epb message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Epb
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Epb;

            /**
             * Creates a plain object from an Epb message. Also converts values to other types if specified.
             * @param message Epb
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Epb, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Epb to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Epb
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Epb {

            /** PBrakeType enum. */
            enum PBrakeType {
                PBRAKE_OFF = 0,
                PBRAKE_TRANSITION = 1,
                PBRAKE_ON = 2,
                PBRAKE_FAULT = 3
            }
        }

        /** Properties of a Gas. */
        interface IGas {

            /** Gas isGasPedalError */
            isGasPedalError?: (boolean|null);

            /** Gas isGasPedalPressedMore */
            isGasPedalPressedMore?: (boolean|null);

            /** Gas gasPedalPosition */
            gasPedalPosition?: (number|null);

            /** Gas isGasValid */
            isGasValid?: (boolean|null);

            /** Gas throttleInput */
            throttleInput?: (number|null);

            /** Gas throttleCmd */
            throttleCmd?: (number|null);

            /** Gas throttleOutput */
            throttleOutput?: (number|null);

            /** Gas watchdogSource */
            watchdogSource?: (number|null);

            /** Gas throttleEnabled */
            throttleEnabled?: (boolean|null);

            /** Gas driverOverride */
            driverOverride?: (boolean|null);

            /** Gas driverActivity */
            driverActivity?: (boolean|null);

            /** Gas watchdogFault */
            watchdogFault?: (boolean|null);

            /** Gas channel_1Fault */
            channel_1Fault?: (boolean|null);

            /** Gas channel_2Fault */
            channel_2Fault?: (boolean|null);

            /** Gas connectorFault */
            connectorFault?: (boolean|null);

            /** Gas acceleratorPedal */
            acceleratorPedal?: (number|null);

            /** Gas acceleratorPedalRate */
            acceleratorPedalRate?: (number|null);

            /** Gas majorVersion */
            majorVersion?: (number|null);

            /** Gas minorVersion */
            minorVersion?: (number|null);

            /** Gas buildNumber */
            buildNumber?: (number|null);
        }

        /** Represents a Gas. */
        class Gas implements IGas {

            /**
             * Constructs a new Gas.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IGas);

            /** Gas isGasPedalError. */
            public isGasPedalError: boolean;

            /** Gas isGasPedalPressedMore. */
            public isGasPedalPressedMore: boolean;

            /** Gas gasPedalPosition. */
            public gasPedalPosition: number;

            /** Gas isGasValid. */
            public isGasValid: boolean;

            /** Gas throttleInput. */
            public throttleInput: number;

            /** Gas throttleCmd. */
            public throttleCmd: number;

            /** Gas throttleOutput. */
            public throttleOutput: number;

            /** Gas watchdogSource. */
            public watchdogSource: number;

            /** Gas throttleEnabled. */
            public throttleEnabled: boolean;

            /** Gas driverOverride. */
            public driverOverride: boolean;

            /** Gas driverActivity. */
            public driverActivity: boolean;

            /** Gas watchdogFault. */
            public watchdogFault: boolean;

            /** Gas channel_1Fault. */
            public channel_1Fault: boolean;

            /** Gas channel_2Fault. */
            public channel_2Fault: boolean;

            /** Gas connectorFault. */
            public connectorFault: boolean;

            /** Gas acceleratorPedal. */
            public acceleratorPedal: number;

            /** Gas acceleratorPedalRate. */
            public acceleratorPedalRate: number;

            /** Gas majorVersion. */
            public majorVersion: number;

            /** Gas minorVersion. */
            public minorVersion: number;

            /** Gas buildNumber. */
            public buildNumber: number;

            /**
             * Creates a new Gas instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Gas instance
             */
            public static create(properties?: apollo.canbus.IGas): apollo.canbus.Gas;

            /**
             * Encodes the specified Gas message. Does not implicitly {@link apollo.canbus.Gas.verify|verify} messages.
             * @param message Gas message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IGas, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Gas message, length delimited. Does not implicitly {@link apollo.canbus.Gas.verify|verify} messages.
             * @param message Gas message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IGas, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Gas message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Gas
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Gas;

            /**
             * Decodes a Gas message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Gas
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Gas;

            /**
             * Verifies a Gas message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Gas message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Gas
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Gas;

            /**
             * Creates a plain object from a Gas message. Also converts values to other types if specified.
             * @param message Gas
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Gas, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Gas to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Gas
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esp. */
        interface IEsp {

            /** Esp isEspAccError */
            isEspAccError?: (boolean|null);

            /** Esp isEspOn */
            isEspOn?: (boolean|null);

            /** Esp isEspActive */
            isEspActive?: (boolean|null);

            /** Esp isAbsError */
            isAbsError?: (boolean|null);

            /** Esp isAbsActive */
            isAbsActive?: (boolean|null);

            /** Esp isTcsvdcFail */
            isTcsvdcFail?: (boolean|null);

            /** Esp isAbsEnabled */
            isAbsEnabled?: (boolean|null);

            /** Esp isStabActive */
            isStabActive?: (boolean|null);

            /** Esp isStabEnabled */
            isStabEnabled?: (boolean|null);

            /** Esp isTracActive */
            isTracActive?: (boolean|null);

            /** Esp isTracEnabled */
            isTracEnabled?: (boolean|null);
        }

        /** Represents an Esp. */
        class Esp implements IEsp {

            /**
             * Constructs a new Esp.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IEsp);

            /** Esp isEspAccError. */
            public isEspAccError: boolean;

            /** Esp isEspOn. */
            public isEspOn: boolean;

            /** Esp isEspActive. */
            public isEspActive: boolean;

            /** Esp isAbsError. */
            public isAbsError: boolean;

            /** Esp isAbsActive. */
            public isAbsActive: boolean;

            /** Esp isTcsvdcFail. */
            public isTcsvdcFail: boolean;

            /** Esp isAbsEnabled. */
            public isAbsEnabled: boolean;

            /** Esp isStabActive. */
            public isStabActive: boolean;

            /** Esp isStabEnabled. */
            public isStabEnabled: boolean;

            /** Esp isTracActive. */
            public isTracActive: boolean;

            /** Esp isTracEnabled. */
            public isTracEnabled: boolean;

            /**
             * Creates a new Esp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esp instance
             */
            public static create(properties?: apollo.canbus.IEsp): apollo.canbus.Esp;

            /**
             * Encodes the specified Esp message. Does not implicitly {@link apollo.canbus.Esp.verify|verify} messages.
             * @param message Esp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IEsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esp message, length delimited. Does not implicitly {@link apollo.canbus.Esp.verify|verify} messages.
             * @param message Esp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IEsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Esp;

            /**
             * Decodes an Esp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Esp;

            /**
             * Verifies an Esp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esp
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Esp;

            /**
             * Creates a plain object from an Esp message. Also converts values to other types if specified.
             * @param message Esp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Esp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esp
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Ems. */
        interface IEms {

            /** Ems isEngineAccAvailable */
            isEngineAccAvailable?: (boolean|null);

            /** Ems isEngineAccError */
            isEngineAccError?: (boolean|null);

            /** Ems engineState */
            engineState?: (apollo.canbus.Ems.Type|null);

            /** Ems maxEngineTorqPercent */
            maxEngineTorqPercent?: (number|null);

            /** Ems minEngineTorqPercent */
            minEngineTorqPercent?: (number|null);

            /** Ems baseEngineTorqConstant */
            baseEngineTorqConstant?: (number|null);

            /** Ems isEngineSpeedError */
            isEngineSpeedError?: (boolean|null);

            /** Ems engineSpeed */
            engineSpeed?: (number|null);

            /** Ems engineTorque */
            engineTorque?: (number|null);

            /** Ems isOverEngineTorque */
            isOverEngineTorque?: (boolean|null);

            /** Ems engineRpm */
            engineRpm?: (number|null);
        }

        /** Represents an Ems. */
        class Ems implements IEms {

            /**
             * Constructs a new Ems.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IEms);

            /** Ems isEngineAccAvailable. */
            public isEngineAccAvailable: boolean;

            /** Ems isEngineAccError. */
            public isEngineAccError: boolean;

            /** Ems engineState. */
            public engineState: apollo.canbus.Ems.Type;

            /** Ems maxEngineTorqPercent. */
            public maxEngineTorqPercent: number;

            /** Ems minEngineTorqPercent. */
            public minEngineTorqPercent: number;

            /** Ems baseEngineTorqConstant. */
            public baseEngineTorqConstant: number;

            /** Ems isEngineSpeedError. */
            public isEngineSpeedError: boolean;

            /** Ems engineSpeed. */
            public engineSpeed: number;

            /** Ems engineTorque. */
            public engineTorque: number;

            /** Ems isOverEngineTorque. */
            public isOverEngineTorque: boolean;

            /** Ems engineRpm. */
            public engineRpm: number;

            /**
             * Creates a new Ems instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Ems instance
             */
            public static create(properties?: apollo.canbus.IEms): apollo.canbus.Ems;

            /**
             * Encodes the specified Ems message. Does not implicitly {@link apollo.canbus.Ems.verify|verify} messages.
             * @param message Ems message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IEms, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Ems message, length delimited. Does not implicitly {@link apollo.canbus.Ems.verify|verify} messages.
             * @param message Ems message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IEms, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Ems message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Ems
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Ems;

            /**
             * Decodes an Ems message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Ems
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Ems;

            /**
             * Verifies an Ems message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Ems message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Ems
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Ems;

            /**
             * Creates a plain object from an Ems message. Also converts values to other types if specified.
             * @param message Ems
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Ems, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Ems to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Ems
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Ems {

            /** Type enum. */
            enum Type {
                STOP = 0,
                CRANK = 1,
                RUNNING = 2,
                INVALID = 3
            }
        }

        /** Properties of a Gear. */
        interface IGear {

            /** Gear isShiftPositionValid */
            isShiftPositionValid?: (boolean|null);

            /** Gear gearState */
            gearState?: (apollo.canbus.Chassis.GearPosition|null);

            /** Gear driverOverride */
            driverOverride?: (boolean|null);

            /** Gear gearCmd */
            gearCmd?: (apollo.canbus.Chassis.GearPosition|null);

            /** Gear canbusFault */
            canbusFault?: (boolean|null);
        }

        /** Represents a Gear. */
        class Gear implements IGear {

            /**
             * Constructs a new Gear.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IGear);

            /** Gear isShiftPositionValid. */
            public isShiftPositionValid: boolean;

            /** Gear gearState. */
            public gearState: apollo.canbus.Chassis.GearPosition;

            /** Gear driverOverride. */
            public driverOverride: boolean;

            /** Gear gearCmd. */
            public gearCmd: apollo.canbus.Chassis.GearPosition;

            /** Gear canbusFault. */
            public canbusFault: boolean;

            /**
             * Creates a new Gear instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Gear instance
             */
            public static create(properties?: apollo.canbus.IGear): apollo.canbus.Gear;

            /**
             * Encodes the specified Gear message. Does not implicitly {@link apollo.canbus.Gear.verify|verify} messages.
             * @param message Gear message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IGear, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Gear message, length delimited. Does not implicitly {@link apollo.canbus.Gear.verify|verify} messages.
             * @param message Gear message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IGear, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Gear message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Gear
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Gear;

            /**
             * Decodes a Gear message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Gear
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Gear;

            /**
             * Verifies a Gear message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Gear message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Gear
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Gear;

            /**
             * Creates a plain object from a Gear message. Also converts values to other types if specified.
             * @param message Gear
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Gear, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Gear to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Gear
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Safety. */
        interface ISafety {

            /** Safety isDriverCarDoorClose */
            isDriverCarDoorClose?: (boolean|null);

            /** Safety isDriverBuckled */
            isDriverBuckled?: (boolean|null);

            /** Safety emergencyButton */
            emergencyButton?: (number|null);

            /** Safety hasError */
            hasError?: (boolean|null);

            /** Safety isMotorInvertorFault */
            isMotorInvertorFault?: (boolean|null);

            /** Safety isSystemFault */
            isSystemFault?: (boolean|null);

            /** Safety isPowerBatteryFault */
            isPowerBatteryFault?: (boolean|null);

            /** Safety isMotorInvertorOverTemperature */
            isMotorInvertorOverTemperature?: (boolean|null);

            /** Safety isSmallBatteryChargeDischargeFault */
            isSmallBatteryChargeDischargeFault?: (boolean|null);

            /** Safety drivingMode */
            drivingMode?: (number|null);

            /** Safety isPassengerDoorOpen */
            isPassengerDoorOpen?: (boolean|null);

            /** Safety isRearleftDoorOpen */
            isRearleftDoorOpen?: (boolean|null);

            /** Safety isRearrightDoorOpen */
            isRearrightDoorOpen?: (boolean|null);

            /** Safety isHoodOpen */
            isHoodOpen?: (boolean|null);

            /** Safety isTrunkOpen */
            isTrunkOpen?: (boolean|null);

            /** Safety isPassengerDetected */
            isPassengerDetected?: (boolean|null);

            /** Safety isPassengerAirbagEnabled */
            isPassengerAirbagEnabled?: (boolean|null);

            /** Safety isPassengerBuckled */
            isPassengerBuckled?: (boolean|null);

            /** Safety frontLeftTirePress */
            frontLeftTirePress?: (number|null);

            /** Safety frontRightTirePress */
            frontRightTirePress?: (number|null);

            /** Safety rearLeftTirePress */
            rearLeftTirePress?: (number|null);

            /** Safety rearRightTirePress */
            rearRightTirePress?: (number|null);

            /** Safety carDrivingMode */
            carDrivingMode?: (apollo.canbus.Chassis.DrivingMode|null);
        }

        /** Represents a Safety. */
        class Safety implements ISafety {

            /**
             * Constructs a new Safety.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISafety);

            /** Safety isDriverCarDoorClose. */
            public isDriverCarDoorClose: boolean;

            /** Safety isDriverBuckled. */
            public isDriverBuckled: boolean;

            /** Safety emergencyButton. */
            public emergencyButton: number;

            /** Safety hasError. */
            public hasError: boolean;

            /** Safety isMotorInvertorFault. */
            public isMotorInvertorFault: boolean;

            /** Safety isSystemFault. */
            public isSystemFault: boolean;

            /** Safety isPowerBatteryFault. */
            public isPowerBatteryFault: boolean;

            /** Safety isMotorInvertorOverTemperature. */
            public isMotorInvertorOverTemperature: boolean;

            /** Safety isSmallBatteryChargeDischargeFault. */
            public isSmallBatteryChargeDischargeFault: boolean;

            /** Safety drivingMode. */
            public drivingMode: number;

            /** Safety isPassengerDoorOpen. */
            public isPassengerDoorOpen: boolean;

            /** Safety isRearleftDoorOpen. */
            public isRearleftDoorOpen: boolean;

            /** Safety isRearrightDoorOpen. */
            public isRearrightDoorOpen: boolean;

            /** Safety isHoodOpen. */
            public isHoodOpen: boolean;

            /** Safety isTrunkOpen. */
            public isTrunkOpen: boolean;

            /** Safety isPassengerDetected. */
            public isPassengerDetected: boolean;

            /** Safety isPassengerAirbagEnabled. */
            public isPassengerAirbagEnabled: boolean;

            /** Safety isPassengerBuckled. */
            public isPassengerBuckled: boolean;

            /** Safety frontLeftTirePress. */
            public frontLeftTirePress: number;

            /** Safety frontRightTirePress. */
            public frontRightTirePress: number;

            /** Safety rearLeftTirePress. */
            public rearLeftTirePress: number;

            /** Safety rearRightTirePress. */
            public rearRightTirePress: number;

            /** Safety carDrivingMode. */
            public carDrivingMode: apollo.canbus.Chassis.DrivingMode;

            /**
             * Creates a new Safety instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Safety instance
             */
            public static create(properties?: apollo.canbus.ISafety): apollo.canbus.Safety;

            /**
             * Encodes the specified Safety message. Does not implicitly {@link apollo.canbus.Safety.verify|verify} messages.
             * @param message Safety message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISafety, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Safety message, length delimited. Does not implicitly {@link apollo.canbus.Safety.verify|verify} messages.
             * @param message Safety message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISafety, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Safety message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Safety
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Safety;

            /**
             * Decodes a Safety message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Safety
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Safety;

            /**
             * Verifies a Safety message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Safety message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Safety
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Safety;

            /**
             * Creates a plain object from a Safety message. Also converts values to other types if specified.
             * @param message Safety
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Safety, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Safety to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Safety
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a BasicInfo. */
        interface IBasicInfo {

            /** BasicInfo isAutoMode */
            isAutoMode?: (boolean|null);

            /** BasicInfo powerState */
            powerState?: (apollo.canbus.BasicInfo.Type|null);

            /** BasicInfo isAirBagDeployed */
            isAirBagDeployed?: (boolean|null);

            /** BasicInfo odoMeter */
            odoMeter?: (number|null);

            /** BasicInfo driveRange */
            driveRange?: (number|null);

            /** BasicInfo isSystemError */
            isSystemError?: (boolean|null);

            /** BasicInfo isHumanInterrupt */
            isHumanInterrupt?: (boolean|null);

            /** BasicInfo accOnButton */
            accOnButton?: (boolean|null);

            /** BasicInfo accOffButton */
            accOffButton?: (boolean|null);

            /** BasicInfo accResButton */
            accResButton?: (boolean|null);

            /** BasicInfo accCancelButton */
            accCancelButton?: (boolean|null);

            /** BasicInfo accOnOffButton */
            accOnOffButton?: (boolean|null);

            /** BasicInfo accResCancelButton */
            accResCancelButton?: (boolean|null);

            /** BasicInfo accIncSpdButton */
            accIncSpdButton?: (boolean|null);

            /** BasicInfo accDecSpdButton */
            accDecSpdButton?: (boolean|null);

            /** BasicInfo accIncGapButton */
            accIncGapButton?: (boolean|null);

            /** BasicInfo accDecGapButton */
            accDecGapButton?: (boolean|null);

            /** BasicInfo lkaButton */
            lkaButton?: (boolean|null);

            /** BasicInfo canbusFault */
            canbusFault?: (boolean|null);

            /** BasicInfo latitude */
            latitude?: (number|null);

            /** BasicInfo longitude */
            longitude?: (number|null);

            /** BasicInfo gpsValid */
            gpsValid?: (boolean|null);

            /** BasicInfo year */
            year?: (number|null);

            /** BasicInfo month */
            month?: (number|null);

            /** BasicInfo day */
            day?: (number|null);

            /** BasicInfo hours */
            hours?: (number|null);

            /** BasicInfo minutes */
            minutes?: (number|null);

            /** BasicInfo seconds */
            seconds?: (number|null);

            /** BasicInfo compassDirection */
            compassDirection?: (number|null);

            /** BasicInfo pdop */
            pdop?: (number|null);

            /** BasicInfo isGpsFault */
            isGpsFault?: (boolean|null);

            /** BasicInfo isInferred */
            isInferred?: (boolean|null);

            /** BasicInfo altitude */
            altitude?: (number|null);

            /** BasicInfo heading */
            heading?: (number|null);

            /** BasicInfo hdop */
            hdop?: (number|null);

            /** BasicInfo vdop */
            vdop?: (number|null);

            /** BasicInfo quality */
            quality?: (apollo.canbus.GpsQuality|null);

            /** BasicInfo numSatellites */
            numSatellites?: (number|null);

            /** BasicInfo gpsSpeed */
            gpsSpeed?: (number|null);
        }

        /** Represents a BasicInfo. */
        class BasicInfo implements IBasicInfo {

            /**
             * Constructs a new BasicInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBasicInfo);

            /** BasicInfo isAutoMode. */
            public isAutoMode: boolean;

            /** BasicInfo powerState. */
            public powerState: apollo.canbus.BasicInfo.Type;

            /** BasicInfo isAirBagDeployed. */
            public isAirBagDeployed: boolean;

            /** BasicInfo odoMeter. */
            public odoMeter: number;

            /** BasicInfo driveRange. */
            public driveRange: number;

            /** BasicInfo isSystemError. */
            public isSystemError: boolean;

            /** BasicInfo isHumanInterrupt. */
            public isHumanInterrupt: boolean;

            /** BasicInfo accOnButton. */
            public accOnButton: boolean;

            /** BasicInfo accOffButton. */
            public accOffButton: boolean;

            /** BasicInfo accResButton. */
            public accResButton: boolean;

            /** BasicInfo accCancelButton. */
            public accCancelButton: boolean;

            /** BasicInfo accOnOffButton. */
            public accOnOffButton: boolean;

            /** BasicInfo accResCancelButton. */
            public accResCancelButton: boolean;

            /** BasicInfo accIncSpdButton. */
            public accIncSpdButton: boolean;

            /** BasicInfo accDecSpdButton. */
            public accDecSpdButton: boolean;

            /** BasicInfo accIncGapButton. */
            public accIncGapButton: boolean;

            /** BasicInfo accDecGapButton. */
            public accDecGapButton: boolean;

            /** BasicInfo lkaButton. */
            public lkaButton: boolean;

            /** BasicInfo canbusFault. */
            public canbusFault: boolean;

            /** BasicInfo latitude. */
            public latitude: number;

            /** BasicInfo longitude. */
            public longitude: number;

            /** BasicInfo gpsValid. */
            public gpsValid: boolean;

            /** BasicInfo year. */
            public year: number;

            /** BasicInfo month. */
            public month: number;

            /** BasicInfo day. */
            public day: number;

            /** BasicInfo hours. */
            public hours: number;

            /** BasicInfo minutes. */
            public minutes: number;

            /** BasicInfo seconds. */
            public seconds: number;

            /** BasicInfo compassDirection. */
            public compassDirection: number;

            /** BasicInfo pdop. */
            public pdop: number;

            /** BasicInfo isGpsFault. */
            public isGpsFault: boolean;

            /** BasicInfo isInferred. */
            public isInferred: boolean;

            /** BasicInfo altitude. */
            public altitude: number;

            /** BasicInfo heading. */
            public heading: number;

            /** BasicInfo hdop. */
            public hdop: number;

            /** BasicInfo vdop. */
            public vdop: number;

            /** BasicInfo quality. */
            public quality: apollo.canbus.GpsQuality;

            /** BasicInfo numSatellites. */
            public numSatellites: number;

            /** BasicInfo gpsSpeed. */
            public gpsSpeed: number;

            /**
             * Creates a new BasicInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BasicInfo instance
             */
            public static create(properties?: apollo.canbus.IBasicInfo): apollo.canbus.BasicInfo;

            /**
             * Encodes the specified BasicInfo message. Does not implicitly {@link apollo.canbus.BasicInfo.verify|verify} messages.
             * @param message BasicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBasicInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BasicInfo message, length delimited. Does not implicitly {@link apollo.canbus.BasicInfo.verify|verify} messages.
             * @param message BasicInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBasicInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BasicInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BasicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.BasicInfo;

            /**
             * Decodes a BasicInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BasicInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.BasicInfo;

            /**
             * Verifies a BasicInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BasicInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BasicInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.BasicInfo;

            /**
             * Creates a plain object from a BasicInfo message. Also converts values to other types if specified.
             * @param message BasicInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.BasicInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BasicInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for BasicInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace BasicInfo {

            /** Type enum. */
            enum Type {
                OFF = 0,
                ACC = 1,
                ON = 2,
                START = 3,
                INVALID = 4
            }
        }

        /** Properties of a Global_rpt_6a. */
        interface IGlobal_rpt_6a {

            /** Global_rpt_6a pacmodStatus */
            pacmodStatus?: (apollo.canbus.Global_rpt_6a.Pacmod_statusType|null);

            /** Global_rpt_6a overrideStatus */
            overrideStatus?: (apollo.canbus.Global_rpt_6a.Override_statusType|null);

            /** Global_rpt_6a vehCanTimeout */
            vehCanTimeout?: (boolean|null);

            /** Global_rpt_6a strCanTimeout */
            strCanTimeout?: (boolean|null);

            /** Global_rpt_6a brkCanTimeout */
            brkCanTimeout?: (apollo.canbus.Global_rpt_6a.Brk_can_timeoutType|null);

            /** Global_rpt_6a usrCanTimeout */
            usrCanTimeout?: (boolean|null);

            /** Global_rpt_6a usrCanReadErrors */
            usrCanReadErrors?: (number|null);
        }

        /** Represents a Global_rpt_6a. */
        class Global_rpt_6a implements IGlobal_rpt_6a {

            /**
             * Constructs a new Global_rpt_6a.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IGlobal_rpt_6a);

            /** Global_rpt_6a pacmodStatus. */
            public pacmodStatus: apollo.canbus.Global_rpt_6a.Pacmod_statusType;

            /** Global_rpt_6a overrideStatus. */
            public overrideStatus: apollo.canbus.Global_rpt_6a.Override_statusType;

            /** Global_rpt_6a vehCanTimeout. */
            public vehCanTimeout: boolean;

            /** Global_rpt_6a strCanTimeout. */
            public strCanTimeout: boolean;

            /** Global_rpt_6a brkCanTimeout. */
            public brkCanTimeout: apollo.canbus.Global_rpt_6a.Brk_can_timeoutType;

            /** Global_rpt_6a usrCanTimeout. */
            public usrCanTimeout: boolean;

            /** Global_rpt_6a usrCanReadErrors. */
            public usrCanReadErrors: number;

            /**
             * Creates a new Global_rpt_6a instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Global_rpt_6a instance
             */
            public static create(properties?: apollo.canbus.IGlobal_rpt_6a): apollo.canbus.Global_rpt_6a;

            /**
             * Encodes the specified Global_rpt_6a message. Does not implicitly {@link apollo.canbus.Global_rpt_6a.verify|verify} messages.
             * @param message Global_rpt_6a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IGlobal_rpt_6a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Global_rpt_6a message, length delimited. Does not implicitly {@link apollo.canbus.Global_rpt_6a.verify|verify} messages.
             * @param message Global_rpt_6a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IGlobal_rpt_6a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Global_rpt_6a message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Global_rpt_6a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Global_rpt_6a;

            /**
             * Decodes a Global_rpt_6a message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Global_rpt_6a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Global_rpt_6a;

            /**
             * Verifies a Global_rpt_6a message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Global_rpt_6a message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Global_rpt_6a
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Global_rpt_6a;

            /**
             * Creates a plain object from a Global_rpt_6a message. Also converts values to other types if specified.
             * @param message Global_rpt_6a
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Global_rpt_6a, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Global_rpt_6a to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Global_rpt_6a
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Global_rpt_6a {

            /** Pacmod_statusType enum. */
            enum Pacmod_statusType {
                PACMOD_STATUS_CONTROL_DISABLED = 0,
                PACMOD_STATUS_CONTROL_ENABLED = 1
            }

            /** Override_statusType enum. */
            enum Override_statusType {
                OVERRIDE_STATUS_NOT_OVERRIDDEN = 0,
                OVERRIDE_STATUS_OVERRIDDEN = 1
            }

            /** Brk_can_timeoutType enum. */
            enum Brk_can_timeoutType {
                BRK_CAN_TIMEOUT_NO_ACTIVE_CAN_TIMEOUT = 0,
                BRK_CAN_TIMEOUT_ACTIVE_CAN_TIMEOUT = 1
            }
        }

        /** Properties of a Brake_cmd_6b. */
        interface IBrake_cmd_6b {

            /** Brake_cmd_6b brakeCmd */
            brakeCmd?: (number|null);
        }

        /** Represents a Brake_cmd_6b. */
        class Brake_cmd_6b implements IBrake_cmd_6b {

            /**
             * Constructs a new Brake_cmd_6b.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBrake_cmd_6b);

            /** Brake_cmd_6b brakeCmd. */
            public brakeCmd: number;

            /**
             * Creates a new Brake_cmd_6b instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Brake_cmd_6b instance
             */
            public static create(properties?: apollo.canbus.IBrake_cmd_6b): apollo.canbus.Brake_cmd_6b;

            /**
             * Encodes the specified Brake_cmd_6b message. Does not implicitly {@link apollo.canbus.Brake_cmd_6b.verify|verify} messages.
             * @param message Brake_cmd_6b message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBrake_cmd_6b, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Brake_cmd_6b message, length delimited. Does not implicitly {@link apollo.canbus.Brake_cmd_6b.verify|verify} messages.
             * @param message Brake_cmd_6b message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBrake_cmd_6b, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Brake_cmd_6b message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Brake_cmd_6b
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Brake_cmd_6b;

            /**
             * Decodes a Brake_cmd_6b message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Brake_cmd_6b
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Brake_cmd_6b;

            /**
             * Verifies a Brake_cmd_6b message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Brake_cmd_6b message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Brake_cmd_6b
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Brake_cmd_6b;

            /**
             * Creates a plain object from a Brake_cmd_6b message. Also converts values to other types if specified.
             * @param message Brake_cmd_6b
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Brake_cmd_6b, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Brake_cmd_6b to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Brake_cmd_6b
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Brake_rpt_6c. */
        interface IBrake_rpt_6c {

            /** Brake_rpt_6c manualInput */
            manualInput?: (number|null);

            /** Brake_rpt_6c commandedValue */
            commandedValue?: (number|null);

            /** Brake_rpt_6c outputValue */
            outputValue?: (number|null);

            /** Brake_rpt_6c brakeOnOff */
            brakeOnOff?: (apollo.canbus.Brake_rpt_6c.Brake_on_offType|null);
        }

        /** Represents a Brake_rpt_6c. */
        class Brake_rpt_6c implements IBrake_rpt_6c {

            /**
             * Constructs a new Brake_rpt_6c.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBrake_rpt_6c);

            /** Brake_rpt_6c manualInput. */
            public manualInput: number;

            /** Brake_rpt_6c commandedValue. */
            public commandedValue: number;

            /** Brake_rpt_6c outputValue. */
            public outputValue: number;

            /** Brake_rpt_6c brakeOnOff. */
            public brakeOnOff: apollo.canbus.Brake_rpt_6c.Brake_on_offType;

            /**
             * Creates a new Brake_rpt_6c instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Brake_rpt_6c instance
             */
            public static create(properties?: apollo.canbus.IBrake_rpt_6c): apollo.canbus.Brake_rpt_6c;

            /**
             * Encodes the specified Brake_rpt_6c message. Does not implicitly {@link apollo.canbus.Brake_rpt_6c.verify|verify} messages.
             * @param message Brake_rpt_6c message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBrake_rpt_6c, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Brake_rpt_6c message, length delimited. Does not implicitly {@link apollo.canbus.Brake_rpt_6c.verify|verify} messages.
             * @param message Brake_rpt_6c message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBrake_rpt_6c, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Brake_rpt_6c message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Brake_rpt_6c
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Brake_rpt_6c;

            /**
             * Decodes a Brake_rpt_6c message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Brake_rpt_6c
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Brake_rpt_6c;

            /**
             * Verifies a Brake_rpt_6c message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Brake_rpt_6c message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Brake_rpt_6c
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Brake_rpt_6c;

            /**
             * Creates a plain object from a Brake_rpt_6c message. Also converts values to other types if specified.
             * @param message Brake_rpt_6c
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Brake_rpt_6c, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Brake_rpt_6c to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Brake_rpt_6c
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Brake_rpt_6c {

            /** Brake_on_offType enum. */
            enum Brake_on_offType {
                BRAKE_ON_OFF_OFF = 0,
                BRAKE_ON_OFF_ON = 1
            }
        }

        /** Properties of a Steering_cmd_6d. */
        interface ISteering_cmd_6d {

            /** Steering_cmd_6d positionValue */
            positionValue?: (number|null);

            /** Steering_cmd_6d speedLimit */
            speedLimit?: (number|null);
        }

        /** Represents a Steering_cmd_6d. */
        class Steering_cmd_6d implements ISteering_cmd_6d {

            /**
             * Constructs a new Steering_cmd_6d.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISteering_cmd_6d);

            /** Steering_cmd_6d positionValue. */
            public positionValue: number;

            /** Steering_cmd_6d speedLimit. */
            public speedLimit: number;

            /**
             * Creates a new Steering_cmd_6d instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Steering_cmd_6d instance
             */
            public static create(properties?: apollo.canbus.ISteering_cmd_6d): apollo.canbus.Steering_cmd_6d;

            /**
             * Encodes the specified Steering_cmd_6d message. Does not implicitly {@link apollo.canbus.Steering_cmd_6d.verify|verify} messages.
             * @param message Steering_cmd_6d message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISteering_cmd_6d, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Steering_cmd_6d message, length delimited. Does not implicitly {@link apollo.canbus.Steering_cmd_6d.verify|verify} messages.
             * @param message Steering_cmd_6d message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISteering_cmd_6d, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Steering_cmd_6d message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Steering_cmd_6d
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Steering_cmd_6d;

            /**
             * Decodes a Steering_cmd_6d message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Steering_cmd_6d
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Steering_cmd_6d;

            /**
             * Verifies a Steering_cmd_6d message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Steering_cmd_6d message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Steering_cmd_6d
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Steering_cmd_6d;

            /**
             * Creates a plain object from a Steering_cmd_6d message. Also converts values to other types if specified.
             * @param message Steering_cmd_6d
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Steering_cmd_6d, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Steering_cmd_6d to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Steering_cmd_6d
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Steering_rpt_1_6e. */
        interface ISteering_rpt_1_6e {

            /** Steering_rpt_1_6e manualInput */
            manualInput?: (number|null);

            /** Steering_rpt_1_6e commandedValue */
            commandedValue?: (number|null);

            /** Steering_rpt_1_6e outputValue */
            outputValue?: (number|null);
        }

        /** Represents a Steering_rpt_1_6e. */
        class Steering_rpt_1_6e implements ISteering_rpt_1_6e {

            /**
             * Constructs a new Steering_rpt_1_6e.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISteering_rpt_1_6e);

            /** Steering_rpt_1_6e manualInput. */
            public manualInput: number;

            /** Steering_rpt_1_6e commandedValue. */
            public commandedValue: number;

            /** Steering_rpt_1_6e outputValue. */
            public outputValue: number;

            /**
             * Creates a new Steering_rpt_1_6e instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Steering_rpt_1_6e instance
             */
            public static create(properties?: apollo.canbus.ISteering_rpt_1_6e): apollo.canbus.Steering_rpt_1_6e;

            /**
             * Encodes the specified Steering_rpt_1_6e message. Does not implicitly {@link apollo.canbus.Steering_rpt_1_6e.verify|verify} messages.
             * @param message Steering_rpt_1_6e message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISteering_rpt_1_6e, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Steering_rpt_1_6e message, length delimited. Does not implicitly {@link apollo.canbus.Steering_rpt_1_6e.verify|verify} messages.
             * @param message Steering_rpt_1_6e message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISteering_rpt_1_6e, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Steering_rpt_1_6e message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Steering_rpt_1_6e
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Steering_rpt_1_6e;

            /**
             * Decodes a Steering_rpt_1_6e message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Steering_rpt_1_6e
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Steering_rpt_1_6e;

            /**
             * Verifies a Steering_rpt_1_6e message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Steering_rpt_1_6e message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Steering_rpt_1_6e
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Steering_rpt_1_6e;

            /**
             * Creates a plain object from a Steering_rpt_1_6e message. Also converts values to other types if specified.
             * @param message Steering_rpt_1_6e
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Steering_rpt_1_6e, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Steering_rpt_1_6e to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Steering_rpt_1_6e
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Wheel_speed_rpt_7a. */
        interface IWheel_speed_rpt_7a {

            /** Wheel_speed_rpt_7a wheelSpdRearRight */
            wheelSpdRearRight?: (number|null);

            /** Wheel_speed_rpt_7a wheelSpdRearLeft */
            wheelSpdRearLeft?: (number|null);

            /** Wheel_speed_rpt_7a wheelSpdFrontRight */
            wheelSpdFrontRight?: (number|null);

            /** Wheel_speed_rpt_7a wheelSpdFrontLeft */
            wheelSpdFrontLeft?: (number|null);
        }

        /** Represents a Wheel_speed_rpt_7a. */
        class Wheel_speed_rpt_7a implements IWheel_speed_rpt_7a {

            /**
             * Constructs a new Wheel_speed_rpt_7a.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IWheel_speed_rpt_7a);

            /** Wheel_speed_rpt_7a wheelSpdRearRight. */
            public wheelSpdRearRight: number;

            /** Wheel_speed_rpt_7a wheelSpdRearLeft. */
            public wheelSpdRearLeft: number;

            /** Wheel_speed_rpt_7a wheelSpdFrontRight. */
            public wheelSpdFrontRight: number;

            /** Wheel_speed_rpt_7a wheelSpdFrontLeft. */
            public wheelSpdFrontLeft: number;

            /**
             * Creates a new Wheel_speed_rpt_7a instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Wheel_speed_rpt_7a instance
             */
            public static create(properties?: apollo.canbus.IWheel_speed_rpt_7a): apollo.canbus.Wheel_speed_rpt_7a;

            /**
             * Encodes the specified Wheel_speed_rpt_7a message. Does not implicitly {@link apollo.canbus.Wheel_speed_rpt_7a.verify|verify} messages.
             * @param message Wheel_speed_rpt_7a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IWheel_speed_rpt_7a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Wheel_speed_rpt_7a message, length delimited. Does not implicitly {@link apollo.canbus.Wheel_speed_rpt_7a.verify|verify} messages.
             * @param message Wheel_speed_rpt_7a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IWheel_speed_rpt_7a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Wheel_speed_rpt_7a message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Wheel_speed_rpt_7a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Wheel_speed_rpt_7a;

            /**
             * Decodes a Wheel_speed_rpt_7a message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Wheel_speed_rpt_7a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Wheel_speed_rpt_7a;

            /**
             * Verifies a Wheel_speed_rpt_7a message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Wheel_speed_rpt_7a message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Wheel_speed_rpt_7a
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Wheel_speed_rpt_7a;

            /**
             * Creates a plain object from a Wheel_speed_rpt_7a message. Also converts values to other types if specified.
             * @param message Wheel_speed_rpt_7a
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Wheel_speed_rpt_7a, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Wheel_speed_rpt_7a to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Wheel_speed_rpt_7a
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Date_time_rpt_83. */
        interface IDate_time_rpt_83 {

            /** Date_time_rpt_83 timeSecond */
            timeSecond?: (number|null);

            /** Date_time_rpt_83 timeMinute */
            timeMinute?: (number|null);

            /** Date_time_rpt_83 timeHour */
            timeHour?: (number|null);

            /** Date_time_rpt_83 dateDay */
            dateDay?: (number|null);

            /** Date_time_rpt_83 dateMonth */
            dateMonth?: (number|null);

            /** Date_time_rpt_83 dateYear */
            dateYear?: (number|null);
        }

        /** Represents a Date_time_rpt_83. */
        class Date_time_rpt_83 implements IDate_time_rpt_83 {

            /**
             * Constructs a new Date_time_rpt_83.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IDate_time_rpt_83);

            /** Date_time_rpt_83 timeSecond. */
            public timeSecond: number;

            /** Date_time_rpt_83 timeMinute. */
            public timeMinute: number;

            /** Date_time_rpt_83 timeHour. */
            public timeHour: number;

            /** Date_time_rpt_83 dateDay. */
            public dateDay: number;

            /** Date_time_rpt_83 dateMonth. */
            public dateMonth: number;

            /** Date_time_rpt_83 dateYear. */
            public dateYear: number;

            /**
             * Creates a new Date_time_rpt_83 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Date_time_rpt_83 instance
             */
            public static create(properties?: apollo.canbus.IDate_time_rpt_83): apollo.canbus.Date_time_rpt_83;

            /**
             * Encodes the specified Date_time_rpt_83 message. Does not implicitly {@link apollo.canbus.Date_time_rpt_83.verify|verify} messages.
             * @param message Date_time_rpt_83 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IDate_time_rpt_83, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Date_time_rpt_83 message, length delimited. Does not implicitly {@link apollo.canbus.Date_time_rpt_83.verify|verify} messages.
             * @param message Date_time_rpt_83 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IDate_time_rpt_83, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Date_time_rpt_83 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Date_time_rpt_83
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Date_time_rpt_83;

            /**
             * Decodes a Date_time_rpt_83 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Date_time_rpt_83
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Date_time_rpt_83;

            /**
             * Verifies a Date_time_rpt_83 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Date_time_rpt_83 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Date_time_rpt_83
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Date_time_rpt_83;

            /**
             * Creates a plain object from a Date_time_rpt_83 message. Also converts values to other types if specified.
             * @param message Date_time_rpt_83
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Date_time_rpt_83, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Date_time_rpt_83 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Date_time_rpt_83
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Brake_motor_rpt_1_70. */
        interface IBrake_motor_rpt_1_70 {

            /** Brake_motor_rpt_1_70 motorCurrent */
            motorCurrent?: (number|null);

            /** Brake_motor_rpt_1_70 shaftPosition */
            shaftPosition?: (number|null);
        }

        /** Represents a Brake_motor_rpt_1_70. */
        class Brake_motor_rpt_1_70 implements IBrake_motor_rpt_1_70 {

            /**
             * Constructs a new Brake_motor_rpt_1_70.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBrake_motor_rpt_1_70);

            /** Brake_motor_rpt_1_70 motorCurrent. */
            public motorCurrent: number;

            /** Brake_motor_rpt_1_70 shaftPosition. */
            public shaftPosition: number;

            /**
             * Creates a new Brake_motor_rpt_1_70 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Brake_motor_rpt_1_70 instance
             */
            public static create(properties?: apollo.canbus.IBrake_motor_rpt_1_70): apollo.canbus.Brake_motor_rpt_1_70;

            /**
             * Encodes the specified Brake_motor_rpt_1_70 message. Does not implicitly {@link apollo.canbus.Brake_motor_rpt_1_70.verify|verify} messages.
             * @param message Brake_motor_rpt_1_70 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBrake_motor_rpt_1_70, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Brake_motor_rpt_1_70 message, length delimited. Does not implicitly {@link apollo.canbus.Brake_motor_rpt_1_70.verify|verify} messages.
             * @param message Brake_motor_rpt_1_70 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBrake_motor_rpt_1_70, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Brake_motor_rpt_1_70 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Brake_motor_rpt_1_70
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Brake_motor_rpt_1_70;

            /**
             * Decodes a Brake_motor_rpt_1_70 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Brake_motor_rpt_1_70
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Brake_motor_rpt_1_70;

            /**
             * Verifies a Brake_motor_rpt_1_70 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Brake_motor_rpt_1_70 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Brake_motor_rpt_1_70
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Brake_motor_rpt_1_70;

            /**
             * Creates a plain object from a Brake_motor_rpt_1_70 message. Also converts values to other types if specified.
             * @param message Brake_motor_rpt_1_70
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Brake_motor_rpt_1_70, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Brake_motor_rpt_1_70 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Brake_motor_rpt_1_70
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Headlight_rpt_77. */
        interface IHeadlight_rpt_77 {

            /** Headlight_rpt_77 outputValue */
            outputValue?: (apollo.canbus.Headlight_rpt_77.Output_valueType|null);

            /** Headlight_rpt_77 manualInput */
            manualInput?: (apollo.canbus.Headlight_rpt_77.Manual_inputType|null);

            /** Headlight_rpt_77 commandedValue */
            commandedValue?: (apollo.canbus.Headlight_rpt_77.Commanded_valueType|null);
        }

        /** Represents a Headlight_rpt_77. */
        class Headlight_rpt_77 implements IHeadlight_rpt_77 {

            /**
             * Constructs a new Headlight_rpt_77.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IHeadlight_rpt_77);

            /** Headlight_rpt_77 outputValue. */
            public outputValue: apollo.canbus.Headlight_rpt_77.Output_valueType;

            /** Headlight_rpt_77 manualInput. */
            public manualInput: apollo.canbus.Headlight_rpt_77.Manual_inputType;

            /** Headlight_rpt_77 commandedValue. */
            public commandedValue: apollo.canbus.Headlight_rpt_77.Commanded_valueType;

            /**
             * Creates a new Headlight_rpt_77 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Headlight_rpt_77 instance
             */
            public static create(properties?: apollo.canbus.IHeadlight_rpt_77): apollo.canbus.Headlight_rpt_77;

            /**
             * Encodes the specified Headlight_rpt_77 message. Does not implicitly {@link apollo.canbus.Headlight_rpt_77.verify|verify} messages.
             * @param message Headlight_rpt_77 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IHeadlight_rpt_77, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Headlight_rpt_77 message, length delimited. Does not implicitly {@link apollo.canbus.Headlight_rpt_77.verify|verify} messages.
             * @param message Headlight_rpt_77 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IHeadlight_rpt_77, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Headlight_rpt_77 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Headlight_rpt_77
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Headlight_rpt_77;

            /**
             * Decodes a Headlight_rpt_77 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Headlight_rpt_77
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Headlight_rpt_77;

            /**
             * Verifies a Headlight_rpt_77 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Headlight_rpt_77 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Headlight_rpt_77
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Headlight_rpt_77;

            /**
             * Creates a plain object from a Headlight_rpt_77 message. Also converts values to other types if specified.
             * @param message Headlight_rpt_77
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Headlight_rpt_77, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Headlight_rpt_77 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Headlight_rpt_77
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Headlight_rpt_77 {

            /** Output_valueType enum. */
            enum Output_valueType {
                OUTPUT_VALUE_HEADLIGHTS_OFF = 0,
                OUTPUT_VALUE_LOW_BEAMS = 1,
                OUTPUT_VALUE_HIGH_BEAMS = 2
            }

            /** Manual_inputType enum. */
            enum Manual_inputType {
                MANUAL_INPUT_HEADLIGHTS_OFF = 0,
                MANUAL_INPUT_LOW_BEAMS = 1,
                MANUAL_INPUT_HIGH_BEAMS = 2
            }

            /** Commanded_valueType enum. */
            enum Commanded_valueType {
                COMMANDED_VALUE_HEADLIGHTS_OFF = 0,
                COMMANDED_VALUE_LOW_BEAMS = 1,
                COMMANDED_VALUE_HIGH_BEAMS = 2
            }
        }

        /** Properties of an Accel_rpt_68. */
        interface IAccel_rpt_68 {

            /** Accel_rpt_68 manualInput */
            manualInput?: (number|null);

            /** Accel_rpt_68 commandedValue */
            commandedValue?: (number|null);

            /** Accel_rpt_68 outputValue */
            outputValue?: (number|null);
        }

        /** Represents an Accel_rpt_68. */
        class Accel_rpt_68 implements IAccel_rpt_68 {

            /**
             * Constructs a new Accel_rpt_68.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IAccel_rpt_68);

            /** Accel_rpt_68 manualInput. */
            public manualInput: number;

            /** Accel_rpt_68 commandedValue. */
            public commandedValue: number;

            /** Accel_rpt_68 outputValue. */
            public outputValue: number;

            /**
             * Creates a new Accel_rpt_68 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Accel_rpt_68 instance
             */
            public static create(properties?: apollo.canbus.IAccel_rpt_68): apollo.canbus.Accel_rpt_68;

            /**
             * Encodes the specified Accel_rpt_68 message. Does not implicitly {@link apollo.canbus.Accel_rpt_68.verify|verify} messages.
             * @param message Accel_rpt_68 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IAccel_rpt_68, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Accel_rpt_68 message, length delimited. Does not implicitly {@link apollo.canbus.Accel_rpt_68.verify|verify} messages.
             * @param message Accel_rpt_68 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IAccel_rpt_68, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Accel_rpt_68 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Accel_rpt_68
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Accel_rpt_68;

            /**
             * Decodes an Accel_rpt_68 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Accel_rpt_68
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Accel_rpt_68;

            /**
             * Verifies an Accel_rpt_68 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Accel_rpt_68 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Accel_rpt_68
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Accel_rpt_68;

            /**
             * Creates a plain object from an Accel_rpt_68 message. Also converts values to other types if specified.
             * @param message Accel_rpt_68
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Accel_rpt_68, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Accel_rpt_68 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Accel_rpt_68
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Steering_motor_rpt_3_75. */
        interface ISteering_motor_rpt_3_75 {

            /** Steering_motor_rpt_3_75 torqueOutput */
            torqueOutput?: (number|null);

            /** Steering_motor_rpt_3_75 torqueInput */
            torqueInput?: (number|null);
        }

        /** Represents a Steering_motor_rpt_3_75. */
        class Steering_motor_rpt_3_75 implements ISteering_motor_rpt_3_75 {

            /**
             * Constructs a new Steering_motor_rpt_3_75.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISteering_motor_rpt_3_75);

            /** Steering_motor_rpt_3_75 torqueOutput. */
            public torqueOutput: number;

            /** Steering_motor_rpt_3_75 torqueInput. */
            public torqueInput: number;

            /**
             * Creates a new Steering_motor_rpt_3_75 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Steering_motor_rpt_3_75 instance
             */
            public static create(properties?: apollo.canbus.ISteering_motor_rpt_3_75): apollo.canbus.Steering_motor_rpt_3_75;

            /**
             * Encodes the specified Steering_motor_rpt_3_75 message. Does not implicitly {@link apollo.canbus.Steering_motor_rpt_3_75.verify|verify} messages.
             * @param message Steering_motor_rpt_3_75 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISteering_motor_rpt_3_75, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Steering_motor_rpt_3_75 message, length delimited. Does not implicitly {@link apollo.canbus.Steering_motor_rpt_3_75.verify|verify} messages.
             * @param message Steering_motor_rpt_3_75 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISteering_motor_rpt_3_75, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Steering_motor_rpt_3_75 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Steering_motor_rpt_3_75
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Steering_motor_rpt_3_75;

            /**
             * Decodes a Steering_motor_rpt_3_75 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Steering_motor_rpt_3_75
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Steering_motor_rpt_3_75;

            /**
             * Verifies a Steering_motor_rpt_3_75 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Steering_motor_rpt_3_75 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Steering_motor_rpt_3_75
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Steering_motor_rpt_3_75;

            /**
             * Creates a plain object from a Steering_motor_rpt_3_75 message. Also converts values to other types if specified.
             * @param message Steering_motor_rpt_3_75
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Steering_motor_rpt_3_75, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Steering_motor_rpt_3_75 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Steering_motor_rpt_3_75
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Turn_cmd_63. */
        interface ITurn_cmd_63 {

            /** Turn_cmd_63 turnSignalCmd */
            turnSignalCmd?: (apollo.canbus.Turn_cmd_63.Turn_signal_cmdType|null);
        }

        /** Represents a Turn_cmd_63. */
        class Turn_cmd_63 implements ITurn_cmd_63 {

            /**
             * Constructs a new Turn_cmd_63.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ITurn_cmd_63);

            /** Turn_cmd_63 turnSignalCmd. */
            public turnSignalCmd: apollo.canbus.Turn_cmd_63.Turn_signal_cmdType;

            /**
             * Creates a new Turn_cmd_63 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Turn_cmd_63 instance
             */
            public static create(properties?: apollo.canbus.ITurn_cmd_63): apollo.canbus.Turn_cmd_63;

            /**
             * Encodes the specified Turn_cmd_63 message. Does not implicitly {@link apollo.canbus.Turn_cmd_63.verify|verify} messages.
             * @param message Turn_cmd_63 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ITurn_cmd_63, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Turn_cmd_63 message, length delimited. Does not implicitly {@link apollo.canbus.Turn_cmd_63.verify|verify} messages.
             * @param message Turn_cmd_63 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ITurn_cmd_63, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Turn_cmd_63 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Turn_cmd_63
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Turn_cmd_63;

            /**
             * Decodes a Turn_cmd_63 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Turn_cmd_63
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Turn_cmd_63;

            /**
             * Verifies a Turn_cmd_63 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Turn_cmd_63 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Turn_cmd_63
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Turn_cmd_63;

            /**
             * Creates a plain object from a Turn_cmd_63 message. Also converts values to other types if specified.
             * @param message Turn_cmd_63
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Turn_cmd_63, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Turn_cmd_63 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Turn_cmd_63
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Turn_cmd_63 {

            /** Turn_signal_cmdType enum. */
            enum Turn_signal_cmdType {
                TURN_SIGNAL_CMD_RIGHT = 0,
                TURN_SIGNAL_CMD_NONE = 1,
                TURN_SIGNAL_CMD_LEFT = 2,
                TURN_SIGNAL_CMD_HAZARD = 3
            }
        }

        /** Properties of a Turn_rpt_64. */
        interface ITurn_rpt_64 {

            /** Turn_rpt_64 manualInput */
            manualInput?: (apollo.canbus.Turn_rpt_64.Manual_inputType|null);

            /** Turn_rpt_64 commandedValue */
            commandedValue?: (apollo.canbus.Turn_rpt_64.Commanded_valueType|null);

            /** Turn_rpt_64 outputValue */
            outputValue?: (apollo.canbus.Turn_rpt_64.Output_valueType|null);
        }

        /** Represents a Turn_rpt_64. */
        class Turn_rpt_64 implements ITurn_rpt_64 {

            /**
             * Constructs a new Turn_rpt_64.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ITurn_rpt_64);

            /** Turn_rpt_64 manualInput. */
            public manualInput: apollo.canbus.Turn_rpt_64.Manual_inputType;

            /** Turn_rpt_64 commandedValue. */
            public commandedValue: apollo.canbus.Turn_rpt_64.Commanded_valueType;

            /** Turn_rpt_64 outputValue. */
            public outputValue: apollo.canbus.Turn_rpt_64.Output_valueType;

            /**
             * Creates a new Turn_rpt_64 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Turn_rpt_64 instance
             */
            public static create(properties?: apollo.canbus.ITurn_rpt_64): apollo.canbus.Turn_rpt_64;

            /**
             * Encodes the specified Turn_rpt_64 message. Does not implicitly {@link apollo.canbus.Turn_rpt_64.verify|verify} messages.
             * @param message Turn_rpt_64 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ITurn_rpt_64, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Turn_rpt_64 message, length delimited. Does not implicitly {@link apollo.canbus.Turn_rpt_64.verify|verify} messages.
             * @param message Turn_rpt_64 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ITurn_rpt_64, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Turn_rpt_64 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Turn_rpt_64
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Turn_rpt_64;

            /**
             * Decodes a Turn_rpt_64 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Turn_rpt_64
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Turn_rpt_64;

            /**
             * Verifies a Turn_rpt_64 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Turn_rpt_64 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Turn_rpt_64
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Turn_rpt_64;

            /**
             * Creates a plain object from a Turn_rpt_64 message. Also converts values to other types if specified.
             * @param message Turn_rpt_64
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Turn_rpt_64, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Turn_rpt_64 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Turn_rpt_64
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Turn_rpt_64 {

            /** Manual_inputType enum. */
            enum Manual_inputType {
                MANUAL_INPUT_RIGHT = 0,
                MANUAL_INPUT_NONE = 1,
                MANUAL_INPUT_LEFT = 2,
                MANUAL_INPUT_HAZARD = 3
            }

            /** Commanded_valueType enum. */
            enum Commanded_valueType {
                COMMANDED_VALUE_RIGHT = 0,
                COMMANDED_VALUE_NONE = 1,
                COMMANDED_VALUE_LEFT = 2,
                COMMANDED_VALUE_HAZARD = 3
            }

            /** Output_valueType enum. */
            enum Output_valueType {
                OUTPUT_VALUE_RIGHT = 0,
                OUTPUT_VALUE_NONE = 1,
                OUTPUT_VALUE_LEFT = 2,
                OUTPUT_VALUE_HAZARD = 3
            }
        }

        /** Properties of a Shift_cmd_65. */
        interface IShift_cmd_65 {

            /** Shift_cmd_65 shiftCmd */
            shiftCmd?: (apollo.canbus.Shift_cmd_65.Shift_cmdType|null);
        }

        /** Represents a Shift_cmd_65. */
        class Shift_cmd_65 implements IShift_cmd_65 {

            /**
             * Constructs a new Shift_cmd_65.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IShift_cmd_65);

            /** Shift_cmd_65 shiftCmd. */
            public shiftCmd: apollo.canbus.Shift_cmd_65.Shift_cmdType;

            /**
             * Creates a new Shift_cmd_65 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Shift_cmd_65 instance
             */
            public static create(properties?: apollo.canbus.IShift_cmd_65): apollo.canbus.Shift_cmd_65;

            /**
             * Encodes the specified Shift_cmd_65 message. Does not implicitly {@link apollo.canbus.Shift_cmd_65.verify|verify} messages.
             * @param message Shift_cmd_65 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IShift_cmd_65, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Shift_cmd_65 message, length delimited. Does not implicitly {@link apollo.canbus.Shift_cmd_65.verify|verify} messages.
             * @param message Shift_cmd_65 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IShift_cmd_65, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Shift_cmd_65 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Shift_cmd_65
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Shift_cmd_65;

            /**
             * Decodes a Shift_cmd_65 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Shift_cmd_65
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Shift_cmd_65;

            /**
             * Verifies a Shift_cmd_65 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Shift_cmd_65 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Shift_cmd_65
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Shift_cmd_65;

            /**
             * Creates a plain object from a Shift_cmd_65 message. Also converts values to other types if specified.
             * @param message Shift_cmd_65
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Shift_cmd_65, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Shift_cmd_65 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Shift_cmd_65
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Shift_cmd_65 {

            /** Shift_cmdType enum. */
            enum Shift_cmdType {
                SHIFT_CMD_PARK = 0,
                SHIFT_CMD_REVERSE = 1,
                SHIFT_CMD_NEUTRAL = 2,
                SHIFT_CMD_FORWARD = 3,
                SHIFT_CMD_LOW = 4
            }
        }

        /** Properties of a Shift_rpt_66. */
        interface IShift_rpt_66 {

            /** Shift_rpt_66 manualInput */
            manualInput?: (apollo.canbus.Shift_rpt_66.Manual_inputType|null);

            /** Shift_rpt_66 commandedValue */
            commandedValue?: (apollo.canbus.Shift_rpt_66.Commanded_valueType|null);

            /** Shift_rpt_66 outputValue */
            outputValue?: (apollo.canbus.Shift_rpt_66.Output_valueType|null);
        }

        /** Represents a Shift_rpt_66. */
        class Shift_rpt_66 implements IShift_rpt_66 {

            /**
             * Constructs a new Shift_rpt_66.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IShift_rpt_66);

            /** Shift_rpt_66 manualInput. */
            public manualInput: apollo.canbus.Shift_rpt_66.Manual_inputType;

            /** Shift_rpt_66 commandedValue. */
            public commandedValue: apollo.canbus.Shift_rpt_66.Commanded_valueType;

            /** Shift_rpt_66 outputValue. */
            public outputValue: apollo.canbus.Shift_rpt_66.Output_valueType;

            /**
             * Creates a new Shift_rpt_66 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Shift_rpt_66 instance
             */
            public static create(properties?: apollo.canbus.IShift_rpt_66): apollo.canbus.Shift_rpt_66;

            /**
             * Encodes the specified Shift_rpt_66 message. Does not implicitly {@link apollo.canbus.Shift_rpt_66.verify|verify} messages.
             * @param message Shift_rpt_66 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IShift_rpt_66, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Shift_rpt_66 message, length delimited. Does not implicitly {@link apollo.canbus.Shift_rpt_66.verify|verify} messages.
             * @param message Shift_rpt_66 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IShift_rpt_66, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Shift_rpt_66 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Shift_rpt_66
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Shift_rpt_66;

            /**
             * Decodes a Shift_rpt_66 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Shift_rpt_66
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Shift_rpt_66;

            /**
             * Verifies a Shift_rpt_66 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Shift_rpt_66 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Shift_rpt_66
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Shift_rpt_66;

            /**
             * Creates a plain object from a Shift_rpt_66 message. Also converts values to other types if specified.
             * @param message Shift_rpt_66
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Shift_rpt_66, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Shift_rpt_66 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Shift_rpt_66
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Shift_rpt_66 {

            /** Manual_inputType enum. */
            enum Manual_inputType {
                MANUAL_INPUT_PARK = 0,
                MANUAL_INPUT_REVERSE = 1,
                MANUAL_INPUT_NEUTRAL = 2,
                MANUAL_INPUT_FORWARD = 3,
                MANUAL_INPUT_HIGH = 4
            }

            /** Commanded_valueType enum. */
            enum Commanded_valueType {
                COMMANDED_VALUE_PARK = 0,
                COMMANDED_VALUE_REVERSE = 1,
                COMMANDED_VALUE_NEUTRAL = 2,
                COMMANDED_VALUE_FORWARD = 3,
                COMMANDED_VALUE_HIGH = 4
            }

            /** Output_valueType enum. */
            enum Output_valueType {
                OUTPUT_VALUE_PARK = 0,
                OUTPUT_VALUE_REVERSE = 1,
                OUTPUT_VALUE_NEUTRAL = 2,
                OUTPUT_VALUE_FORWARD = 3,
                OUTPUT_VALUE_HIGH = 4
            }
        }

        /** Properties of an Accel_cmd_67. */
        interface IAccel_cmd_67 {

            /** Accel_cmd_67 accelCmd */
            accelCmd?: (number|null);
        }

        /** Represents an Accel_cmd_67. */
        class Accel_cmd_67 implements IAccel_cmd_67 {

            /**
             * Constructs a new Accel_cmd_67.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IAccel_cmd_67);

            /** Accel_cmd_67 accelCmd. */
            public accelCmd: number;

            /**
             * Creates a new Accel_cmd_67 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Accel_cmd_67 instance
             */
            public static create(properties?: apollo.canbus.IAccel_cmd_67): apollo.canbus.Accel_cmd_67;

            /**
             * Encodes the specified Accel_cmd_67 message. Does not implicitly {@link apollo.canbus.Accel_cmd_67.verify|verify} messages.
             * @param message Accel_cmd_67 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IAccel_cmd_67, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Accel_cmd_67 message, length delimited. Does not implicitly {@link apollo.canbus.Accel_cmd_67.verify|verify} messages.
             * @param message Accel_cmd_67 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IAccel_cmd_67, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Accel_cmd_67 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Accel_cmd_67
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Accel_cmd_67;

            /**
             * Decodes an Accel_cmd_67 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Accel_cmd_67
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Accel_cmd_67;

            /**
             * Verifies an Accel_cmd_67 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Accel_cmd_67 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Accel_cmd_67
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Accel_cmd_67;

            /**
             * Creates a plain object from an Accel_cmd_67 message. Also converts values to other types if specified.
             * @param message Accel_cmd_67
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Accel_cmd_67, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Accel_cmd_67 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Accel_cmd_67
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Lat_lon_heading_rpt_82. */
        interface ILat_lon_heading_rpt_82 {

            /** Lat_lon_heading_rpt_82 heading */
            heading?: (number|null);

            /** Lat_lon_heading_rpt_82 longitudeSeconds */
            longitudeSeconds?: (number|null);

            /** Lat_lon_heading_rpt_82 longitudeMinutes */
            longitudeMinutes?: (number|null);

            /** Lat_lon_heading_rpt_82 longitudeDegrees */
            longitudeDegrees?: (number|null);

            /** Lat_lon_heading_rpt_82 latitudeSeconds */
            latitudeSeconds?: (number|null);

            /** Lat_lon_heading_rpt_82 latitudeMinutes */
            latitudeMinutes?: (number|null);

            /** Lat_lon_heading_rpt_82 latitudeDegrees */
            latitudeDegrees?: (number|null);
        }

        /** Represents a Lat_lon_heading_rpt_82. */
        class Lat_lon_heading_rpt_82 implements ILat_lon_heading_rpt_82 {

            /**
             * Constructs a new Lat_lon_heading_rpt_82.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ILat_lon_heading_rpt_82);

            /** Lat_lon_heading_rpt_82 heading. */
            public heading: number;

            /** Lat_lon_heading_rpt_82 longitudeSeconds. */
            public longitudeSeconds: number;

            /** Lat_lon_heading_rpt_82 longitudeMinutes. */
            public longitudeMinutes: number;

            /** Lat_lon_heading_rpt_82 longitudeDegrees. */
            public longitudeDegrees: number;

            /** Lat_lon_heading_rpt_82 latitudeSeconds. */
            public latitudeSeconds: number;

            /** Lat_lon_heading_rpt_82 latitudeMinutes. */
            public latitudeMinutes: number;

            /** Lat_lon_heading_rpt_82 latitudeDegrees. */
            public latitudeDegrees: number;

            /**
             * Creates a new Lat_lon_heading_rpt_82 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Lat_lon_heading_rpt_82 instance
             */
            public static create(properties?: apollo.canbus.ILat_lon_heading_rpt_82): apollo.canbus.Lat_lon_heading_rpt_82;

            /**
             * Encodes the specified Lat_lon_heading_rpt_82 message. Does not implicitly {@link apollo.canbus.Lat_lon_heading_rpt_82.verify|verify} messages.
             * @param message Lat_lon_heading_rpt_82 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ILat_lon_heading_rpt_82, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Lat_lon_heading_rpt_82 message, length delimited. Does not implicitly {@link apollo.canbus.Lat_lon_heading_rpt_82.verify|verify} messages.
             * @param message Lat_lon_heading_rpt_82 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ILat_lon_heading_rpt_82, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Lat_lon_heading_rpt_82 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Lat_lon_heading_rpt_82
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Lat_lon_heading_rpt_82;

            /**
             * Decodes a Lat_lon_heading_rpt_82 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Lat_lon_heading_rpt_82
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Lat_lon_heading_rpt_82;

            /**
             * Verifies a Lat_lon_heading_rpt_82 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Lat_lon_heading_rpt_82 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Lat_lon_heading_rpt_82
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Lat_lon_heading_rpt_82;

            /**
             * Creates a plain object from a Lat_lon_heading_rpt_82 message. Also converts values to other types if specified.
             * @param message Lat_lon_heading_rpt_82
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Lat_lon_heading_rpt_82, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Lat_lon_heading_rpt_82 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Lat_lon_heading_rpt_82
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Global_cmd_69. */
        interface IGlobal_cmd_69 {

            /** Global_cmd_69 pacmodEnable */
            pacmodEnable?: (apollo.canbus.Global_cmd_69.Pacmod_enableType|null);

            /** Global_cmd_69 clearOverride */
            clearOverride?: (apollo.canbus.Global_cmd_69.Clear_overrideType|null);

            /** Global_cmd_69 ignoreOverride */
            ignoreOverride?: (apollo.canbus.Global_cmd_69.Ignore_overrideType|null);
        }

        /** Represents a Global_cmd_69. */
        class Global_cmd_69 implements IGlobal_cmd_69 {

            /**
             * Constructs a new Global_cmd_69.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IGlobal_cmd_69);

            /** Global_cmd_69 pacmodEnable. */
            public pacmodEnable: apollo.canbus.Global_cmd_69.Pacmod_enableType;

            /** Global_cmd_69 clearOverride. */
            public clearOverride: apollo.canbus.Global_cmd_69.Clear_overrideType;

            /** Global_cmd_69 ignoreOverride. */
            public ignoreOverride: apollo.canbus.Global_cmd_69.Ignore_overrideType;

            /**
             * Creates a new Global_cmd_69 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Global_cmd_69 instance
             */
            public static create(properties?: apollo.canbus.IGlobal_cmd_69): apollo.canbus.Global_cmd_69;

            /**
             * Encodes the specified Global_cmd_69 message. Does not implicitly {@link apollo.canbus.Global_cmd_69.verify|verify} messages.
             * @param message Global_cmd_69 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IGlobal_cmd_69, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Global_cmd_69 message, length delimited. Does not implicitly {@link apollo.canbus.Global_cmd_69.verify|verify} messages.
             * @param message Global_cmd_69 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IGlobal_cmd_69, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Global_cmd_69 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Global_cmd_69
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Global_cmd_69;

            /**
             * Decodes a Global_cmd_69 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Global_cmd_69
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Global_cmd_69;

            /**
             * Verifies a Global_cmd_69 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Global_cmd_69 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Global_cmd_69
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Global_cmd_69;

            /**
             * Creates a plain object from a Global_cmd_69 message. Also converts values to other types if specified.
             * @param message Global_cmd_69
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Global_cmd_69, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Global_cmd_69 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Global_cmd_69
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Global_cmd_69 {

            /** Pacmod_enableType enum. */
            enum Pacmod_enableType {
                PACMOD_ENABLE_CONTROL_DISABLED = 0,
                PACMOD_ENABLE_CONTROL_ENABLED = 1
            }

            /** Clear_overrideType enum. */
            enum Clear_overrideType {
                CLEAR_OVERRIDE_DON_T_CLEAR_ACTIVE_OVERRIDES = 0,
                CLEAR_OVERRIDE_CLEAR_ACTIVE_OVERRIDES = 1
            }

            /** Ignore_overrideType enum. */
            enum Ignore_overrideType {
                IGNORE_OVERRIDE_DON_T_IGNORE_USER_OVERRIDES = 0,
                IGNORE_OVERRIDE_IGNORE_USER_OVERRIDES = 1
            }
        }

        /** Properties of a Parking_brake_status_rpt_80. */
        interface IParking_brake_status_rpt_80 {

            /** Parking_brake_status_rpt_80 parkingBrakeEnabled */
            parkingBrakeEnabled?: (apollo.canbus.Parking_brake_status_rpt_80.Parking_brake_enabledType|null);
        }

        /** Represents a Parking_brake_status_rpt_80. */
        class Parking_brake_status_rpt_80 implements IParking_brake_status_rpt_80 {

            /**
             * Constructs a new Parking_brake_status_rpt_80.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IParking_brake_status_rpt_80);

            /** Parking_brake_status_rpt_80 parkingBrakeEnabled. */
            public parkingBrakeEnabled: apollo.canbus.Parking_brake_status_rpt_80.Parking_brake_enabledType;

            /**
             * Creates a new Parking_brake_status_rpt_80 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Parking_brake_status_rpt_80 instance
             */
            public static create(properties?: apollo.canbus.IParking_brake_status_rpt_80): apollo.canbus.Parking_brake_status_rpt_80;

            /**
             * Encodes the specified Parking_brake_status_rpt_80 message. Does not implicitly {@link apollo.canbus.Parking_brake_status_rpt_80.verify|verify} messages.
             * @param message Parking_brake_status_rpt_80 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IParking_brake_status_rpt_80, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Parking_brake_status_rpt_80 message, length delimited. Does not implicitly {@link apollo.canbus.Parking_brake_status_rpt_80.verify|verify} messages.
             * @param message Parking_brake_status_rpt_80 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IParking_brake_status_rpt_80, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Parking_brake_status_rpt_80 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Parking_brake_status_rpt_80
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Parking_brake_status_rpt_80;

            /**
             * Decodes a Parking_brake_status_rpt_80 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Parking_brake_status_rpt_80
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Parking_brake_status_rpt_80;

            /**
             * Verifies a Parking_brake_status_rpt_80 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Parking_brake_status_rpt_80 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Parking_brake_status_rpt_80
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Parking_brake_status_rpt_80;

            /**
             * Creates a plain object from a Parking_brake_status_rpt_80 message. Also converts values to other types if specified.
             * @param message Parking_brake_status_rpt_80
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Parking_brake_status_rpt_80, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Parking_brake_status_rpt_80 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Parking_brake_status_rpt_80
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Parking_brake_status_rpt_80 {

            /** Parking_brake_enabledType enum. */
            enum Parking_brake_enabledType {
                PARKING_BRAKE_ENABLED_OFF = 0,
                PARKING_BRAKE_ENABLED_ON = 1
            }
        }

        /** Properties of a Yaw_rate_rpt_81. */
        interface IYaw_rate_rpt_81 {

            /** Yaw_rate_rpt_81 yawRate */
            yawRate?: (number|null);
        }

        /** Represents a Yaw_rate_rpt_81. */
        class Yaw_rate_rpt_81 implements IYaw_rate_rpt_81 {

            /**
             * Constructs a new Yaw_rate_rpt_81.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IYaw_rate_rpt_81);

            /** Yaw_rate_rpt_81 yawRate. */
            public yawRate: number;

            /**
             * Creates a new Yaw_rate_rpt_81 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Yaw_rate_rpt_81 instance
             */
            public static create(properties?: apollo.canbus.IYaw_rate_rpt_81): apollo.canbus.Yaw_rate_rpt_81;

            /**
             * Encodes the specified Yaw_rate_rpt_81 message. Does not implicitly {@link apollo.canbus.Yaw_rate_rpt_81.verify|verify} messages.
             * @param message Yaw_rate_rpt_81 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IYaw_rate_rpt_81, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Yaw_rate_rpt_81 message, length delimited. Does not implicitly {@link apollo.canbus.Yaw_rate_rpt_81.verify|verify} messages.
             * @param message Yaw_rate_rpt_81 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IYaw_rate_rpt_81, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Yaw_rate_rpt_81 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Yaw_rate_rpt_81
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Yaw_rate_rpt_81;

            /**
             * Decodes a Yaw_rate_rpt_81 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Yaw_rate_rpt_81
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Yaw_rate_rpt_81;

            /**
             * Verifies a Yaw_rate_rpt_81 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Yaw_rate_rpt_81 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Yaw_rate_rpt_81
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Yaw_rate_rpt_81;

            /**
             * Creates a plain object from a Yaw_rate_rpt_81 message. Also converts values to other types if specified.
             * @param message Yaw_rate_rpt_81
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Yaw_rate_rpt_81, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Yaw_rate_rpt_81 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Yaw_rate_rpt_81
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Horn_rpt_79. */
        interface IHorn_rpt_79 {

            /** Horn_rpt_79 outputValue */
            outputValue?: (apollo.canbus.Horn_rpt_79.Output_valueType|null);

            /** Horn_rpt_79 commandedValue */
            commandedValue?: (apollo.canbus.Horn_rpt_79.Commanded_valueType|null);

            /** Horn_rpt_79 manualInput */
            manualInput?: (apollo.canbus.Horn_rpt_79.Manual_inputType|null);
        }

        /** Represents a Horn_rpt_79. */
        class Horn_rpt_79 implements IHorn_rpt_79 {

            /**
             * Constructs a new Horn_rpt_79.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IHorn_rpt_79);

            /** Horn_rpt_79 outputValue. */
            public outputValue: apollo.canbus.Horn_rpt_79.Output_valueType;

            /** Horn_rpt_79 commandedValue. */
            public commandedValue: apollo.canbus.Horn_rpt_79.Commanded_valueType;

            /** Horn_rpt_79 manualInput. */
            public manualInput: apollo.canbus.Horn_rpt_79.Manual_inputType;

            /**
             * Creates a new Horn_rpt_79 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Horn_rpt_79 instance
             */
            public static create(properties?: apollo.canbus.IHorn_rpt_79): apollo.canbus.Horn_rpt_79;

            /**
             * Encodes the specified Horn_rpt_79 message. Does not implicitly {@link apollo.canbus.Horn_rpt_79.verify|verify} messages.
             * @param message Horn_rpt_79 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IHorn_rpt_79, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Horn_rpt_79 message, length delimited. Does not implicitly {@link apollo.canbus.Horn_rpt_79.verify|verify} messages.
             * @param message Horn_rpt_79 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IHorn_rpt_79, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Horn_rpt_79 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Horn_rpt_79
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Horn_rpt_79;

            /**
             * Decodes a Horn_rpt_79 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Horn_rpt_79
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Horn_rpt_79;

            /**
             * Verifies a Horn_rpt_79 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Horn_rpt_79 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Horn_rpt_79
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Horn_rpt_79;

            /**
             * Creates a plain object from a Horn_rpt_79 message. Also converts values to other types if specified.
             * @param message Horn_rpt_79
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Horn_rpt_79, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Horn_rpt_79 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Horn_rpt_79
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Horn_rpt_79 {

            /** Output_valueType enum. */
            enum Output_valueType {
                OUTPUT_VALUE_OFF = 0,
                OUTPUT_VALUE_ON = 1
            }

            /** Commanded_valueType enum. */
            enum Commanded_valueType {
                COMMANDED_VALUE_OFF = 0,
                COMMANDED_VALUE_ON = 1
            }

            /** Manual_inputType enum. */
            enum Manual_inputType {
                MANUAL_INPUT_OFF = 0,
                MANUAL_INPUT_ON = 1
            }
        }

        /** Properties of a Horn_cmd_78. */
        interface IHorn_cmd_78 {

            /** Horn_cmd_78 hornCmd */
            hornCmd?: (apollo.canbus.Horn_cmd_78.Horn_cmdType|null);
        }

        /** Represents a Horn_cmd_78. */
        class Horn_cmd_78 implements IHorn_cmd_78 {

            /**
             * Constructs a new Horn_cmd_78.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IHorn_cmd_78);

            /** Horn_cmd_78 hornCmd. */
            public hornCmd: apollo.canbus.Horn_cmd_78.Horn_cmdType;

            /**
             * Creates a new Horn_cmd_78 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Horn_cmd_78 instance
             */
            public static create(properties?: apollo.canbus.IHorn_cmd_78): apollo.canbus.Horn_cmd_78;

            /**
             * Encodes the specified Horn_cmd_78 message. Does not implicitly {@link apollo.canbus.Horn_cmd_78.verify|verify} messages.
             * @param message Horn_cmd_78 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IHorn_cmd_78, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Horn_cmd_78 message, length delimited. Does not implicitly {@link apollo.canbus.Horn_cmd_78.verify|verify} messages.
             * @param message Horn_cmd_78 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IHorn_cmd_78, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Horn_cmd_78 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Horn_cmd_78
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Horn_cmd_78;

            /**
             * Decodes a Horn_cmd_78 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Horn_cmd_78
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Horn_cmd_78;

            /**
             * Verifies a Horn_cmd_78 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Horn_cmd_78 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Horn_cmd_78
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Horn_cmd_78;

            /**
             * Creates a plain object from a Horn_cmd_78 message. Also converts values to other types if specified.
             * @param message Horn_cmd_78
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Horn_cmd_78, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Horn_cmd_78 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Horn_cmd_78
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Horn_cmd_78 {

            /** Horn_cmdType enum. */
            enum Horn_cmdType {
                HORN_CMD_OFF = 0,
                HORN_CMD_ON = 1
            }
        }

        /** Properties of a Wiper_rpt_91. */
        interface IWiper_rpt_91 {

            /** Wiper_rpt_91 outputValue */
            outputValue?: (apollo.canbus.Wiper_rpt_91.Output_valueType|null);

            /** Wiper_rpt_91 commandedValue */
            commandedValue?: (apollo.canbus.Wiper_rpt_91.Commanded_valueType|null);

            /** Wiper_rpt_91 manualInput */
            manualInput?: (apollo.canbus.Wiper_rpt_91.Manual_inputType|null);
        }

        /** Represents a Wiper_rpt_91. */
        class Wiper_rpt_91 implements IWiper_rpt_91 {

            /**
             * Constructs a new Wiper_rpt_91.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IWiper_rpt_91);

            /** Wiper_rpt_91 outputValue. */
            public outputValue: apollo.canbus.Wiper_rpt_91.Output_valueType;

            /** Wiper_rpt_91 commandedValue. */
            public commandedValue: apollo.canbus.Wiper_rpt_91.Commanded_valueType;

            /** Wiper_rpt_91 manualInput. */
            public manualInput: apollo.canbus.Wiper_rpt_91.Manual_inputType;

            /**
             * Creates a new Wiper_rpt_91 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Wiper_rpt_91 instance
             */
            public static create(properties?: apollo.canbus.IWiper_rpt_91): apollo.canbus.Wiper_rpt_91;

            /**
             * Encodes the specified Wiper_rpt_91 message. Does not implicitly {@link apollo.canbus.Wiper_rpt_91.verify|verify} messages.
             * @param message Wiper_rpt_91 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IWiper_rpt_91, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Wiper_rpt_91 message, length delimited. Does not implicitly {@link apollo.canbus.Wiper_rpt_91.verify|verify} messages.
             * @param message Wiper_rpt_91 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IWiper_rpt_91, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Wiper_rpt_91 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Wiper_rpt_91
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Wiper_rpt_91;

            /**
             * Decodes a Wiper_rpt_91 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Wiper_rpt_91
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Wiper_rpt_91;

            /**
             * Verifies a Wiper_rpt_91 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Wiper_rpt_91 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Wiper_rpt_91
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Wiper_rpt_91;

            /**
             * Creates a plain object from a Wiper_rpt_91 message. Also converts values to other types if specified.
             * @param message Wiper_rpt_91
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Wiper_rpt_91, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Wiper_rpt_91 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Wiper_rpt_91
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Wiper_rpt_91 {

            /** Output_valueType enum. */
            enum Output_valueType {
                OUTPUT_VALUE_WIPERS_OFF = 0,
                OUTPUT_VALUE_INTERMITTENT_1 = 1,
                OUTPUT_VALUE_INTERMITTENT_2 = 2,
                OUTPUT_VALUE_INTERMITTENT_3 = 3,
                OUTPUT_VALUE_INTERMITTENT_4 = 4,
                OUTPUT_VALUE_INTERMITTENT_5 = 5,
                OUTPUT_VALUE_LOW = 6,
                OUTPUT_VALUE_HIGH = 7
            }

            /** Commanded_valueType enum. */
            enum Commanded_valueType {
                COMMANDED_VALUE_WIPERS_OFF = 0,
                COMMANDED_VALUE_INTERMITTENT_1 = 1,
                COMMANDED_VALUE_INTERMITTENT_2 = 2,
                COMMANDED_VALUE_INTERMITTENT_3 = 3,
                COMMANDED_VALUE_INTERMITTENT_4 = 4,
                COMMANDED_VALUE_INTERMITTENT_5 = 5,
                COMMANDED_VALUE_LOW = 6,
                COMMANDED_VALUE_HIGH = 7
            }

            /** Manual_inputType enum. */
            enum Manual_inputType {
                MANUAL_INPUT_WIPERS_OFF = 0,
                MANUAL_INPUT_INTERMITTENT_1 = 1,
                MANUAL_INPUT_INTERMITTENT_2 = 2,
                MANUAL_INPUT_INTERMITTENT_3 = 3,
                MANUAL_INPUT_INTERMITTENT_4 = 4,
                MANUAL_INPUT_INTERMITTENT_5 = 5,
                MANUAL_INPUT_LOW = 6,
                MANUAL_INPUT_HIGH = 7
            }
        }

        /** Properties of a Vehicle_speed_rpt_6f. */
        interface IVehicle_speed_rpt_6f {

            /** Vehicle_speed_rpt_6f vehicleSpeed */
            vehicleSpeed?: (number|null);

            /** Vehicle_speed_rpt_6f vehicleSpeedValid */
            vehicleSpeedValid?: (apollo.canbus.Vehicle_speed_rpt_6f.Vehicle_speed_validType|null);
        }

        /** Represents a Vehicle_speed_rpt_6f. */
        class Vehicle_speed_rpt_6f implements IVehicle_speed_rpt_6f {

            /**
             * Constructs a new Vehicle_speed_rpt_6f.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IVehicle_speed_rpt_6f);

            /** Vehicle_speed_rpt_6f vehicleSpeed. */
            public vehicleSpeed: number;

            /** Vehicle_speed_rpt_6f vehicleSpeedValid. */
            public vehicleSpeedValid: apollo.canbus.Vehicle_speed_rpt_6f.Vehicle_speed_validType;

            /**
             * Creates a new Vehicle_speed_rpt_6f instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Vehicle_speed_rpt_6f instance
             */
            public static create(properties?: apollo.canbus.IVehicle_speed_rpt_6f): apollo.canbus.Vehicle_speed_rpt_6f;

            /**
             * Encodes the specified Vehicle_speed_rpt_6f message. Does not implicitly {@link apollo.canbus.Vehicle_speed_rpt_6f.verify|verify} messages.
             * @param message Vehicle_speed_rpt_6f message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IVehicle_speed_rpt_6f, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vehicle_speed_rpt_6f message, length delimited. Does not implicitly {@link apollo.canbus.Vehicle_speed_rpt_6f.verify|verify} messages.
             * @param message Vehicle_speed_rpt_6f message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IVehicle_speed_rpt_6f, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vehicle_speed_rpt_6f message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vehicle_speed_rpt_6f
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Vehicle_speed_rpt_6f;

            /**
             * Decodes a Vehicle_speed_rpt_6f message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vehicle_speed_rpt_6f
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Vehicle_speed_rpt_6f;

            /**
             * Verifies a Vehicle_speed_rpt_6f message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vehicle_speed_rpt_6f message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vehicle_speed_rpt_6f
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Vehicle_speed_rpt_6f;

            /**
             * Creates a plain object from a Vehicle_speed_rpt_6f message. Also converts values to other types if specified.
             * @param message Vehicle_speed_rpt_6f
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Vehicle_speed_rpt_6f, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vehicle_speed_rpt_6f to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Vehicle_speed_rpt_6f
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Vehicle_speed_rpt_6f {

            /** Vehicle_speed_validType enum. */
            enum Vehicle_speed_validType {
                VEHICLE_SPEED_VALID_INVALID = 0,
                VEHICLE_SPEED_VALID_VALID = 1
            }
        }

        /** Properties of a Headlight_cmd_76. */
        interface IHeadlight_cmd_76 {

            /** Headlight_cmd_76 headlightCmd */
            headlightCmd?: (apollo.canbus.Headlight_cmd_76.Headlight_cmdType|null);
        }

        /** Represents a Headlight_cmd_76. */
        class Headlight_cmd_76 implements IHeadlight_cmd_76 {

            /**
             * Constructs a new Headlight_cmd_76.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IHeadlight_cmd_76);

            /** Headlight_cmd_76 headlightCmd. */
            public headlightCmd: apollo.canbus.Headlight_cmd_76.Headlight_cmdType;

            /**
             * Creates a new Headlight_cmd_76 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Headlight_cmd_76 instance
             */
            public static create(properties?: apollo.canbus.IHeadlight_cmd_76): apollo.canbus.Headlight_cmd_76;

            /**
             * Encodes the specified Headlight_cmd_76 message. Does not implicitly {@link apollo.canbus.Headlight_cmd_76.verify|verify} messages.
             * @param message Headlight_cmd_76 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IHeadlight_cmd_76, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Headlight_cmd_76 message, length delimited. Does not implicitly {@link apollo.canbus.Headlight_cmd_76.verify|verify} messages.
             * @param message Headlight_cmd_76 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IHeadlight_cmd_76, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Headlight_cmd_76 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Headlight_cmd_76
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Headlight_cmd_76;

            /**
             * Decodes a Headlight_cmd_76 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Headlight_cmd_76
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Headlight_cmd_76;

            /**
             * Verifies a Headlight_cmd_76 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Headlight_cmd_76 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Headlight_cmd_76
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Headlight_cmd_76;

            /**
             * Creates a plain object from a Headlight_cmd_76 message. Also converts values to other types if specified.
             * @param message Headlight_cmd_76
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Headlight_cmd_76, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Headlight_cmd_76 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Headlight_cmd_76
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Headlight_cmd_76 {

            /** Headlight_cmdType enum. */
            enum Headlight_cmdType {
                HEADLIGHT_CMD_HEADLIGHTS_OFF = 0,
                HEADLIGHT_CMD_LOW_BEAMS = 1,
                HEADLIGHT_CMD_HIGH_BEAMS = 2
            }
        }

        /** Properties of a Steering_motor_rpt_2_74. */
        interface ISteering_motor_rpt_2_74 {

            /** Steering_motor_rpt_2_74 encoderTemperature */
            encoderTemperature?: (number|null);

            /** Steering_motor_rpt_2_74 motorTemperature */
            motorTemperature?: (number|null);

            /** Steering_motor_rpt_2_74 angularSpeed */
            angularSpeed?: (number|null);
        }

        /** Represents a Steering_motor_rpt_2_74. */
        class Steering_motor_rpt_2_74 implements ISteering_motor_rpt_2_74 {

            /**
             * Constructs a new Steering_motor_rpt_2_74.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISteering_motor_rpt_2_74);

            /** Steering_motor_rpt_2_74 encoderTemperature. */
            public encoderTemperature: number;

            /** Steering_motor_rpt_2_74 motorTemperature. */
            public motorTemperature: number;

            /** Steering_motor_rpt_2_74 angularSpeed. */
            public angularSpeed: number;

            /**
             * Creates a new Steering_motor_rpt_2_74 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Steering_motor_rpt_2_74 instance
             */
            public static create(properties?: apollo.canbus.ISteering_motor_rpt_2_74): apollo.canbus.Steering_motor_rpt_2_74;

            /**
             * Encodes the specified Steering_motor_rpt_2_74 message. Does not implicitly {@link apollo.canbus.Steering_motor_rpt_2_74.verify|verify} messages.
             * @param message Steering_motor_rpt_2_74 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISteering_motor_rpt_2_74, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Steering_motor_rpt_2_74 message, length delimited. Does not implicitly {@link apollo.canbus.Steering_motor_rpt_2_74.verify|verify} messages.
             * @param message Steering_motor_rpt_2_74 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISteering_motor_rpt_2_74, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Steering_motor_rpt_2_74 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Steering_motor_rpt_2_74
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Steering_motor_rpt_2_74;

            /**
             * Decodes a Steering_motor_rpt_2_74 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Steering_motor_rpt_2_74
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Steering_motor_rpt_2_74;

            /**
             * Verifies a Steering_motor_rpt_2_74 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Steering_motor_rpt_2_74 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Steering_motor_rpt_2_74
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Steering_motor_rpt_2_74;

            /**
             * Creates a plain object from a Steering_motor_rpt_2_74 message. Also converts values to other types if specified.
             * @param message Steering_motor_rpt_2_74
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Steering_motor_rpt_2_74, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Steering_motor_rpt_2_74 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Steering_motor_rpt_2_74
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Brake_motor_rpt_2_71. */
        interface IBrake_motor_rpt_2_71 {

            /** Brake_motor_rpt_2_71 encoderTemperature */
            encoderTemperature?: (number|null);

            /** Brake_motor_rpt_2_71 motorTemperature */
            motorTemperature?: (number|null);

            /** Brake_motor_rpt_2_71 angularSpeed */
            angularSpeed?: (number|null);
        }

        /** Represents a Brake_motor_rpt_2_71. */
        class Brake_motor_rpt_2_71 implements IBrake_motor_rpt_2_71 {

            /**
             * Constructs a new Brake_motor_rpt_2_71.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBrake_motor_rpt_2_71);

            /** Brake_motor_rpt_2_71 encoderTemperature. */
            public encoderTemperature: number;

            /** Brake_motor_rpt_2_71 motorTemperature. */
            public motorTemperature: number;

            /** Brake_motor_rpt_2_71 angularSpeed. */
            public angularSpeed: number;

            /**
             * Creates a new Brake_motor_rpt_2_71 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Brake_motor_rpt_2_71 instance
             */
            public static create(properties?: apollo.canbus.IBrake_motor_rpt_2_71): apollo.canbus.Brake_motor_rpt_2_71;

            /**
             * Encodes the specified Brake_motor_rpt_2_71 message. Does not implicitly {@link apollo.canbus.Brake_motor_rpt_2_71.verify|verify} messages.
             * @param message Brake_motor_rpt_2_71 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBrake_motor_rpt_2_71, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Brake_motor_rpt_2_71 message, length delimited. Does not implicitly {@link apollo.canbus.Brake_motor_rpt_2_71.verify|verify} messages.
             * @param message Brake_motor_rpt_2_71 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBrake_motor_rpt_2_71, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Brake_motor_rpt_2_71 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Brake_motor_rpt_2_71
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Brake_motor_rpt_2_71;

            /**
             * Decodes a Brake_motor_rpt_2_71 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Brake_motor_rpt_2_71
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Brake_motor_rpt_2_71;

            /**
             * Verifies a Brake_motor_rpt_2_71 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Brake_motor_rpt_2_71 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Brake_motor_rpt_2_71
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Brake_motor_rpt_2_71;

            /**
             * Creates a plain object from a Brake_motor_rpt_2_71 message. Also converts values to other types if specified.
             * @param message Brake_motor_rpt_2_71
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Brake_motor_rpt_2_71, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Brake_motor_rpt_2_71 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Brake_motor_rpt_2_71
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Steering_motor_rpt_1_73. */
        interface ISteering_motor_rpt_1_73 {

            /** Steering_motor_rpt_1_73 motorCurrent */
            motorCurrent?: (number|null);

            /** Steering_motor_rpt_1_73 shaftPosition */
            shaftPosition?: (number|null);
        }

        /** Represents a Steering_motor_rpt_1_73. */
        class Steering_motor_rpt_1_73 implements ISteering_motor_rpt_1_73 {

            /**
             * Constructs a new Steering_motor_rpt_1_73.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.ISteering_motor_rpt_1_73);

            /** Steering_motor_rpt_1_73 motorCurrent. */
            public motorCurrent: number;

            /** Steering_motor_rpt_1_73 shaftPosition. */
            public shaftPosition: number;

            /**
             * Creates a new Steering_motor_rpt_1_73 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Steering_motor_rpt_1_73 instance
             */
            public static create(properties?: apollo.canbus.ISteering_motor_rpt_1_73): apollo.canbus.Steering_motor_rpt_1_73;

            /**
             * Encodes the specified Steering_motor_rpt_1_73 message. Does not implicitly {@link apollo.canbus.Steering_motor_rpt_1_73.verify|verify} messages.
             * @param message Steering_motor_rpt_1_73 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.ISteering_motor_rpt_1_73, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Steering_motor_rpt_1_73 message, length delimited. Does not implicitly {@link apollo.canbus.Steering_motor_rpt_1_73.verify|verify} messages.
             * @param message Steering_motor_rpt_1_73 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.ISteering_motor_rpt_1_73, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Steering_motor_rpt_1_73 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Steering_motor_rpt_1_73
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Steering_motor_rpt_1_73;

            /**
             * Decodes a Steering_motor_rpt_1_73 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Steering_motor_rpt_1_73
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Steering_motor_rpt_1_73;

            /**
             * Verifies a Steering_motor_rpt_1_73 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Steering_motor_rpt_1_73 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Steering_motor_rpt_1_73
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Steering_motor_rpt_1_73;

            /**
             * Creates a plain object from a Steering_motor_rpt_1_73 message. Also converts values to other types if specified.
             * @param message Steering_motor_rpt_1_73
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Steering_motor_rpt_1_73, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Steering_motor_rpt_1_73 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Steering_motor_rpt_1_73
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Wiper_cmd_90. */
        interface IWiper_cmd_90 {

            /** Wiper_cmd_90 wiperCmd */
            wiperCmd?: (apollo.canbus.Wiper_cmd_90.Wiper_cmdType|null);
        }

        /** Represents a Wiper_cmd_90. */
        class Wiper_cmd_90 implements IWiper_cmd_90 {

            /**
             * Constructs a new Wiper_cmd_90.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IWiper_cmd_90);

            /** Wiper_cmd_90 wiperCmd. */
            public wiperCmd: apollo.canbus.Wiper_cmd_90.Wiper_cmdType;

            /**
             * Creates a new Wiper_cmd_90 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Wiper_cmd_90 instance
             */
            public static create(properties?: apollo.canbus.IWiper_cmd_90): apollo.canbus.Wiper_cmd_90;

            /**
             * Encodes the specified Wiper_cmd_90 message. Does not implicitly {@link apollo.canbus.Wiper_cmd_90.verify|verify} messages.
             * @param message Wiper_cmd_90 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IWiper_cmd_90, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Wiper_cmd_90 message, length delimited. Does not implicitly {@link apollo.canbus.Wiper_cmd_90.verify|verify} messages.
             * @param message Wiper_cmd_90 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IWiper_cmd_90, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Wiper_cmd_90 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Wiper_cmd_90
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Wiper_cmd_90;

            /**
             * Decodes a Wiper_cmd_90 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Wiper_cmd_90
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Wiper_cmd_90;

            /**
             * Verifies a Wiper_cmd_90 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Wiper_cmd_90 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Wiper_cmd_90
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Wiper_cmd_90;

            /**
             * Creates a plain object from a Wiper_cmd_90 message. Also converts values to other types if specified.
             * @param message Wiper_cmd_90
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Wiper_cmd_90, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Wiper_cmd_90 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Wiper_cmd_90
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Wiper_cmd_90 {

            /** Wiper_cmdType enum. */
            enum Wiper_cmdType {
                WIPER_CMD_WIPERS_OFF = 0,
                WIPER_CMD_INTERMITTENT_1 = 1,
                WIPER_CMD_INTERMITTENT_2 = 2,
                WIPER_CMD_INTERMITTENT_3 = 3,
                WIPER_CMD_INTERMITTENT_4 = 4,
                WIPER_CMD_INTERMITTENT_5 = 5,
                WIPER_CMD_LOW = 6,
                WIPER_CMD_HIGH = 7
            }
        }

        /** Properties of a Brake_motor_rpt_3_72. */
        interface IBrake_motor_rpt_3_72 {

            /** Brake_motor_rpt_3_72 torqueOutput */
            torqueOutput?: (number|null);

            /** Brake_motor_rpt_3_72 torqueInput */
            torqueInput?: (number|null);
        }

        /** Represents a Brake_motor_rpt_3_72. */
        class Brake_motor_rpt_3_72 implements IBrake_motor_rpt_3_72 {

            /**
             * Constructs a new Brake_motor_rpt_3_72.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IBrake_motor_rpt_3_72);

            /** Brake_motor_rpt_3_72 torqueOutput. */
            public torqueOutput: number;

            /** Brake_motor_rpt_3_72 torqueInput. */
            public torqueInput: number;

            /**
             * Creates a new Brake_motor_rpt_3_72 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Brake_motor_rpt_3_72 instance
             */
            public static create(properties?: apollo.canbus.IBrake_motor_rpt_3_72): apollo.canbus.Brake_motor_rpt_3_72;

            /**
             * Encodes the specified Brake_motor_rpt_3_72 message. Does not implicitly {@link apollo.canbus.Brake_motor_rpt_3_72.verify|verify} messages.
             * @param message Brake_motor_rpt_3_72 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IBrake_motor_rpt_3_72, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Brake_motor_rpt_3_72 message, length delimited. Does not implicitly {@link apollo.canbus.Brake_motor_rpt_3_72.verify|verify} messages.
             * @param message Brake_motor_rpt_3_72 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IBrake_motor_rpt_3_72, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Brake_motor_rpt_3_72 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Brake_motor_rpt_3_72
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Brake_motor_rpt_3_72;

            /**
             * Decodes a Brake_motor_rpt_3_72 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Brake_motor_rpt_3_72
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Brake_motor_rpt_3_72;

            /**
             * Verifies a Brake_motor_rpt_3_72 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Brake_motor_rpt_3_72 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Brake_motor_rpt_3_72
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Brake_motor_rpt_3_72;

            /**
             * Creates a plain object from a Brake_motor_rpt_3_72 message. Also converts values to other types if specified.
             * @param message Brake_motor_rpt_3_72
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Brake_motor_rpt_3_72, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Brake_motor_rpt_3_72 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Brake_motor_rpt_3_72
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Gem. */
        interface IGem {

            /** Gem globalRpt_6a */
            globalRpt_6a?: (apollo.canbus.IGlobal_rpt_6a|null);

            /** Gem brakeCmd_6b */
            brakeCmd_6b?: (apollo.canbus.IBrake_cmd_6b|null);

            /** Gem brakeRpt_6c */
            brakeRpt_6c?: (apollo.canbus.IBrake_rpt_6c|null);

            /** Gem steeringCmd_6d */
            steeringCmd_6d?: (apollo.canbus.ISteering_cmd_6d|null);

            /** Gem steeringRpt_1_6e */
            steeringRpt_1_6e?: (apollo.canbus.ISteering_rpt_1_6e|null);

            /** Gem wheelSpeedRpt_7a */
            wheelSpeedRpt_7a?: (apollo.canbus.IWheel_speed_rpt_7a|null);

            /** Gem dateTimeRpt_83 */
            dateTimeRpt_83?: (apollo.canbus.IDate_time_rpt_83|null);

            /** Gem brakeMotorRpt_1_70 */
            brakeMotorRpt_1_70?: (apollo.canbus.IBrake_motor_rpt_1_70|null);

            /** Gem headlightRpt_77 */
            headlightRpt_77?: (apollo.canbus.IHeadlight_rpt_77|null);

            /** Gem accelRpt_68 */
            accelRpt_68?: (apollo.canbus.IAccel_rpt_68|null);

            /** Gem steeringMotorRpt_3_75 */
            steeringMotorRpt_3_75?: (apollo.canbus.ISteering_motor_rpt_3_75|null);

            /** Gem turnCmd_63 */
            turnCmd_63?: (apollo.canbus.ITurn_cmd_63|null);

            /** Gem turnRpt_64 */
            turnRpt_64?: (apollo.canbus.ITurn_rpt_64|null);

            /** Gem shiftCmd_65 */
            shiftCmd_65?: (apollo.canbus.IShift_cmd_65|null);

            /** Gem shiftRpt_66 */
            shiftRpt_66?: (apollo.canbus.IShift_rpt_66|null);

            /** Gem accelCmd_67 */
            accelCmd_67?: (apollo.canbus.IAccel_cmd_67|null);

            /** Gem latLonHeadingRpt_82 */
            latLonHeadingRpt_82?: (apollo.canbus.ILat_lon_heading_rpt_82|null);

            /** Gem globalCmd_69 */
            globalCmd_69?: (apollo.canbus.IGlobal_cmd_69|null);

            /** Gem parkingBrakeStatusRpt_80 */
            parkingBrakeStatusRpt_80?: (apollo.canbus.IParking_brake_status_rpt_80|null);

            /** Gem yawRateRpt_81 */
            yawRateRpt_81?: (apollo.canbus.IYaw_rate_rpt_81|null);

            /** Gem hornRpt_79 */
            hornRpt_79?: (apollo.canbus.IHorn_rpt_79|null);

            /** Gem hornCmd_78 */
            hornCmd_78?: (apollo.canbus.IHorn_cmd_78|null);

            /** Gem wiperRpt_91 */
            wiperRpt_91?: (apollo.canbus.IWiper_rpt_91|null);

            /** Gem vehicleSpeedRpt_6f */
            vehicleSpeedRpt_6f?: (apollo.canbus.IVehicle_speed_rpt_6f|null);

            /** Gem headlightCmd_76 */
            headlightCmd_76?: (apollo.canbus.IHeadlight_cmd_76|null);

            /** Gem steeringMotorRpt_2_74 */
            steeringMotorRpt_2_74?: (apollo.canbus.ISteering_motor_rpt_2_74|null);

            /** Gem brakeMotorRpt_2_71 */
            brakeMotorRpt_2_71?: (apollo.canbus.IBrake_motor_rpt_2_71|null);

            /** Gem steeringMotorRpt_1_73 */
            steeringMotorRpt_1_73?: (apollo.canbus.ISteering_motor_rpt_1_73|null);

            /** Gem wiperCmd_90 */
            wiperCmd_90?: (apollo.canbus.IWiper_cmd_90|null);

            /** Gem brakeMotorRpt_3_72 */
            brakeMotorRpt_3_72?: (apollo.canbus.IBrake_motor_rpt_3_72|null);
        }

        /** Represents a Gem. */
        class Gem implements IGem {

            /**
             * Constructs a new Gem.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.canbus.IGem);

            /** Gem globalRpt_6a. */
            public globalRpt_6a?: (apollo.canbus.IGlobal_rpt_6a|null);

            /** Gem brakeCmd_6b. */
            public brakeCmd_6b?: (apollo.canbus.IBrake_cmd_6b|null);

            /** Gem brakeRpt_6c. */
            public brakeRpt_6c?: (apollo.canbus.IBrake_rpt_6c|null);

            /** Gem steeringCmd_6d. */
            public steeringCmd_6d?: (apollo.canbus.ISteering_cmd_6d|null);

            /** Gem steeringRpt_1_6e. */
            public steeringRpt_1_6e?: (apollo.canbus.ISteering_rpt_1_6e|null);

            /** Gem wheelSpeedRpt_7a. */
            public wheelSpeedRpt_7a?: (apollo.canbus.IWheel_speed_rpt_7a|null);

            /** Gem dateTimeRpt_83. */
            public dateTimeRpt_83?: (apollo.canbus.IDate_time_rpt_83|null);

            /** Gem brakeMotorRpt_1_70. */
            public brakeMotorRpt_1_70?: (apollo.canbus.IBrake_motor_rpt_1_70|null);

            /** Gem headlightRpt_77. */
            public headlightRpt_77?: (apollo.canbus.IHeadlight_rpt_77|null);

            /** Gem accelRpt_68. */
            public accelRpt_68?: (apollo.canbus.IAccel_rpt_68|null);

            /** Gem steeringMotorRpt_3_75. */
            public steeringMotorRpt_3_75?: (apollo.canbus.ISteering_motor_rpt_3_75|null);

            /** Gem turnCmd_63. */
            public turnCmd_63?: (apollo.canbus.ITurn_cmd_63|null);

            /** Gem turnRpt_64. */
            public turnRpt_64?: (apollo.canbus.ITurn_rpt_64|null);

            /** Gem shiftCmd_65. */
            public shiftCmd_65?: (apollo.canbus.IShift_cmd_65|null);

            /** Gem shiftRpt_66. */
            public shiftRpt_66?: (apollo.canbus.IShift_rpt_66|null);

            /** Gem accelCmd_67. */
            public accelCmd_67?: (apollo.canbus.IAccel_cmd_67|null);

            /** Gem latLonHeadingRpt_82. */
            public latLonHeadingRpt_82?: (apollo.canbus.ILat_lon_heading_rpt_82|null);

            /** Gem globalCmd_69. */
            public globalCmd_69?: (apollo.canbus.IGlobal_cmd_69|null);

            /** Gem parkingBrakeStatusRpt_80. */
            public parkingBrakeStatusRpt_80?: (apollo.canbus.IParking_brake_status_rpt_80|null);

            /** Gem yawRateRpt_81. */
            public yawRateRpt_81?: (apollo.canbus.IYaw_rate_rpt_81|null);

            /** Gem hornRpt_79. */
            public hornRpt_79?: (apollo.canbus.IHorn_rpt_79|null);

            /** Gem hornCmd_78. */
            public hornCmd_78?: (apollo.canbus.IHorn_cmd_78|null);

            /** Gem wiperRpt_91. */
            public wiperRpt_91?: (apollo.canbus.IWiper_rpt_91|null);

            /** Gem vehicleSpeedRpt_6f. */
            public vehicleSpeedRpt_6f?: (apollo.canbus.IVehicle_speed_rpt_6f|null);

            /** Gem headlightCmd_76. */
            public headlightCmd_76?: (apollo.canbus.IHeadlight_cmd_76|null);

            /** Gem steeringMotorRpt_2_74. */
            public steeringMotorRpt_2_74?: (apollo.canbus.ISteering_motor_rpt_2_74|null);

            /** Gem brakeMotorRpt_2_71. */
            public brakeMotorRpt_2_71?: (apollo.canbus.IBrake_motor_rpt_2_71|null);

            /** Gem steeringMotorRpt_1_73. */
            public steeringMotorRpt_1_73?: (apollo.canbus.ISteering_motor_rpt_1_73|null);

            /** Gem wiperCmd_90. */
            public wiperCmd_90?: (apollo.canbus.IWiper_cmd_90|null);

            /** Gem brakeMotorRpt_3_72. */
            public brakeMotorRpt_3_72?: (apollo.canbus.IBrake_motor_rpt_3_72|null);

            /**
             * Creates a new Gem instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Gem instance
             */
            public static create(properties?: apollo.canbus.IGem): apollo.canbus.Gem;

            /**
             * Encodes the specified Gem message. Does not implicitly {@link apollo.canbus.Gem.verify|verify} messages.
             * @param message Gem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.canbus.IGem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Gem message, length delimited. Does not implicitly {@link apollo.canbus.Gem.verify|verify} messages.
             * @param message Gem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.canbus.IGem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Gem message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Gem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.canbus.Gem;

            /**
             * Decodes a Gem message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Gem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.canbus.Gem;

            /**
             * Verifies a Gem message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Gem message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Gem
             */
            public static fromObject(object: { [k: string]: any }): apollo.canbus.Gem;

            /**
             * Creates a plain object from a Gem message. Also converts values to other types if specified.
             * @param message Gem
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.canbus.Gem, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Gem to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Gem
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace control. */
    namespace control {

        /** TurnSignal enum. */
        enum TurnSignal {
            TURN_NONE = 0,
            TURN_LEFT = 1,
            TURN_RIGHT = 2
        }

        /** Properties of a LatencyStats. */
        interface ILatencyStats {

            /** LatencyStats totalTimeMs */
            totalTimeMs?: (number|null);

            /** LatencyStats controllerTimeMs */
            controllerTimeMs?: (number[]|null);

            /** LatencyStats totalTimeExceeded */
            totalTimeExceeded?: (boolean|null);
        }

        /** Represents a LatencyStats. */
        class LatencyStats implements ILatencyStats {

            /**
             * Constructs a new LatencyStats.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.ILatencyStats);

            /** LatencyStats totalTimeMs. */
            public totalTimeMs: number;

            /** LatencyStats controllerTimeMs. */
            public controllerTimeMs: number[];

            /** LatencyStats totalTimeExceeded. */
            public totalTimeExceeded: boolean;

            /**
             * Creates a new LatencyStats instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LatencyStats instance
             */
            public static create(properties?: apollo.control.ILatencyStats): apollo.control.LatencyStats;

            /**
             * Encodes the specified LatencyStats message. Does not implicitly {@link apollo.control.LatencyStats.verify|verify} messages.
             * @param message LatencyStats message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.ILatencyStats, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LatencyStats message, length delimited. Does not implicitly {@link apollo.control.LatencyStats.verify|verify} messages.
             * @param message LatencyStats message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.ILatencyStats, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LatencyStats message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LatencyStats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.LatencyStats;

            /**
             * Decodes a LatencyStats message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LatencyStats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.LatencyStats;

            /**
             * Verifies a LatencyStats message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LatencyStats message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LatencyStats
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.LatencyStats;

            /**
             * Creates a plain object from a LatencyStats message. Also converts values to other types if specified.
             * @param message LatencyStats
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.LatencyStats, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LatencyStats to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LatencyStats
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ControlCommand. */
        interface IControlCommand {

            /** ControlCommand header */
            header?: (apollo.common.IHeader|null);

            /** ControlCommand throttle */
            throttle?: (number|null);

            /** ControlCommand brake */
            brake?: (number|null);

            /** ControlCommand steeringRate */
            steeringRate?: (number|null);

            /** ControlCommand steeringTarget */
            steeringTarget?: (number|null);

            /** ControlCommand parkingBrake */
            parkingBrake?: (boolean|null);

            /** ControlCommand speed */
            speed?: (number|null);

            /** ControlCommand acceleration */
            acceleration?: (number|null);

            /** ControlCommand resetModel */
            resetModel?: (boolean|null);

            /** ControlCommand engineOnOff */
            engineOnOff?: (boolean|null);

            /** ControlCommand trajectoryFraction */
            trajectoryFraction?: (number|null);

            /** ControlCommand drivingMode */
            drivingMode?: (apollo.canbus.Chassis.DrivingMode|null);

            /** ControlCommand gearLocation */
            gearLocation?: (apollo.canbus.Chassis.GearPosition|null);

            /** ControlCommand debug */
            debug?: (apollo.control.IDebug|null);

            /** ControlCommand signal */
            signal?: (apollo.common.IVehicleSignal|null);

            /** ControlCommand latencyStats */
            latencyStats?: (apollo.control.ILatencyStats|null);

            /** ControlCommand padMsg */
            padMsg?: (apollo.control.IPadMessage|null);

            /** ControlCommand engageAdvice */
            engageAdvice?: (apollo.common.IEngageAdvice|null);

            /** ControlCommand isInSafeMode */
            isInSafeMode?: (boolean|null);

            /** ControlCommand leftTurn */
            leftTurn?: (boolean|null);

            /** ControlCommand rightTurn */
            rightTurn?: (boolean|null);

            /** ControlCommand highBeam */
            highBeam?: (boolean|null);

            /** ControlCommand lowBeam */
            lowBeam?: (boolean|null);

            /** ControlCommand horn */
            horn?: (boolean|null);

            /** ControlCommand turnsignal */
            turnsignal?: (apollo.control.TurnSignal|null);
        }

        /** Represents a ControlCommand. */
        class ControlCommand implements IControlCommand {

            /**
             * Constructs a new ControlCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.IControlCommand);

            /** ControlCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** ControlCommand throttle. */
            public throttle: number;

            /** ControlCommand brake. */
            public brake: number;

            /** ControlCommand steeringRate. */
            public steeringRate: number;

            /** ControlCommand steeringTarget. */
            public steeringTarget: number;

            /** ControlCommand parkingBrake. */
            public parkingBrake: boolean;

            /** ControlCommand speed. */
            public speed: number;

            /** ControlCommand acceleration. */
            public acceleration: number;

            /** ControlCommand resetModel. */
            public resetModel: boolean;

            /** ControlCommand engineOnOff. */
            public engineOnOff: boolean;

            /** ControlCommand trajectoryFraction. */
            public trajectoryFraction: number;

            /** ControlCommand drivingMode. */
            public drivingMode: apollo.canbus.Chassis.DrivingMode;

            /** ControlCommand gearLocation. */
            public gearLocation: apollo.canbus.Chassis.GearPosition;

            /** ControlCommand debug. */
            public debug?: (apollo.control.IDebug|null);

            /** ControlCommand signal. */
            public signal?: (apollo.common.IVehicleSignal|null);

            /** ControlCommand latencyStats. */
            public latencyStats?: (apollo.control.ILatencyStats|null);

            /** ControlCommand padMsg. */
            public padMsg?: (apollo.control.IPadMessage|null);

            /** ControlCommand engageAdvice. */
            public engageAdvice?: (apollo.common.IEngageAdvice|null);

            /** ControlCommand isInSafeMode. */
            public isInSafeMode: boolean;

            /** ControlCommand leftTurn. */
            public leftTurn: boolean;

            /** ControlCommand rightTurn. */
            public rightTurn: boolean;

            /** ControlCommand highBeam. */
            public highBeam: boolean;

            /** ControlCommand lowBeam. */
            public lowBeam: boolean;

            /** ControlCommand horn. */
            public horn: boolean;

            /** ControlCommand turnsignal. */
            public turnsignal: apollo.control.TurnSignal;

            /**
             * Creates a new ControlCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ControlCommand instance
             */
            public static create(properties?: apollo.control.IControlCommand): apollo.control.ControlCommand;

            /**
             * Encodes the specified ControlCommand message. Does not implicitly {@link apollo.control.ControlCommand.verify|verify} messages.
             * @param message ControlCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.IControlCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ControlCommand message, length delimited. Does not implicitly {@link apollo.control.ControlCommand.verify|verify} messages.
             * @param message ControlCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.IControlCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ControlCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ControlCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.ControlCommand;

            /**
             * Decodes a ControlCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ControlCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.ControlCommand;

            /**
             * Verifies a ControlCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ControlCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ControlCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.ControlCommand;

            /**
             * Creates a plain object from a ControlCommand message. Also converts values to other types if specified.
             * @param message ControlCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.ControlCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ControlCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ControlCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SimpleLongitudinalDebug. */
        interface ISimpleLongitudinalDebug {

            /** SimpleLongitudinalDebug stationReference */
            stationReference?: (number|null);

            /** SimpleLongitudinalDebug stationError */
            stationError?: (number|null);

            /** SimpleLongitudinalDebug stationErrorLimited */
            stationErrorLimited?: (number|null);

            /** SimpleLongitudinalDebug previewStationError */
            previewStationError?: (number|null);

            /** SimpleLongitudinalDebug speedReference */
            speedReference?: (number|null);

            /** SimpleLongitudinalDebug speedError */
            speedError?: (number|null);

            /** SimpleLongitudinalDebug speedControllerInputLimited */
            speedControllerInputLimited?: (number|null);

            /** SimpleLongitudinalDebug previewSpeedReference */
            previewSpeedReference?: (number|null);

            /** SimpleLongitudinalDebug previewSpeedError */
            previewSpeedError?: (number|null);

            /** SimpleLongitudinalDebug previewAccelerationReference */
            previewAccelerationReference?: (number|null);

            /** SimpleLongitudinalDebug accelerationCmdCloseloop */
            accelerationCmdCloseloop?: (number|null);

            /** SimpleLongitudinalDebug accelerationCmd */
            accelerationCmd?: (number|null);

            /** SimpleLongitudinalDebug accelerationLookup */
            accelerationLookup?: (number|null);

            /** SimpleLongitudinalDebug speedLookup */
            speedLookup?: (number|null);

            /** SimpleLongitudinalDebug calibrationValue */
            calibrationValue?: (number|null);

            /** SimpleLongitudinalDebug throttleCmd */
            throttleCmd?: (number|null);

            /** SimpleLongitudinalDebug brakeCmd */
            brakeCmd?: (number|null);

            /** SimpleLongitudinalDebug isFullStop */
            isFullStop?: (boolean|null);

            /** SimpleLongitudinalDebug slopeOffsetCompensation */
            slopeOffsetCompensation?: (number|null);

            /** SimpleLongitudinalDebug currentStation */
            currentStation?: (number|null);

            /** SimpleLongitudinalDebug pathRemain */
            pathRemain?: (number|null);

            /** SimpleLongitudinalDebug pidSaturationStatus */
            pidSaturationStatus?: (number|null);

            /** SimpleLongitudinalDebug leadlagSaturationStatus */
            leadlagSaturationStatus?: (number|null);

            /** SimpleLongitudinalDebug speedOffset */
            speedOffset?: (number|null);

            /** SimpleLongitudinalDebug currentSpeed */
            currentSpeed?: (number|null);

            /** SimpleLongitudinalDebug accelerationReference */
            accelerationReference?: (number|null);

            /** SimpleLongitudinalDebug currentAcceleration */
            currentAcceleration?: (number|null);

            /** SimpleLongitudinalDebug accelerationError */
            accelerationError?: (number|null);

            /** SimpleLongitudinalDebug jerkReference */
            jerkReference?: (number|null);

            /** SimpleLongitudinalDebug currentJerk */
            currentJerk?: (number|null);

            /** SimpleLongitudinalDebug jerkError */
            jerkError?: (number|null);

            /** SimpleLongitudinalDebug currentMatchedPoint */
            currentMatchedPoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLongitudinalDebug currentReferencePoint */
            currentReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLongitudinalDebug previewReferencePoint */
            previewReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLongitudinalDebug accelerationLookupLimit */
            accelerationLookupLimit?: (number|null);

            /** SimpleLongitudinalDebug vehiclePitch */
            vehiclePitch?: (number|null);

            /** SimpleLongitudinalDebug isEpbBrake */
            isEpbBrake?: (boolean|null);

            /** SimpleLongitudinalDebug currentSteerInterval */
            currentSteerInterval?: (number|null);

            /** SimpleLongitudinalDebug isWaitSteer */
            isWaitSteer?: (boolean|null);

            /** SimpleLongitudinalDebug isStopReasonByDestination */
            isStopReasonByDestination?: (boolean|null);

            /** SimpleLongitudinalDebug isStopReasonByPrdestrian */
            isStopReasonByPrdestrian?: (boolean|null);

            /** SimpleLongitudinalDebug isFullStopSoft */
            isFullStopSoft?: (boolean|null);
        }

        /** Represents a SimpleLongitudinalDebug. */
        class SimpleLongitudinalDebug implements ISimpleLongitudinalDebug {

            /**
             * Constructs a new SimpleLongitudinalDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.ISimpleLongitudinalDebug);

            /** SimpleLongitudinalDebug stationReference. */
            public stationReference: number;

            /** SimpleLongitudinalDebug stationError. */
            public stationError: number;

            /** SimpleLongitudinalDebug stationErrorLimited. */
            public stationErrorLimited: number;

            /** SimpleLongitudinalDebug previewStationError. */
            public previewStationError: number;

            /** SimpleLongitudinalDebug speedReference. */
            public speedReference: number;

            /** SimpleLongitudinalDebug speedError. */
            public speedError: number;

            /** SimpleLongitudinalDebug speedControllerInputLimited. */
            public speedControllerInputLimited: number;

            /** SimpleLongitudinalDebug previewSpeedReference. */
            public previewSpeedReference: number;

            /** SimpleLongitudinalDebug previewSpeedError. */
            public previewSpeedError: number;

            /** SimpleLongitudinalDebug previewAccelerationReference. */
            public previewAccelerationReference: number;

            /** SimpleLongitudinalDebug accelerationCmdCloseloop. */
            public accelerationCmdCloseloop: number;

            /** SimpleLongitudinalDebug accelerationCmd. */
            public accelerationCmd: number;

            /** SimpleLongitudinalDebug accelerationLookup. */
            public accelerationLookup: number;

            /** SimpleLongitudinalDebug speedLookup. */
            public speedLookup: number;

            /** SimpleLongitudinalDebug calibrationValue. */
            public calibrationValue: number;

            /** SimpleLongitudinalDebug throttleCmd. */
            public throttleCmd: number;

            /** SimpleLongitudinalDebug brakeCmd. */
            public brakeCmd: number;

            /** SimpleLongitudinalDebug isFullStop. */
            public isFullStop: boolean;

            /** SimpleLongitudinalDebug slopeOffsetCompensation. */
            public slopeOffsetCompensation: number;

            /** SimpleLongitudinalDebug currentStation. */
            public currentStation: number;

            /** SimpleLongitudinalDebug pathRemain. */
            public pathRemain: number;

            /** SimpleLongitudinalDebug pidSaturationStatus. */
            public pidSaturationStatus: number;

            /** SimpleLongitudinalDebug leadlagSaturationStatus. */
            public leadlagSaturationStatus: number;

            /** SimpleLongitudinalDebug speedOffset. */
            public speedOffset: number;

            /** SimpleLongitudinalDebug currentSpeed. */
            public currentSpeed: number;

            /** SimpleLongitudinalDebug accelerationReference. */
            public accelerationReference: number;

            /** SimpleLongitudinalDebug currentAcceleration. */
            public currentAcceleration: number;

            /** SimpleLongitudinalDebug accelerationError. */
            public accelerationError: number;

            /** SimpleLongitudinalDebug jerkReference. */
            public jerkReference: number;

            /** SimpleLongitudinalDebug currentJerk. */
            public currentJerk: number;

            /** SimpleLongitudinalDebug jerkError. */
            public jerkError: number;

            /** SimpleLongitudinalDebug currentMatchedPoint. */
            public currentMatchedPoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLongitudinalDebug currentReferencePoint. */
            public currentReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLongitudinalDebug previewReferencePoint. */
            public previewReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLongitudinalDebug accelerationLookupLimit. */
            public accelerationLookupLimit: number;

            /** SimpleLongitudinalDebug vehiclePitch. */
            public vehiclePitch: number;

            /** SimpleLongitudinalDebug isEpbBrake. */
            public isEpbBrake: boolean;

            /** SimpleLongitudinalDebug currentSteerInterval. */
            public currentSteerInterval: number;

            /** SimpleLongitudinalDebug isWaitSteer. */
            public isWaitSteer: boolean;

            /** SimpleLongitudinalDebug isStopReasonByDestination. */
            public isStopReasonByDestination: boolean;

            /** SimpleLongitudinalDebug isStopReasonByPrdestrian. */
            public isStopReasonByPrdestrian: boolean;

            /** SimpleLongitudinalDebug isFullStopSoft. */
            public isFullStopSoft: boolean;

            /**
             * Creates a new SimpleLongitudinalDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SimpleLongitudinalDebug instance
             */
            public static create(properties?: apollo.control.ISimpleLongitudinalDebug): apollo.control.SimpleLongitudinalDebug;

            /**
             * Encodes the specified SimpleLongitudinalDebug message. Does not implicitly {@link apollo.control.SimpleLongitudinalDebug.verify|verify} messages.
             * @param message SimpleLongitudinalDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.ISimpleLongitudinalDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SimpleLongitudinalDebug message, length delimited. Does not implicitly {@link apollo.control.SimpleLongitudinalDebug.verify|verify} messages.
             * @param message SimpleLongitudinalDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.ISimpleLongitudinalDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimpleLongitudinalDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SimpleLongitudinalDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.SimpleLongitudinalDebug;

            /**
             * Decodes a SimpleLongitudinalDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SimpleLongitudinalDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.SimpleLongitudinalDebug;

            /**
             * Verifies a SimpleLongitudinalDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SimpleLongitudinalDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SimpleLongitudinalDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.SimpleLongitudinalDebug;

            /**
             * Creates a plain object from a SimpleLongitudinalDebug message. Also converts values to other types if specified.
             * @param message SimpleLongitudinalDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.SimpleLongitudinalDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SimpleLongitudinalDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SimpleLongitudinalDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SimpleLateralDebug. */
        interface ISimpleLateralDebug {

            /** SimpleLateralDebug lateralError */
            lateralError?: (number|null);

            /** SimpleLateralDebug refHeading */
            refHeading?: (number|null);

            /** SimpleLateralDebug heading */
            heading?: (number|null);

            /** SimpleLateralDebug headingError */
            headingError?: (number|null);

            /** SimpleLateralDebug headingErrorRate */
            headingErrorRate?: (number|null);

            /** SimpleLateralDebug lateralErrorRate */
            lateralErrorRate?: (number|null);

            /** SimpleLateralDebug curvature */
            curvature?: (number|null);

            /** SimpleLateralDebug steerAngle */
            steerAngle?: (number|null);

            /** SimpleLateralDebug steerAngleFeedforward */
            steerAngleFeedforward?: (number|null);

            /** SimpleLateralDebug steerAngleLateralContribution */
            steerAngleLateralContribution?: (number|null);

            /** SimpleLateralDebug steerAngleLateralRateContribution */
            steerAngleLateralRateContribution?: (number|null);

            /** SimpleLateralDebug steerAngleHeadingContribution */
            steerAngleHeadingContribution?: (number|null);

            /** SimpleLateralDebug steerAngleHeadingRateContribution */
            steerAngleHeadingRateContribution?: (number|null);

            /** SimpleLateralDebug steerAngleFeedback */
            steerAngleFeedback?: (number|null);

            /** SimpleLateralDebug steeringPosition */
            steeringPosition?: (number|null);

            /** SimpleLateralDebug refSpeed */
            refSpeed?: (number|null);

            /** SimpleLateralDebug steerAngleLimited */
            steerAngleLimited?: (number|null);

            /** SimpleLateralDebug lateralAcceleration */
            lateralAcceleration?: (number|null);

            /** SimpleLateralDebug lateralJerk */
            lateralJerk?: (number|null);

            /** SimpleLateralDebug refHeadingRate */
            refHeadingRate?: (number|null);

            /** SimpleLateralDebug headingRate */
            headingRate?: (number|null);

            /** SimpleLateralDebug refHeadingAcceleration */
            refHeadingAcceleration?: (number|null);

            /** SimpleLateralDebug headingAcceleration */
            headingAcceleration?: (number|null);

            /** SimpleLateralDebug headingErrorAcceleration */
            headingErrorAcceleration?: (number|null);

            /** SimpleLateralDebug refHeadingJerk */
            refHeadingJerk?: (number|null);

            /** SimpleLateralDebug headingJerk */
            headingJerk?: (number|null);

            /** SimpleLateralDebug headingErrorJerk */
            headingErrorJerk?: (number|null);

            /** SimpleLateralDebug lateralErrorFeedback */
            lateralErrorFeedback?: (number|null);

            /** SimpleLateralDebug headingErrorFeedback */
            headingErrorFeedback?: (number|null);

            /** SimpleLateralDebug currentTargetPoint */
            currentTargetPoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLateralDebug steerAngleFeedbackAugment */
            steerAngleFeedbackAugment?: (number|null);

            /** SimpleLateralDebug steerMracDebug */
            steerMracDebug?: (apollo.control.IMracDebug|null);

            /** SimpleLateralDebug steerMracEnableStatus */
            steerMracEnableStatus?: (boolean|null);
        }

        /** Represents a SimpleLateralDebug. */
        class SimpleLateralDebug implements ISimpleLateralDebug {

            /**
             * Constructs a new SimpleLateralDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.ISimpleLateralDebug);

            /** SimpleLateralDebug lateralError. */
            public lateralError: number;

            /** SimpleLateralDebug refHeading. */
            public refHeading: number;

            /** SimpleLateralDebug heading. */
            public heading: number;

            /** SimpleLateralDebug headingError. */
            public headingError: number;

            /** SimpleLateralDebug headingErrorRate. */
            public headingErrorRate: number;

            /** SimpleLateralDebug lateralErrorRate. */
            public lateralErrorRate: number;

            /** SimpleLateralDebug curvature. */
            public curvature: number;

            /** SimpleLateralDebug steerAngle. */
            public steerAngle: number;

            /** SimpleLateralDebug steerAngleFeedforward. */
            public steerAngleFeedforward: number;

            /** SimpleLateralDebug steerAngleLateralContribution. */
            public steerAngleLateralContribution: number;

            /** SimpleLateralDebug steerAngleLateralRateContribution. */
            public steerAngleLateralRateContribution: number;

            /** SimpleLateralDebug steerAngleHeadingContribution. */
            public steerAngleHeadingContribution: number;

            /** SimpleLateralDebug steerAngleHeadingRateContribution. */
            public steerAngleHeadingRateContribution: number;

            /** SimpleLateralDebug steerAngleFeedback. */
            public steerAngleFeedback: number;

            /** SimpleLateralDebug steeringPosition. */
            public steeringPosition: number;

            /** SimpleLateralDebug refSpeed. */
            public refSpeed: number;

            /** SimpleLateralDebug steerAngleLimited. */
            public steerAngleLimited: number;

            /** SimpleLateralDebug lateralAcceleration. */
            public lateralAcceleration: number;

            /** SimpleLateralDebug lateralJerk. */
            public lateralJerk: number;

            /** SimpleLateralDebug refHeadingRate. */
            public refHeadingRate: number;

            /** SimpleLateralDebug headingRate. */
            public headingRate: number;

            /** SimpleLateralDebug refHeadingAcceleration. */
            public refHeadingAcceleration: number;

            /** SimpleLateralDebug headingAcceleration. */
            public headingAcceleration: number;

            /** SimpleLateralDebug headingErrorAcceleration. */
            public headingErrorAcceleration: number;

            /** SimpleLateralDebug refHeadingJerk. */
            public refHeadingJerk: number;

            /** SimpleLateralDebug headingJerk. */
            public headingJerk: number;

            /** SimpleLateralDebug headingErrorJerk. */
            public headingErrorJerk: number;

            /** SimpleLateralDebug lateralErrorFeedback. */
            public lateralErrorFeedback: number;

            /** SimpleLateralDebug headingErrorFeedback. */
            public headingErrorFeedback: number;

            /** SimpleLateralDebug currentTargetPoint. */
            public currentTargetPoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleLateralDebug steerAngleFeedbackAugment. */
            public steerAngleFeedbackAugment: number;

            /** SimpleLateralDebug steerMracDebug. */
            public steerMracDebug?: (apollo.control.IMracDebug|null);

            /** SimpleLateralDebug steerMracEnableStatus. */
            public steerMracEnableStatus: boolean;

            /**
             * Creates a new SimpleLateralDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SimpleLateralDebug instance
             */
            public static create(properties?: apollo.control.ISimpleLateralDebug): apollo.control.SimpleLateralDebug;

            /**
             * Encodes the specified SimpleLateralDebug message. Does not implicitly {@link apollo.control.SimpleLateralDebug.verify|verify} messages.
             * @param message SimpleLateralDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.ISimpleLateralDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SimpleLateralDebug message, length delimited. Does not implicitly {@link apollo.control.SimpleLateralDebug.verify|verify} messages.
             * @param message SimpleLateralDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.ISimpleLateralDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimpleLateralDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SimpleLateralDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.SimpleLateralDebug;

            /**
             * Decodes a SimpleLateralDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SimpleLateralDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.SimpleLateralDebug;

            /**
             * Verifies a SimpleLateralDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SimpleLateralDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SimpleLateralDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.SimpleLateralDebug;

            /**
             * Creates a plain object from a SimpleLateralDebug message. Also converts values to other types if specified.
             * @param message SimpleLateralDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.SimpleLateralDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SimpleLateralDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SimpleLateralDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SimpleMPCDebug. */
        interface ISimpleMPCDebug {

            /** SimpleMPCDebug lateralError */
            lateralError?: (number|null);

            /** SimpleMPCDebug refHeading */
            refHeading?: (number|null);

            /** SimpleMPCDebug heading */
            heading?: (number|null);

            /** SimpleMPCDebug headingError */
            headingError?: (number|null);

            /** SimpleMPCDebug headingErrorRate */
            headingErrorRate?: (number|null);

            /** SimpleMPCDebug lateralErrorRate */
            lateralErrorRate?: (number|null);

            /** SimpleMPCDebug curvature */
            curvature?: (number|null);

            /** SimpleMPCDebug steerAngle */
            steerAngle?: (number|null);

            /** SimpleMPCDebug steerAngleFeedforward */
            steerAngleFeedforward?: (number|null);

            /** SimpleMPCDebug steerAngleLateralContribution */
            steerAngleLateralContribution?: (number|null);

            /** SimpleMPCDebug steerAngleLateralRateContribution */
            steerAngleLateralRateContribution?: (number|null);

            /** SimpleMPCDebug steerAngleHeadingContribution */
            steerAngleHeadingContribution?: (number|null);

            /** SimpleMPCDebug steerAngleHeadingRateContribution */
            steerAngleHeadingRateContribution?: (number|null);

            /** SimpleMPCDebug steerAngleFeedback */
            steerAngleFeedback?: (number|null);

            /** SimpleMPCDebug steeringPosition */
            steeringPosition?: (number|null);

            /** SimpleMPCDebug refSpeed */
            refSpeed?: (number|null);

            /** SimpleMPCDebug steerAngleLimited */
            steerAngleLimited?: (number|null);

            /** SimpleMPCDebug stationReference */
            stationReference?: (number|null);

            /** SimpleMPCDebug stationError */
            stationError?: (number|null);

            /** SimpleMPCDebug speedReference */
            speedReference?: (number|null);

            /** SimpleMPCDebug speedError */
            speedError?: (number|null);

            /** SimpleMPCDebug accelerationReference */
            accelerationReference?: (number|null);

            /** SimpleMPCDebug isFullStop */
            isFullStop?: (boolean|null);

            /** SimpleMPCDebug stationFeedback */
            stationFeedback?: (number|null);

            /** SimpleMPCDebug speedFeedback */
            speedFeedback?: (number|null);

            /** SimpleMPCDebug accelerationCmdCloseloop */
            accelerationCmdCloseloop?: (number|null);

            /** SimpleMPCDebug accelerationCmd */
            accelerationCmd?: (number|null);

            /** SimpleMPCDebug accelerationLookup */
            accelerationLookup?: (number|null);

            /** SimpleMPCDebug speedLookup */
            speedLookup?: (number|null);

            /** SimpleMPCDebug calibrationValue */
            calibrationValue?: (number|null);

            /** SimpleMPCDebug steerUnconstrainedControlDiff */
            steerUnconstrainedControlDiff?: (number|null);

            /** SimpleMPCDebug steerAngleFeedforwardCompensation */
            steerAngleFeedforwardCompensation?: (number|null);

            /** SimpleMPCDebug matrixQUpdated */
            matrixQUpdated?: (number[]|null);

            /** SimpleMPCDebug matrixRUpdated */
            matrixRUpdated?: (number[]|null);

            /** SimpleMPCDebug lateralAcceleration */
            lateralAcceleration?: (number|null);

            /** SimpleMPCDebug lateralJerk */
            lateralJerk?: (number|null);

            /** SimpleMPCDebug refHeadingRate */
            refHeadingRate?: (number|null);

            /** SimpleMPCDebug headingRate */
            headingRate?: (number|null);

            /** SimpleMPCDebug refHeadingAcceleration */
            refHeadingAcceleration?: (number|null);

            /** SimpleMPCDebug headingAcceleration */
            headingAcceleration?: (number|null);

            /** SimpleMPCDebug headingErrorAcceleration */
            headingErrorAcceleration?: (number|null);

            /** SimpleMPCDebug refHeadingJerk */
            refHeadingJerk?: (number|null);

            /** SimpleMPCDebug headingJerk */
            headingJerk?: (number|null);

            /** SimpleMPCDebug headingErrorJerk */
            headingErrorJerk?: (number|null);

            /** SimpleMPCDebug accelerationFeedback */
            accelerationFeedback?: (number|null);

            /** SimpleMPCDebug accelerationError */
            accelerationError?: (number|null);

            /** SimpleMPCDebug jerkReference */
            jerkReference?: (number|null);

            /** SimpleMPCDebug jerkFeedback */
            jerkFeedback?: (number|null);

            /** SimpleMPCDebug jerkError */
            jerkError?: (number|null);

            /** SimpleMPCDebug lateralErrorFeedback */
            lateralErrorFeedback?: (number|null);

            /** SimpleMPCDebug headingErrorFeedback */
            headingErrorFeedback?: (number|null);

            /** SimpleMPCDebug steerAngleFeedbackAugment */
            steerAngleFeedbackAugment?: (number|null);

            /** SimpleMPCDebug currentMatchedPoint */
            currentMatchedPoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleMPCDebug currentReferencePoint */
            currentReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleMPCDebug previewReferencePoint */
            previewReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleMPCDebug previewStationError */
            previewStationError?: (number|null);

            /** SimpleMPCDebug previewSpeedReference */
            previewSpeedReference?: (number|null);

            /** SimpleMPCDebug previewSpeedError */
            previewSpeedError?: (number|null);

            /** SimpleMPCDebug previewAccelerationReference */
            previewAccelerationReference?: (number|null);

            /** SimpleMPCDebug vehiclePitch */
            vehiclePitch?: (number|null);

            /** SimpleMPCDebug slopeOffsetCompensation */
            slopeOffsetCompensation?: (number|null);

            /** SimpleMPCDebug pathRemain */
            pathRemain?: (number|null);

            /** SimpleMPCDebug accelerationLookupOffset */
            accelerationLookupOffset?: (number|null);

            /** SimpleMPCDebug accelerationVrf */
            accelerationVrf?: (number|null);
        }

        /** Represents a SimpleMPCDebug. */
        class SimpleMPCDebug implements ISimpleMPCDebug {

            /**
             * Constructs a new SimpleMPCDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.ISimpleMPCDebug);

            /** SimpleMPCDebug lateralError. */
            public lateralError: number;

            /** SimpleMPCDebug refHeading. */
            public refHeading: number;

            /** SimpleMPCDebug heading. */
            public heading: number;

            /** SimpleMPCDebug headingError. */
            public headingError: number;

            /** SimpleMPCDebug headingErrorRate. */
            public headingErrorRate: number;

            /** SimpleMPCDebug lateralErrorRate. */
            public lateralErrorRate: number;

            /** SimpleMPCDebug curvature. */
            public curvature: number;

            /** SimpleMPCDebug steerAngle. */
            public steerAngle: number;

            /** SimpleMPCDebug steerAngleFeedforward. */
            public steerAngleFeedforward: number;

            /** SimpleMPCDebug steerAngleLateralContribution. */
            public steerAngleLateralContribution: number;

            /** SimpleMPCDebug steerAngleLateralRateContribution. */
            public steerAngleLateralRateContribution: number;

            /** SimpleMPCDebug steerAngleHeadingContribution. */
            public steerAngleHeadingContribution: number;

            /** SimpleMPCDebug steerAngleHeadingRateContribution. */
            public steerAngleHeadingRateContribution: number;

            /** SimpleMPCDebug steerAngleFeedback. */
            public steerAngleFeedback: number;

            /** SimpleMPCDebug steeringPosition. */
            public steeringPosition: number;

            /** SimpleMPCDebug refSpeed. */
            public refSpeed: number;

            /** SimpleMPCDebug steerAngleLimited. */
            public steerAngleLimited: number;

            /** SimpleMPCDebug stationReference. */
            public stationReference: number;

            /** SimpleMPCDebug stationError. */
            public stationError: number;

            /** SimpleMPCDebug speedReference. */
            public speedReference: number;

            /** SimpleMPCDebug speedError. */
            public speedError: number;

            /** SimpleMPCDebug accelerationReference. */
            public accelerationReference: number;

            /** SimpleMPCDebug isFullStop. */
            public isFullStop: boolean;

            /** SimpleMPCDebug stationFeedback. */
            public stationFeedback: number;

            /** SimpleMPCDebug speedFeedback. */
            public speedFeedback: number;

            /** SimpleMPCDebug accelerationCmdCloseloop. */
            public accelerationCmdCloseloop: number;

            /** SimpleMPCDebug accelerationCmd. */
            public accelerationCmd: number;

            /** SimpleMPCDebug accelerationLookup. */
            public accelerationLookup: number;

            /** SimpleMPCDebug speedLookup. */
            public speedLookup: number;

            /** SimpleMPCDebug calibrationValue. */
            public calibrationValue: number;

            /** SimpleMPCDebug steerUnconstrainedControlDiff. */
            public steerUnconstrainedControlDiff: number;

            /** SimpleMPCDebug steerAngleFeedforwardCompensation. */
            public steerAngleFeedforwardCompensation: number;

            /** SimpleMPCDebug matrixQUpdated. */
            public matrixQUpdated: number[];

            /** SimpleMPCDebug matrixRUpdated. */
            public matrixRUpdated: number[];

            /** SimpleMPCDebug lateralAcceleration. */
            public lateralAcceleration: number;

            /** SimpleMPCDebug lateralJerk. */
            public lateralJerk: number;

            /** SimpleMPCDebug refHeadingRate. */
            public refHeadingRate: number;

            /** SimpleMPCDebug headingRate. */
            public headingRate: number;

            /** SimpleMPCDebug refHeadingAcceleration. */
            public refHeadingAcceleration: number;

            /** SimpleMPCDebug headingAcceleration. */
            public headingAcceleration: number;

            /** SimpleMPCDebug headingErrorAcceleration. */
            public headingErrorAcceleration: number;

            /** SimpleMPCDebug refHeadingJerk. */
            public refHeadingJerk: number;

            /** SimpleMPCDebug headingJerk. */
            public headingJerk: number;

            /** SimpleMPCDebug headingErrorJerk. */
            public headingErrorJerk: number;

            /** SimpleMPCDebug accelerationFeedback. */
            public accelerationFeedback: number;

            /** SimpleMPCDebug accelerationError. */
            public accelerationError: number;

            /** SimpleMPCDebug jerkReference. */
            public jerkReference: number;

            /** SimpleMPCDebug jerkFeedback. */
            public jerkFeedback: number;

            /** SimpleMPCDebug jerkError. */
            public jerkError: number;

            /** SimpleMPCDebug lateralErrorFeedback. */
            public lateralErrorFeedback: number;

            /** SimpleMPCDebug headingErrorFeedback. */
            public headingErrorFeedback: number;

            /** SimpleMPCDebug steerAngleFeedbackAugment. */
            public steerAngleFeedbackAugment: number;

            /** SimpleMPCDebug currentMatchedPoint. */
            public currentMatchedPoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleMPCDebug currentReferencePoint. */
            public currentReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleMPCDebug previewReferencePoint. */
            public previewReferencePoint?: (apollo.common.ITrajectoryPoint|null);

            /** SimpleMPCDebug previewStationError. */
            public previewStationError: number;

            /** SimpleMPCDebug previewSpeedReference. */
            public previewSpeedReference: number;

            /** SimpleMPCDebug previewSpeedError. */
            public previewSpeedError: number;

            /** SimpleMPCDebug previewAccelerationReference. */
            public previewAccelerationReference: number;

            /** SimpleMPCDebug vehiclePitch. */
            public vehiclePitch: number;

            /** SimpleMPCDebug slopeOffsetCompensation. */
            public slopeOffsetCompensation: number;

            /** SimpleMPCDebug pathRemain. */
            public pathRemain: number;

            /** SimpleMPCDebug accelerationLookupOffset. */
            public accelerationLookupOffset: number;

            /** SimpleMPCDebug accelerationVrf. */
            public accelerationVrf: number;

            /**
             * Creates a new SimpleMPCDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SimpleMPCDebug instance
             */
            public static create(properties?: apollo.control.ISimpleMPCDebug): apollo.control.SimpleMPCDebug;

            /**
             * Encodes the specified SimpleMPCDebug message. Does not implicitly {@link apollo.control.SimpleMPCDebug.verify|verify} messages.
             * @param message SimpleMPCDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.ISimpleMPCDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SimpleMPCDebug message, length delimited. Does not implicitly {@link apollo.control.SimpleMPCDebug.verify|verify} messages.
             * @param message SimpleMPCDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.ISimpleMPCDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SimpleMPCDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SimpleMPCDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.SimpleMPCDebug;

            /**
             * Decodes a SimpleMPCDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SimpleMPCDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.SimpleMPCDebug;

            /**
             * Verifies a SimpleMPCDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SimpleMPCDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SimpleMPCDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.SimpleMPCDebug;

            /**
             * Creates a plain object from a SimpleMPCDebug message. Also converts values to other types if specified.
             * @param message SimpleMPCDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.SimpleMPCDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SimpleMPCDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SimpleMPCDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MracDebug. */
        interface IMracDebug {

            /** MracDebug mracModelOrder */
            mracModelOrder?: (number|null);

            /** MracDebug mracReferenceState */
            mracReferenceState?: (number[]|null);

            /** MracDebug mracStateError */
            mracStateError?: (number[]|null);

            /** MracDebug mracAdaptiveGain */
            mracAdaptiveGain?: (apollo.control.IMracAdaptiveGain|null);

            /** MracDebug mracReferenceSaturationStatus */
            mracReferenceSaturationStatus?: (number|null);

            /** MracDebug mracControlSaturationStatus */
            mracControlSaturationStatus?: (number|null);
        }

        /** Represents a MracDebug. */
        class MracDebug implements IMracDebug {

            /**
             * Constructs a new MracDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.IMracDebug);

            /** MracDebug mracModelOrder. */
            public mracModelOrder: number;

            /** MracDebug mracReferenceState. */
            public mracReferenceState: number[];

            /** MracDebug mracStateError. */
            public mracStateError: number[];

            /** MracDebug mracAdaptiveGain. */
            public mracAdaptiveGain?: (apollo.control.IMracAdaptiveGain|null);

            /** MracDebug mracReferenceSaturationStatus. */
            public mracReferenceSaturationStatus: number;

            /** MracDebug mracControlSaturationStatus. */
            public mracControlSaturationStatus: number;

            /**
             * Creates a new MracDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MracDebug instance
             */
            public static create(properties?: apollo.control.IMracDebug): apollo.control.MracDebug;

            /**
             * Encodes the specified MracDebug message. Does not implicitly {@link apollo.control.MracDebug.verify|verify} messages.
             * @param message MracDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.IMracDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MracDebug message, length delimited. Does not implicitly {@link apollo.control.MracDebug.verify|verify} messages.
             * @param message MracDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.IMracDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MracDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MracDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.MracDebug;

            /**
             * Decodes a MracDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MracDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.MracDebug;

            /**
             * Verifies a MracDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MracDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MracDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.MracDebug;

            /**
             * Creates a plain object from a MracDebug message. Also converts values to other types if specified.
             * @param message MracDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.MracDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MracDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MracDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MracAdaptiveGain. */
        interface IMracAdaptiveGain {

            /** MracAdaptiveGain stateAdaptiveGain */
            stateAdaptiveGain?: (number[]|null);

            /** MracAdaptiveGain inputAdaptiveGain */
            inputAdaptiveGain?: (number[]|null);

            /** MracAdaptiveGain nonlinearAdaptiveGain */
            nonlinearAdaptiveGain?: (number[]|null);
        }

        /** Represents a MracAdaptiveGain. */
        class MracAdaptiveGain implements IMracAdaptiveGain {

            /**
             * Constructs a new MracAdaptiveGain.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.IMracAdaptiveGain);

            /** MracAdaptiveGain stateAdaptiveGain. */
            public stateAdaptiveGain: number[];

            /** MracAdaptiveGain inputAdaptiveGain. */
            public inputAdaptiveGain: number[];

            /** MracAdaptiveGain nonlinearAdaptiveGain. */
            public nonlinearAdaptiveGain: number[];

            /**
             * Creates a new MracAdaptiveGain instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MracAdaptiveGain instance
             */
            public static create(properties?: apollo.control.IMracAdaptiveGain): apollo.control.MracAdaptiveGain;

            /**
             * Encodes the specified MracAdaptiveGain message. Does not implicitly {@link apollo.control.MracAdaptiveGain.verify|verify} messages.
             * @param message MracAdaptiveGain message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.IMracAdaptiveGain, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MracAdaptiveGain message, length delimited. Does not implicitly {@link apollo.control.MracAdaptiveGain.verify|verify} messages.
             * @param message MracAdaptiveGain message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.IMracAdaptiveGain, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MracAdaptiveGain message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MracAdaptiveGain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.MracAdaptiveGain;

            /**
             * Decodes a MracAdaptiveGain message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MracAdaptiveGain
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.MracAdaptiveGain;

            /**
             * Verifies a MracAdaptiveGain message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MracAdaptiveGain message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MracAdaptiveGain
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.MracAdaptiveGain;

            /**
             * Creates a plain object from a MracAdaptiveGain message. Also converts values to other types if specified.
             * @param message MracAdaptiveGain
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.MracAdaptiveGain, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MracAdaptiveGain to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MracAdaptiveGain
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Debug. */
        interface IDebug {

            /** Debug simpleLonDebug */
            simpleLonDebug?: (apollo.control.ISimpleLongitudinalDebug|null);

            /** Debug simpleLatDebug */
            simpleLatDebug?: (apollo.control.ISimpleLateralDebug|null);

            /** Debug inputDebug */
            inputDebug?: (apollo.control.IInputDebug|null);

            /** Debug simpleMpcDebug */
            simpleMpcDebug?: (apollo.control.ISimpleMPCDebug|null);
        }

        /** Represents a Debug. */
        class Debug implements IDebug {

            /**
             * Constructs a new Debug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.IDebug);

            /** Debug simpleLonDebug. */
            public simpleLonDebug?: (apollo.control.ISimpleLongitudinalDebug|null);

            /** Debug simpleLatDebug. */
            public simpleLatDebug?: (apollo.control.ISimpleLateralDebug|null);

            /** Debug inputDebug. */
            public inputDebug?: (apollo.control.IInputDebug|null);

            /** Debug simpleMpcDebug. */
            public simpleMpcDebug?: (apollo.control.ISimpleMPCDebug|null);

            /**
             * Creates a new Debug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Debug instance
             */
            public static create(properties?: apollo.control.IDebug): apollo.control.Debug;

            /**
             * Encodes the specified Debug message. Does not implicitly {@link apollo.control.Debug.verify|verify} messages.
             * @param message Debug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.IDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Debug message, length delimited. Does not implicitly {@link apollo.control.Debug.verify|verify} messages.
             * @param message Debug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.IDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Debug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Debug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.Debug;

            /**
             * Decodes a Debug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Debug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.Debug;

            /**
             * Verifies a Debug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Debug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Debug
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.Debug;

            /**
             * Creates a plain object from a Debug message. Also converts values to other types if specified.
             * @param message Debug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.Debug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Debug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Debug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an InputDebug. */
        interface IInputDebug {

            /** InputDebug localizationHeader */
            localizationHeader?: (apollo.common.IHeader|null);

            /** InputDebug canbusHeader */
            canbusHeader?: (apollo.common.IHeader|null);

            /** InputDebug trajectoryHeader */
            trajectoryHeader?: (apollo.common.IHeader|null);

            /** InputDebug latestReplanTrajectoryHeader */
            latestReplanTrajectoryHeader?: (apollo.common.IHeader|null);
        }

        /** Represents an InputDebug. */
        class InputDebug implements IInputDebug {

            /**
             * Constructs a new InputDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.IInputDebug);

            /** InputDebug localizationHeader. */
            public localizationHeader?: (apollo.common.IHeader|null);

            /** InputDebug canbusHeader. */
            public canbusHeader?: (apollo.common.IHeader|null);

            /** InputDebug trajectoryHeader. */
            public trajectoryHeader?: (apollo.common.IHeader|null);

            /** InputDebug latestReplanTrajectoryHeader. */
            public latestReplanTrajectoryHeader?: (apollo.common.IHeader|null);

            /**
             * Creates a new InputDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns InputDebug instance
             */
            public static create(properties?: apollo.control.IInputDebug): apollo.control.InputDebug;

            /**
             * Encodes the specified InputDebug message. Does not implicitly {@link apollo.control.InputDebug.verify|verify} messages.
             * @param message InputDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.IInputDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified InputDebug message, length delimited. Does not implicitly {@link apollo.control.InputDebug.verify|verify} messages.
             * @param message InputDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.IInputDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an InputDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns InputDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.InputDebug;

            /**
             * Decodes an InputDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns InputDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.InputDebug;

            /**
             * Verifies an InputDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an InputDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns InputDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.InputDebug;

            /**
             * Creates a plain object from an InputDebug message. Also converts values to other types if specified.
             * @param message InputDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.InputDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this InputDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for InputDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** DrivingAction enum. */
        enum DrivingAction {
            START = 1,
            RESET = 2,
            VIN_REQ = 3
        }

        /** Properties of a PadMessage. */
        interface IPadMessage {

            /** PadMessage header */
            header?: (apollo.common.IHeader|null);

            /** PadMessage action */
            action?: (apollo.control.DrivingAction|null);
        }

        /** Represents a PadMessage. */
        class PadMessage implements IPadMessage {

            /**
             * Constructs a new PadMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.control.IPadMessage);

            /** PadMessage header. */
            public header?: (apollo.common.IHeader|null);

            /** PadMessage action. */
            public action: apollo.control.DrivingAction;

            /**
             * Creates a new PadMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PadMessage instance
             */
            public static create(properties?: apollo.control.IPadMessage): apollo.control.PadMessage;

            /**
             * Encodes the specified PadMessage message. Does not implicitly {@link apollo.control.PadMessage.verify|verify} messages.
             * @param message PadMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.control.IPadMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PadMessage message, length delimited. Does not implicitly {@link apollo.control.PadMessage.verify|verify} messages.
             * @param message PadMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.control.IPadMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PadMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PadMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.control.PadMessage;

            /**
             * Decodes a PadMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PadMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.control.PadMessage;

            /**
             * Verifies a PadMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PadMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PadMessage
             */
            public static fromObject(object: { [k: string]: any }): apollo.control.PadMessage;

            /**
             * Creates a plain object from a PadMessage message. Also converts values to other types if specified.
             * @param message PadMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.control.PadMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PadMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PadMessage
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace drivers. */
    namespace drivers {

        /** Namespace canbus. */
        namespace canbus {

            /** Properties of a CANCardParameter. */
            interface ICANCardParameter {

                /** CANCardParameter brand */
                brand?: (apollo.drivers.canbus.CANCardParameter.CANCardBrand|null);

                /** CANCardParameter type */
                type?: (apollo.drivers.canbus.CANCardParameter.CANCardType|null);

                /** CANCardParameter channelId */
                channelId?: (apollo.drivers.canbus.CANCardParameter.CANChannelId|null);

                /** CANCardParameter interface */
                "interface"?: (apollo.drivers.canbus.CANCardParameter.CANInterface|null);

                /** CANCardParameter numPorts */
                numPorts?: (number|null);

                /** CANCardParameter hermesBaudrate */
                hermesBaudrate?: (apollo.drivers.canbus.CANCardParameter.HERMES_BAUDRATE|null);
            }

            /** Represents a CANCardParameter. */
            class CANCardParameter implements ICANCardParameter {

                /**
                 * Constructs a new CANCardParameter.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.canbus.ICANCardParameter);

                /** CANCardParameter brand. */
                public brand: apollo.drivers.canbus.CANCardParameter.CANCardBrand;

                /** CANCardParameter type. */
                public type: apollo.drivers.canbus.CANCardParameter.CANCardType;

                /** CANCardParameter channelId. */
                public channelId: apollo.drivers.canbus.CANCardParameter.CANChannelId;

                /** CANCardParameter interface. */
                public interface: apollo.drivers.canbus.CANCardParameter.CANInterface;

                /** CANCardParameter numPorts. */
                public numPorts: number;

                /** CANCardParameter hermesBaudrate. */
                public hermesBaudrate: apollo.drivers.canbus.CANCardParameter.HERMES_BAUDRATE;

                /**
                 * Creates a new CANCardParameter instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CANCardParameter instance
                 */
                public static create(properties?: apollo.drivers.canbus.ICANCardParameter): apollo.drivers.canbus.CANCardParameter;

                /**
                 * Encodes the specified CANCardParameter message. Does not implicitly {@link apollo.drivers.canbus.CANCardParameter.verify|verify} messages.
                 * @param message CANCardParameter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.canbus.ICANCardParameter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CANCardParameter message, length delimited. Does not implicitly {@link apollo.drivers.canbus.CANCardParameter.verify|verify} messages.
                 * @param message CANCardParameter message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.canbus.ICANCardParameter, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CANCardParameter message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CANCardParameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.canbus.CANCardParameter;

                /**
                 * Decodes a CANCardParameter message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CANCardParameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.canbus.CANCardParameter;

                /**
                 * Verifies a CANCardParameter message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CANCardParameter message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CANCardParameter
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.canbus.CANCardParameter;

                /**
                 * Creates a plain object from a CANCardParameter message. Also converts values to other types if specified.
                 * @param message CANCardParameter
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.canbus.CANCardParameter, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CANCardParameter to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CANCardParameter
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace CANCardParameter {

                /** CANCardBrand enum. */
                enum CANCardBrand {
                    FAKE_CAN = 0,
                    ESD_CAN = 1,
                    SOCKET_CAN_RAW = 2,
                    HERMES_CAN = 3
                }

                /** CANCardType enum. */
                enum CANCardType {
                    PCI_CARD = 0,
                    USB_CARD = 1
                }

                /** CANChannelId enum. */
                enum CANChannelId {
                    CHANNEL_ID_ZERO = 0,
                    CHANNEL_ID_ONE = 1,
                    CHANNEL_ID_TWO = 2,
                    CHANNEL_ID_THREE = 3,
                    CHANNEL_ID_FOUR = 4,
                    CHANNEL_ID_FIVE = 5,
                    CHANNEL_ID_SIX = 6,
                    CHANNEL_ID_SEVEN = 7
                }

                /** CANInterface enum. */
                enum CANInterface {
                    NATIVE = 0,
                    VIRTUAL = 1,
                    SLCAN = 2
                }

                /** HERMES_BAUDRATE enum. */
                enum HERMES_BAUDRATE {
                    BCAN_BAUDRATE_1M = 0,
                    BCAN_BAUDRATE_500K = 1,
                    BCAN_BAUDRATE_250K = 2,
                    BCAN_BAUDRATE_150K = 3,
                    BCAN_BAUDRATE_NUM = 4
                }
            }
        }

        /** Properties of a ClusterListStatus_600. */
        interface IClusterListStatus_600 {

            /** ClusterListStatus_600 near */
            near?: (number|null);

            /** ClusterListStatus_600 far */
            far?: (number|null);

            /** ClusterListStatus_600 measCounter */
            measCounter?: (number|null);

            /** ClusterListStatus_600 interfaceVersion */
            interfaceVersion?: (number|null);
        }

        /** Represents a ClusterListStatus_600. */
        class ClusterListStatus_600 implements IClusterListStatus_600 {

            /**
             * Constructs a new ClusterListStatus_600.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IClusterListStatus_600);

            /** ClusterListStatus_600 near. */
            public near: number;

            /** ClusterListStatus_600 far. */
            public far: number;

            /** ClusterListStatus_600 measCounter. */
            public measCounter: number;

            /** ClusterListStatus_600 interfaceVersion. */
            public interfaceVersion: number;

            /**
             * Creates a new ClusterListStatus_600 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ClusterListStatus_600 instance
             */
            public static create(properties?: apollo.drivers.IClusterListStatus_600): apollo.drivers.ClusterListStatus_600;

            /**
             * Encodes the specified ClusterListStatus_600 message. Does not implicitly {@link apollo.drivers.ClusterListStatus_600.verify|verify} messages.
             * @param message ClusterListStatus_600 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IClusterListStatus_600, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ClusterListStatus_600 message, length delimited. Does not implicitly {@link apollo.drivers.ClusterListStatus_600.verify|verify} messages.
             * @param message ClusterListStatus_600 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IClusterListStatus_600, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ClusterListStatus_600 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ClusterListStatus_600
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.ClusterListStatus_600;

            /**
             * Decodes a ClusterListStatus_600 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ClusterListStatus_600
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.ClusterListStatus_600;

            /**
             * Verifies a ClusterListStatus_600 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ClusterListStatus_600 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ClusterListStatus_600
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.ClusterListStatus_600;

            /**
             * Creates a plain object from a ClusterListStatus_600 message. Also converts values to other types if specified.
             * @param message ClusterListStatus_600
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.ClusterListStatus_600, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ClusterListStatus_600 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ClusterListStatus_600
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectListStatus_60A. */
        interface IObjectListStatus_60A {

            /** ObjectListStatus_60A nofObjects */
            nofObjects?: (number|null);

            /** ObjectListStatus_60A measCounter */
            measCounter?: (number|null);

            /** ObjectListStatus_60A interfaceVersion */
            interfaceVersion?: (number|null);
        }

        /** Represents an ObjectListStatus_60A. */
        class ObjectListStatus_60A implements IObjectListStatus_60A {

            /**
             * Constructs a new ObjectListStatus_60A.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IObjectListStatus_60A);

            /** ObjectListStatus_60A nofObjects. */
            public nofObjects: number;

            /** ObjectListStatus_60A measCounter. */
            public measCounter: number;

            /** ObjectListStatus_60A interfaceVersion. */
            public interfaceVersion: number;

            /**
             * Creates a new ObjectListStatus_60A instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectListStatus_60A instance
             */
            public static create(properties?: apollo.drivers.IObjectListStatus_60A): apollo.drivers.ObjectListStatus_60A;

            /**
             * Encodes the specified ObjectListStatus_60A message. Does not implicitly {@link apollo.drivers.ObjectListStatus_60A.verify|verify} messages.
             * @param message ObjectListStatus_60A message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IObjectListStatus_60A, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectListStatus_60A message, length delimited. Does not implicitly {@link apollo.drivers.ObjectListStatus_60A.verify|verify} messages.
             * @param message ObjectListStatus_60A message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IObjectListStatus_60A, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectListStatus_60A message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectListStatus_60A
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.ObjectListStatus_60A;

            /**
             * Decodes an ObjectListStatus_60A message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectListStatus_60A
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.ObjectListStatus_60A;

            /**
             * Verifies an ObjectListStatus_60A message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectListStatus_60A message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectListStatus_60A
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.ObjectListStatus_60A;

            /**
             * Creates a plain object from an ObjectListStatus_60A message. Also converts values to other types if specified.
             * @param message ObjectListStatus_60A
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.ObjectListStatus_60A, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectListStatus_60A to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectListStatus_60A
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RadarState_201. */
        interface IRadarState_201 {

            /** RadarState_201 maxDistance */
            maxDistance?: (number|null);

            /** RadarState_201 radarPower */
            radarPower?: (number|null);

            /** RadarState_201 outputType */
            outputType?: (apollo.drivers.RadarState_201.OutputType|null);

            /** RadarState_201 rcsThreshold */
            rcsThreshold?: (apollo.drivers.RadarState_201.RcsThreshold|null);

            /** RadarState_201 sendQuality */
            sendQuality?: (boolean|null);

            /** RadarState_201 sendExtInfo */
            sendExtInfo?: (boolean|null);
        }

        /** Represents a RadarState_201. */
        class RadarState_201 implements IRadarState_201 {

            /**
             * Constructs a new RadarState_201.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRadarState_201);

            /** RadarState_201 maxDistance. */
            public maxDistance: number;

            /** RadarState_201 radarPower. */
            public radarPower: number;

            /** RadarState_201 outputType. */
            public outputType: apollo.drivers.RadarState_201.OutputType;

            /** RadarState_201 rcsThreshold. */
            public rcsThreshold: apollo.drivers.RadarState_201.RcsThreshold;

            /** RadarState_201 sendQuality. */
            public sendQuality: boolean;

            /** RadarState_201 sendExtInfo. */
            public sendExtInfo: boolean;

            /**
             * Creates a new RadarState_201 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RadarState_201 instance
             */
            public static create(properties?: apollo.drivers.IRadarState_201): apollo.drivers.RadarState_201;

            /**
             * Encodes the specified RadarState_201 message. Does not implicitly {@link apollo.drivers.RadarState_201.verify|verify} messages.
             * @param message RadarState_201 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRadarState_201, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RadarState_201 message, length delimited. Does not implicitly {@link apollo.drivers.RadarState_201.verify|verify} messages.
             * @param message RadarState_201 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRadarState_201, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RadarState_201 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RadarState_201
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RadarState_201;

            /**
             * Decodes a RadarState_201 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RadarState_201
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RadarState_201;

            /**
             * Verifies a RadarState_201 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RadarState_201 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RadarState_201
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RadarState_201;

            /**
             * Creates a plain object from a RadarState_201 message. Also converts values to other types if specified.
             * @param message RadarState_201
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RadarState_201, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RadarState_201 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RadarState_201
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace RadarState_201 {

            /** OutputType enum. */
            enum OutputType {
                OUTPUT_TYPE_NONE = 0,
                OUTPUT_TYPE_OBJECTS = 1,
                OUTPUT_TYPE_CLUSTERS = 2,
                OUTPUT_TYPE_ERROR = 3
            }

            /** RcsThreshold enum. */
            enum RcsThreshold {
                RCS_THRESHOLD_STANDARD = 0,
                RCS_THRESHOLD_HIGH_SENSITIVITY = 1,
                RCS_THRESHOLD_ERROR = 2
            }
        }

        /** Properties of a ContiRadarObs. */
        interface IContiRadarObs {

            /** ContiRadarObs header */
            header?: (apollo.common.IHeader|null);

            /** ContiRadarObs clusterortrack */
            clusterortrack?: (boolean|null);

            /** ContiRadarObs obstacleId */
            obstacleId?: (number|null);

            /** ContiRadarObs longitudeDist */
            longitudeDist?: (number|null);

            /** ContiRadarObs lateralDist */
            lateralDist?: (number|null);

            /** ContiRadarObs longitudeVel */
            longitudeVel?: (number|null);

            /** ContiRadarObs lateralVel */
            lateralVel?: (number|null);

            /** ContiRadarObs rcs */
            rcs?: (number|null);

            /** ContiRadarObs dynprop */
            dynprop?: (number|null);

            /** ContiRadarObs longitudeDistRms */
            longitudeDistRms?: (number|null);

            /** ContiRadarObs lateralDistRms */
            lateralDistRms?: (number|null);

            /** ContiRadarObs longitudeVelRms */
            longitudeVelRms?: (number|null);

            /** ContiRadarObs lateralVelRms */
            lateralVelRms?: (number|null);

            /** ContiRadarObs probexist */
            probexist?: (number|null);

            /** ContiRadarObs measState */
            measState?: (number|null);

            /** ContiRadarObs longitudeAccel */
            longitudeAccel?: (number|null);

            /** ContiRadarObs lateralAccel */
            lateralAccel?: (number|null);

            /** ContiRadarObs oritationAngle */
            oritationAngle?: (number|null);

            /** ContiRadarObs longitudeAccelRms */
            longitudeAccelRms?: (number|null);

            /** ContiRadarObs lateralAccelRms */
            lateralAccelRms?: (number|null);

            /** ContiRadarObs oritationAngleRms */
            oritationAngleRms?: (number|null);

            /** ContiRadarObs length */
            length?: (number|null);

            /** ContiRadarObs width */
            width?: (number|null);

            /** ContiRadarObs obstacleClass */
            obstacleClass?: (number|null);
        }

        /** Represents a ContiRadarObs. */
        class ContiRadarObs implements IContiRadarObs {

            /**
             * Constructs a new ContiRadarObs.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IContiRadarObs);

            /** ContiRadarObs header. */
            public header?: (apollo.common.IHeader|null);

            /** ContiRadarObs clusterortrack. */
            public clusterortrack: boolean;

            /** ContiRadarObs obstacleId. */
            public obstacleId: number;

            /** ContiRadarObs longitudeDist. */
            public longitudeDist: number;

            /** ContiRadarObs lateralDist. */
            public lateralDist: number;

            /** ContiRadarObs longitudeVel. */
            public longitudeVel: number;

            /** ContiRadarObs lateralVel. */
            public lateralVel: number;

            /** ContiRadarObs rcs. */
            public rcs: number;

            /** ContiRadarObs dynprop. */
            public dynprop: number;

            /** ContiRadarObs longitudeDistRms. */
            public longitudeDistRms: number;

            /** ContiRadarObs lateralDistRms. */
            public lateralDistRms: number;

            /** ContiRadarObs longitudeVelRms. */
            public longitudeVelRms: number;

            /** ContiRadarObs lateralVelRms. */
            public lateralVelRms: number;

            /** ContiRadarObs probexist. */
            public probexist: number;

            /** ContiRadarObs measState. */
            public measState: number;

            /** ContiRadarObs longitudeAccel. */
            public longitudeAccel: number;

            /** ContiRadarObs lateralAccel. */
            public lateralAccel: number;

            /** ContiRadarObs oritationAngle. */
            public oritationAngle: number;

            /** ContiRadarObs longitudeAccelRms. */
            public longitudeAccelRms: number;

            /** ContiRadarObs lateralAccelRms. */
            public lateralAccelRms: number;

            /** ContiRadarObs oritationAngleRms. */
            public oritationAngleRms: number;

            /** ContiRadarObs length. */
            public length: number;

            /** ContiRadarObs width. */
            public width: number;

            /** ContiRadarObs obstacleClass. */
            public obstacleClass: number;

            /**
             * Creates a new ContiRadarObs instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ContiRadarObs instance
             */
            public static create(properties?: apollo.drivers.IContiRadarObs): apollo.drivers.ContiRadarObs;

            /**
             * Encodes the specified ContiRadarObs message. Does not implicitly {@link apollo.drivers.ContiRadarObs.verify|verify} messages.
             * @param message ContiRadarObs message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IContiRadarObs, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ContiRadarObs message, length delimited. Does not implicitly {@link apollo.drivers.ContiRadarObs.verify|verify} messages.
             * @param message ContiRadarObs message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IContiRadarObs, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ContiRadarObs message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ContiRadarObs
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.ContiRadarObs;

            /**
             * Decodes a ContiRadarObs message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ContiRadarObs
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.ContiRadarObs;

            /**
             * Verifies a ContiRadarObs message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ContiRadarObs message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ContiRadarObs
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.ContiRadarObs;

            /**
             * Creates a plain object from a ContiRadarObs message. Also converts values to other types if specified.
             * @param message ContiRadarObs
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.ContiRadarObs, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ContiRadarObs to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ContiRadarObs
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ContiRadar. */
        interface IContiRadar {

            /** ContiRadar header */
            header?: (apollo.common.IHeader|null);

            /** ContiRadar contiobs */
            contiobs?: (apollo.drivers.IContiRadarObs[]|null);

            /** ContiRadar radarState */
            radarState?: (apollo.drivers.IRadarState_201|null);

            /** ContiRadar clusterListStatus */
            clusterListStatus?: (apollo.drivers.IClusterListStatus_600|null);

            /** ContiRadar objectListStatus */
            objectListStatus?: (apollo.drivers.IObjectListStatus_60A|null);
        }

        /** Represents a ContiRadar. */
        class ContiRadar implements IContiRadar {

            /**
             * Constructs a new ContiRadar.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IContiRadar);

            /** ContiRadar header. */
            public header?: (apollo.common.IHeader|null);

            /** ContiRadar contiobs. */
            public contiobs: apollo.drivers.IContiRadarObs[];

            /** ContiRadar radarState. */
            public radarState?: (apollo.drivers.IRadarState_201|null);

            /** ContiRadar clusterListStatus. */
            public clusterListStatus?: (apollo.drivers.IClusterListStatus_600|null);

            /** ContiRadar objectListStatus. */
            public objectListStatus?: (apollo.drivers.IObjectListStatus_60A|null);

            /**
             * Creates a new ContiRadar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ContiRadar instance
             */
            public static create(properties?: apollo.drivers.IContiRadar): apollo.drivers.ContiRadar;

            /**
             * Encodes the specified ContiRadar message. Does not implicitly {@link apollo.drivers.ContiRadar.verify|verify} messages.
             * @param message ContiRadar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IContiRadar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ContiRadar message, length delimited. Does not implicitly {@link apollo.drivers.ContiRadar.verify|verify} messages.
             * @param message ContiRadar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IContiRadar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ContiRadar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ContiRadar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.ContiRadar;

            /**
             * Decodes a ContiRadar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ContiRadar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.ContiRadar;

            /**
             * Verifies a ContiRadar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ContiRadar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ContiRadar
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.ContiRadar;

            /**
             * Creates a plain object from a ContiRadar message. Also converts values to other types if specified.
             * @param message ContiRadar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.ContiRadar, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ContiRadar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ContiRadar
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_status9_5e8. */
        interface IEsr_status9_5e8 {

            /** Esr_status9_5e8 canTxPathIdAcc_3 */
            canTxPathIdAcc_3?: (number|null);

            /** Esr_status9_5e8 canTxPathIdAcc_2 */
            canTxPathIdAcc_2?: (number|null);

            /** Esr_status9_5e8 canTxFilteredXohpAccCipv */
            canTxFilteredXohpAccCipv?: (number|null);

            /** Esr_status9_5e8 canTxWaterSprayTargetId */
            canTxWaterSprayTargetId?: (number|null);

            /** Esr_status9_5e8 canTxSerialNum_3rdByte */
            canTxSerialNum_3rdByte?: (number|null);

            /** Esr_status9_5e8 canTxSideslipAngle */
            canTxSideslipAngle?: (number|null);

            /** Esr_status9_5e8 canTxAvgPwrCwblkg */
            canTxAvgPwrCwblkg?: (number|null);
        }

        /** Represents an Esr_status9_5e8. */
        class Esr_status9_5e8 implements IEsr_status9_5e8 {

            /**
             * Constructs a new Esr_status9_5e8.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status9_5e8);

            /** Esr_status9_5e8 canTxPathIdAcc_3. */
            public canTxPathIdAcc_3: number;

            /** Esr_status9_5e8 canTxPathIdAcc_2. */
            public canTxPathIdAcc_2: number;

            /** Esr_status9_5e8 canTxFilteredXohpAccCipv. */
            public canTxFilteredXohpAccCipv: number;

            /** Esr_status9_5e8 canTxWaterSprayTargetId. */
            public canTxWaterSprayTargetId: number;

            /** Esr_status9_5e8 canTxSerialNum_3rdByte. */
            public canTxSerialNum_3rdByte: number;

            /** Esr_status9_5e8 canTxSideslipAngle. */
            public canTxSideslipAngle: number;

            /** Esr_status9_5e8 canTxAvgPwrCwblkg. */
            public canTxAvgPwrCwblkg: number;

            /**
             * Creates a new Esr_status9_5e8 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status9_5e8 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status9_5e8): apollo.drivers.Esr_status9_5e8;

            /**
             * Encodes the specified Esr_status9_5e8 message. Does not implicitly {@link apollo.drivers.Esr_status9_5e8.verify|verify} messages.
             * @param message Esr_status9_5e8 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status9_5e8, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status9_5e8 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status9_5e8.verify|verify} messages.
             * @param message Esr_status9_5e8 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status9_5e8, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status9_5e8 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status9_5e8
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status9_5e8;

            /**
             * Decodes an Esr_status9_5e8 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status9_5e8
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status9_5e8;

            /**
             * Verifies an Esr_status9_5e8 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status9_5e8 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status9_5e8
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status9_5e8;

            /**
             * Creates a plain object from an Esr_status9_5e8 message. Also converts values to other types if specified.
             * @param message Esr_status9_5e8
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status9_5e8, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status9_5e8 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status9_5e8
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_status6_5e5. */
        interface IEsr_status6_5e5 {

            /** Esr_status6_5e5 canTxSwVersionDsp_3rdByte */
            canTxSwVersionDsp_3rdByte?: (number|null);

            /** Esr_status6_5e5 canTxVerticalAlignUpdated */
            canTxVerticalAlignUpdated?: (apollo.drivers.Esr_status6_5e5.Can_tx_vertical_align_updatedType|null);

            /** Esr_status6_5e5 canTxVerticalMisalignment */
            canTxVerticalMisalignment?: (number|null);

            /** Esr_status6_5e5 canTxServAlignUpdatesDone */
            canTxServAlignUpdatesDone?: (number|null);

            /** Esr_status6_5e5 canTxFoundTarget */
            canTxFoundTarget?: (apollo.drivers.Esr_status6_5e5.Can_tx_found_targetType|null);

            /** Esr_status6_5e5 canTxFactoryMisalignment */
            canTxFactoryMisalignment?: (number|null);

            /** Esr_status6_5e5 canTxFactoryAlignStatus_2 */
            canTxFactoryAlignStatus_2?: (apollo.drivers.Esr_status6_5e5.Can_tx_factory_align_status_2Type|null);

            /** Esr_status6_5e5 canTxFactoryAlignStatus_1 */
            canTxFactoryAlignStatus_1?: (apollo.drivers.Esr_status6_5e5.Can_tx_factory_align_status_1Type|null);

            /** Esr_status6_5e5 canTxRecommendUnconverge */
            canTxRecommendUnconverge?: (apollo.drivers.Esr_status6_5e5.Can_tx_recommend_unconvergeType|null);

            /** Esr_status6_5e5 canTxWaveDiffA2d */
            canTxWaveDiffA2d?: (number|null);

            /** Esr_status6_5e5 canTxSystemPowerMode */
            canTxSystemPowerMode?: (apollo.drivers.Esr_status6_5e5.Can_tx_system_power_modeType|null);

            /** Esr_status6_5e5 canTxSupplyN5vA2d */
            canTxSupplyN5vA2d?: (number|null);

            /** Esr_status6_5e5 canTxSupply_1p8vA2d */
            canTxSupply_1p8vA2d?: (number|null);
        }

        /** Represents an Esr_status6_5e5. */
        class Esr_status6_5e5 implements IEsr_status6_5e5 {

            /**
             * Constructs a new Esr_status6_5e5.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status6_5e5);

            /** Esr_status6_5e5 canTxSwVersionDsp_3rdByte. */
            public canTxSwVersionDsp_3rdByte: number;

            /** Esr_status6_5e5 canTxVerticalAlignUpdated. */
            public canTxVerticalAlignUpdated: apollo.drivers.Esr_status6_5e5.Can_tx_vertical_align_updatedType;

            /** Esr_status6_5e5 canTxVerticalMisalignment. */
            public canTxVerticalMisalignment: number;

            /** Esr_status6_5e5 canTxServAlignUpdatesDone. */
            public canTxServAlignUpdatesDone: number;

            /** Esr_status6_5e5 canTxFoundTarget. */
            public canTxFoundTarget: apollo.drivers.Esr_status6_5e5.Can_tx_found_targetType;

            /** Esr_status6_5e5 canTxFactoryMisalignment. */
            public canTxFactoryMisalignment: number;

            /** Esr_status6_5e5 canTxFactoryAlignStatus_2. */
            public canTxFactoryAlignStatus_2: apollo.drivers.Esr_status6_5e5.Can_tx_factory_align_status_2Type;

            /** Esr_status6_5e5 canTxFactoryAlignStatus_1. */
            public canTxFactoryAlignStatus_1: apollo.drivers.Esr_status6_5e5.Can_tx_factory_align_status_1Type;

            /** Esr_status6_5e5 canTxRecommendUnconverge. */
            public canTxRecommendUnconverge: apollo.drivers.Esr_status6_5e5.Can_tx_recommend_unconvergeType;

            /** Esr_status6_5e5 canTxWaveDiffA2d. */
            public canTxWaveDiffA2d: number;

            /** Esr_status6_5e5 canTxSystemPowerMode. */
            public canTxSystemPowerMode: apollo.drivers.Esr_status6_5e5.Can_tx_system_power_modeType;

            /** Esr_status6_5e5 canTxSupplyN5vA2d. */
            public canTxSupplyN5vA2d: number;

            /** Esr_status6_5e5 canTxSupply_1p8vA2d. */
            public canTxSupply_1p8vA2d: number;

            /**
             * Creates a new Esr_status6_5e5 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status6_5e5 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status6_5e5): apollo.drivers.Esr_status6_5e5;

            /**
             * Encodes the specified Esr_status6_5e5 message. Does not implicitly {@link apollo.drivers.Esr_status6_5e5.verify|verify} messages.
             * @param message Esr_status6_5e5 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status6_5e5, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status6_5e5 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status6_5e5.verify|verify} messages.
             * @param message Esr_status6_5e5 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status6_5e5, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status6_5e5 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status6_5e5
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status6_5e5;

            /**
             * Decodes an Esr_status6_5e5 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status6_5e5
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status6_5e5;

            /**
             * Verifies an Esr_status6_5e5 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status6_5e5 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status6_5e5
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status6_5e5;

            /**
             * Creates a plain object from an Esr_status6_5e5 message. Also converts values to other types if specified.
             * @param message Esr_status6_5e5
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status6_5e5, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status6_5e5 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status6_5e5
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Esr_status6_5e5 {

            /** Can_tx_vertical_align_updatedType enum. */
            enum Can_tx_vertical_align_updatedType {
                CAN_TX_VERTICAL_ALIGN_UPDATED_NOT_UPDATED = 0,
                CAN_TX_VERTICAL_ALIGN_UPDATED_UPDATED = 1
            }

            /** Can_tx_found_targetType enum. */
            enum Can_tx_found_targetType {
                CAN_TX_FOUND_TARGET_NOT_FOUND = 0,
                CAN_TX_FOUND_TARGET_FOUND = 1
            }

            /** Can_tx_factory_align_status_2Type enum. */
            enum Can_tx_factory_align_status_2Type {
                CAN_TX_FACTORY_ALIGN_STATUS_2_OFF = 0,
                CAN_TX_FACTORY_ALIGN_STATUS_2_BUSY = 1,
                CAN_TX_FACTORY_ALIGN_STATUS_2_SUCCESS = 2,
                CAN_TX_FACTORY_ALIGN_STATUS_2_FAIL_NO_TARGET = 3,
                CAN_TX_FACTORY_ALIGN_STATUS_2_FAIL_DEV_TOO_LARGE = 4,
                CAN_TX_FACTORY_ALIGN_STATUS_2_FAIL_VAR_TOO_LARGE = 5
            }

            /** Can_tx_factory_align_status_1Type enum. */
            enum Can_tx_factory_align_status_1Type {
                CAN_TX_FACTORY_ALIGN_STATUS_1_OFF = 0,
                CAN_TX_FACTORY_ALIGN_STATUS_1_BUSY = 1,
                CAN_TX_FACTORY_ALIGN_STATUS_1_SUCCESS = 2,
                CAN_TX_FACTORY_ALIGN_STATUS_1_FAIL_NO_TARGET = 3,
                CAN_TX_FACTORY_ALIGN_STATUS_1_FAIL_DEV_TOO_LARGE = 4,
                CAN_TX_FACTORY_ALIGN_STATUS_1_FAIL_VAR_TOO_LARGE = 5
            }

            /** Can_tx_recommend_unconvergeType enum. */
            enum Can_tx_recommend_unconvergeType {
                CAN_TX_RECOMMEND_UNCONVERGE_NOT_RECOMMEND = 0,
                CAN_TX_RECOMMEND_UNCONVERGE_RECOMMEND = 1
            }

            /** Can_tx_system_power_modeType enum. */
            enum Can_tx_system_power_modeType {
                CAN_TX_SYSTEM_POWER_MODE_DSP_INIT = 0,
                CAN_TX_SYSTEM_POWER_MODE_RADIATE_OFF = 1,
                CAN_TX_SYSTEM_POWER_MODE_RADIATE_ON = 2,
                CAN_TX_SYSTEM_POWER_MODE_DSP_SHUTDOWN = 3,
                CAN_TX_SYSTEM_POWER_MODE_DSP_OFF = 4,
                CAN_TX_SYSTEM_POWER_MODE_HOST_SHUTDOWN = 5,
                CAN_TX_SYSTEM_POWER_MODE_TEST = 6,
                CAN_TX_SYSTEM_POWER_MODE_7INVALID = 7
            }
        }

        /** Properties of an Esr_status5_5e4. */
        interface IEsr_status5_5e4 {

            /** Esr_status5_5e4 canTxSupply_10vA2d */
            canTxSupply_10vA2d?: (number|null);

            /** Esr_status5_5e4 canTxTemp2A2d */
            canTxTemp2A2d?: (number|null);

            /** Esr_status5_5e4 canTxTemp1A2d */
            canTxTemp1A2d?: (number|null);

            /** Esr_status5_5e4 canTxSwbattA2d */
            canTxSwbattA2d?: (number|null);

            /** Esr_status5_5e4 canTxSupply_5vdxA2d */
            canTxSupply_5vdxA2d?: (number|null);

            /** Esr_status5_5e4 canTxSupply_5vaA2d */
            canTxSupply_5vaA2d?: (number|null);

            /** Esr_status5_5e4 canTxSupply_3p3vA2d */
            canTxSupply_3p3vA2d?: (number|null);

            /** Esr_status5_5e4 canTxIgnpA2d */
            canTxIgnpA2d?: (number|null);
        }

        /** Represents an Esr_status5_5e4. */
        class Esr_status5_5e4 implements IEsr_status5_5e4 {

            /**
             * Constructs a new Esr_status5_5e4.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status5_5e4);

            /** Esr_status5_5e4 canTxSupply_10vA2d. */
            public canTxSupply_10vA2d: number;

            /** Esr_status5_5e4 canTxTemp2A2d. */
            public canTxTemp2A2d: number;

            /** Esr_status5_5e4 canTxTemp1A2d. */
            public canTxTemp1A2d: number;

            /** Esr_status5_5e4 canTxSwbattA2d. */
            public canTxSwbattA2d: number;

            /** Esr_status5_5e4 canTxSupply_5vdxA2d. */
            public canTxSupply_5vdxA2d: number;

            /** Esr_status5_5e4 canTxSupply_5vaA2d. */
            public canTxSupply_5vaA2d: number;

            /** Esr_status5_5e4 canTxSupply_3p3vA2d. */
            public canTxSupply_3p3vA2d: number;

            /** Esr_status5_5e4 canTxIgnpA2d. */
            public canTxIgnpA2d: number;

            /**
             * Creates a new Esr_status5_5e4 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status5_5e4 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status5_5e4): apollo.drivers.Esr_status5_5e4;

            /**
             * Encodes the specified Esr_status5_5e4 message. Does not implicitly {@link apollo.drivers.Esr_status5_5e4.verify|verify} messages.
             * @param message Esr_status5_5e4 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status5_5e4, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status5_5e4 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status5_5e4.verify|verify} messages.
             * @param message Esr_status5_5e4 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status5_5e4, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status5_5e4 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status5_5e4
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status5_5e4;

            /**
             * Decodes an Esr_status5_5e4 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status5_5e4
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status5_5e4;

            /**
             * Verifies an Esr_status5_5e4 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status5_5e4 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status5_5e4
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status5_5e4;

            /**
             * Creates a plain object from an Esr_status5_5e4 message. Also converts values to other types if specified.
             * @param message Esr_status5_5e4
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status5_5e4, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status5_5e4 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status5_5e4
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_status3_4e2. */
        interface IEsr_status3_4e2 {

            /** Esr_status3_4e2 canTxSwVersionPld */
            canTxSwVersionPld?: (number|null);

            /** Esr_status3_4e2 canTxSwVersionHost */
            canTxSwVersionHost?: (number|null);

            /** Esr_status3_4e2 canTxHwVersion */
            canTxHwVersion?: (number|null);

            /** Esr_status3_4e2 canTxInterfaceVersion */
            canTxInterfaceVersion?: (number|null);

            /** Esr_status3_4e2 canTxSerialNum */
            canTxSerialNum?: (number|null);
        }

        /** Represents an Esr_status3_4e2. */
        class Esr_status3_4e2 implements IEsr_status3_4e2 {

            /**
             * Constructs a new Esr_status3_4e2.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status3_4e2);

            /** Esr_status3_4e2 canTxSwVersionPld. */
            public canTxSwVersionPld: number;

            /** Esr_status3_4e2 canTxSwVersionHost. */
            public canTxSwVersionHost: number;

            /** Esr_status3_4e2 canTxHwVersion. */
            public canTxHwVersion: number;

            /** Esr_status3_4e2 canTxInterfaceVersion. */
            public canTxInterfaceVersion: number;

            /** Esr_status3_4e2 canTxSerialNum. */
            public canTxSerialNum: number;

            /**
             * Creates a new Esr_status3_4e2 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status3_4e2 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status3_4e2): apollo.drivers.Esr_status3_4e2;

            /**
             * Encodes the specified Esr_status3_4e2 message. Does not implicitly {@link apollo.drivers.Esr_status3_4e2.verify|verify} messages.
             * @param message Esr_status3_4e2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status3_4e2, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status3_4e2 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status3_4e2.verify|verify} messages.
             * @param message Esr_status3_4e2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status3_4e2, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status3_4e2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status3_4e2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status3_4e2;

            /**
             * Decodes an Esr_status3_4e2 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status3_4e2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status3_4e2;

            /**
             * Verifies an Esr_status3_4e2 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status3_4e2 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status3_4e2
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status3_4e2;

            /**
             * Creates a plain object from an Esr_status3_4e2 message. Also converts values to other types if specified.
             * @param message Esr_status3_4e2
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status3_4e2, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status3_4e2 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status3_4e2
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_status4_4e3. */
        interface IEsr_status4_4e3 {

            /** Esr_status4_4e3 canTxTruckTargetDet */
            canTxTruckTargetDet?: (apollo.drivers.Esr_status4_4e3.Can_tx_truck_target_detType|null);

            /** Esr_status4_4e3 canTxLrOnlyGratingLobeDet */
            canTxLrOnlyGratingLobeDet?: (apollo.drivers.Esr_status4_4e3.Can_tx_lr_only_grating_lobe_detType|null);

            /** Esr_status4_4e3 canTxSidelobeBlockage */
            canTxSidelobeBlockage?: (apollo.drivers.Esr_status4_4e3.Can_tx_sidelobe_blockageType|null);

            /** Esr_status4_4e3 canTxPartialBlockage */
            canTxPartialBlockage?: (apollo.drivers.Esr_status4_4e3.Can_tx_partial_blockageType|null);

            /** Esr_status4_4e3 canTxPathIdAccStat */
            canTxPathIdAccStat?: (number|null);

            /** Esr_status4_4e3 canTxMrLrMode */
            canTxMrLrMode?: (apollo.drivers.Esr_status4_4e3.Can_tx_mr_lr_modeType|null);

            /** Esr_status4_4e3 canTxAutoAlignAngle */
            canTxAutoAlignAngle?: (number|null);

            /** Esr_status4_4e3 canTxRollingCount_3 */
            canTxRollingCount_3?: (number|null);

            /** Esr_status4_4e3 canTxPathIdFcwStat */
            canTxPathIdFcwStat?: (number|null);

            /** Esr_status4_4e3 canTxPathIdFcwMove */
            canTxPathIdFcwMove?: (number|null);

            /** Esr_status4_4e3 canTxPathIdCmbbStat */
            canTxPathIdCmbbStat?: (number|null);

            /** Esr_status4_4e3 canTxPathIdCmbbMove */
            canTxPathIdCmbbMove?: (number|null);

            /** Esr_status4_4e3 canTxPathIdAcc */
            canTxPathIdAcc?: (number|null);
        }

        /** Represents an Esr_status4_4e3. */
        class Esr_status4_4e3 implements IEsr_status4_4e3 {

            /**
             * Constructs a new Esr_status4_4e3.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status4_4e3);

            /** Esr_status4_4e3 canTxTruckTargetDet. */
            public canTxTruckTargetDet: apollo.drivers.Esr_status4_4e3.Can_tx_truck_target_detType;

            /** Esr_status4_4e3 canTxLrOnlyGratingLobeDet. */
            public canTxLrOnlyGratingLobeDet: apollo.drivers.Esr_status4_4e3.Can_tx_lr_only_grating_lobe_detType;

            /** Esr_status4_4e3 canTxSidelobeBlockage. */
            public canTxSidelobeBlockage: apollo.drivers.Esr_status4_4e3.Can_tx_sidelobe_blockageType;

            /** Esr_status4_4e3 canTxPartialBlockage. */
            public canTxPartialBlockage: apollo.drivers.Esr_status4_4e3.Can_tx_partial_blockageType;

            /** Esr_status4_4e3 canTxPathIdAccStat. */
            public canTxPathIdAccStat: number;

            /** Esr_status4_4e3 canTxMrLrMode. */
            public canTxMrLrMode: apollo.drivers.Esr_status4_4e3.Can_tx_mr_lr_modeType;

            /** Esr_status4_4e3 canTxAutoAlignAngle. */
            public canTxAutoAlignAngle: number;

            /** Esr_status4_4e3 canTxRollingCount_3. */
            public canTxRollingCount_3: number;

            /** Esr_status4_4e3 canTxPathIdFcwStat. */
            public canTxPathIdFcwStat: number;

            /** Esr_status4_4e3 canTxPathIdFcwMove. */
            public canTxPathIdFcwMove: number;

            /** Esr_status4_4e3 canTxPathIdCmbbStat. */
            public canTxPathIdCmbbStat: number;

            /** Esr_status4_4e3 canTxPathIdCmbbMove. */
            public canTxPathIdCmbbMove: number;

            /** Esr_status4_4e3 canTxPathIdAcc. */
            public canTxPathIdAcc: number;

            /**
             * Creates a new Esr_status4_4e3 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status4_4e3 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status4_4e3): apollo.drivers.Esr_status4_4e3;

            /**
             * Encodes the specified Esr_status4_4e3 message. Does not implicitly {@link apollo.drivers.Esr_status4_4e3.verify|verify} messages.
             * @param message Esr_status4_4e3 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status4_4e3, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status4_4e3 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status4_4e3.verify|verify} messages.
             * @param message Esr_status4_4e3 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status4_4e3, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status4_4e3 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status4_4e3
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status4_4e3;

            /**
             * Decodes an Esr_status4_4e3 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status4_4e3
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status4_4e3;

            /**
             * Verifies an Esr_status4_4e3 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status4_4e3 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status4_4e3
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status4_4e3;

            /**
             * Creates a plain object from an Esr_status4_4e3 message. Also converts values to other types if specified.
             * @param message Esr_status4_4e3
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status4_4e3, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status4_4e3 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status4_4e3
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Esr_status4_4e3 {

            /** Can_tx_truck_target_detType enum. */
            enum Can_tx_truck_target_detType {
                CAN_TX_TRUCK_TARGET_DET_NOT_DETECTED = 0,
                CAN_TX_TRUCK_TARGET_DET_DETECTED = 1
            }

            /** Can_tx_lr_only_grating_lobe_detType enum. */
            enum Can_tx_lr_only_grating_lobe_detType {
                CAN_TX_LR_ONLY_GRATING_LOBE_DET_NOT_DETECTED = 0,
                CAN_TX_LR_ONLY_GRATING_LOBE_DET_DETECTED = 1
            }

            /** Can_tx_sidelobe_blockageType enum. */
            enum Can_tx_sidelobe_blockageType {
                CAN_TX_SIDELOBE_BLOCKAGE_OFF = 0,
                CAN_TX_SIDELOBE_BLOCKAGE_ON = 1
            }

            /** Can_tx_partial_blockageType enum. */
            enum Can_tx_partial_blockageType {
                CAN_TX_PARTIAL_BLOCKAGE_NOT_BLOCKED = 0,
                CAN_TX_PARTIAL_BLOCKAGE_BLOCKED = 1
            }

            /** Can_tx_mr_lr_modeType enum. */
            enum Can_tx_mr_lr_modeType {
                CAN_TX_MR_LR_MODE_RESERVED = 0,
                CAN_TX_MR_LR_MODE_OUTPUT_ONLY_MEDIUM_RANGE_TRACKS = 1,
                CAN_TX_MR_LR_MODE_OUTPUT_ONLY_LONG_RANGE_TRACKS = 2,
                CAN_TX_MR_LR_MODE_OUTPUT_ALL_MEDIUM_RANGE_AND_LONG = 3
            }
        }

        /** Properties of an Esr_trackmotionpower_540. */
        interface IEsr_trackmotionpower_540 {

            /** Esr_trackmotionpower_540 canTxTrackRollingCount_2 */
            canTxTrackRollingCount_2?: (boolean|null);

            /** Esr_trackmotionpower_540 canTxTrackCanIdGroup */
            canTxTrackCanIdGroup?: (number|null);

            /** Esr_trackmotionpower_540 canTxTrackMotionPower */
            canTxTrackMotionPower?: (apollo.drivers.Esr_trackmotionpower_540.IMotionpower[]|null);
        }

        /** Represents an Esr_trackmotionpower_540. */
        class Esr_trackmotionpower_540 implements IEsr_trackmotionpower_540 {

            /**
             * Constructs a new Esr_trackmotionpower_540.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_trackmotionpower_540);

            /** Esr_trackmotionpower_540 canTxTrackRollingCount_2. */
            public canTxTrackRollingCount_2: boolean;

            /** Esr_trackmotionpower_540 canTxTrackCanIdGroup. */
            public canTxTrackCanIdGroup: number;

            /** Esr_trackmotionpower_540 canTxTrackMotionPower. */
            public canTxTrackMotionPower: apollo.drivers.Esr_trackmotionpower_540.IMotionpower[];

            /**
             * Creates a new Esr_trackmotionpower_540 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_trackmotionpower_540 instance
             */
            public static create(properties?: apollo.drivers.IEsr_trackmotionpower_540): apollo.drivers.Esr_trackmotionpower_540;

            /**
             * Encodes the specified Esr_trackmotionpower_540 message. Does not implicitly {@link apollo.drivers.Esr_trackmotionpower_540.verify|verify} messages.
             * @param message Esr_trackmotionpower_540 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_trackmotionpower_540, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_trackmotionpower_540 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_trackmotionpower_540.verify|verify} messages.
             * @param message Esr_trackmotionpower_540 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_trackmotionpower_540, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_trackmotionpower_540 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_trackmotionpower_540
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_trackmotionpower_540;

            /**
             * Decodes an Esr_trackmotionpower_540 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_trackmotionpower_540
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_trackmotionpower_540;

            /**
             * Verifies an Esr_trackmotionpower_540 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_trackmotionpower_540 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_trackmotionpower_540
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_trackmotionpower_540;

            /**
             * Creates a plain object from an Esr_trackmotionpower_540 message. Also converts values to other types if specified.
             * @param message Esr_trackmotionpower_540
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_trackmotionpower_540, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_trackmotionpower_540 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_trackmotionpower_540
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Esr_trackmotionpower_540 {

            /** Properties of a Motionpower. */
            interface IMotionpower {

                /** Motionpower canTxTrackMoving */
                canTxTrackMoving?: (boolean|null);

                /** Motionpower canTxTrackMovingFast */
                canTxTrackMovingFast?: (boolean|null);

                /** Motionpower canTxTrackMovingSlow */
                canTxTrackMovingSlow?: (boolean|null);

                /** Motionpower canTxTrackPower */
                canTxTrackPower?: (number|null);
            }

            /** Represents a Motionpower. */
            class Motionpower implements IMotionpower {

                /**
                 * Constructs a new Motionpower.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.Esr_trackmotionpower_540.IMotionpower);

                /** Motionpower canTxTrackMoving. */
                public canTxTrackMoving: boolean;

                /** Motionpower canTxTrackMovingFast. */
                public canTxTrackMovingFast: boolean;

                /** Motionpower canTxTrackMovingSlow. */
                public canTxTrackMovingSlow: boolean;

                /** Motionpower canTxTrackPower. */
                public canTxTrackPower: number;

                /**
                 * Creates a new Motionpower instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Motionpower instance
                 */
                public static create(properties?: apollo.drivers.Esr_trackmotionpower_540.IMotionpower): apollo.drivers.Esr_trackmotionpower_540.Motionpower;

                /**
                 * Encodes the specified Motionpower message. Does not implicitly {@link apollo.drivers.Esr_trackmotionpower_540.Motionpower.verify|verify} messages.
                 * @param message Motionpower message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.Esr_trackmotionpower_540.IMotionpower, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Motionpower message, length delimited. Does not implicitly {@link apollo.drivers.Esr_trackmotionpower_540.Motionpower.verify|verify} messages.
                 * @param message Motionpower message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.Esr_trackmotionpower_540.IMotionpower, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Motionpower message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Motionpower
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_trackmotionpower_540.Motionpower;

                /**
                 * Decodes a Motionpower message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Motionpower
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_trackmotionpower_540.Motionpower;

                /**
                 * Verifies a Motionpower message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Motionpower message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Motionpower
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_trackmotionpower_540.Motionpower;

                /**
                 * Creates a plain object from a Motionpower message. Also converts values to other types if specified.
                 * @param message Motionpower
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.Esr_trackmotionpower_540.Motionpower, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Motionpower to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Motionpower
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Properties of an Acm_inst_req_7e0. */
        interface IAcm_inst_req_7e0 {

            /** Acm_inst_req_7e0 commandCtr */
            commandCtr?: (number|null);

            /** Acm_inst_req_7e0 commandCode */
            commandCode?: (number|null);

            /** Acm_inst_req_7e0 ccWord_2 */
            ccWord_2?: (number|null);

            /** Acm_inst_req_7e0 ccWord_1 */
            ccWord_1?: (number|null);

            /** Acm_inst_req_7e0 ccByte_2 */
            ccByte_2?: (number|null);

            /** Acm_inst_req_7e0 ccByte_1 */
            ccByte_1?: (number|null);
        }

        /** Represents an Acm_inst_req_7e0. */
        class Acm_inst_req_7e0 implements IAcm_inst_req_7e0 {

            /**
             * Constructs a new Acm_inst_req_7e0.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IAcm_inst_req_7e0);

            /** Acm_inst_req_7e0 commandCtr. */
            public commandCtr: number;

            /** Acm_inst_req_7e0 commandCode. */
            public commandCode: number;

            /** Acm_inst_req_7e0 ccWord_2. */
            public ccWord_2: number;

            /** Acm_inst_req_7e0 ccWord_1. */
            public ccWord_1: number;

            /** Acm_inst_req_7e0 ccByte_2. */
            public ccByte_2: number;

            /** Acm_inst_req_7e0 ccByte_1. */
            public ccByte_1: number;

            /**
             * Creates a new Acm_inst_req_7e0 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Acm_inst_req_7e0 instance
             */
            public static create(properties?: apollo.drivers.IAcm_inst_req_7e0): apollo.drivers.Acm_inst_req_7e0;

            /**
             * Encodes the specified Acm_inst_req_7e0 message. Does not implicitly {@link apollo.drivers.Acm_inst_req_7e0.verify|verify} messages.
             * @param message Acm_inst_req_7e0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IAcm_inst_req_7e0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Acm_inst_req_7e0 message, length delimited. Does not implicitly {@link apollo.drivers.Acm_inst_req_7e0.verify|verify} messages.
             * @param message Acm_inst_req_7e0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IAcm_inst_req_7e0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Acm_inst_req_7e0 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Acm_inst_req_7e0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Acm_inst_req_7e0;

            /**
             * Decodes an Acm_inst_req_7e0 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Acm_inst_req_7e0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Acm_inst_req_7e0;

            /**
             * Verifies an Acm_inst_req_7e0 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Acm_inst_req_7e0 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Acm_inst_req_7e0
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Acm_inst_req_7e0;

            /**
             * Creates a plain object from an Acm_inst_req_7e0 message. Also converts values to other types if specified.
             * @param message Acm_inst_req_7e0
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Acm_inst_req_7e0, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Acm_inst_req_7e0 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Acm_inst_req_7e0
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_track01_500. */
        interface IEsr_track01_500 {

            /** Esr_track01_500 canTxTrackGroupingChanged */
            canTxTrackGroupingChanged?: (apollo.drivers.Esr_track01_500.Can_tx_track_grouping_changedType|null);

            /** Esr_track01_500 canTxTrackOncoming */
            canTxTrackOncoming?: (apollo.drivers.Esr_track01_500.Can_tx_track_oncomingType|null);

            /** Esr_track01_500 canTxTrackLatRate */
            canTxTrackLatRate?: (number|null);

            /** Esr_track01_500 canTxTrackBridgeObject */
            canTxTrackBridgeObject?: (apollo.drivers.Esr_track01_500.Can_tx_track_bridge_objectType|null);

            /** Esr_track01_500 canTxTrackWidth */
            canTxTrackWidth?: (number|null);

            /** Esr_track01_500 canTxTrackStatus */
            canTxTrackStatus?: (apollo.drivers.Esr_track01_500.Can_tx_track_statusType|null);

            /** Esr_track01_500 canTxTrackRollingCount */
            canTxTrackRollingCount?: (boolean|null);

            /** Esr_track01_500 canTxTrackRangeRate */
            canTxTrackRangeRate?: (number|null);

            /** Esr_track01_500 canTxTrackRangeAccel */
            canTxTrackRangeAccel?: (number|null);

            /** Esr_track01_500 canTxTrackRange */
            canTxTrackRange?: (number|null);

            /** Esr_track01_500 canTxTrackMedRangeMode */
            canTxTrackMedRangeMode?: (apollo.drivers.Esr_track01_500.Can_tx_track_med_range_modeType|null);

            /** Esr_track01_500 canTxTrackAngle */
            canTxTrackAngle?: (number|null);
        }

        /** Represents an Esr_track01_500. */
        class Esr_track01_500 implements IEsr_track01_500 {

            /**
             * Constructs a new Esr_track01_500.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_track01_500);

            /** Esr_track01_500 canTxTrackGroupingChanged. */
            public canTxTrackGroupingChanged: apollo.drivers.Esr_track01_500.Can_tx_track_grouping_changedType;

            /** Esr_track01_500 canTxTrackOncoming. */
            public canTxTrackOncoming: apollo.drivers.Esr_track01_500.Can_tx_track_oncomingType;

            /** Esr_track01_500 canTxTrackLatRate. */
            public canTxTrackLatRate: number;

            /** Esr_track01_500 canTxTrackBridgeObject. */
            public canTxTrackBridgeObject: apollo.drivers.Esr_track01_500.Can_tx_track_bridge_objectType;

            /** Esr_track01_500 canTxTrackWidth. */
            public canTxTrackWidth: number;

            /** Esr_track01_500 canTxTrackStatus. */
            public canTxTrackStatus: apollo.drivers.Esr_track01_500.Can_tx_track_statusType;

            /** Esr_track01_500 canTxTrackRollingCount. */
            public canTxTrackRollingCount: boolean;

            /** Esr_track01_500 canTxTrackRangeRate. */
            public canTxTrackRangeRate: number;

            /** Esr_track01_500 canTxTrackRangeAccel. */
            public canTxTrackRangeAccel: number;

            /** Esr_track01_500 canTxTrackRange. */
            public canTxTrackRange: number;

            /** Esr_track01_500 canTxTrackMedRangeMode. */
            public canTxTrackMedRangeMode: apollo.drivers.Esr_track01_500.Can_tx_track_med_range_modeType;

            /** Esr_track01_500 canTxTrackAngle. */
            public canTxTrackAngle: number;

            /**
             * Creates a new Esr_track01_500 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_track01_500 instance
             */
            public static create(properties?: apollo.drivers.IEsr_track01_500): apollo.drivers.Esr_track01_500;

            /**
             * Encodes the specified Esr_track01_500 message. Does not implicitly {@link apollo.drivers.Esr_track01_500.verify|verify} messages.
             * @param message Esr_track01_500 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_track01_500, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_track01_500 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_track01_500.verify|verify} messages.
             * @param message Esr_track01_500 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_track01_500, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_track01_500 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_track01_500
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_track01_500;

            /**
             * Decodes an Esr_track01_500 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_track01_500
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_track01_500;

            /**
             * Verifies an Esr_track01_500 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_track01_500 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_track01_500
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_track01_500;

            /**
             * Creates a plain object from an Esr_track01_500 message. Also converts values to other types if specified.
             * @param message Esr_track01_500
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_track01_500, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_track01_500 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_track01_500
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Esr_track01_500 {

            /** Can_tx_track_grouping_changedType enum. */
            enum Can_tx_track_grouping_changedType {
                CAN_TX_TRACK_GROUPING_CHANGED_GROUPINGUNCHANGED = 0,
                CAN_TX_TRACK_GROUPING_CHANGED_GROUPINGCHANGED = 1
            }

            /** Can_tx_track_oncomingType enum. */
            enum Can_tx_track_oncomingType {
                CAN_TX_TRACK_ONCOMING_NOTONCOMING = 0,
                CAN_TX_TRACK_ONCOMING_ONCOMING = 1
            }

            /** Can_tx_track_bridge_objectType enum. */
            enum Can_tx_track_bridge_objectType {
                CAN_TX_TRACK_BRIDGE_OBJECT_NOT_BRIDGE = 0,
                CAN_TX_TRACK_BRIDGE_OBJECT_BRIDGE = 1
            }

            /** Can_tx_track_statusType enum. */
            enum Can_tx_track_statusType {
                CAN_TX_TRACK_STATUS_NO_TARGET = 0,
                CAN_TX_TRACK_STATUS_NEW_TARGET = 1,
                CAN_TX_TRACK_STATUS_NEW_UPDATED_TARGET = 2,
                CAN_TX_TRACK_STATUS_UPDATED_TARGET = 3,
                CAN_TX_TRACK_STATUS_COASTED_TARGET = 4,
                CAN_TX_TRACK_STATUS_MERGED_TARGET = 5,
                CAN_TX_TRACK_STATUS_INVALID_COASTED_TARGET = 6,
                CAN_TX_TRACK_STATUS_NEW_COASTED_TARGET = 7
            }

            /** Can_tx_track_med_range_modeType enum. */
            enum Can_tx_track_med_range_modeType {
                CAN_TX_TRACK_MED_RANGE_MODE_NO_MR_LR_UPDATE = 0,
                CAN_TX_TRACK_MED_RANGE_MODE_MR_UPDATE_ONLY = 1,
                CAN_TX_TRACK_MED_RANGE_MODE_LR_UPDATE_ONLY = 2,
                CAN_TX_TRACK_MED_RANGE_MODE_BOTH_MR_LR_UPDATE = 3
            }
        }

        /** Properties of an Esr_valid1_5d0. */
        interface IEsr_valid1_5d0 {

            /** Esr_valid1_5d0 canTxValidLrSn */
            canTxValidLrSn?: (number|null);

            /** Esr_valid1_5d0 canTxValidLrRangeRate */
            canTxValidLrRangeRate?: (number|null);

            /** Esr_valid1_5d0 canTxValidLrRange */
            canTxValidLrRange?: (number|null);

            /** Esr_valid1_5d0 canTxValidLrPower */
            canTxValidLrPower?: (number|null);

            /** Esr_valid1_5d0 canTxValidLrAngle */
            canTxValidLrAngle?: (number|null);
        }

        /** Represents an Esr_valid1_5d0. */
        class Esr_valid1_5d0 implements IEsr_valid1_5d0 {

            /**
             * Constructs a new Esr_valid1_5d0.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_valid1_5d0);

            /** Esr_valid1_5d0 canTxValidLrSn. */
            public canTxValidLrSn: number;

            /** Esr_valid1_5d0 canTxValidLrRangeRate. */
            public canTxValidLrRangeRate: number;

            /** Esr_valid1_5d0 canTxValidLrRange. */
            public canTxValidLrRange: number;

            /** Esr_valid1_5d0 canTxValidLrPower. */
            public canTxValidLrPower: number;

            /** Esr_valid1_5d0 canTxValidLrAngle. */
            public canTxValidLrAngle: number;

            /**
             * Creates a new Esr_valid1_5d0 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_valid1_5d0 instance
             */
            public static create(properties?: apollo.drivers.IEsr_valid1_5d0): apollo.drivers.Esr_valid1_5d0;

            /**
             * Encodes the specified Esr_valid1_5d0 message. Does not implicitly {@link apollo.drivers.Esr_valid1_5d0.verify|verify} messages.
             * @param message Esr_valid1_5d0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_valid1_5d0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_valid1_5d0 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_valid1_5d0.verify|verify} messages.
             * @param message Esr_valid1_5d0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_valid1_5d0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_valid1_5d0 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_valid1_5d0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_valid1_5d0;

            /**
             * Decodes an Esr_valid1_5d0 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_valid1_5d0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_valid1_5d0;

            /**
             * Verifies an Esr_valid1_5d0 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_valid1_5d0 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_valid1_5d0
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_valid1_5d0;

            /**
             * Creates a plain object from an Esr_valid1_5d0 message. Also converts values to other types if specified.
             * @param message Esr_valid1_5d0
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_valid1_5d0, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_valid1_5d0 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_valid1_5d0
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_valid2_5d1. */
        interface IEsr_valid2_5d1 {

            /** Esr_valid2_5d1 canTxValidMrSn */
            canTxValidMrSn?: (number|null);

            /** Esr_valid2_5d1 canTxValidMrRangeRate */
            canTxValidMrRangeRate?: (number|null);

            /** Esr_valid2_5d1 canTxValidMrRange */
            canTxValidMrRange?: (number|null);

            /** Esr_valid2_5d1 canTxValidMrPower */
            canTxValidMrPower?: (number|null);

            /** Esr_valid2_5d1 canTxValidMrAngle */
            canTxValidMrAngle?: (number|null);
        }

        /** Represents an Esr_valid2_5d1. */
        class Esr_valid2_5d1 implements IEsr_valid2_5d1 {

            /**
             * Constructs a new Esr_valid2_5d1.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_valid2_5d1);

            /** Esr_valid2_5d1 canTxValidMrSn. */
            public canTxValidMrSn: number;

            /** Esr_valid2_5d1 canTxValidMrRangeRate. */
            public canTxValidMrRangeRate: number;

            /** Esr_valid2_5d1 canTxValidMrRange. */
            public canTxValidMrRange: number;

            /** Esr_valid2_5d1 canTxValidMrPower. */
            public canTxValidMrPower: number;

            /** Esr_valid2_5d1 canTxValidMrAngle. */
            public canTxValidMrAngle: number;

            /**
             * Creates a new Esr_valid2_5d1 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_valid2_5d1 instance
             */
            public static create(properties?: apollo.drivers.IEsr_valid2_5d1): apollo.drivers.Esr_valid2_5d1;

            /**
             * Encodes the specified Esr_valid2_5d1 message. Does not implicitly {@link apollo.drivers.Esr_valid2_5d1.verify|verify} messages.
             * @param message Esr_valid2_5d1 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_valid2_5d1, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_valid2_5d1 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_valid2_5d1.verify|verify} messages.
             * @param message Esr_valid2_5d1 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_valid2_5d1, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_valid2_5d1 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_valid2_5d1
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_valid2_5d1;

            /**
             * Decodes an Esr_valid2_5d1 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_valid2_5d1
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_valid2_5d1;

            /**
             * Verifies an Esr_valid2_5d1 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_valid2_5d1 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_valid2_5d1
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_valid2_5d1;

            /**
             * Creates a plain object from an Esr_valid2_5d1 message. Also converts values to other types if specified.
             * @param message Esr_valid2_5d1
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_valid2_5d1, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_valid2_5d1 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_valid2_5d1
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Acm_inst_resp_7e4. */
        interface IAcm_inst_resp_7e4 {

            /** Acm_inst_resp_7e4 data_7 */
            data_7?: (number|null);

            /** Acm_inst_resp_7e4 data_6 */
            data_6?: (number|null);

            /** Acm_inst_resp_7e4 data_5 */
            data_5?: (number|null);

            /** Acm_inst_resp_7e4 data_4 */
            data_4?: (number|null);

            /** Acm_inst_resp_7e4 data_3 */
            data_3?: (number|null);

            /** Acm_inst_resp_7e4 rtnCmdCounter */
            rtnCmdCounter?: (number|null);

            /** Acm_inst_resp_7e4 commandReturnCode */
            commandReturnCode?: (number|null);

            /** Acm_inst_resp_7e4 pid */
            pid?: (number|null);
        }

        /** Represents an Acm_inst_resp_7e4. */
        class Acm_inst_resp_7e4 implements IAcm_inst_resp_7e4 {

            /**
             * Constructs a new Acm_inst_resp_7e4.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IAcm_inst_resp_7e4);

            /** Acm_inst_resp_7e4 data_7. */
            public data_7: number;

            /** Acm_inst_resp_7e4 data_6. */
            public data_6: number;

            /** Acm_inst_resp_7e4 data_5. */
            public data_5: number;

            /** Acm_inst_resp_7e4 data_4. */
            public data_4: number;

            /** Acm_inst_resp_7e4 data_3. */
            public data_3: number;

            /** Acm_inst_resp_7e4 rtnCmdCounter. */
            public rtnCmdCounter: number;

            /** Acm_inst_resp_7e4 commandReturnCode. */
            public commandReturnCode: number;

            /** Acm_inst_resp_7e4 pid. */
            public pid: number;

            /**
             * Creates a new Acm_inst_resp_7e4 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Acm_inst_resp_7e4 instance
             */
            public static create(properties?: apollo.drivers.IAcm_inst_resp_7e4): apollo.drivers.Acm_inst_resp_7e4;

            /**
             * Encodes the specified Acm_inst_resp_7e4 message. Does not implicitly {@link apollo.drivers.Acm_inst_resp_7e4.verify|verify} messages.
             * @param message Acm_inst_resp_7e4 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IAcm_inst_resp_7e4, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Acm_inst_resp_7e4 message, length delimited. Does not implicitly {@link apollo.drivers.Acm_inst_resp_7e4.verify|verify} messages.
             * @param message Acm_inst_resp_7e4 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IAcm_inst_resp_7e4, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Acm_inst_resp_7e4 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Acm_inst_resp_7e4
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Acm_inst_resp_7e4;

            /**
             * Decodes an Acm_inst_resp_7e4 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Acm_inst_resp_7e4
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Acm_inst_resp_7e4;

            /**
             * Verifies an Acm_inst_resp_7e4 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Acm_inst_resp_7e4 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Acm_inst_resp_7e4
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Acm_inst_resp_7e4;

            /**
             * Creates a plain object from an Acm_inst_resp_7e4 message. Also converts values to other types if specified.
             * @param message Acm_inst_resp_7e4
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Acm_inst_resp_7e4, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Acm_inst_resp_7e4 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Acm_inst_resp_7e4
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Vehicle2_4f1. */
        interface IVehicle2_4f1 {

            /** Vehicle2_4f1 canRxVolvoShortTrackRoc */
            canRxVolvoShortTrackRoc?: (number|null);

            /** Vehicle2_4f1 canRxMrOnlyTransmit */
            canRxMrOnlyTransmit?: (apollo.drivers.Vehicle2_4f1.Can_rx_mr_only_transmitType|null);

            /** Vehicle2_4f1 canRxLrOnlyTransmit */
            canRxLrOnlyTransmit?: (apollo.drivers.Vehicle2_4f1.Can_rx_lr_only_transmitType|null);

            /** Vehicle2_4f1 canRxHighYawAngle */
            canRxHighYawAngle?: (number|null);

            /** Vehicle2_4f1 canRxClearFaults */
            canRxClearFaults?: (apollo.drivers.Vehicle2_4f1.Can_rx_clear_faultsType|null);

            /** Vehicle2_4f1 canRxUseAngleMisalignment */
            canRxUseAngleMisalignment?: (apollo.drivers.Vehicle2_4f1.Can_rx_use_angle_misalignmentType|null);

            /** Vehicle2_4f1 canRxTurnSignalStatus */
            canRxTurnSignalStatus?: (apollo.drivers.Vehicle2_4f1.Can_rx_turn_signal_statusType|null);

            /** Vehicle2_4f1 canRxBlockageDisable */
            canRxBlockageDisable?: (apollo.drivers.Vehicle2_4f1.Can_rx_blockage_disableType|null);

            /** Vehicle2_4f1 canRxVehicleSpeedValidity */
            canRxVehicleSpeedValidity?: (apollo.drivers.Vehicle2_4f1.Can_rx_vehicle_speed_validityType|null);

            /** Vehicle2_4f1 canRxMmrUpsideDown */
            canRxMmrUpsideDown?: (apollo.drivers.Vehicle2_4f1.Can_rx_mmr_upside_downType|null);

            /** Vehicle2_4f1 canRxWiperStatus */
            canRxWiperStatus?: (apollo.drivers.Vehicle2_4f1.Can_rx_wiper_statusType|null);

            /** Vehicle2_4f1 canRxRawDataEnable */
            canRxRawDataEnable?: (apollo.drivers.Vehicle2_4f1.Can_rx_raw_data_enableType|null);

            /** Vehicle2_4f1 canRxRadarCmdRadiate */
            canRxRadarCmdRadiate?: (apollo.drivers.Vehicle2_4f1.Can_rx_radar_cmd_radiateType|null);

            /** Vehicle2_4f1 canRxGroupingMode */
            canRxGroupingMode?: (apollo.drivers.Vehicle2_4f1.Can_rx_grouping_modeType|null);

            /** Vehicle2_4f1 canRxMaximumTracks */
            canRxMaximumTracks?: (number|null);

            /** Vehicle2_4f1 canRxLateralMountingOffset */
            canRxLateralMountingOffset?: (number|null);

            /** Vehicle2_4f1 canRxAngleMisalignment */
            canRxAngleMisalignment?: (number|null);

            /** Vehicle2_4f1 canRxScanIndexAck */
            canRxScanIndexAck?: (number|null);
        }

        /** Represents a Vehicle2_4f1. */
        class Vehicle2_4f1 implements IVehicle2_4f1 {

            /**
             * Constructs a new Vehicle2_4f1.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IVehicle2_4f1);

            /** Vehicle2_4f1 canRxVolvoShortTrackRoc. */
            public canRxVolvoShortTrackRoc: number;

            /** Vehicle2_4f1 canRxMrOnlyTransmit. */
            public canRxMrOnlyTransmit: apollo.drivers.Vehicle2_4f1.Can_rx_mr_only_transmitType;

            /** Vehicle2_4f1 canRxLrOnlyTransmit. */
            public canRxLrOnlyTransmit: apollo.drivers.Vehicle2_4f1.Can_rx_lr_only_transmitType;

            /** Vehicle2_4f1 canRxHighYawAngle. */
            public canRxHighYawAngle: number;

            /** Vehicle2_4f1 canRxClearFaults. */
            public canRxClearFaults: apollo.drivers.Vehicle2_4f1.Can_rx_clear_faultsType;

            /** Vehicle2_4f1 canRxUseAngleMisalignment. */
            public canRxUseAngleMisalignment: apollo.drivers.Vehicle2_4f1.Can_rx_use_angle_misalignmentType;

            /** Vehicle2_4f1 canRxTurnSignalStatus. */
            public canRxTurnSignalStatus: apollo.drivers.Vehicle2_4f1.Can_rx_turn_signal_statusType;

            /** Vehicle2_4f1 canRxBlockageDisable. */
            public canRxBlockageDisable: apollo.drivers.Vehicle2_4f1.Can_rx_blockage_disableType;

            /** Vehicle2_4f1 canRxVehicleSpeedValidity. */
            public canRxVehicleSpeedValidity: apollo.drivers.Vehicle2_4f1.Can_rx_vehicle_speed_validityType;

            /** Vehicle2_4f1 canRxMmrUpsideDown. */
            public canRxMmrUpsideDown: apollo.drivers.Vehicle2_4f1.Can_rx_mmr_upside_downType;

            /** Vehicle2_4f1 canRxWiperStatus. */
            public canRxWiperStatus: apollo.drivers.Vehicle2_4f1.Can_rx_wiper_statusType;

            /** Vehicle2_4f1 canRxRawDataEnable. */
            public canRxRawDataEnable: apollo.drivers.Vehicle2_4f1.Can_rx_raw_data_enableType;

            /** Vehicle2_4f1 canRxRadarCmdRadiate. */
            public canRxRadarCmdRadiate: apollo.drivers.Vehicle2_4f1.Can_rx_radar_cmd_radiateType;

            /** Vehicle2_4f1 canRxGroupingMode. */
            public canRxGroupingMode: apollo.drivers.Vehicle2_4f1.Can_rx_grouping_modeType;

            /** Vehicle2_4f1 canRxMaximumTracks. */
            public canRxMaximumTracks: number;

            /** Vehicle2_4f1 canRxLateralMountingOffset. */
            public canRxLateralMountingOffset: number;

            /** Vehicle2_4f1 canRxAngleMisalignment. */
            public canRxAngleMisalignment: number;

            /** Vehicle2_4f1 canRxScanIndexAck. */
            public canRxScanIndexAck: number;

            /**
             * Creates a new Vehicle2_4f1 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Vehicle2_4f1 instance
             */
            public static create(properties?: apollo.drivers.IVehicle2_4f1): apollo.drivers.Vehicle2_4f1;

            /**
             * Encodes the specified Vehicle2_4f1 message. Does not implicitly {@link apollo.drivers.Vehicle2_4f1.verify|verify} messages.
             * @param message Vehicle2_4f1 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IVehicle2_4f1, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vehicle2_4f1 message, length delimited. Does not implicitly {@link apollo.drivers.Vehicle2_4f1.verify|verify} messages.
             * @param message Vehicle2_4f1 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IVehicle2_4f1, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vehicle2_4f1 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vehicle2_4f1
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Vehicle2_4f1;

            /**
             * Decodes a Vehicle2_4f1 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vehicle2_4f1
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Vehicle2_4f1;

            /**
             * Verifies a Vehicle2_4f1 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vehicle2_4f1 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vehicle2_4f1
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Vehicle2_4f1;

            /**
             * Creates a plain object from a Vehicle2_4f1 message. Also converts values to other types if specified.
             * @param message Vehicle2_4f1
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Vehicle2_4f1, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vehicle2_4f1 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Vehicle2_4f1
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Vehicle2_4f1 {

            /** Can_rx_mr_only_transmitType enum. */
            enum Can_rx_mr_only_transmitType {
                CAN_RX_MR_ONLY_TRANSMIT_OFF = 0,
                CAN_RX_MR_ONLY_TRANSMIT_ON = 1
            }

            /** Can_rx_lr_only_transmitType enum. */
            enum Can_rx_lr_only_transmitType {
                CAN_RX_LR_ONLY_TRANSMIT_OFF = 0,
                CAN_RX_LR_ONLY_TRANSMIT_ON = 1
            }

            /** Can_rx_clear_faultsType enum. */
            enum Can_rx_clear_faultsType {
                CAN_RX_CLEAR_FAULTS_OFF = 0,
                CAN_RX_CLEAR_FAULTS_ON = 1
            }

            /** Can_rx_use_angle_misalignmentType enum. */
            enum Can_rx_use_angle_misalignmentType {
                CAN_RX_USE_ANGLE_MISALIGNMENT_OFF = 0,
                CAN_RX_USE_ANGLE_MISALIGNMENT_ON = 1
            }

            /** Can_rx_turn_signal_statusType enum. */
            enum Can_rx_turn_signal_statusType {
                CAN_RX_TURN_SIGNAL_STATUS_OFF = 0,
                CAN_RX_TURN_SIGNAL_STATUS_LEFT = 1,
                CAN_RX_TURN_SIGNAL_STATUS_RIGHT = 2,
                CAN_RX_TURN_SIGNAL_STATUS_INVALID_3 = 3
            }

            /** Can_rx_blockage_disableType enum. */
            enum Can_rx_blockage_disableType {
                CAN_RX_BLOCKAGE_DISABLE_ENABLED = 0,
                CAN_RX_BLOCKAGE_DISABLE_DISABLED = 1
            }

            /** Can_rx_vehicle_speed_validityType enum. */
            enum Can_rx_vehicle_speed_validityType {
                CAN_RX_VEHICLE_SPEED_VALIDITY_INVALID = 0,
                CAN_RX_VEHICLE_SPEED_VALIDITY_VALID = 1
            }

            /** Can_rx_mmr_upside_downType enum. */
            enum Can_rx_mmr_upside_downType {
                CAN_RX_MMR_UPSIDE_DOWN_RIGHT_SIDE_UP = 0,
                CAN_RX_MMR_UPSIDE_DOWN_UPSIDE_DOWN = 1
            }

            /** Can_rx_wiper_statusType enum. */
            enum Can_rx_wiper_statusType {
                CAN_RX_WIPER_STATUS_OFF = 0,
                CAN_RX_WIPER_STATUS_ON = 1
            }

            /** Can_rx_raw_data_enableType enum. */
            enum Can_rx_raw_data_enableType {
                CAN_RX_RAW_DATA_ENABLE_FILTERED = 0,
                CAN_RX_RAW_DATA_ENABLE_RAW = 1
            }

            /** Can_rx_radar_cmd_radiateType enum. */
            enum Can_rx_radar_cmd_radiateType {
                CAN_RX_RADAR_CMD_RADIATE_OFF = 0,
                CAN_RX_RADAR_CMD_RADIATE_ON = 1
            }

            /** Can_rx_grouping_modeType enum. */
            enum Can_rx_grouping_modeType {
                CAN_RX_GROUPING_MODE_NO_GROUPING = 0,
                CAN_RX_GROUPING_MODE_GROUP_MOVING_ONLY = 1,
                CAN_RX_GROUPING_MODE_GROUP_STATIONARY_ONLY = 2,
                CAN_RX_GROUPING_MODE_GROUP_MOVING_STATIONARY = 3
            }
        }

        /** Properties of a Vehicle1_4f0. */
        interface IVehicle1_4f0 {

            /** Vehicle1_4f0 canRxSteeringAngleValidity */
            canRxSteeringAngleValidity?: (apollo.drivers.Vehicle1_4f0.Can_rx_steering_angle_validityType|null);

            /** Vehicle1_4f0 canRxSteeringAngleRate */
            canRxSteeringAngleRate?: (number|null);

            /** Vehicle1_4f0 canRxSteeringAngleSign */
            canRxSteeringAngleSign?: (apollo.drivers.Vehicle1_4f0.Can_rx_steering_angle_signType|null);

            /** Vehicle1_4f0 canRxSteeringAngleRateSign */
            canRxSteeringAngleRateSign?: (apollo.drivers.Vehicle1_4f0.Can_rx_steering_angle_rate_signType|null);

            /** Vehicle1_4f0 canRxSteeringAngle */
            canRxSteeringAngle?: (number|null);

            /** Vehicle1_4f0 canRxRadiusCurvature */
            canRxRadiusCurvature?: (number|null);

            /** Vehicle1_4f0 canRxYawRateValidity */
            canRxYawRateValidity?: (apollo.drivers.Vehicle1_4f0.Can_rx_yaw_rate_validityType|null);

            /** Vehicle1_4f0 canRxYawRate */
            canRxYawRate?: (number|null);

            /** Vehicle1_4f0 canRxVehicleSpeedDirection */
            canRxVehicleSpeedDirection?: (apollo.drivers.Vehicle1_4f0.Can_rx_vehicle_speed_directionType|null);

            /** Vehicle1_4f0 canRxVehicleSpeed */
            canRxVehicleSpeed?: (number|null);
        }

        /** Represents a Vehicle1_4f0. */
        class Vehicle1_4f0 implements IVehicle1_4f0 {

            /**
             * Constructs a new Vehicle1_4f0.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IVehicle1_4f0);

            /** Vehicle1_4f0 canRxSteeringAngleValidity. */
            public canRxSteeringAngleValidity: apollo.drivers.Vehicle1_4f0.Can_rx_steering_angle_validityType;

            /** Vehicle1_4f0 canRxSteeringAngleRate. */
            public canRxSteeringAngleRate: number;

            /** Vehicle1_4f0 canRxSteeringAngleSign. */
            public canRxSteeringAngleSign: apollo.drivers.Vehicle1_4f0.Can_rx_steering_angle_signType;

            /** Vehicle1_4f0 canRxSteeringAngleRateSign. */
            public canRxSteeringAngleRateSign: apollo.drivers.Vehicle1_4f0.Can_rx_steering_angle_rate_signType;

            /** Vehicle1_4f0 canRxSteeringAngle. */
            public canRxSteeringAngle: number;

            /** Vehicle1_4f0 canRxRadiusCurvature. */
            public canRxRadiusCurvature: number;

            /** Vehicle1_4f0 canRxYawRateValidity. */
            public canRxYawRateValidity: apollo.drivers.Vehicle1_4f0.Can_rx_yaw_rate_validityType;

            /** Vehicle1_4f0 canRxYawRate. */
            public canRxYawRate: number;

            /** Vehicle1_4f0 canRxVehicleSpeedDirection. */
            public canRxVehicleSpeedDirection: apollo.drivers.Vehicle1_4f0.Can_rx_vehicle_speed_directionType;

            /** Vehicle1_4f0 canRxVehicleSpeed. */
            public canRxVehicleSpeed: number;

            /**
             * Creates a new Vehicle1_4f0 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Vehicle1_4f0 instance
             */
            public static create(properties?: apollo.drivers.IVehicle1_4f0): apollo.drivers.Vehicle1_4f0;

            /**
             * Encodes the specified Vehicle1_4f0 message. Does not implicitly {@link apollo.drivers.Vehicle1_4f0.verify|verify} messages.
             * @param message Vehicle1_4f0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IVehicle1_4f0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vehicle1_4f0 message, length delimited. Does not implicitly {@link apollo.drivers.Vehicle1_4f0.verify|verify} messages.
             * @param message Vehicle1_4f0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IVehicle1_4f0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vehicle1_4f0 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vehicle1_4f0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Vehicle1_4f0;

            /**
             * Decodes a Vehicle1_4f0 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vehicle1_4f0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Vehicle1_4f0;

            /**
             * Verifies a Vehicle1_4f0 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vehicle1_4f0 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vehicle1_4f0
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Vehicle1_4f0;

            /**
             * Creates a plain object from a Vehicle1_4f0 message. Also converts values to other types if specified.
             * @param message Vehicle1_4f0
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Vehicle1_4f0, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vehicle1_4f0 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Vehicle1_4f0
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Vehicle1_4f0 {

            /** Can_rx_steering_angle_validityType enum. */
            enum Can_rx_steering_angle_validityType {
                CAN_RX_STEERING_ANGLE_VALIDITY_INVALID = 0,
                CAN_RX_STEERING_ANGLE_VALIDITY_VALID = 1
            }

            /** Can_rx_steering_angle_signType enum. */
            enum Can_rx_steering_angle_signType {
                CAN_RX_STEERING_ANGLE_SIGN_COUNTERCLOCKWISE = 0,
                CAN_RX_STEERING_ANGLE_SIGN_CLOCKWISE = 1
            }

            /** Can_rx_steering_angle_rate_signType enum. */
            enum Can_rx_steering_angle_rate_signType {
                CAN_RX_STEERING_ANGLE_RATE_SIGN_COUNTERCLOCKWISE = 0,
                CAN_RX_STEERING_ANGLE_RATE_SIGN_CLOCKWISE = 1
            }

            /** Can_rx_yaw_rate_validityType enum. */
            enum Can_rx_yaw_rate_validityType {
                CAN_RX_YAW_RATE_VALIDITY_INVALID = 0,
                CAN_RX_YAW_RATE_VALIDITY_VALID = 1
            }

            /** Can_rx_vehicle_speed_directionType enum. */
            enum Can_rx_vehicle_speed_directionType {
                CAN_RX_VEHICLE_SPEED_DIRECTION_FORWARD = 0,
                CAN_RX_VEHICLE_SPEED_DIRECTION_REVERSE = 1
            }
        }

        /** Properties of an Esr_sim1_5c0. */
        interface IEsr_sim1_5c0 {

            /** Esr_sim1_5c0 canRxSimTrackId */
            canRxSimTrackId?: (apollo.drivers.Esr_sim1_5c0.Can_rx_sim_track_idType|null);

            /** Esr_sim1_5c0 canRxSimStatus */
            canRxSimStatus?: (apollo.drivers.Esr_sim1_5c0.Can_rx_sim_statusType|null);

            /** Esr_sim1_5c0 canRxSimRangeRate */
            canRxSimRangeRate?: (number|null);

            /** Esr_sim1_5c0 canRxSimRangeAccel */
            canRxSimRangeAccel?: (number|null);

            /** Esr_sim1_5c0 canRxSimRange */
            canRxSimRange?: (number|null);

            /** Esr_sim1_5c0 canRxSimLatRate */
            canRxSimLatRate?: (number|null);

            /** Esr_sim1_5c0 canRxSimLatPos */
            canRxSimLatPos?: (number|null);

            /** Esr_sim1_5c0 canRxSimFunction */
            canRxSimFunction?: (apollo.drivers.Esr_sim1_5c0.Can_rx_sim_functionType|null);

            /** Esr_sim1_5c0 canRxSimAngle */
            canRxSimAngle?: (number|null);
        }

        /** Represents an Esr_sim1_5c0. */
        class Esr_sim1_5c0 implements IEsr_sim1_5c0 {

            /**
             * Constructs a new Esr_sim1_5c0.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_sim1_5c0);

            /** Esr_sim1_5c0 canRxSimTrackId. */
            public canRxSimTrackId: apollo.drivers.Esr_sim1_5c0.Can_rx_sim_track_idType;

            /** Esr_sim1_5c0 canRxSimStatus. */
            public canRxSimStatus: apollo.drivers.Esr_sim1_5c0.Can_rx_sim_statusType;

            /** Esr_sim1_5c0 canRxSimRangeRate. */
            public canRxSimRangeRate: number;

            /** Esr_sim1_5c0 canRxSimRangeAccel. */
            public canRxSimRangeAccel: number;

            /** Esr_sim1_5c0 canRxSimRange. */
            public canRxSimRange: number;

            /** Esr_sim1_5c0 canRxSimLatRate. */
            public canRxSimLatRate: number;

            /** Esr_sim1_5c0 canRxSimLatPos. */
            public canRxSimLatPos: number;

            /** Esr_sim1_5c0 canRxSimFunction. */
            public canRxSimFunction: apollo.drivers.Esr_sim1_5c0.Can_rx_sim_functionType;

            /** Esr_sim1_5c0 canRxSimAngle. */
            public canRxSimAngle: number;

            /**
             * Creates a new Esr_sim1_5c0 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_sim1_5c0 instance
             */
            public static create(properties?: apollo.drivers.IEsr_sim1_5c0): apollo.drivers.Esr_sim1_5c0;

            /**
             * Encodes the specified Esr_sim1_5c0 message. Does not implicitly {@link apollo.drivers.Esr_sim1_5c0.verify|verify} messages.
             * @param message Esr_sim1_5c0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_sim1_5c0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_sim1_5c0 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_sim1_5c0.verify|verify} messages.
             * @param message Esr_sim1_5c0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_sim1_5c0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_sim1_5c0 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_sim1_5c0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_sim1_5c0;

            /**
             * Decodes an Esr_sim1_5c0 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_sim1_5c0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_sim1_5c0;

            /**
             * Verifies an Esr_sim1_5c0 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_sim1_5c0 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_sim1_5c0
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_sim1_5c0;

            /**
             * Creates a plain object from an Esr_sim1_5c0 message. Also converts values to other types if specified.
             * @param message Esr_sim1_5c0
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_sim1_5c0, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_sim1_5c0 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_sim1_5c0
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Esr_sim1_5c0 {

            /** Can_rx_sim_track_idType enum. */
            enum Can_rx_sim_track_idType {
                CAN_RX_SIM_TRACK_ID_NO_TARGET = 0,
                CAN_RX_SIM_TRACK_ID_TARGET_1 = 1,
                CAN_RX_SIM_TRACK_ID_TARGET_2 = 2
            }

            /** Can_rx_sim_statusType enum. */
            enum Can_rx_sim_statusType {
                CAN_RX_SIM_STATUS_INVALID = 0,
                CAN_RX_SIM_STATUS_NEW = 1,
                CAN_RX_SIM_STATUS_UPDATED = 2,
                CAN_RX_SIM_STATUS_COASTED = 3
            }

            /** Can_rx_sim_functionType enum. */
            enum Can_rx_sim_functionType {
                CAN_RX_SIM_FUNCTION_ACC = 0,
                CAN_RX_SIM_FUNCTION_RI = 1,
                CAN_RX_SIM_FUNCTION_FCW_MOVE = 2,
                CAN_RX_SIM_FUNCTION_FCW_STAT = 3,
                CAN_RX_SIM_FUNCTION_CMBB_MOVE = 4,
                CAN_RX_SIM_FUNCTION_CMBB_STAT = 5,
                CAN_RX_SIM_FUNCTION_ALL_MOVING_ACC_FCW_CMBB = 6,
                CAN_RX_SIM_FUNCTION_ALL_STAT_RI_FCW_CMBB = 7
            }
        }

        /** Properties of an Esr_status1_4e0. */
        interface IEsr_status1_4e0 {

            /** Esr_status1_4e0 canTxDspTimestamp */
            canTxDspTimestamp?: (number|null);

            /** Esr_status1_4e0 canTxCommError */
            canTxCommError?: (boolean|null);

            /** Esr_status1_4e0 canTxYawRateCalc */
            canTxYawRateCalc?: (number|null);

            /** Esr_status1_4e0 canTxVehicleSpeedCalc */
            canTxVehicleSpeedCalc?: (number|null);

            /** Esr_status1_4e0 canTxScanIndex */
            canTxScanIndex?: (number|null);

            /** Esr_status1_4e0 canTxRollingCount_1 */
            canTxRollingCount_1?: (number|null);

            /** Esr_status1_4e0 canTxRadiusCurvatureCalc */
            canTxRadiusCurvatureCalc?: (number|null);
        }

        /** Represents an Esr_status1_4e0. */
        class Esr_status1_4e0 implements IEsr_status1_4e0 {

            /**
             * Constructs a new Esr_status1_4e0.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status1_4e0);

            /** Esr_status1_4e0 canTxDspTimestamp. */
            public canTxDspTimestamp: number;

            /** Esr_status1_4e0 canTxCommError. */
            public canTxCommError: boolean;

            /** Esr_status1_4e0 canTxYawRateCalc. */
            public canTxYawRateCalc: number;

            /** Esr_status1_4e0 canTxVehicleSpeedCalc. */
            public canTxVehicleSpeedCalc: number;

            /** Esr_status1_4e0 canTxScanIndex. */
            public canTxScanIndex: number;

            /** Esr_status1_4e0 canTxRollingCount_1. */
            public canTxRollingCount_1: number;

            /** Esr_status1_4e0 canTxRadiusCurvatureCalc. */
            public canTxRadiusCurvatureCalc: number;

            /**
             * Creates a new Esr_status1_4e0 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status1_4e0 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status1_4e0): apollo.drivers.Esr_status1_4e0;

            /**
             * Encodes the specified Esr_status1_4e0 message. Does not implicitly {@link apollo.drivers.Esr_status1_4e0.verify|verify} messages.
             * @param message Esr_status1_4e0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status1_4e0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status1_4e0 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status1_4e0.verify|verify} messages.
             * @param message Esr_status1_4e0 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status1_4e0, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status1_4e0 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status1_4e0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status1_4e0;

            /**
             * Decodes an Esr_status1_4e0 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status1_4e0
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status1_4e0;

            /**
             * Verifies an Esr_status1_4e0 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status1_4e0 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status1_4e0
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status1_4e0;

            /**
             * Creates a plain object from an Esr_status1_4e0 message. Also converts values to other types if specified.
             * @param message Esr_status1_4e0
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status1_4e0, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status1_4e0 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status1_4e0
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_status2_4e1. */
        interface IEsr_status2_4e1 {

            /** Esr_status2_4e1 canTxYawRateBias */
            canTxYawRateBias?: (number|null);

            /** Esr_status2_4e1 canTxVehSpdCompFactor */
            canTxVehSpdCompFactor?: (number|null);

            /** Esr_status2_4e1 canTxSwVersionDsp */
            canTxSwVersionDsp?: (number|null);

            /** Esr_status2_4e1 canTxTemperature */
            canTxTemperature?: (number|null);

            /** Esr_status2_4e1 canTxRawDataMode */
            canTxRawDataMode?: (apollo.drivers.Esr_status2_4e1.Can_tx_raw_data_modeType|null);

            /** Esr_status2_4e1 canTxRangePerfError */
            canTxRangePerfError?: (apollo.drivers.Esr_status2_4e1.Can_tx_range_perf_errorType|null);

            /** Esr_status2_4e1 canTxOverheatError */
            canTxOverheatError?: (apollo.drivers.Esr_status2_4e1.Can_tx_overheat_errorType|null);

            /** Esr_status2_4e1 canTxMaximumTracksAck */
            canTxMaximumTracksAck?: (number|null);

            /** Esr_status2_4e1 canTxInternalError */
            canTxInternalError?: (apollo.drivers.Esr_status2_4e1.Can_tx_internal_errorType|null);

            /** Esr_status2_4e1 canTxGroupingMode */
            canTxGroupingMode?: (apollo.drivers.Esr_status2_4e1.Can_tx_grouping_modeType|null);

            /** Esr_status2_4e1 canTxXcvrOperational */
            canTxXcvrOperational?: (apollo.drivers.Esr_status2_4e1.Can_tx_xcvr_operationalType|null);

            /** Esr_status2_4e1 canTxSteeringAngleAck */
            canTxSteeringAngleAck?: (number|null);

            /** Esr_status2_4e1 canTxRollingCount_2 */
            canTxRollingCount_2?: (number|null);
        }

        /** Represents an Esr_status2_4e1. */
        class Esr_status2_4e1 implements IEsr_status2_4e1 {

            /**
             * Constructs a new Esr_status2_4e1.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status2_4e1);

            /** Esr_status2_4e1 canTxYawRateBias. */
            public canTxYawRateBias: number;

            /** Esr_status2_4e1 canTxVehSpdCompFactor. */
            public canTxVehSpdCompFactor: number;

            /** Esr_status2_4e1 canTxSwVersionDsp. */
            public canTxSwVersionDsp: number;

            /** Esr_status2_4e1 canTxTemperature. */
            public canTxTemperature: number;

            /** Esr_status2_4e1 canTxRawDataMode. */
            public canTxRawDataMode: apollo.drivers.Esr_status2_4e1.Can_tx_raw_data_modeType;

            /** Esr_status2_4e1 canTxRangePerfError. */
            public canTxRangePerfError: apollo.drivers.Esr_status2_4e1.Can_tx_range_perf_errorType;

            /** Esr_status2_4e1 canTxOverheatError. */
            public canTxOverheatError: apollo.drivers.Esr_status2_4e1.Can_tx_overheat_errorType;

            /** Esr_status2_4e1 canTxMaximumTracksAck. */
            public canTxMaximumTracksAck: number;

            /** Esr_status2_4e1 canTxInternalError. */
            public canTxInternalError: apollo.drivers.Esr_status2_4e1.Can_tx_internal_errorType;

            /** Esr_status2_4e1 canTxGroupingMode. */
            public canTxGroupingMode: apollo.drivers.Esr_status2_4e1.Can_tx_grouping_modeType;

            /** Esr_status2_4e1 canTxXcvrOperational. */
            public canTxXcvrOperational: apollo.drivers.Esr_status2_4e1.Can_tx_xcvr_operationalType;

            /** Esr_status2_4e1 canTxSteeringAngleAck. */
            public canTxSteeringAngleAck: number;

            /** Esr_status2_4e1 canTxRollingCount_2. */
            public canTxRollingCount_2: number;

            /**
             * Creates a new Esr_status2_4e1 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status2_4e1 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status2_4e1): apollo.drivers.Esr_status2_4e1;

            /**
             * Encodes the specified Esr_status2_4e1 message. Does not implicitly {@link apollo.drivers.Esr_status2_4e1.verify|verify} messages.
             * @param message Esr_status2_4e1 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status2_4e1, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status2_4e1 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status2_4e1.verify|verify} messages.
             * @param message Esr_status2_4e1 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status2_4e1, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status2_4e1 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status2_4e1
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status2_4e1;

            /**
             * Decodes an Esr_status2_4e1 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status2_4e1
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status2_4e1;

            /**
             * Verifies an Esr_status2_4e1 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status2_4e1 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status2_4e1
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status2_4e1;

            /**
             * Creates a plain object from an Esr_status2_4e1 message. Also converts values to other types if specified.
             * @param message Esr_status2_4e1
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status2_4e1, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status2_4e1 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status2_4e1
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Esr_status2_4e1 {

            /** Can_tx_raw_data_modeType enum. */
            enum Can_tx_raw_data_modeType {
                CAN_TX_RAW_DATA_MODE_FILTERED = 0,
                CAN_TX_RAW_DATA_MODE_RAW = 1
            }

            /** Can_tx_range_perf_errorType enum. */
            enum Can_tx_range_perf_errorType {
                CAN_TX_RANGE_PERF_ERROR_NOT_BLOCKED = 0,
                CAN_TX_RANGE_PERF_ERROR_BLOCKED = 1
            }

            /** Can_tx_overheat_errorType enum. */
            enum Can_tx_overheat_errorType {
                CAN_TX_OVERHEAT_ERROR_NOT_OVERTEMP = 0,
                CAN_TX_OVERHEAT_ERROR_OVERTEMP = 1
            }

            /** Can_tx_internal_errorType enum. */
            enum Can_tx_internal_errorType {
                CAN_TX_INTERNAL_ERROR_NOT_FAILED = 0,
                CAN_TX_INTERNAL_ERROR_FAILED = 1
            }

            /** Can_tx_grouping_modeType enum. */
            enum Can_tx_grouping_modeType {
                CAN_TX_GROUPING_MODE_NO_GROUPING = 0,
                CAN_TX_GROUPING_MODE_GROUP_MOVING_ONLY = 1,
                CAN_TX_GROUPING_MODE_GROUP_STATIONARY_ONLY = 2,
                CAN_TX_GROUPING_MODE_GROUP_MOVING_STATIONARY = 3
            }

            /** Can_tx_xcvr_operationalType enum. */
            enum Can_tx_xcvr_operationalType {
                CAN_TX_XCVR_OPERATIONAL_OFF = 0,
                CAN_TX_XCVR_OPERATIONAL_ON = 1
            }
        }

        /** Properties of an Esr_status8_5e7. */
        interface IEsr_status8_5e7 {

            /** Esr_status8_5e7 canTxHistoryFault_7 */
            canTxHistoryFault_7?: (number|null);

            /** Esr_status8_5e7 canTxHistoryFault_6 */
            canTxHistoryFault_6?: (number|null);

            /** Esr_status8_5e7 canTxHistoryFault_5 */
            canTxHistoryFault_5?: (number|null);

            /** Esr_status8_5e7 canTxHistoryFault_4 */
            canTxHistoryFault_4?: (number|null);

            /** Esr_status8_5e7 canTxHistoryFault_3 */
            canTxHistoryFault_3?: (number|null);

            /** Esr_status8_5e7 canTxHistoryFault_2 */
            canTxHistoryFault_2?: (number|null);

            /** Esr_status8_5e7 canTxHistoryFault_1 */
            canTxHistoryFault_1?: (number|null);

            /** Esr_status8_5e7 canTxHistoryFault_0 */
            canTxHistoryFault_0?: (number|null);
        }

        /** Represents an Esr_status8_5e7. */
        class Esr_status8_5e7 implements IEsr_status8_5e7 {

            /**
             * Constructs a new Esr_status8_5e7.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status8_5e7);

            /** Esr_status8_5e7 canTxHistoryFault_7. */
            public canTxHistoryFault_7: number;

            /** Esr_status8_5e7 canTxHistoryFault_6. */
            public canTxHistoryFault_6: number;

            /** Esr_status8_5e7 canTxHistoryFault_5. */
            public canTxHistoryFault_5: number;

            /** Esr_status8_5e7 canTxHistoryFault_4. */
            public canTxHistoryFault_4: number;

            /** Esr_status8_5e7 canTxHistoryFault_3. */
            public canTxHistoryFault_3: number;

            /** Esr_status8_5e7 canTxHistoryFault_2. */
            public canTxHistoryFault_2: number;

            /** Esr_status8_5e7 canTxHistoryFault_1. */
            public canTxHistoryFault_1: number;

            /** Esr_status8_5e7 canTxHistoryFault_0. */
            public canTxHistoryFault_0: number;

            /**
             * Creates a new Esr_status8_5e7 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status8_5e7 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status8_5e7): apollo.drivers.Esr_status8_5e7;

            /**
             * Encodes the specified Esr_status8_5e7 message. Does not implicitly {@link apollo.drivers.Esr_status8_5e7.verify|verify} messages.
             * @param message Esr_status8_5e7 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status8_5e7, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status8_5e7 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status8_5e7.verify|verify} messages.
             * @param message Esr_status8_5e7 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status8_5e7, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status8_5e7 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status8_5e7
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status8_5e7;

            /**
             * Decodes an Esr_status8_5e7 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status8_5e7
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status8_5e7;

            /**
             * Verifies an Esr_status8_5e7 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status8_5e7 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status8_5e7
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status8_5e7;

            /**
             * Creates a plain object from an Esr_status8_5e7 message. Also converts values to other types if specified.
             * @param message Esr_status8_5e7
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status8_5e7, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status8_5e7 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status8_5e7
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Esr_status7_5e6. */
        interface IEsr_status7_5e6 {

            /** Esr_status7_5e6 canTxActiveFault_7 */
            canTxActiveFault_7?: (number|null);

            /** Esr_status7_5e6 canTxActiveFault_6 */
            canTxActiveFault_6?: (number|null);

            /** Esr_status7_5e6 canTxActiveFault_5 */
            canTxActiveFault_5?: (number|null);

            /** Esr_status7_5e6 canTxActiveFault_4 */
            canTxActiveFault_4?: (number|null);

            /** Esr_status7_5e6 canTxActiveFault_3 */
            canTxActiveFault_3?: (number|null);

            /** Esr_status7_5e6 canTxActiveFault_2 */
            canTxActiveFault_2?: (number|null);

            /** Esr_status7_5e6 canTxActiveFault_0 */
            canTxActiveFault_0?: (number|null);

            /** Esr_status7_5e6 canTxActiveFault_1 */
            canTxActiveFault_1?: (number|null);
        }

        /** Represents an Esr_status7_5e6. */
        class Esr_status7_5e6 implements IEsr_status7_5e6 {

            /**
             * Constructs a new Esr_status7_5e6.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IEsr_status7_5e6);

            /** Esr_status7_5e6 canTxActiveFault_7. */
            public canTxActiveFault_7: number;

            /** Esr_status7_5e6 canTxActiveFault_6. */
            public canTxActiveFault_6: number;

            /** Esr_status7_5e6 canTxActiveFault_5. */
            public canTxActiveFault_5: number;

            /** Esr_status7_5e6 canTxActiveFault_4. */
            public canTxActiveFault_4: number;

            /** Esr_status7_5e6 canTxActiveFault_3. */
            public canTxActiveFault_3: number;

            /** Esr_status7_5e6 canTxActiveFault_2. */
            public canTxActiveFault_2: number;

            /** Esr_status7_5e6 canTxActiveFault_0. */
            public canTxActiveFault_0: number;

            /** Esr_status7_5e6 canTxActiveFault_1. */
            public canTxActiveFault_1: number;

            /**
             * Creates a new Esr_status7_5e6 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Esr_status7_5e6 instance
             */
            public static create(properties?: apollo.drivers.IEsr_status7_5e6): apollo.drivers.Esr_status7_5e6;

            /**
             * Encodes the specified Esr_status7_5e6 message. Does not implicitly {@link apollo.drivers.Esr_status7_5e6.verify|verify} messages.
             * @param message Esr_status7_5e6 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IEsr_status7_5e6, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Esr_status7_5e6 message, length delimited. Does not implicitly {@link apollo.drivers.Esr_status7_5e6.verify|verify} messages.
             * @param message Esr_status7_5e6 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IEsr_status7_5e6, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Esr_status7_5e6 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Esr_status7_5e6
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Esr_status7_5e6;

            /**
             * Decodes an Esr_status7_5e6 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Esr_status7_5e6
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Esr_status7_5e6;

            /**
             * Verifies an Esr_status7_5e6 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Esr_status7_5e6 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Esr_status7_5e6
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Esr_status7_5e6;

            /**
             * Creates a plain object from an Esr_status7_5e6 message. Also converts values to other types if specified.
             * @param message Esr_status7_5e6
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Esr_status7_5e6, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Esr_status7_5e6 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Esr_status7_5e6
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Vehicle3_5f2. */
        interface IVehicle3_5f2 {

            /** Vehicle3_5f2 canRxServAlignUpdatesNeed */
            canRxServAlignUpdatesNeed?: (number|null);

            /** Vehicle3_5f2 canRxServAlignType */
            canRxServAlignType?: (apollo.drivers.Vehicle3_5f2.Can_rx_serv_align_typeType|null);

            /** Vehicle3_5f2 canRxServAlignEnable */
            canRxServAlignEnable?: (apollo.drivers.Vehicle3_5f2.Can_rx_serv_align_enableType|null);

            /** Vehicle3_5f2 canRxAalignAvgCtrTotal */
            canRxAalignAvgCtrTotal?: (number|null);

            /** Vehicle3_5f2 canRxAutoAlignConverged */
            canRxAutoAlignConverged?: (apollo.drivers.Vehicle3_5f2.Can_rx_auto_align_convergedType|null);

            /** Vehicle3_5f2 canRxAutoAlignDisable */
            canRxAutoAlignDisable?: (apollo.drivers.Vehicle3_5f2.Can_rx_auto_align_disableType|null);

            /** Vehicle3_5f2 canRxAngleMountingOffset */
            canRxAngleMountingOffset?: (number|null);

            /** Vehicle3_5f2 canRxWheelSlip */
            canRxWheelSlip?: (apollo.drivers.Vehicle3_5f2.Can_rx_wheel_slipType|null);

            /** Vehicle3_5f2 canRxRadarHeight */
            canRxRadarHeight?: (number|null);

            /** Vehicle3_5f2 canRxRadarFovMr */
            canRxRadarFovMr?: (number|null);

            /** Vehicle3_5f2 canRxRadarFovLr */
            canRxRadarFovLr?: (number|null);

            /** Vehicle3_5f2 canRxLongAccelValidity */
            canRxLongAccelValidity?: (apollo.drivers.Vehicle3_5f2.Can_rx_long_accel_validityType|null);

            /** Vehicle3_5f2 canRxLongAccel */
            canRxLongAccel?: (number|null);

            /** Vehicle3_5f2 canRxLatAccelValidity */
            canRxLatAccelValidity?: (apollo.drivers.Vehicle3_5f2.Can_rx_lat_accel_validityType|null);

            /** Vehicle3_5f2 canRxLatAccel */
            canRxLatAccel?: (number|null);
        }

        /** Represents a Vehicle3_5f2. */
        class Vehicle3_5f2 implements IVehicle3_5f2 {

            /**
             * Constructs a new Vehicle3_5f2.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IVehicle3_5f2);

            /** Vehicle3_5f2 canRxServAlignUpdatesNeed. */
            public canRxServAlignUpdatesNeed: number;

            /** Vehicle3_5f2 canRxServAlignType. */
            public canRxServAlignType: apollo.drivers.Vehicle3_5f2.Can_rx_serv_align_typeType;

            /** Vehicle3_5f2 canRxServAlignEnable. */
            public canRxServAlignEnable: apollo.drivers.Vehicle3_5f2.Can_rx_serv_align_enableType;

            /** Vehicle3_5f2 canRxAalignAvgCtrTotal. */
            public canRxAalignAvgCtrTotal: number;

            /** Vehicle3_5f2 canRxAutoAlignConverged. */
            public canRxAutoAlignConverged: apollo.drivers.Vehicle3_5f2.Can_rx_auto_align_convergedType;

            /** Vehicle3_5f2 canRxAutoAlignDisable. */
            public canRxAutoAlignDisable: apollo.drivers.Vehicle3_5f2.Can_rx_auto_align_disableType;

            /** Vehicle3_5f2 canRxAngleMountingOffset. */
            public canRxAngleMountingOffset: number;

            /** Vehicle3_5f2 canRxWheelSlip. */
            public canRxWheelSlip: apollo.drivers.Vehicle3_5f2.Can_rx_wheel_slipType;

            /** Vehicle3_5f2 canRxRadarHeight. */
            public canRxRadarHeight: number;

            /** Vehicle3_5f2 canRxRadarFovMr. */
            public canRxRadarFovMr: number;

            /** Vehicle3_5f2 canRxRadarFovLr. */
            public canRxRadarFovLr: number;

            /** Vehicle3_5f2 canRxLongAccelValidity. */
            public canRxLongAccelValidity: apollo.drivers.Vehicle3_5f2.Can_rx_long_accel_validityType;

            /** Vehicle3_5f2 canRxLongAccel. */
            public canRxLongAccel: number;

            /** Vehicle3_5f2 canRxLatAccelValidity. */
            public canRxLatAccelValidity: apollo.drivers.Vehicle3_5f2.Can_rx_lat_accel_validityType;

            /** Vehicle3_5f2 canRxLatAccel. */
            public canRxLatAccel: number;

            /**
             * Creates a new Vehicle3_5f2 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Vehicle3_5f2 instance
             */
            public static create(properties?: apollo.drivers.IVehicle3_5f2): apollo.drivers.Vehicle3_5f2;

            /**
             * Encodes the specified Vehicle3_5f2 message. Does not implicitly {@link apollo.drivers.Vehicle3_5f2.verify|verify} messages.
             * @param message Vehicle3_5f2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IVehicle3_5f2, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vehicle3_5f2 message, length delimited. Does not implicitly {@link apollo.drivers.Vehicle3_5f2.verify|verify} messages.
             * @param message Vehicle3_5f2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IVehicle3_5f2, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vehicle3_5f2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vehicle3_5f2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Vehicle3_5f2;

            /**
             * Decodes a Vehicle3_5f2 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vehicle3_5f2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Vehicle3_5f2;

            /**
             * Verifies a Vehicle3_5f2 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vehicle3_5f2 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vehicle3_5f2
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Vehicle3_5f2;

            /**
             * Creates a plain object from a Vehicle3_5f2 message. Also converts values to other types if specified.
             * @param message Vehicle3_5f2
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Vehicle3_5f2, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vehicle3_5f2 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Vehicle3_5f2
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Vehicle3_5f2 {

            /** Can_rx_serv_align_typeType enum. */
            enum Can_rx_serv_align_typeType {
                CAN_RX_SERV_ALIGN_TYPE_AUTO_OR_DEALER = 0,
                CAN_RX_SERV_ALIGN_TYPE_VOLVO_SHORT_TRACK = 1
            }

            /** Can_rx_serv_align_enableType enum. */
            enum Can_rx_serv_align_enableType {
                CAN_RX_SERV_ALIGN_ENABLE_DISABLED = 0,
                CAN_RX_SERV_ALIGN_ENABLE_ENABLED = 1
            }

            /** Can_rx_auto_align_convergedType enum. */
            enum Can_rx_auto_align_convergedType {
                CAN_RX_AUTO_ALIGN_CONVERGED_NOT_CONVERGED = 0,
                CAN_RX_AUTO_ALIGN_CONVERGED_CONVERGED = 1
            }

            /** Can_rx_auto_align_disableType enum. */
            enum Can_rx_auto_align_disableType {
                CAN_RX_AUTO_ALIGN_DISABLE_ENABLED = 0,
                CAN_RX_AUTO_ALIGN_DISABLE_DISABLED = 1
            }

            /** Can_rx_wheel_slipType enum. */
            enum Can_rx_wheel_slipType {
                CAN_RX_WHEEL_SLIP_NO_CONTROL = 0,
                CAN_RX_WHEEL_SLIP_BRAKE_SLIP_CONTROL = 1,
                CAN_RX_WHEEL_SLIP_TRACTION_SLIP_CONTROL = 2,
                CAN_RX_WHEEL_SLIP_INVALID_3 = 3
            }

            /** Can_rx_long_accel_validityType enum. */
            enum Can_rx_long_accel_validityType {
                CAN_RX_LONG_ACCEL_VALIDITY_INVALID = 0,
                CAN_RX_LONG_ACCEL_VALIDITY_VALID = 1
            }

            /** Can_rx_lat_accel_validityType enum. */
            enum Can_rx_lat_accel_validityType {
                CAN_RX_LAT_ACCEL_VALIDITY_INVALID = 0,
                CAN_RX_LAT_ACCEL_VALIDITY_VALID = 1
            }
        }

        /** Properties of a Vehicle4_5f3. */
        interface IVehicle4_5f3 {

            /** Vehicle4_5f3 canRxFacTgtRangeR2m */
            canRxFacTgtRangeR2m?: (number|null);

            /** Vehicle4_5f3 canRxFacTgtRangeM2t */
            canRxFacTgtRangeM2t?: (number|null);

            /** Vehicle4_5f3 canRxFacTgtRange_1 */
            canRxFacTgtRange_1?: (number|null);

            /** Vehicle4_5f3 canRxFacTgtMtgSpaceVer */
            canRxFacTgtMtgSpaceVer?: (number|null);

            /** Vehicle4_5f3 canRxFacTgtMtgSpaceHor */
            canRxFacTgtMtgSpaceHor?: (number|null);

            /** Vehicle4_5f3 canRxFacTgtMtgOffset */
            canRxFacTgtMtgOffset?: (number|null);

            /** Vehicle4_5f3 canRxFacAlignSampReq */
            canRxFacAlignSampReq?: (number|null);

            /** Vehicle4_5f3 canRxFacAlignMaxNt */
            canRxFacAlignMaxNt?: (number|null);

            /** Vehicle4_5f3 canRxFacAlignCmd_2 */
            canRxFacAlignCmd_2?: (apollo.drivers.Vehicle4_5f3.Can_rx_fac_align_cmd_2Type|null);

            /** Vehicle4_5f3 canRxFacAlignCmd_1 */
            canRxFacAlignCmd_1?: (apollo.drivers.Vehicle4_5f3.Can_rx_fac_align_cmd_1Type|null);
        }

        /** Represents a Vehicle4_5f3. */
        class Vehicle4_5f3 implements IVehicle4_5f3 {

            /**
             * Constructs a new Vehicle4_5f3.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IVehicle4_5f3);

            /** Vehicle4_5f3 canRxFacTgtRangeR2m. */
            public canRxFacTgtRangeR2m: number;

            /** Vehicle4_5f3 canRxFacTgtRangeM2t. */
            public canRxFacTgtRangeM2t: number;

            /** Vehicle4_5f3 canRxFacTgtRange_1. */
            public canRxFacTgtRange_1: number;

            /** Vehicle4_5f3 canRxFacTgtMtgSpaceVer. */
            public canRxFacTgtMtgSpaceVer: number;

            /** Vehicle4_5f3 canRxFacTgtMtgSpaceHor. */
            public canRxFacTgtMtgSpaceHor: number;

            /** Vehicle4_5f3 canRxFacTgtMtgOffset. */
            public canRxFacTgtMtgOffset: number;

            /** Vehicle4_5f3 canRxFacAlignSampReq. */
            public canRxFacAlignSampReq: number;

            /** Vehicle4_5f3 canRxFacAlignMaxNt. */
            public canRxFacAlignMaxNt: number;

            /** Vehicle4_5f3 canRxFacAlignCmd_2. */
            public canRxFacAlignCmd_2: apollo.drivers.Vehicle4_5f3.Can_rx_fac_align_cmd_2Type;

            /** Vehicle4_5f3 canRxFacAlignCmd_1. */
            public canRxFacAlignCmd_1: apollo.drivers.Vehicle4_5f3.Can_rx_fac_align_cmd_1Type;

            /**
             * Creates a new Vehicle4_5f3 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Vehicle4_5f3 instance
             */
            public static create(properties?: apollo.drivers.IVehicle4_5f3): apollo.drivers.Vehicle4_5f3;

            /**
             * Encodes the specified Vehicle4_5f3 message. Does not implicitly {@link apollo.drivers.Vehicle4_5f3.verify|verify} messages.
             * @param message Vehicle4_5f3 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IVehicle4_5f3, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vehicle4_5f3 message, length delimited. Does not implicitly {@link apollo.drivers.Vehicle4_5f3.verify|verify} messages.
             * @param message Vehicle4_5f3 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IVehicle4_5f3, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vehicle4_5f3 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vehicle4_5f3
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Vehicle4_5f3;

            /**
             * Decodes a Vehicle4_5f3 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vehicle4_5f3
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Vehicle4_5f3;

            /**
             * Verifies a Vehicle4_5f3 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vehicle4_5f3 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vehicle4_5f3
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Vehicle4_5f3;

            /**
             * Creates a plain object from a Vehicle4_5f3 message. Also converts values to other types if specified.
             * @param message Vehicle4_5f3
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Vehicle4_5f3, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vehicle4_5f3 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Vehicle4_5f3
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Vehicle4_5f3 {

            /** Can_rx_fac_align_cmd_2Type enum. */
            enum Can_rx_fac_align_cmd_2Type {
                CAN_RX_FAC_ALIGN_CMD_2_OFF = 0,
                CAN_RX_FAC_ALIGN_CMD_2_ON = 1
            }

            /** Can_rx_fac_align_cmd_1Type enum. */
            enum Can_rx_fac_align_cmd_1Type {
                CAN_RX_FAC_ALIGN_CMD_1_OFF = 0,
                CAN_RX_FAC_ALIGN_CMD_1_ON = 1
            }
        }

        /** Properties of a Vehicle5_5f4. */
        interface IVehicle5_5f4 {

            /** Vehicle5_5f4 canRxYawRateBiasShift */
            canRxYawRateBiasShift?: (apollo.drivers.Vehicle5_5f4.Can_rx_yaw_rate_bias_shiftType|null);

            /** Vehicle5_5f4 canRxSteeringGearRatio */
            canRxSteeringGearRatio?: (number|null);

            /** Vehicle5_5f4 canRxWheelbase */
            canRxWheelbase?: (number|null);

            /** Vehicle5_5f4 canRxDistanceRearAxle */
            canRxDistanceRearAxle?: (number|null);

            /** Vehicle5_5f4 canRxCwBlockageThreshold */
            canRxCwBlockageThreshold?: (number|null);

            /** Vehicle5_5f4 canRxFunnelOffsetRight */
            canRxFunnelOffsetRight?: (number|null);

            /** Vehicle5_5f4 canRxFunnelOffsetLeft */
            canRxFunnelOffsetLeft?: (number|null);

            /** Vehicle5_5f4 canRxBeamwidthVert */
            canRxBeamwidthVert?: (number|null);

            /** Vehicle5_5f4 canRxOversteerUndersteer */
            canRxOversteerUndersteer?: (number|null);
        }

        /** Represents a Vehicle5_5f4. */
        class Vehicle5_5f4 implements IVehicle5_5f4 {

            /**
             * Constructs a new Vehicle5_5f4.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IVehicle5_5f4);

            /** Vehicle5_5f4 canRxYawRateBiasShift. */
            public canRxYawRateBiasShift: apollo.drivers.Vehicle5_5f4.Can_rx_yaw_rate_bias_shiftType;

            /** Vehicle5_5f4 canRxSteeringGearRatio. */
            public canRxSteeringGearRatio: number;

            /** Vehicle5_5f4 canRxWheelbase. */
            public canRxWheelbase: number;

            /** Vehicle5_5f4 canRxDistanceRearAxle. */
            public canRxDistanceRearAxle: number;

            /** Vehicle5_5f4 canRxCwBlockageThreshold. */
            public canRxCwBlockageThreshold: number;

            /** Vehicle5_5f4 canRxFunnelOffsetRight. */
            public canRxFunnelOffsetRight: number;

            /** Vehicle5_5f4 canRxFunnelOffsetLeft. */
            public canRxFunnelOffsetLeft: number;

            /** Vehicle5_5f4 canRxBeamwidthVert. */
            public canRxBeamwidthVert: number;

            /** Vehicle5_5f4 canRxOversteerUndersteer. */
            public canRxOversteerUndersteer: number;

            /**
             * Creates a new Vehicle5_5f4 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Vehicle5_5f4 instance
             */
            public static create(properties?: apollo.drivers.IVehicle5_5f4): apollo.drivers.Vehicle5_5f4;

            /**
             * Encodes the specified Vehicle5_5f4 message. Does not implicitly {@link apollo.drivers.Vehicle5_5f4.verify|verify} messages.
             * @param message Vehicle5_5f4 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IVehicle5_5f4, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vehicle5_5f4 message, length delimited. Does not implicitly {@link apollo.drivers.Vehicle5_5f4.verify|verify} messages.
             * @param message Vehicle5_5f4 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IVehicle5_5f4, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vehicle5_5f4 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vehicle5_5f4
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Vehicle5_5f4;

            /**
             * Decodes a Vehicle5_5f4 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vehicle5_5f4
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Vehicle5_5f4;

            /**
             * Verifies a Vehicle5_5f4 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vehicle5_5f4 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vehicle5_5f4
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Vehicle5_5f4;

            /**
             * Creates a plain object from a Vehicle5_5f4 message. Also converts values to other types if specified.
             * @param message Vehicle5_5f4
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Vehicle5_5f4, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vehicle5_5f4 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Vehicle5_5f4
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Vehicle5_5f4 {

            /** Can_rx_yaw_rate_bias_shiftType enum. */
            enum Can_rx_yaw_rate_bias_shiftType {
                CAN_RX_YAW_RATE_BIAS_SHIFT_NO_DETECT = 0,
                CAN_RX_YAW_RATE_BIAS_SHIFT_DETECT = 1
            }
        }

        /** Properties of a Vehicle6_5f5. */
        interface IVehicle6_5f5 {

            /** Vehicle6_5f5 canRxInnerFunnelOffsetRight */
            canRxInnerFunnelOffsetRight?: (number|null);

            /** Vehicle6_5f5 canRxInnerFunnelOffsetLeft */
            canRxInnerFunnelOffsetLeft?: (number|null);

            /** Vehicle6_5f5 canVolvoFaRangeMaxShort */
            canVolvoFaRangeMaxShort?: (number|null);

            /** Vehicle6_5f5 canVolvoFaMinVspeedShort */
            canVolvoFaMinVspeedShort?: (number|null);

            /** Vehicle6_5f5 canVolvoFaAalignEstimate */
            canVolvoFaAalignEstimate?: (number|null);
        }

        /** Represents a Vehicle6_5f5. */
        class Vehicle6_5f5 implements IVehicle6_5f5 {

            /**
             * Constructs a new Vehicle6_5f5.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IVehicle6_5f5);

            /** Vehicle6_5f5 canRxInnerFunnelOffsetRight. */
            public canRxInnerFunnelOffsetRight: number;

            /** Vehicle6_5f5 canRxInnerFunnelOffsetLeft. */
            public canRxInnerFunnelOffsetLeft: number;

            /** Vehicle6_5f5 canVolvoFaRangeMaxShort. */
            public canVolvoFaRangeMaxShort: number;

            /** Vehicle6_5f5 canVolvoFaMinVspeedShort. */
            public canVolvoFaMinVspeedShort: number;

            /** Vehicle6_5f5 canVolvoFaAalignEstimate. */
            public canVolvoFaAalignEstimate: number;

            /**
             * Creates a new Vehicle6_5f5 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Vehicle6_5f5 instance
             */
            public static create(properties?: apollo.drivers.IVehicle6_5f5): apollo.drivers.Vehicle6_5f5;

            /**
             * Encodes the specified Vehicle6_5f5 message. Does not implicitly {@link apollo.drivers.Vehicle6_5f5.verify|verify} messages.
             * @param message Vehicle6_5f5 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IVehicle6_5f5, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Vehicle6_5f5 message, length delimited. Does not implicitly {@link apollo.drivers.Vehicle6_5f5.verify|verify} messages.
             * @param message Vehicle6_5f5 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IVehicle6_5f5, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Vehicle6_5f5 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Vehicle6_5f5
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Vehicle6_5f5;

            /**
             * Decodes a Vehicle6_5f5 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Vehicle6_5f5
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Vehicle6_5f5;

            /**
             * Verifies a Vehicle6_5f5 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Vehicle6_5f5 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Vehicle6_5f5
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Vehicle6_5f5;

            /**
             * Creates a plain object from a Vehicle6_5f5 message. Also converts values to other types if specified.
             * @param message Vehicle6_5f5
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Vehicle6_5f5, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Vehicle6_5f5 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Vehicle6_5f5
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DelphiESR. */
        interface IDelphiESR {

            /** DelphiESR header */
            header?: (apollo.common.IHeader|null);

            /** DelphiESR esrStatus9_5e8 */
            esrStatus9_5e8?: (apollo.drivers.IEsr_status9_5e8|null);

            /** DelphiESR esrStatus6_5e5 */
            esrStatus6_5e5?: (apollo.drivers.IEsr_status6_5e5|null);

            /** DelphiESR esrStatus5_5e4 */
            esrStatus5_5e4?: (apollo.drivers.IEsr_status5_5e4|null);

            /** DelphiESR esrStatus3_4e2 */
            esrStatus3_4e2?: (apollo.drivers.IEsr_status3_4e2|null);

            /** DelphiESR esrStatus4_4e3 */
            esrStatus4_4e3?: (apollo.drivers.IEsr_status4_4e3|null);

            /** DelphiESR esrTrackmotionpower_540 */
            esrTrackmotionpower_540?: (apollo.drivers.IEsr_trackmotionpower_540[]|null);

            /** DelphiESR acmInstReq_7e0 */
            acmInstReq_7e0?: (apollo.drivers.IAcm_inst_req_7e0|null);

            /** DelphiESR esrTrack01_500 */
            esrTrack01_500?: (apollo.drivers.IEsr_track01_500[]|null);

            /** DelphiESR esrValid1_5d0 */
            esrValid1_5d0?: (apollo.drivers.IEsr_valid1_5d0|null);

            /** DelphiESR esrValid2_5d1 */
            esrValid2_5d1?: (apollo.drivers.IEsr_valid2_5d1|null);

            /** DelphiESR acmInstResp_7e4 */
            acmInstResp_7e4?: (apollo.drivers.IAcm_inst_resp_7e4|null);

            /** DelphiESR vehicle2_4f1 */
            vehicle2_4f1?: (apollo.drivers.IVehicle2_4f1|null);

            /** DelphiESR vehicle1_4f0 */
            vehicle1_4f0?: (apollo.drivers.IVehicle1_4f0|null);

            /** DelphiESR esrSim1_5c0 */
            esrSim1_5c0?: (apollo.drivers.IEsr_sim1_5c0|null);

            /** DelphiESR esrStatus1_4e0 */
            esrStatus1_4e0?: (apollo.drivers.IEsr_status1_4e0|null);

            /** DelphiESR esrStatus2_4e1 */
            esrStatus2_4e1?: (apollo.drivers.IEsr_status2_4e1|null);

            /** DelphiESR esrStatus8_5e7 */
            esrStatus8_5e7?: (apollo.drivers.IEsr_status8_5e7|null);

            /** DelphiESR esrStatus7_5e6 */
            esrStatus7_5e6?: (apollo.drivers.IEsr_status7_5e6|null);

            /** DelphiESR vehicle3_5f2 */
            vehicle3_5f2?: (apollo.drivers.IVehicle3_5f2|null);

            /** DelphiESR vehicle4_5f3 */
            vehicle4_5f3?: (apollo.drivers.IVehicle4_5f3|null);

            /** DelphiESR vehicle5_5f4 */
            vehicle5_5f4?: (apollo.drivers.IVehicle5_5f4|null);

            /** DelphiESR vehicle6_5f5 */
            vehicle6_5f5?: (apollo.drivers.IVehicle6_5f5|null);
        }

        /** Represents a DelphiESR. */
        class DelphiESR implements IDelphiESR {

            /**
             * Constructs a new DelphiESR.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IDelphiESR);

            /** DelphiESR header. */
            public header?: (apollo.common.IHeader|null);

            /** DelphiESR esrStatus9_5e8. */
            public esrStatus9_5e8?: (apollo.drivers.IEsr_status9_5e8|null);

            /** DelphiESR esrStatus6_5e5. */
            public esrStatus6_5e5?: (apollo.drivers.IEsr_status6_5e5|null);

            /** DelphiESR esrStatus5_5e4. */
            public esrStatus5_5e4?: (apollo.drivers.IEsr_status5_5e4|null);

            /** DelphiESR esrStatus3_4e2. */
            public esrStatus3_4e2?: (apollo.drivers.IEsr_status3_4e2|null);

            /** DelphiESR esrStatus4_4e3. */
            public esrStatus4_4e3?: (apollo.drivers.IEsr_status4_4e3|null);

            /** DelphiESR esrTrackmotionpower_540. */
            public esrTrackmotionpower_540: apollo.drivers.IEsr_trackmotionpower_540[];

            /** DelphiESR acmInstReq_7e0. */
            public acmInstReq_7e0?: (apollo.drivers.IAcm_inst_req_7e0|null);

            /** DelphiESR esrTrack01_500. */
            public esrTrack01_500: apollo.drivers.IEsr_track01_500[];

            /** DelphiESR esrValid1_5d0. */
            public esrValid1_5d0?: (apollo.drivers.IEsr_valid1_5d0|null);

            /** DelphiESR esrValid2_5d1. */
            public esrValid2_5d1?: (apollo.drivers.IEsr_valid2_5d1|null);

            /** DelphiESR acmInstResp_7e4. */
            public acmInstResp_7e4?: (apollo.drivers.IAcm_inst_resp_7e4|null);

            /** DelphiESR vehicle2_4f1. */
            public vehicle2_4f1?: (apollo.drivers.IVehicle2_4f1|null);

            /** DelphiESR vehicle1_4f0. */
            public vehicle1_4f0?: (apollo.drivers.IVehicle1_4f0|null);

            /** DelphiESR esrSim1_5c0. */
            public esrSim1_5c0?: (apollo.drivers.IEsr_sim1_5c0|null);

            /** DelphiESR esrStatus1_4e0. */
            public esrStatus1_4e0?: (apollo.drivers.IEsr_status1_4e0|null);

            /** DelphiESR esrStatus2_4e1. */
            public esrStatus2_4e1?: (apollo.drivers.IEsr_status2_4e1|null);

            /** DelphiESR esrStatus8_5e7. */
            public esrStatus8_5e7?: (apollo.drivers.IEsr_status8_5e7|null);

            /** DelphiESR esrStatus7_5e6. */
            public esrStatus7_5e6?: (apollo.drivers.IEsr_status7_5e6|null);

            /** DelphiESR vehicle3_5f2. */
            public vehicle3_5f2?: (apollo.drivers.IVehicle3_5f2|null);

            /** DelphiESR vehicle4_5f3. */
            public vehicle4_5f3?: (apollo.drivers.IVehicle4_5f3|null);

            /** DelphiESR vehicle5_5f4. */
            public vehicle5_5f4?: (apollo.drivers.IVehicle5_5f4|null);

            /** DelphiESR vehicle6_5f5. */
            public vehicle6_5f5?: (apollo.drivers.IVehicle6_5f5|null);

            /**
             * Creates a new DelphiESR instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DelphiESR instance
             */
            public static create(properties?: apollo.drivers.IDelphiESR): apollo.drivers.DelphiESR;

            /**
             * Encodes the specified DelphiESR message. Does not implicitly {@link apollo.drivers.DelphiESR.verify|verify} messages.
             * @param message DelphiESR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IDelphiESR, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DelphiESR message, length delimited. Does not implicitly {@link apollo.drivers.DelphiESR.verify|verify} messages.
             * @param message DelphiESR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IDelphiESR, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DelphiESR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DelphiESR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.DelphiESR;

            /**
             * Decodes a DelphiESR message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DelphiESR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.DelphiESR;

            /**
             * Verifies a DelphiESR message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DelphiESR message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DelphiESR
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.DelphiESR;

            /**
             * Creates a plain object from a DelphiESR message. Also converts values to other types if specified.
             * @param message DelphiESR
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.DelphiESR, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DelphiESR to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DelphiESR
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Namespace gnss. */
        namespace gnss {

            /** Properties of a Gnss. */
            interface IGnss {

                /** Gnss header */
                header?: (apollo.common.IHeader|null);

                /** Gnss measurementTime */
                measurementTime?: (number|null);

                /** Gnss velocityLatency */
                velocityLatency?: (number|null);

                /** Gnss position */
                position?: (apollo.common.IPointLLH|null);

                /** Gnss positionStdDev */
                positionStdDev?: (apollo.common.IPoint3D|null);

                /** Gnss linearVelocity */
                linearVelocity?: (apollo.common.IPoint3D|null);

                /** Gnss linearVelocityStdDev */
                linearVelocityStdDev?: (apollo.common.IPoint3D|null);

                /** Gnss numSats */
                numSats?: (number|null);

                /** Gnss type */
                type?: (apollo.drivers.gnss.Gnss.Type|null);

                /** Gnss solutionStatus */
                solutionStatus?: (number|null);

                /** Gnss positionType */
                positionType?: (number|null);
            }

            /** Represents a Gnss. */
            class Gnss implements IGnss {

                /**
                 * Constructs a new Gnss.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IGnss);

                /** Gnss header. */
                public header?: (apollo.common.IHeader|null);

                /** Gnss measurementTime. */
                public measurementTime: number;

                /** Gnss velocityLatency. */
                public velocityLatency: number;

                /** Gnss position. */
                public position?: (apollo.common.IPointLLH|null);

                /** Gnss positionStdDev. */
                public positionStdDev?: (apollo.common.IPoint3D|null);

                /** Gnss linearVelocity. */
                public linearVelocity?: (apollo.common.IPoint3D|null);

                /** Gnss linearVelocityStdDev. */
                public linearVelocityStdDev?: (apollo.common.IPoint3D|null);

                /** Gnss numSats. */
                public numSats: number;

                /** Gnss type. */
                public type: apollo.drivers.gnss.Gnss.Type;

                /** Gnss solutionStatus. */
                public solutionStatus: number;

                /** Gnss positionType. */
                public positionType: number;

                /**
                 * Creates a new Gnss instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Gnss instance
                 */
                public static create(properties?: apollo.drivers.gnss.IGnss): apollo.drivers.gnss.Gnss;

                /**
                 * Encodes the specified Gnss message. Does not implicitly {@link apollo.drivers.gnss.Gnss.verify|verify} messages.
                 * @param message Gnss message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IGnss, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Gnss message, length delimited. Does not implicitly {@link apollo.drivers.gnss.Gnss.verify|verify} messages.
                 * @param message Gnss message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IGnss, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Gnss message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Gnss
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.Gnss;

                /**
                 * Decodes a Gnss message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Gnss
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.Gnss;

                /**
                 * Verifies a Gnss message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Gnss message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Gnss
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.Gnss;

                /**
                 * Creates a plain object from a Gnss message. Also converts values to other types if specified.
                 * @param message Gnss
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.Gnss, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Gnss to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Gnss
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace Gnss {

                /** Type enum. */
                enum Type {
                    INVALID = 0,
                    PROPAGATED = 1,
                    SINGLE = 2,
                    PSRDIFF = 3,
                    PPP = 4,
                    RTK_FLOAT = 5,
                    RTK_INTEGER = 6
                }
            }

            /** Properties of a RawData. */
            interface IRawData {

                /** RawData header */
                header?: (apollo.common.IHeader|null);

                /** RawData data */
                data?: (Uint8Array|null);
            }

            /** Represents a RawData. */
            class RawData implements IRawData {

                /**
                 * Constructs a new RawData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IRawData);

                /** RawData header. */
                public header?: (apollo.common.IHeader|null);

                /** RawData data. */
                public data: Uint8Array;

                /**
                 * Creates a new RawData instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RawData instance
                 */
                public static create(properties?: apollo.drivers.gnss.IRawData): apollo.drivers.gnss.RawData;

                /**
                 * Encodes the specified RawData message. Does not implicitly {@link apollo.drivers.gnss.RawData.verify|verify} messages.
                 * @param message RawData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IRawData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RawData message, length delimited. Does not implicitly {@link apollo.drivers.gnss.RawData.verify|verify} messages.
                 * @param message RawData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IRawData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RawData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RawData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.RawData;

                /**
                 * Decodes a RawData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RawData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.RawData;

                /**
                 * Verifies a RawData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RawData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RawData
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.RawData;

                /**
                 * Creates a plain object from a RawData message. Also converts values to other types if specified.
                 * @param message RawData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.RawData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RawData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RawData
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** SolutionStatus enum. */
            enum SolutionStatus {
                SOL_COMPUTED = 0,
                INSUFFICIENT_OBS = 1,
                NO_CONVERGENCE = 2,
                SINGULARITY = 3,
                COV_TRACE = 4,
                TEST_DIST = 5,
                COLD_START = 6,
                V_H_LIMIT = 7,
                VARIANCE = 8,
                RESIDUALS = 9,
                INTEGRITY_WARNING = 13,
                PENDING = 18,
                INVALID_FIX = 19,
                UNAUTHORIZED = 20,
                INVALID_RATE = 22
            }

            /** SolutionType enum. */
            enum SolutionType {
                NONE = 0,
                FIXEDPOS = 1,
                FIXEDHEIGHT = 2,
                FLOATCONV = 4,
                WIDELANE = 5,
                NARROWLANE = 6,
                DOPPLER_VELOCITY = 8,
                SINGLE = 16,
                PSRDIFF = 17,
                WAAS = 18,
                PROPOGATED = 19,
                OMNISTAR = 20,
                L1_FLOAT = 32,
                IONOFREE_FLOAT = 33,
                NARROW_FLOAT = 34,
                L1_INT = 48,
                WIDE_INT = 49,
                NARROW_INT = 50,
                RTK_DIRECT_INS = 51,
                INS_SBAS = 52,
                INS_PSRSP = 53,
                INS_PSRDIFF = 54,
                INS_RTKFLOAT = 55,
                INS_RTKFIXED = 56,
                INS_OMNISTAR = 57,
                INS_OMNISTAR_HP = 58,
                INS_OMNISTAR_XP = 59,
                OMNISTAR_HP = 64,
                OMNISTAR_XP = 65,
                PPP_CONVERGING = 68,
                PPP = 69,
                INS_PPP_CONVERGING = 73,
                INS_PPP = 74
            }

            /** DatumId enum. */
            enum DatumId {
                WGS84 = 61
            }

            /** Properties of a GnssBestPose. */
            interface IGnssBestPose {

                /** GnssBestPose header */
                header?: (apollo.common.IHeader|null);

                /** GnssBestPose measurementTime */
                measurementTime?: (number|null);

                /** GnssBestPose solStatus */
                solStatus?: (apollo.drivers.gnss.SolutionStatus|null);

                /** GnssBestPose solType */
                solType?: (apollo.drivers.gnss.SolutionType|null);

                /** GnssBestPose latitude */
                latitude?: (number|null);

                /** GnssBestPose longitude */
                longitude?: (number|null);

                /** GnssBestPose heightMsl */
                heightMsl?: (number|null);

                /** GnssBestPose undulation */
                undulation?: (number|null);

                /** GnssBestPose datumId */
                datumId?: (apollo.drivers.gnss.DatumId|null);

                /** GnssBestPose latitudeStdDev */
                latitudeStdDev?: (number|null);

                /** GnssBestPose longitudeStdDev */
                longitudeStdDev?: (number|null);

                /** GnssBestPose heightStdDev */
                heightStdDev?: (number|null);

                /** GnssBestPose baseStationId */
                baseStationId?: (Uint8Array|null);

                /** GnssBestPose differentialAge */
                differentialAge?: (number|null);

                /** GnssBestPose solutionAge */
                solutionAge?: (number|null);

                /** GnssBestPose numSatsTracked */
                numSatsTracked?: (number|null);

                /** GnssBestPose numSatsInSolution */
                numSatsInSolution?: (number|null);

                /** GnssBestPose numSatsL1 */
                numSatsL1?: (number|null);

                /** GnssBestPose numSatsMulti */
                numSatsMulti?: (number|null);

                /** GnssBestPose reserved */
                reserved?: (number|null);

                /** GnssBestPose extendedSolutionStatus */
                extendedSolutionStatus?: (number|null);

                /** GnssBestPose galileoBeidouUsedMask */
                galileoBeidouUsedMask?: (number|null);

                /** GnssBestPose gpsGlonassUsedMask */
                gpsGlonassUsedMask?: (number|null);
            }

            /** Represents a GnssBestPose. */
            class GnssBestPose implements IGnssBestPose {

                /**
                 * Constructs a new GnssBestPose.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IGnssBestPose);

                /** GnssBestPose header. */
                public header?: (apollo.common.IHeader|null);

                /** GnssBestPose measurementTime. */
                public measurementTime: number;

                /** GnssBestPose solStatus. */
                public solStatus: apollo.drivers.gnss.SolutionStatus;

                /** GnssBestPose solType. */
                public solType: apollo.drivers.gnss.SolutionType;

                /** GnssBestPose latitude. */
                public latitude: number;

                /** GnssBestPose longitude. */
                public longitude: number;

                /** GnssBestPose heightMsl. */
                public heightMsl: number;

                /** GnssBestPose undulation. */
                public undulation: number;

                /** GnssBestPose datumId. */
                public datumId: apollo.drivers.gnss.DatumId;

                /** GnssBestPose latitudeStdDev. */
                public latitudeStdDev: number;

                /** GnssBestPose longitudeStdDev. */
                public longitudeStdDev: number;

                /** GnssBestPose heightStdDev. */
                public heightStdDev: number;

                /** GnssBestPose baseStationId. */
                public baseStationId: Uint8Array;

                /** GnssBestPose differentialAge. */
                public differentialAge: number;

                /** GnssBestPose solutionAge. */
                public solutionAge: number;

                /** GnssBestPose numSatsTracked. */
                public numSatsTracked: number;

                /** GnssBestPose numSatsInSolution. */
                public numSatsInSolution: number;

                /** GnssBestPose numSatsL1. */
                public numSatsL1: number;

                /** GnssBestPose numSatsMulti. */
                public numSatsMulti: number;

                /** GnssBestPose reserved. */
                public reserved: number;

                /** GnssBestPose extendedSolutionStatus. */
                public extendedSolutionStatus: number;

                /** GnssBestPose galileoBeidouUsedMask. */
                public galileoBeidouUsedMask: number;

                /** GnssBestPose gpsGlonassUsedMask. */
                public gpsGlonassUsedMask: number;

                /**
                 * Creates a new GnssBestPose instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GnssBestPose instance
                 */
                public static create(properties?: apollo.drivers.gnss.IGnssBestPose): apollo.drivers.gnss.GnssBestPose;

                /**
                 * Encodes the specified GnssBestPose message. Does not implicitly {@link apollo.drivers.gnss.GnssBestPose.verify|verify} messages.
                 * @param message GnssBestPose message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IGnssBestPose, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GnssBestPose message, length delimited. Does not implicitly {@link apollo.drivers.gnss.GnssBestPose.verify|verify} messages.
                 * @param message GnssBestPose message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IGnssBestPose, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GnssBestPose message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GnssBestPose
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.GnssBestPose;

                /**
                 * Decodes a GnssBestPose message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GnssBestPose
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.GnssBestPose;

                /**
                 * Verifies a GnssBestPose message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GnssBestPose message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GnssBestPose
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.GnssBestPose;

                /**
                 * Creates a plain object from a GnssBestPose message. Also converts values to other types if specified.
                 * @param message GnssBestPose
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.GnssBestPose, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GnssBestPose to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GnssBestPose
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** GnssBandID enum. */
            enum GnssBandID {
                BAND_UNKNOWN = 0,
                GPS_L1 = 1,
                GPS_L2 = 2,
                GPS_L5 = 3,
                BDS_B1 = 4,
                BDS_B2 = 5,
                BDS_B3 = 6,
                GLO_G1 = 7,
                GLO_G2 = 8,
                GLO_G3 = 9
            }

            /** GnssTimeType enum. */
            enum GnssTimeType {
                TIME_UNKNOWN = 0,
                GPS_TIME = 1,
                BDS_TIME = 2,
                GLO_TIME = 3,
                GAL_TIME = 4
            }

            /** GnssType enum. */
            enum GnssType {
                SYS_UNKNOWN = 0,
                GPS_SYS = 1,
                BDS_SYS = 2,
                GLO_SYS = 3,
                GAL_SYS = 4
            }

            /** PseudoType enum. */
            enum PseudoType {
                CODE_UNKNOWN = 0,
                CORSE_CODE = 1,
                PRECISION_CODE = 2
            }

            /** Properties of a BandObservation. */
            interface IBandObservation {

                /** BandObservation bandId */
                bandId?: (apollo.drivers.gnss.GnssBandID|null);

                /** BandObservation frequencyValue */
                frequencyValue?: (number|null);

                /** BandObservation pseudoType */
                pseudoType?: (apollo.drivers.gnss.PseudoType|null);

                /** BandObservation pseudoRange */
                pseudoRange?: (number|null);

                /** BandObservation carrierPhase */
                carrierPhase?: (number|null);

                /** BandObservation lossLockIndex */
                lossLockIndex?: (number|null);

                /** BandObservation doppler */
                doppler?: (number|null);

                /** BandObservation snr */
                snr?: (number|null);
            }

            /** Represents a BandObservation. */
            class BandObservation implements IBandObservation {

                /**
                 * Constructs a new BandObservation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IBandObservation);

                /** BandObservation bandId. */
                public bandId: apollo.drivers.gnss.GnssBandID;

                /** BandObservation frequencyValue. */
                public frequencyValue: number;

                /** BandObservation pseudoType. */
                public pseudoType: apollo.drivers.gnss.PseudoType;

                /** BandObservation pseudoRange. */
                public pseudoRange: number;

                /** BandObservation carrierPhase. */
                public carrierPhase: number;

                /** BandObservation lossLockIndex. */
                public lossLockIndex: number;

                /** BandObservation doppler. */
                public doppler: number;

                /** BandObservation snr. */
                public snr: number;

                /**
                 * Creates a new BandObservation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns BandObservation instance
                 */
                public static create(properties?: apollo.drivers.gnss.IBandObservation): apollo.drivers.gnss.BandObservation;

                /**
                 * Encodes the specified BandObservation message. Does not implicitly {@link apollo.drivers.gnss.BandObservation.verify|verify} messages.
                 * @param message BandObservation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IBandObservation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BandObservation message, length delimited. Does not implicitly {@link apollo.drivers.gnss.BandObservation.verify|verify} messages.
                 * @param message BandObservation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IBandObservation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BandObservation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BandObservation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.BandObservation;

                /**
                 * Decodes a BandObservation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BandObservation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.BandObservation;

                /**
                 * Verifies a BandObservation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BandObservation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BandObservation
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.BandObservation;

                /**
                 * Creates a plain object from a BandObservation message. Also converts values to other types if specified.
                 * @param message BandObservation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.BandObservation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BandObservation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for BandObservation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SatelliteObservation. */
            interface ISatelliteObservation {

                /** SatelliteObservation satPrn */
                satPrn?: (number|null);

                /** SatelliteObservation satSys */
                satSys?: (apollo.drivers.gnss.GnssType|null);

                /** SatelliteObservation bandObsNum */
                bandObsNum?: (number|null);

                /** SatelliteObservation bandObs */
                bandObs?: (apollo.drivers.gnss.IBandObservation[]|null);
            }

            /** Represents a SatelliteObservation. */
            class SatelliteObservation implements ISatelliteObservation {

                /**
                 * Constructs a new SatelliteObservation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.ISatelliteObservation);

                /** SatelliteObservation satPrn. */
                public satPrn: number;

                /** SatelliteObservation satSys. */
                public satSys: apollo.drivers.gnss.GnssType;

                /** SatelliteObservation bandObsNum. */
                public bandObsNum: number;

                /** SatelliteObservation bandObs. */
                public bandObs: apollo.drivers.gnss.IBandObservation[];

                /**
                 * Creates a new SatelliteObservation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SatelliteObservation instance
                 */
                public static create(properties?: apollo.drivers.gnss.ISatelliteObservation): apollo.drivers.gnss.SatelliteObservation;

                /**
                 * Encodes the specified SatelliteObservation message. Does not implicitly {@link apollo.drivers.gnss.SatelliteObservation.verify|verify} messages.
                 * @param message SatelliteObservation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.ISatelliteObservation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SatelliteObservation message, length delimited. Does not implicitly {@link apollo.drivers.gnss.SatelliteObservation.verify|verify} messages.
                 * @param message SatelliteObservation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.ISatelliteObservation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SatelliteObservation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SatelliteObservation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.SatelliteObservation;

                /**
                 * Decodes a SatelliteObservation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SatelliteObservation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.SatelliteObservation;

                /**
                 * Verifies a SatelliteObservation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SatelliteObservation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SatelliteObservation
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.SatelliteObservation;

                /**
                 * Creates a plain object from a SatelliteObservation message. Also converts values to other types if specified.
                 * @param message SatelliteObservation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.SatelliteObservation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SatelliteObservation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SatelliteObservation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an EpochObservation. */
            interface IEpochObservation {

                /** EpochObservation receiverId */
                receiverId?: (number|null);

                /** EpochObservation gnssTimeType */
                gnssTimeType?: (apollo.drivers.gnss.GnssTimeType|null);

                /** EpochObservation gnssWeek */
                gnssWeek?: (number|null);

                /** EpochObservation gnssSecondS */
                gnssSecondS?: (number|null);

                /** EpochObservation positionX */
                positionX?: (number|null);

                /** EpochObservation positionY */
                positionY?: (number|null);

                /** EpochObservation positionZ */
                positionZ?: (number|null);

                /** EpochObservation healthFlag */
                healthFlag?: (number|null);

                /** EpochObservation satObsNum */
                satObsNum?: (number|null);

                /** EpochObservation satObs */
                satObs?: (apollo.drivers.gnss.ISatelliteObservation[]|null);
            }

            /** Represents an EpochObservation. */
            class EpochObservation implements IEpochObservation {

                /**
                 * Constructs a new EpochObservation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IEpochObservation);

                /** EpochObservation receiverId. */
                public receiverId: number;

                /** EpochObservation gnssTimeType. */
                public gnssTimeType: apollo.drivers.gnss.GnssTimeType;

                /** EpochObservation gnssWeek. */
                public gnssWeek: number;

                /** EpochObservation gnssSecondS. */
                public gnssSecondS: number;

                /** EpochObservation positionX. */
                public positionX: number;

                /** EpochObservation positionY. */
                public positionY: number;

                /** EpochObservation positionZ. */
                public positionZ: number;

                /** EpochObservation healthFlag. */
                public healthFlag: number;

                /** EpochObservation satObsNum. */
                public satObsNum: number;

                /** EpochObservation satObs. */
                public satObs: apollo.drivers.gnss.ISatelliteObservation[];

                /**
                 * Creates a new EpochObservation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EpochObservation instance
                 */
                public static create(properties?: apollo.drivers.gnss.IEpochObservation): apollo.drivers.gnss.EpochObservation;

                /**
                 * Encodes the specified EpochObservation message. Does not implicitly {@link apollo.drivers.gnss.EpochObservation.verify|verify} messages.
                 * @param message EpochObservation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IEpochObservation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EpochObservation message, length delimited. Does not implicitly {@link apollo.drivers.gnss.EpochObservation.verify|verify} messages.
                 * @param message EpochObservation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IEpochObservation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EpochObservation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EpochObservation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.EpochObservation;

                /**
                 * Decodes an EpochObservation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EpochObservation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.EpochObservation;

                /**
                 * Verifies an EpochObservation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EpochObservation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EpochObservation
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.EpochObservation;

                /**
                 * Creates a plain object from an EpochObservation message. Also converts values to other types if specified.
                 * @param message EpochObservation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.EpochObservation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EpochObservation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EpochObservation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a KepplerOrbit. */
            interface IKepplerOrbit {

                /** KepplerOrbit gnssType */
                gnssType?: (apollo.drivers.gnss.GnssType|null);

                /** KepplerOrbit satPrn */
                satPrn?: (number|null);

                /** KepplerOrbit gnssTimeType */
                gnssTimeType?: (apollo.drivers.gnss.GnssTimeType|null);

                /** KepplerOrbit year */
                year?: (number|null);

                /** KepplerOrbit month */
                month?: (number|null);

                /** KepplerOrbit day */
                day?: (number|null);

                /** KepplerOrbit hour */
                hour?: (number|null);

                /** KepplerOrbit minute */
                minute?: (number|null);

                /** KepplerOrbit secondS */
                secondS?: (number|null);

                /** KepplerOrbit weekNum */
                weekNum?: (number|null);

                /** KepplerOrbit reserved */
                reserved?: (number|null);

                /** KepplerOrbit af0 */
                af0?: (number|null);

                /** KepplerOrbit af1 */
                af1?: (number|null);

                /** KepplerOrbit af2 */
                af2?: (number|null);

                /** KepplerOrbit iode */
                iode?: (number|null);

                /** KepplerOrbit deltan */
                deltan?: (number|null);

                /** KepplerOrbit m0 */
                m0?: (number|null);

                /** KepplerOrbit e */
                e?: (number|null);

                /** KepplerOrbit roota */
                roota?: (number|null);

                /** KepplerOrbit toe */
                toe?: (number|null);

                /** KepplerOrbit toc */
                toc?: (number|null);

                /** KepplerOrbit cic */
                cic?: (number|null);

                /** KepplerOrbit crc */
                crc?: (number|null);

                /** KepplerOrbit cis */
                cis?: (number|null);

                /** KepplerOrbit crs */
                crs?: (number|null);

                /** KepplerOrbit cuc */
                cuc?: (number|null);

                /** KepplerOrbit cus */
                cus?: (number|null);

                /** KepplerOrbit omega0 */
                omega0?: (number|null);

                /** KepplerOrbit omega */
                omega?: (number|null);

                /** KepplerOrbit i0 */
                i0?: (number|null);

                /** KepplerOrbit omegadot */
                omegadot?: (number|null);

                /** KepplerOrbit idot */
                idot?: (number|null);

                /** KepplerOrbit codesonL2channel */
                codesonL2channel?: (number|null);

                /** KepplerOrbit L2Pdataflag */
                L2Pdataflag?: (number|null);

                /** KepplerOrbit accuracy */
                accuracy?: (number|null);

                /** KepplerOrbit health */
                health?: (number|null);

                /** KepplerOrbit tgd */
                tgd?: (number|null);

                /** KepplerOrbit iodc */
                iodc?: (number|null);
            }

            /** Represents a KepplerOrbit. */
            class KepplerOrbit implements IKepplerOrbit {

                /**
                 * Constructs a new KepplerOrbit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IKepplerOrbit);

                /** KepplerOrbit gnssType. */
                public gnssType: apollo.drivers.gnss.GnssType;

                /** KepplerOrbit satPrn. */
                public satPrn: number;

                /** KepplerOrbit gnssTimeType. */
                public gnssTimeType: apollo.drivers.gnss.GnssTimeType;

                /** KepplerOrbit year. */
                public year: number;

                /** KepplerOrbit month. */
                public month: number;

                /** KepplerOrbit day. */
                public day: number;

                /** KepplerOrbit hour. */
                public hour: number;

                /** KepplerOrbit minute. */
                public minute: number;

                /** KepplerOrbit secondS. */
                public secondS: number;

                /** KepplerOrbit weekNum. */
                public weekNum: number;

                /** KepplerOrbit reserved. */
                public reserved: number;

                /** KepplerOrbit af0. */
                public af0: number;

                /** KepplerOrbit af1. */
                public af1: number;

                /** KepplerOrbit af2. */
                public af2: number;

                /** KepplerOrbit iode. */
                public iode: number;

                /** KepplerOrbit deltan. */
                public deltan: number;

                /** KepplerOrbit m0. */
                public m0: number;

                /** KepplerOrbit e. */
                public e: number;

                /** KepplerOrbit roota. */
                public roota: number;

                /** KepplerOrbit toe. */
                public toe: number;

                /** KepplerOrbit toc. */
                public toc: number;

                /** KepplerOrbit cic. */
                public cic: number;

                /** KepplerOrbit crc. */
                public crc: number;

                /** KepplerOrbit cis. */
                public cis: number;

                /** KepplerOrbit crs. */
                public crs: number;

                /** KepplerOrbit cuc. */
                public cuc: number;

                /** KepplerOrbit cus. */
                public cus: number;

                /** KepplerOrbit omega0. */
                public omega0: number;

                /** KepplerOrbit omega. */
                public omega: number;

                /** KepplerOrbit i0. */
                public i0: number;

                /** KepplerOrbit omegadot. */
                public omegadot: number;

                /** KepplerOrbit idot. */
                public idot: number;

                /** KepplerOrbit codesonL2channel. */
                public codesonL2channel: number;

                /** KepplerOrbit L2Pdataflag. */
                public L2Pdataflag: number;

                /** KepplerOrbit accuracy. */
                public accuracy: number;

                /** KepplerOrbit health. */
                public health: number;

                /** KepplerOrbit tgd. */
                public tgd: number;

                /** KepplerOrbit iodc. */
                public iodc: number;

                /**
                 * Creates a new KepplerOrbit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KepplerOrbit instance
                 */
                public static create(properties?: apollo.drivers.gnss.IKepplerOrbit): apollo.drivers.gnss.KepplerOrbit;

                /**
                 * Encodes the specified KepplerOrbit message. Does not implicitly {@link apollo.drivers.gnss.KepplerOrbit.verify|verify} messages.
                 * @param message KepplerOrbit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IKepplerOrbit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KepplerOrbit message, length delimited. Does not implicitly {@link apollo.drivers.gnss.KepplerOrbit.verify|verify} messages.
                 * @param message KepplerOrbit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IKepplerOrbit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KepplerOrbit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KepplerOrbit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.KepplerOrbit;

                /**
                 * Decodes a KepplerOrbit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KepplerOrbit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.KepplerOrbit;

                /**
                 * Verifies a KepplerOrbit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KepplerOrbit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KepplerOrbit
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.KepplerOrbit;

                /**
                 * Creates a plain object from a KepplerOrbit message. Also converts values to other types if specified.
                 * @param message KepplerOrbit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.KepplerOrbit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KepplerOrbit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for KepplerOrbit
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GlonassOrbit. */
            interface IGlonassOrbit {

                /** GlonassOrbit gnssType */
                gnssType?: (apollo.drivers.gnss.GnssType|null);

                /** GlonassOrbit slotPrn */
                slotPrn?: (number|null);

                /** GlonassOrbit gnssTimeType */
                gnssTimeType?: (apollo.drivers.gnss.GnssTimeType|null);

                /** GlonassOrbit toe */
                toe?: (number|null);

                /** GlonassOrbit year */
                year?: (number|null);

                /** GlonassOrbit month */
                month?: (number|null);

                /** GlonassOrbit day */
                day?: (number|null);

                /** GlonassOrbit hour */
                hour?: (number|null);

                /** GlonassOrbit minute */
                minute?: (number|null);

                /** GlonassOrbit secondS */
                secondS?: (number|null);

                /** GlonassOrbit frequencyNo */
                frequencyNo?: (number|null);

                /** GlonassOrbit weekNum */
                weekNum?: (number|null);

                /** GlonassOrbit weekSecondS */
                weekSecondS?: (number|null);

                /** GlonassOrbit tk */
                tk?: (number|null);

                /** GlonassOrbit clockOffset */
                clockOffset?: (number|null);

                /** GlonassOrbit clockDrift */
                clockDrift?: (number|null);

                /** GlonassOrbit health */
                health?: (number|null);

                /** GlonassOrbit positionX */
                positionX?: (number|null);

                /** GlonassOrbit positionY */
                positionY?: (number|null);

                /** GlonassOrbit positionZ */
                positionZ?: (number|null);

                /** GlonassOrbit velocityX */
                velocityX?: (number|null);

                /** GlonassOrbit velocityY */
                velocityY?: (number|null);

                /** GlonassOrbit velocityZ */
                velocityZ?: (number|null);

                /** GlonassOrbit accelerateX */
                accelerateX?: (number|null);

                /** GlonassOrbit accelerateY */
                accelerateY?: (number|null);

                /** GlonassOrbit accelerateZ */
                accelerateZ?: (number|null);

                /** GlonassOrbit inforAge */
                inforAge?: (number|null);

                /** GlonassOrbit satPrn */
                satPrn?: (number|null);
            }

            /** Represents a GlonassOrbit. */
            class GlonassOrbit implements IGlonassOrbit {

                /**
                 * Constructs a new GlonassOrbit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IGlonassOrbit);

                /** GlonassOrbit gnssType. */
                public gnssType: apollo.drivers.gnss.GnssType;

                /** GlonassOrbit slotPrn. */
                public slotPrn: number;

                /** GlonassOrbit gnssTimeType. */
                public gnssTimeType: apollo.drivers.gnss.GnssTimeType;

                /** GlonassOrbit toe. */
                public toe: number;

                /** GlonassOrbit year. */
                public year: number;

                /** GlonassOrbit month. */
                public month: number;

                /** GlonassOrbit day. */
                public day: number;

                /** GlonassOrbit hour. */
                public hour: number;

                /** GlonassOrbit minute. */
                public minute: number;

                /** GlonassOrbit secondS. */
                public secondS: number;

                /** GlonassOrbit frequencyNo. */
                public frequencyNo: number;

                /** GlonassOrbit weekNum. */
                public weekNum: number;

                /** GlonassOrbit weekSecondS. */
                public weekSecondS: number;

                /** GlonassOrbit tk. */
                public tk: number;

                /** GlonassOrbit clockOffset. */
                public clockOffset: number;

                /** GlonassOrbit clockDrift. */
                public clockDrift: number;

                /** GlonassOrbit health. */
                public health: number;

                /** GlonassOrbit positionX. */
                public positionX: number;

                /** GlonassOrbit positionY. */
                public positionY: number;

                /** GlonassOrbit positionZ. */
                public positionZ: number;

                /** GlonassOrbit velocityX. */
                public velocityX: number;

                /** GlonassOrbit velocityY. */
                public velocityY: number;

                /** GlonassOrbit velocityZ. */
                public velocityZ: number;

                /** GlonassOrbit accelerateX. */
                public accelerateX: number;

                /** GlonassOrbit accelerateY. */
                public accelerateY: number;

                /** GlonassOrbit accelerateZ. */
                public accelerateZ: number;

                /** GlonassOrbit inforAge. */
                public inforAge: number;

                /** GlonassOrbit satPrn. */
                public satPrn: number;

                /**
                 * Creates a new GlonassOrbit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GlonassOrbit instance
                 */
                public static create(properties?: apollo.drivers.gnss.IGlonassOrbit): apollo.drivers.gnss.GlonassOrbit;

                /**
                 * Encodes the specified GlonassOrbit message. Does not implicitly {@link apollo.drivers.gnss.GlonassOrbit.verify|verify} messages.
                 * @param message GlonassOrbit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IGlonassOrbit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GlonassOrbit message, length delimited. Does not implicitly {@link apollo.drivers.gnss.GlonassOrbit.verify|verify} messages.
                 * @param message GlonassOrbit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IGlonassOrbit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GlonassOrbit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GlonassOrbit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.GlonassOrbit;

                /**
                 * Decodes a GlonassOrbit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GlonassOrbit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.GlonassOrbit;

                /**
                 * Verifies a GlonassOrbit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GlonassOrbit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GlonassOrbit
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.GlonassOrbit;

                /**
                 * Creates a plain object from a GlonassOrbit message. Also converts values to other types if specified.
                 * @param message GlonassOrbit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.GlonassOrbit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GlonassOrbit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GlonassOrbit
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GnssEphemeris. */
            interface IGnssEphemeris {

                /** GnssEphemeris gnssType */
                gnssType?: (apollo.drivers.gnss.GnssType|null);

                /** GnssEphemeris kepplerOrbit */
                kepplerOrbit?: (apollo.drivers.gnss.IKepplerOrbit|null);

                /** GnssEphemeris glonassOrbit */
                glonassOrbit?: (apollo.drivers.gnss.IGlonassOrbit|null);
            }

            /** Represents a GnssEphemeris. */
            class GnssEphemeris implements IGnssEphemeris {

                /**
                 * Constructs a new GnssEphemeris.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IGnssEphemeris);

                /** GnssEphemeris gnssType. */
                public gnssType: apollo.drivers.gnss.GnssType;

                /** GnssEphemeris kepplerOrbit. */
                public kepplerOrbit?: (apollo.drivers.gnss.IKepplerOrbit|null);

                /** GnssEphemeris glonassOrbit. */
                public glonassOrbit?: (apollo.drivers.gnss.IGlonassOrbit|null);

                /**
                 * Creates a new GnssEphemeris instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GnssEphemeris instance
                 */
                public static create(properties?: apollo.drivers.gnss.IGnssEphemeris): apollo.drivers.gnss.GnssEphemeris;

                /**
                 * Encodes the specified GnssEphemeris message. Does not implicitly {@link apollo.drivers.gnss.GnssEphemeris.verify|verify} messages.
                 * @param message GnssEphemeris message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IGnssEphemeris, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GnssEphemeris message, length delimited. Does not implicitly {@link apollo.drivers.gnss.GnssEphemeris.verify|verify} messages.
                 * @param message GnssEphemeris message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IGnssEphemeris, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GnssEphemeris message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GnssEphemeris
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.GnssEphemeris;

                /**
                 * Decodes a GnssEphemeris message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GnssEphemeris
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.GnssEphemeris;

                /**
                 * Verifies a GnssEphemeris message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GnssEphemeris message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GnssEphemeris
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.GnssEphemeris;

                /**
                 * Creates a plain object from a GnssEphemeris message. Also converts values to other types if specified.
                 * @param message GnssEphemeris
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.GnssEphemeris, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GnssEphemeris to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GnssEphemeris
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a Heading. */
            interface IHeading {

                /** Heading header */
                header?: (apollo.common.IHeader|null);

                /** Heading measurementTime */
                measurementTime?: (number|null);

                /** Heading solutionStatus */
                solutionStatus?: (number|null);

                /** Heading positionType */
                positionType?: (number|null);

                /** Heading baselineLength */
                baselineLength?: (number|null);

                /** Heading heading */
                heading?: (number|null);

                /** Heading pitch */
                pitch?: (number|null);

                /** Heading reserved */
                reserved?: (number|null);

                /** Heading headingStdDev */
                headingStdDev?: (number|null);

                /** Heading pitchStdDev */
                pitchStdDev?: (number|null);

                /** Heading stationId */
                stationId?: (Uint8Array|null);

                /** Heading satelliteTrackedNumber */
                satelliteTrackedNumber?: (number|null);

                /** Heading satelliteSoulutionNumber */
                satelliteSoulutionNumber?: (number|null);

                /** Heading satelliteNumberObs */
                satelliteNumberObs?: (number|null);

                /** Heading satelliteNumberMulti */
                satelliteNumberMulti?: (number|null);

                /** Heading solutionSource */
                solutionSource?: (number|null);

                /** Heading extendedSolutionStatus */
                extendedSolutionStatus?: (number|null);

                /** Heading galileoBeidouSigMask */
                galileoBeidouSigMask?: (number|null);

                /** Heading gpsGlonassSigMask */
                gpsGlonassSigMask?: (number|null);
            }

            /** Represents a Heading. */
            class Heading implements IHeading {

                /**
                 * Constructs a new Heading.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IHeading);

                /** Heading header. */
                public header?: (apollo.common.IHeader|null);

                /** Heading measurementTime. */
                public measurementTime: number;

                /** Heading solutionStatus. */
                public solutionStatus: number;

                /** Heading positionType. */
                public positionType: number;

                /** Heading baselineLength. */
                public baselineLength: number;

                /** Heading heading. */
                public heading: number;

                /** Heading pitch. */
                public pitch: number;

                /** Heading reserved. */
                public reserved: number;

                /** Heading headingStdDev. */
                public headingStdDev: number;

                /** Heading pitchStdDev. */
                public pitchStdDev: number;

                /** Heading stationId. */
                public stationId: Uint8Array;

                /** Heading satelliteTrackedNumber. */
                public satelliteTrackedNumber: number;

                /** Heading satelliteSoulutionNumber. */
                public satelliteSoulutionNumber: number;

                /** Heading satelliteNumberObs. */
                public satelliteNumberObs: number;

                /** Heading satelliteNumberMulti. */
                public satelliteNumberMulti: number;

                /** Heading solutionSource. */
                public solutionSource: number;

                /** Heading extendedSolutionStatus. */
                public extendedSolutionStatus: number;

                /** Heading galileoBeidouSigMask. */
                public galileoBeidouSigMask: number;

                /** Heading gpsGlonassSigMask. */
                public gpsGlonassSigMask: number;

                /**
                 * Creates a new Heading instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Heading instance
                 */
                public static create(properties?: apollo.drivers.gnss.IHeading): apollo.drivers.gnss.Heading;

                /**
                 * Encodes the specified Heading message. Does not implicitly {@link apollo.drivers.gnss.Heading.verify|verify} messages.
                 * @param message Heading message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IHeading, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Heading message, length delimited. Does not implicitly {@link apollo.drivers.gnss.Heading.verify|verify} messages.
                 * @param message Heading message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IHeading, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Heading message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Heading
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.Heading;

                /**
                 * Decodes a Heading message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Heading
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.Heading;

                /**
                 * Verifies a Heading message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Heading message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Heading
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.Heading;

                /**
                 * Creates a plain object from a Heading message. Also converts values to other types if specified.
                 * @param message Heading
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.Heading, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Heading to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Heading
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an Imu. */
            interface IImu {

                /** Imu header */
                header?: (apollo.common.IHeader|null);

                /** Imu measurementTime */
                measurementTime?: (number|null);

                /** Imu measurementSpan */
                measurementSpan?: (number|null);

                /** Imu linearAcceleration */
                linearAcceleration?: (apollo.common.IPoint3D|null);

                /** Imu angularVelocity */
                angularVelocity?: (apollo.common.IPoint3D|null);
            }

            /** Represents an Imu. */
            class Imu implements IImu {

                /**
                 * Constructs a new Imu.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IImu);

                /** Imu header. */
                public header?: (apollo.common.IHeader|null);

                /** Imu measurementTime. */
                public measurementTime: number;

                /** Imu measurementSpan. */
                public measurementSpan: number;

                /** Imu linearAcceleration. */
                public linearAcceleration?: (apollo.common.IPoint3D|null);

                /** Imu angularVelocity. */
                public angularVelocity?: (apollo.common.IPoint3D|null);

                /**
                 * Creates a new Imu instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Imu instance
                 */
                public static create(properties?: apollo.drivers.gnss.IImu): apollo.drivers.gnss.Imu;

                /**
                 * Encodes the specified Imu message. Does not implicitly {@link apollo.drivers.gnss.Imu.verify|verify} messages.
                 * @param message Imu message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IImu, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Imu message, length delimited. Does not implicitly {@link apollo.drivers.gnss.Imu.verify|verify} messages.
                 * @param message Imu message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IImu, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Imu message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Imu
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.Imu;

                /**
                 * Decodes an Imu message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Imu
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.Imu;

                /**
                 * Verifies an Imu message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Imu message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Imu
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.Imu;

                /**
                 * Creates a plain object from an Imu message. Also converts values to other types if specified.
                 * @param message Imu
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.Imu, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Imu to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Imu
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an InsStat. */
            interface IInsStat {

                /** InsStat header */
                header?: (apollo.common.IHeader|null);

                /** InsStat insStatus */
                insStatus?: (number|null);

                /** InsStat posType */
                posType?: (number|null);
            }

            /** Represents an InsStat. */
            class InsStat implements IInsStat {

                /**
                 * Constructs a new InsStat.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IInsStat);

                /** InsStat header. */
                public header?: (apollo.common.IHeader|null);

                /** InsStat insStatus. */
                public insStatus: number;

                /** InsStat posType. */
                public posType: number;

                /**
                 * Creates a new InsStat instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns InsStat instance
                 */
                public static create(properties?: apollo.drivers.gnss.IInsStat): apollo.drivers.gnss.InsStat;

                /**
                 * Encodes the specified InsStat message. Does not implicitly {@link apollo.drivers.gnss.InsStat.verify|verify} messages.
                 * @param message InsStat message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IInsStat, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InsStat message, length delimited. Does not implicitly {@link apollo.drivers.gnss.InsStat.verify|verify} messages.
                 * @param message InsStat message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IInsStat, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InsStat message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InsStat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.InsStat;

                /**
                 * Decodes an InsStat message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InsStat
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.InsStat;

                /**
                 * Verifies an InsStat message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InsStat message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InsStat
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.InsStat;

                /**
                 * Creates a plain object from an InsStat message. Also converts values to other types if specified.
                 * @param message InsStat
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.InsStat, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InsStat to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for InsStat
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an Ins. */
            interface IIns {

                /** Ins header */
                header?: (apollo.common.IHeader|null);

                /** Ins measurementTime */
                measurementTime?: (number|null);

                /** Ins type */
                type?: (apollo.drivers.gnss.Ins.Type|null);

                /** Ins position */
                position?: (apollo.common.IPointLLH|null);

                /** Ins eulerAngles */
                eulerAngles?: (apollo.common.IPoint3D|null);

                /** Ins linearVelocity */
                linearVelocity?: (apollo.common.IPoint3D|null);

                /** Ins angularVelocity */
                angularVelocity?: (apollo.common.IPoint3D|null);

                /** Ins linearAcceleration */
                linearAcceleration?: (apollo.common.IPoint3D|null);

                /** Ins positionCovariance */
                positionCovariance?: (number[]|null);

                /** Ins eulerAnglesCovariance */
                eulerAnglesCovariance?: (number[]|null);

                /** Ins linearVelocityCovariance */
                linearVelocityCovariance?: (number[]|null);

                /** Ins angularVelocityCovariance */
                angularVelocityCovariance?: (number[]|null);

                /** Ins linearAccelerationCovariance */
                linearAccelerationCovariance?: (number[]|null);
            }

            /** Represents an Ins. */
            class Ins implements IIns {

                /**
                 * Constructs a new Ins.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.drivers.gnss.IIns);

                /** Ins header. */
                public header?: (apollo.common.IHeader|null);

                /** Ins measurementTime. */
                public measurementTime: number;

                /** Ins type. */
                public type: apollo.drivers.gnss.Ins.Type;

                /** Ins position. */
                public position?: (apollo.common.IPointLLH|null);

                /** Ins eulerAngles. */
                public eulerAngles?: (apollo.common.IPoint3D|null);

                /** Ins linearVelocity. */
                public linearVelocity?: (apollo.common.IPoint3D|null);

                /** Ins angularVelocity. */
                public angularVelocity?: (apollo.common.IPoint3D|null);

                /** Ins linearAcceleration. */
                public linearAcceleration?: (apollo.common.IPoint3D|null);

                /** Ins positionCovariance. */
                public positionCovariance: number[];

                /** Ins eulerAnglesCovariance. */
                public eulerAnglesCovariance: number[];

                /** Ins linearVelocityCovariance. */
                public linearVelocityCovariance: number[];

                /** Ins angularVelocityCovariance. */
                public angularVelocityCovariance: number[];

                /** Ins linearAccelerationCovariance. */
                public linearAccelerationCovariance: number[];

                /**
                 * Creates a new Ins instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Ins instance
                 */
                public static create(properties?: apollo.drivers.gnss.IIns): apollo.drivers.gnss.Ins;

                /**
                 * Encodes the specified Ins message. Does not implicitly {@link apollo.drivers.gnss.Ins.verify|verify} messages.
                 * @param message Ins message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.drivers.gnss.IIns, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Ins message, length delimited. Does not implicitly {@link apollo.drivers.gnss.Ins.verify|verify} messages.
                 * @param message Ins message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.drivers.gnss.IIns, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Ins message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Ins
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.gnss.Ins;

                /**
                 * Decodes an Ins message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Ins
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.gnss.Ins;

                /**
                 * Verifies an Ins message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Ins message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Ins
                 */
                public static fromObject(object: { [k: string]: any }): apollo.drivers.gnss.Ins;

                /**
                 * Creates a plain object from an Ins message. Also converts values to other types if specified.
                 * @param message Ins
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.drivers.gnss.Ins, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Ins to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Ins
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace Ins {

                /** Type enum. */
                enum Type {
                    INVALID = 0,
                    CONVERGING = 1,
                    GOOD = 2
                }
            }
        }

        /** Properties of a Lka_768. */
        interface ILka_768 {

            /** Lka_768 laneType */
            laneType?: (number|null);

            /** Lka_768 quality */
            quality?: (number|null);

            /** Lka_768 modelDegree */
            modelDegree?: (number|null);

            /** Lka_768 position */
            position?: (number|null);

            /** Lka_768 curvature */
            curvature?: (number|null);

            /** Lka_768 curvatureDerivative */
            curvatureDerivative?: (number|null);

            /** Lka_768 widthRightMarking */
            widthRightMarking?: (number|null);
        }

        /** Represents a Lka_768. */
        class Lka_768 implements ILka_768 {

            /**
             * Constructs a new Lka_768.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILka_768);

            /** Lka_768 laneType. */
            public laneType: number;

            /** Lka_768 quality. */
            public quality: number;

            /** Lka_768 modelDegree. */
            public modelDegree: number;

            /** Lka_768 position. */
            public position: number;

            /** Lka_768 curvature. */
            public curvature: number;

            /** Lka_768 curvatureDerivative. */
            public curvatureDerivative: number;

            /** Lka_768 widthRightMarking. */
            public widthRightMarking: number;

            /**
             * Creates a new Lka_768 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Lka_768 instance
             */
            public static create(properties?: apollo.drivers.ILka_768): apollo.drivers.Lka_768;

            /**
             * Encodes the specified Lka_768 message. Does not implicitly {@link apollo.drivers.Lka_768.verify|verify} messages.
             * @param message Lka_768 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILka_768, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Lka_768 message, length delimited. Does not implicitly {@link apollo.drivers.Lka_768.verify|verify} messages.
             * @param message Lka_768 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILka_768, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Lka_768 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Lka_768
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Lka_768;

            /**
             * Decodes a Lka_768 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Lka_768
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Lka_768;

            /**
             * Verifies a Lka_768 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Lka_768 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Lka_768
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Lka_768;

            /**
             * Creates a plain object from a Lka_768 message. Also converts values to other types if specified.
             * @param message Lka_768
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Lka_768, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Lka_768 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Lka_768
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Num_76b. */
        interface INum_76b {

            /** Num_76b numOfNextLaneMarkReported */
            numOfNextLaneMarkReported?: (number|null);
        }

        /** Represents a Num_76b. */
        class Num_76b implements INum_76b {

            /**
             * Constructs a new Num_76b.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.INum_76b);

            /** Num_76b numOfNextLaneMarkReported. */
            public numOfNextLaneMarkReported: number;

            /**
             * Creates a new Num_76b instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Num_76b instance
             */
            public static create(properties?: apollo.drivers.INum_76b): apollo.drivers.Num_76b;

            /**
             * Encodes the specified Num_76b message. Does not implicitly {@link apollo.drivers.Num_76b.verify|verify} messages.
             * @param message Num_76b message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.INum_76b, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Num_76b message, length delimited. Does not implicitly {@link apollo.drivers.Num_76b.verify|verify} messages.
             * @param message Num_76b message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.INum_76b, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Num_76b message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Num_76b
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Num_76b;

            /**
             * Decodes a Num_76b message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Num_76b
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Num_76b;

            /**
             * Verifies a Num_76b message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Num_76b message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Num_76b
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Num_76b;

            /**
             * Creates a plain object from a Num_76b message. Also converts values to other types if specified.
             * @param message Num_76b
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Num_76b, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Num_76b to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Num_76b
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Aftermarket_669. */
        interface IAftermarket_669 {

            /** Aftermarket_669 laneConfLeft */
            laneConfLeft?: (number|null);

            /** Aftermarket_669 ldwAvailabilityLeft */
            ldwAvailabilityLeft?: (boolean|null);

            /** Aftermarket_669 laneTypeLeft */
            laneTypeLeft?: (number|null);

            /** Aftermarket_669 distanceToLaneL */
            distanceToLaneL?: (number|null);

            /** Aftermarket_669 laneConfRight */
            laneConfRight?: (number|null);

            /** Aftermarket_669 ldwAvailabilityRight */
            ldwAvailabilityRight?: (boolean|null);

            /** Aftermarket_669 laneTypeRight */
            laneTypeRight?: (number|null);

            /** Aftermarket_669 distanceToLaneR */
            distanceToLaneR?: (number|null);
        }

        /** Represents an Aftermarket_669. */
        class Aftermarket_669 implements IAftermarket_669 {

            /**
             * Constructs a new Aftermarket_669.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IAftermarket_669);

            /** Aftermarket_669 laneConfLeft. */
            public laneConfLeft: number;

            /** Aftermarket_669 ldwAvailabilityLeft. */
            public ldwAvailabilityLeft: boolean;

            /** Aftermarket_669 laneTypeLeft. */
            public laneTypeLeft: number;

            /** Aftermarket_669 distanceToLaneL. */
            public distanceToLaneL: number;

            /** Aftermarket_669 laneConfRight. */
            public laneConfRight: number;

            /** Aftermarket_669 ldwAvailabilityRight. */
            public ldwAvailabilityRight: boolean;

            /** Aftermarket_669 laneTypeRight. */
            public laneTypeRight: number;

            /** Aftermarket_669 distanceToLaneR. */
            public distanceToLaneR: number;

            /**
             * Creates a new Aftermarket_669 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Aftermarket_669 instance
             */
            public static create(properties?: apollo.drivers.IAftermarket_669): apollo.drivers.Aftermarket_669;

            /**
             * Encodes the specified Aftermarket_669 message. Does not implicitly {@link apollo.drivers.Aftermarket_669.verify|verify} messages.
             * @param message Aftermarket_669 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IAftermarket_669, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Aftermarket_669 message, length delimited. Does not implicitly {@link apollo.drivers.Aftermarket_669.verify|verify} messages.
             * @param message Aftermarket_669 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IAftermarket_669, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Aftermarket_669 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Aftermarket_669
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Aftermarket_669;

            /**
             * Decodes an Aftermarket_669 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Aftermarket_669
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Aftermarket_669;

            /**
             * Verifies an Aftermarket_669 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Aftermarket_669 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Aftermarket_669
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Aftermarket_669;

            /**
             * Creates a plain object from an Aftermarket_669 message. Also converts values to other types if specified.
             * @param message Aftermarket_669
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Aftermarket_669, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Aftermarket_669 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Aftermarket_669
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Lka_769. */
        interface ILka_769 {

            /** Lka_769 headingAngle */
            headingAngle?: (number|null);

            /** Lka_769 viewRange */
            viewRange?: (number|null);

            /** Lka_769 viewRangeAvailability */
            viewRangeAvailability?: (boolean|null);
        }

        /** Represents a Lka_769. */
        class Lka_769 implements ILka_769 {

            /**
             * Constructs a new Lka_769.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILka_769);

            /** Lka_769 headingAngle. */
            public headingAngle: number;

            /** Lka_769 viewRange. */
            public viewRange: number;

            /** Lka_769 viewRangeAvailability. */
            public viewRangeAvailability: boolean;

            /**
             * Creates a new Lka_769 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Lka_769 instance
             */
            public static create(properties?: apollo.drivers.ILka_769): apollo.drivers.Lka_769;

            /**
             * Encodes the specified Lka_769 message. Does not implicitly {@link apollo.drivers.Lka_769.verify|verify} messages.
             * @param message Lka_769 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILka_769, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Lka_769 message, length delimited. Does not implicitly {@link apollo.drivers.Lka_769.verify|verify} messages.
             * @param message Lka_769 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILka_769, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Lka_769 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Lka_769
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Lka_769;

            /**
             * Decodes a Lka_769 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Lka_769
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Lka_769;

            /**
             * Verifies a Lka_769 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Lka_769 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Lka_769
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Lka_769;

            /**
             * Creates a plain object from a Lka_769 message. Also converts values to other types if specified.
             * @param message Lka_769
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Lka_769, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Lka_769 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Lka_769
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Reference_76a. */
        interface IReference_76a {

            /** Reference_76a refPoint_1Position */
            refPoint_1Position?: (number|null);

            /** Reference_76a refPoint_1Distance */
            refPoint_1Distance?: (number|null);

            /** Reference_76a refPoint_1Validity */
            refPoint_1Validity?: (boolean|null);

            /** Reference_76a refPoint_2Position */
            refPoint_2Position?: (number|null);

            /** Reference_76a refPoint_2Distance */
            refPoint_2Distance?: (number|null);

            /** Reference_76a refPoint_2Validity */
            refPoint_2Validity?: (boolean|null);
        }

        /** Represents a Reference_76a. */
        class Reference_76a implements IReference_76a {

            /**
             * Constructs a new Reference_76a.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IReference_76a);

            /** Reference_76a refPoint_1Position. */
            public refPoint_1Position: number;

            /** Reference_76a refPoint_1Distance. */
            public refPoint_1Distance: number;

            /** Reference_76a refPoint_1Validity. */
            public refPoint_1Validity: boolean;

            /** Reference_76a refPoint_2Position. */
            public refPoint_2Position: number;

            /** Reference_76a refPoint_2Distance. */
            public refPoint_2Distance: number;

            /** Reference_76a refPoint_2Validity. */
            public refPoint_2Validity: boolean;

            /**
             * Creates a new Reference_76a instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Reference_76a instance
             */
            public static create(properties?: apollo.drivers.IReference_76a): apollo.drivers.Reference_76a;

            /**
             * Encodes the specified Reference_76a message. Does not implicitly {@link apollo.drivers.Reference_76a.verify|verify} messages.
             * @param message Reference_76a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IReference_76a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Reference_76a message, length delimited. Does not implicitly {@link apollo.drivers.Reference_76a.verify|verify} messages.
             * @param message Reference_76a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IReference_76a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Reference_76a message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Reference_76a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Reference_76a;

            /**
             * Decodes a Reference_76a message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Reference_76a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Reference_76a;

            /**
             * Verifies a Reference_76a message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Reference_76a message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Reference_76a
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Reference_76a;

            /**
             * Creates a plain object from a Reference_76a message. Also converts values to other types if specified.
             * @param message Reference_76a
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Reference_76a, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Reference_76a to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Reference_76a
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Details_738. */
        interface IDetails_738 {

            /** Details_738 numObstacles */
            numObstacles?: (number|null);

            /** Details_738 timestamp */
            timestamp?: (number|null);

            /** Details_738 applicationVersion */
            applicationVersion?: (number|null);

            /** Details_738 activeVersionNumberSection */
            activeVersionNumberSection?: (number|null);

            /** Details_738 leftCloseRangCutIn */
            leftCloseRangCutIn?: (boolean|null);

            /** Details_738 rightCloseRangCutIn */
            rightCloseRangCutIn?: (boolean|null);

            /** Details_738 go */
            go?: (number|null);

            /** Details_738 protocolVersion */
            protocolVersion?: (number|null);

            /** Details_738 closeCar */
            closeCar?: (boolean|null);

            /** Details_738 failsafe */
            failsafe?: (number|null);

            /** Details_738 reserved_10 */
            reserved_10?: (number|null);
        }

        /** Represents a Details_738. */
        class Details_738 implements IDetails_738 {

            /**
             * Constructs a new Details_738.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IDetails_738);

            /** Details_738 numObstacles. */
            public numObstacles: number;

            /** Details_738 timestamp. */
            public timestamp: number;

            /** Details_738 applicationVersion. */
            public applicationVersion: number;

            /** Details_738 activeVersionNumberSection. */
            public activeVersionNumberSection: number;

            /** Details_738 leftCloseRangCutIn. */
            public leftCloseRangCutIn: boolean;

            /** Details_738 rightCloseRangCutIn. */
            public rightCloseRangCutIn: boolean;

            /** Details_738 go. */
            public go: number;

            /** Details_738 protocolVersion. */
            public protocolVersion: number;

            /** Details_738 closeCar. */
            public closeCar: boolean;

            /** Details_738 failsafe. */
            public failsafe: number;

            /** Details_738 reserved_10. */
            public reserved_10: number;

            /**
             * Creates a new Details_738 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Details_738 instance
             */
            public static create(properties?: apollo.drivers.IDetails_738): apollo.drivers.Details_738;

            /**
             * Encodes the specified Details_738 message. Does not implicitly {@link apollo.drivers.Details_738.verify|verify} messages.
             * @param message Details_738 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IDetails_738, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Details_738 message, length delimited. Does not implicitly {@link apollo.drivers.Details_738.verify|verify} messages.
             * @param message Details_738 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IDetails_738, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Details_738 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Details_738
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Details_738;

            /**
             * Decodes a Details_738 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Details_738
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Details_738;

            /**
             * Verifies a Details_738 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Details_738 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Details_738
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Details_738;

            /**
             * Creates a plain object from a Details_738 message. Also converts values to other types if specified.
             * @param message Details_738
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Details_738, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Details_738 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Details_738
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Next_76c. */
        interface INext_76c {

            /** Next_76c laneType */
            laneType?: (number|null);

            /** Next_76c quality */
            quality?: (number|null);

            /** Next_76c modelDegree */
            modelDegree?: (number|null);

            /** Next_76c position */
            position?: (number|null);

            /** Next_76c curvature */
            curvature?: (number|null);

            /** Next_76c curvatureDerivative */
            curvatureDerivative?: (number|null);

            /** Next_76c laneMarkWidth */
            laneMarkWidth?: (number|null);
        }

        /** Represents a Next_76c. */
        class Next_76c implements INext_76c {

            /**
             * Constructs a new Next_76c.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.INext_76c);

            /** Next_76c laneType. */
            public laneType: number;

            /** Next_76c quality. */
            public quality: number;

            /** Next_76c modelDegree. */
            public modelDegree: number;

            /** Next_76c position. */
            public position: number;

            /** Next_76c curvature. */
            public curvature: number;

            /** Next_76c curvatureDerivative. */
            public curvatureDerivative: number;

            /** Next_76c laneMarkWidth. */
            public laneMarkWidth: number;

            /**
             * Creates a new Next_76c instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Next_76c instance
             */
            public static create(properties?: apollo.drivers.INext_76c): apollo.drivers.Next_76c;

            /**
             * Encodes the specified Next_76c message. Does not implicitly {@link apollo.drivers.Next_76c.verify|verify} messages.
             * @param message Next_76c message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.INext_76c, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Next_76c message, length delimited. Does not implicitly {@link apollo.drivers.Next_76c.verify|verify} messages.
             * @param message Next_76c message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.INext_76c, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Next_76c message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Next_76c
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Next_76c;

            /**
             * Decodes a Next_76c message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Next_76c
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Next_76c;

            /**
             * Verifies a Next_76c message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Next_76c message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Next_76c
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Next_76c;

            /**
             * Creates a plain object from a Next_76c message. Also converts values to other types if specified.
             * @param message Next_76c
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Next_76c, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Next_76c to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Next_76c
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Details_737. */
        interface IDetails_737 {

            /** Details_737 laneCurvature */
            laneCurvature?: (number|null);

            /** Details_737 laneHeading */
            laneHeading?: (number|null);

            /** Details_737 caConstructionArea */
            caConstructionArea?: (boolean|null);

            /** Details_737 rightLdwAvailability */
            rightLdwAvailability?: (boolean|null);

            /** Details_737 leftLdwAvailability */
            leftLdwAvailability?: (boolean|null);

            /** Details_737 reserved_1 */
            reserved_1?: (boolean|null);

            /** Details_737 yawAngle */
            yawAngle?: (number|null);

            /** Details_737 pitchAngle */
            pitchAngle?: (number|null);
        }

        /** Represents a Details_737. */
        class Details_737 implements IDetails_737 {

            /**
             * Constructs a new Details_737.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IDetails_737);

            /** Details_737 laneCurvature. */
            public laneCurvature: number;

            /** Details_737 laneHeading. */
            public laneHeading: number;

            /** Details_737 caConstructionArea. */
            public caConstructionArea: boolean;

            /** Details_737 rightLdwAvailability. */
            public rightLdwAvailability: boolean;

            /** Details_737 leftLdwAvailability. */
            public leftLdwAvailability: boolean;

            /** Details_737 reserved_1. */
            public reserved_1: boolean;

            /** Details_737 yawAngle. */
            public yawAngle: number;

            /** Details_737 pitchAngle. */
            public pitchAngle: number;

            /**
             * Creates a new Details_737 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Details_737 instance
             */
            public static create(properties?: apollo.drivers.IDetails_737): apollo.drivers.Details_737;

            /**
             * Encodes the specified Details_737 message. Does not implicitly {@link apollo.drivers.Details_737.verify|verify} messages.
             * @param message Details_737 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IDetails_737, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Details_737 message, length delimited. Does not implicitly {@link apollo.drivers.Details_737.verify|verify} messages.
             * @param message Details_737 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IDetails_737, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Details_737 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Details_737
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Details_737;

            /**
             * Decodes a Details_737 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Details_737
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Details_737;

            /**
             * Verifies a Details_737 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Details_737 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Details_737
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Details_737;

            /**
             * Creates a plain object from a Details_737 message. Also converts values to other types if specified.
             * @param message Details_737
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Details_737, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Details_737 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Details_737
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Lka_767. */
        interface ILka_767 {

            /** Lka_767 headingAngle */
            headingAngle?: (number|null);

            /** Lka_767 viewRange */
            viewRange?: (number|null);

            /** Lka_767 viewRangeAvailability */
            viewRangeAvailability?: (boolean|null);
        }

        /** Represents a Lka_767. */
        class Lka_767 implements ILka_767 {

            /**
             * Constructs a new Lka_767.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILka_767);

            /** Lka_767 headingAngle. */
            public headingAngle: number;

            /** Lka_767 viewRange. */
            public viewRange: number;

            /** Lka_767 viewRangeAvailability. */
            public viewRangeAvailability: boolean;

            /**
             * Creates a new Lka_767 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Lka_767 instance
             */
            public static create(properties?: apollo.drivers.ILka_767): apollo.drivers.Lka_767;

            /**
             * Encodes the specified Lka_767 message. Does not implicitly {@link apollo.drivers.Lka_767.verify|verify} messages.
             * @param message Lka_767 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILka_767, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Lka_767 message, length delimited. Does not implicitly {@link apollo.drivers.Lka_767.verify|verify} messages.
             * @param message Lka_767 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILka_767, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Lka_767 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Lka_767
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Lka_767;

            /**
             * Decodes a Lka_767 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Lka_767
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Lka_767;

            /**
             * Verifies a Lka_767 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Lka_767 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Lka_767
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Lka_767;

            /**
             * Creates a plain object from a Lka_767 message. Also converts values to other types if specified.
             * @param message Lka_767
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Lka_767, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Lka_767 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Lka_767
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Lka_766. */
        interface ILka_766 {

            /** Lka_766 laneType */
            laneType?: (number|null);

            /** Lka_766 quality */
            quality?: (number|null);

            /** Lka_766 modelDegree */
            modelDegree?: (number|null);

            /** Lka_766 position */
            position?: (number|null);

            /** Lka_766 curvature */
            curvature?: (number|null);

            /** Lka_766 curvatureDerivative */
            curvatureDerivative?: (number|null);

            /** Lka_766 widthLeftMarking */
            widthLeftMarking?: (number|null);
        }

        /** Represents a Lka_766. */
        class Lka_766 implements ILka_766 {

            /**
             * Constructs a new Lka_766.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILka_766);

            /** Lka_766 laneType. */
            public laneType: number;

            /** Lka_766 quality. */
            public quality: number;

            /** Lka_766 modelDegree. */
            public modelDegree: number;

            /** Lka_766 position. */
            public position: number;

            /** Lka_766 curvature. */
            public curvature: number;

            /** Lka_766 curvatureDerivative. */
            public curvatureDerivative: number;

            /** Lka_766 widthLeftMarking. */
            public widthLeftMarking: number;

            /**
             * Creates a new Lka_766 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Lka_766 instance
             */
            public static create(properties?: apollo.drivers.ILka_766): apollo.drivers.Lka_766;

            /**
             * Encodes the specified Lka_766 message. Does not implicitly {@link apollo.drivers.Lka_766.verify|verify} messages.
             * @param message Lka_766 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILka_766, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Lka_766 message, length delimited. Does not implicitly {@link apollo.drivers.Lka_766.verify|verify} messages.
             * @param message Lka_766 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILka_766, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Lka_766 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Lka_766
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Lka_766;

            /**
             * Decodes a Lka_766 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Lka_766
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Lka_766;

            /**
             * Verifies a Lka_766 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Lka_766 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Lka_766
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Lka_766;

            /**
             * Creates a plain object from a Lka_766 message. Also converts values to other types if specified.
             * @param message Lka_766
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Lka_766, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Lka_766 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Lka_766
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Next_76d. */
        interface INext_76d {

            /** Next_76d headingAngle */
            headingAngle?: (number|null);

            /** Next_76d viewRange */
            viewRange?: (number|null);

            /** Next_76d viewRangeAvailability */
            viewRangeAvailability?: (boolean|null);
        }

        /** Represents a Next_76d. */
        class Next_76d implements INext_76d {

            /**
             * Constructs a new Next_76d.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.INext_76d);

            /** Next_76d headingAngle. */
            public headingAngle: number;

            /** Next_76d viewRange. */
            public viewRange: number;

            /** Next_76d viewRangeAvailability. */
            public viewRangeAvailability: boolean;

            /**
             * Creates a new Next_76d instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Next_76d instance
             */
            public static create(properties?: apollo.drivers.INext_76d): apollo.drivers.Next_76d;

            /**
             * Encodes the specified Next_76d message. Does not implicitly {@link apollo.drivers.Next_76d.verify|verify} messages.
             * @param message Next_76d message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.INext_76d, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Next_76d message, length delimited. Does not implicitly {@link apollo.drivers.Next_76d.verify|verify} messages.
             * @param message Next_76d message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.INext_76d, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Next_76d message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Next_76d
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Next_76d;

            /**
             * Decodes a Next_76d message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Next_76d
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Next_76d;

            /**
             * Verifies a Next_76d message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Next_76d message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Next_76d
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Next_76d;

            /**
             * Creates a plain object from a Next_76d message. Also converts values to other types if specified.
             * @param message Next_76d
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Next_76d, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Next_76d to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Next_76d
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Details_739. */
        interface IDetails_739 {

            /** Details_739 obstacleId */
            obstacleId?: (number|null);

            /** Details_739 obstaclePosX */
            obstaclePosX?: (number|null);

            /** Details_739 reseved_2 */
            reseved_2?: (number|null);

            /** Details_739 obstaclePosY */
            obstaclePosY?: (number|null);

            /** Details_739 blinkerInfo */
            blinkerInfo?: (number|null);

            /** Details_739 cutInAndOut */
            cutInAndOut?: (number|null);

            /** Details_739 obstacleRelVelX */
            obstacleRelVelX?: (number|null);

            /** Details_739 obstacleType */
            obstacleType?: (number|null);

            /** Details_739 reserved_3 */
            reserved_3?: (boolean|null);

            /** Details_739 obstacleStatus */
            obstacleStatus?: (number|null);

            /** Details_739 obstacleBrakeLights */
            obstacleBrakeLights?: (boolean|null);

            /** Details_739 reserved_4 */
            reserved_4?: (number|null);

            /** Details_739 obstacleValid */
            obstacleValid?: (number|null);
        }

        /** Represents a Details_739. */
        class Details_739 implements IDetails_739 {

            /**
             * Constructs a new Details_739.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IDetails_739);

            /** Details_739 obstacleId. */
            public obstacleId: number;

            /** Details_739 obstaclePosX. */
            public obstaclePosX: number;

            /** Details_739 reseved_2. */
            public reseved_2: number;

            /** Details_739 obstaclePosY. */
            public obstaclePosY: number;

            /** Details_739 blinkerInfo. */
            public blinkerInfo: number;

            /** Details_739 cutInAndOut. */
            public cutInAndOut: number;

            /** Details_739 obstacleRelVelX. */
            public obstacleRelVelX: number;

            /** Details_739 obstacleType. */
            public obstacleType: number;

            /** Details_739 reserved_3. */
            public reserved_3: boolean;

            /** Details_739 obstacleStatus. */
            public obstacleStatus: number;

            /** Details_739 obstacleBrakeLights. */
            public obstacleBrakeLights: boolean;

            /** Details_739 reserved_4. */
            public reserved_4: number;

            /** Details_739 obstacleValid. */
            public obstacleValid: number;

            /**
             * Creates a new Details_739 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Details_739 instance
             */
            public static create(properties?: apollo.drivers.IDetails_739): apollo.drivers.Details_739;

            /**
             * Encodes the specified Details_739 message. Does not implicitly {@link apollo.drivers.Details_739.verify|verify} messages.
             * @param message Details_739 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IDetails_739, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Details_739 message, length delimited. Does not implicitly {@link apollo.drivers.Details_739.verify|verify} messages.
             * @param message Details_739 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IDetails_739, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Details_739 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Details_739
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Details_739;

            /**
             * Decodes a Details_739 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Details_739
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Details_739;

            /**
             * Verifies a Details_739 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Details_739 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Details_739
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Details_739;

            /**
             * Creates a plain object from a Details_739 message. Also converts values to other types if specified.
             * @param message Details_739
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Details_739, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Details_739 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Details_739
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Details_73a. */
        interface IDetails_73a {

            /** Details_73a obstacleLength */
            obstacleLength?: (number|null);

            /** Details_73a obstacleWidth */
            obstacleWidth?: (number|null);

            /** Details_73a obstacleAge */
            obstacleAge?: (number|null);

            /** Details_73a obstacleLane */
            obstacleLane?: (number|null);

            /** Details_73a cipvFlag */
            cipvFlag?: (boolean|null);

            /** Details_73a reserved_5 */
            reserved_5?: (boolean|null);

            /** Details_73a radarPosX */
            radarPosX?: (number|null);

            /** Details_73a radarVelX */
            radarVelX?: (number|null);

            /** Details_73a radarMatchConfidence */
            radarMatchConfidence?: (number|null);

            /** Details_73a reserved_6 */
            reserved_6?: (boolean|null);

            /** Details_73a matchedRadarId */
            matchedRadarId?: (number|null);

            /** Details_73a reserved_7 */
            reserved_7?: (boolean|null);
        }

        /** Represents a Details_73a. */
        class Details_73a implements IDetails_73a {

            /**
             * Constructs a new Details_73a.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IDetails_73a);

            /** Details_73a obstacleLength. */
            public obstacleLength: number;

            /** Details_73a obstacleWidth. */
            public obstacleWidth: number;

            /** Details_73a obstacleAge. */
            public obstacleAge: number;

            /** Details_73a obstacleLane. */
            public obstacleLane: number;

            /** Details_73a cipvFlag. */
            public cipvFlag: boolean;

            /** Details_73a reserved_5. */
            public reserved_5: boolean;

            /** Details_73a radarPosX. */
            public radarPosX: number;

            /** Details_73a radarVelX. */
            public radarVelX: number;

            /** Details_73a radarMatchConfidence. */
            public radarMatchConfidence: number;

            /** Details_73a reserved_6. */
            public reserved_6: boolean;

            /** Details_73a matchedRadarId. */
            public matchedRadarId: number;

            /** Details_73a reserved_7. */
            public reserved_7: boolean;

            /**
             * Creates a new Details_73a instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Details_73a instance
             */
            public static create(properties?: apollo.drivers.IDetails_73a): apollo.drivers.Details_73a;

            /**
             * Encodes the specified Details_73a message. Does not implicitly {@link apollo.drivers.Details_73a.verify|verify} messages.
             * @param message Details_73a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IDetails_73a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Details_73a message, length delimited. Does not implicitly {@link apollo.drivers.Details_73a.verify|verify} messages.
             * @param message Details_73a message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IDetails_73a, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Details_73a message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Details_73a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Details_73a;

            /**
             * Decodes a Details_73a message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Details_73a
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Details_73a;

            /**
             * Verifies a Details_73a message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Details_73a message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Details_73a
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Details_73a;

            /**
             * Creates a plain object from a Details_73a message. Also converts values to other types if specified.
             * @param message Details_73a
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Details_73a, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Details_73a to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Details_73a
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Details_73b. */
        interface IDetails_73b {

            /** Details_73b obstacleAngleRate */
            obstacleAngleRate?: (number|null);

            /** Details_73b obstacleScaleChange */
            obstacleScaleChange?: (number|null);

            /** Details_73b objectAccelX */
            objectAccelX?: (number|null);

            /** Details_73b reserved_8 */
            reserved_8?: (number|null);

            /** Details_73b obstacleReplaced */
            obstacleReplaced?: (boolean|null);

            /** Details_73b reserved_9 */
            reserved_9?: (number|null);

            /** Details_73b obstacleAngle */
            obstacleAngle?: (number|null);
        }

        /** Represents a Details_73b. */
        class Details_73b implements IDetails_73b {

            /**
             * Constructs a new Details_73b.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IDetails_73b);

            /** Details_73b obstacleAngleRate. */
            public obstacleAngleRate: number;

            /** Details_73b obstacleScaleChange. */
            public obstacleScaleChange: number;

            /** Details_73b objectAccelX. */
            public objectAccelX: number;

            /** Details_73b reserved_8. */
            public reserved_8: number;

            /** Details_73b obstacleReplaced. */
            public obstacleReplaced: boolean;

            /** Details_73b reserved_9. */
            public reserved_9: number;

            /** Details_73b obstacleAngle. */
            public obstacleAngle: number;

            /**
             * Creates a new Details_73b instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Details_73b instance
             */
            public static create(properties?: apollo.drivers.IDetails_73b): apollo.drivers.Details_73b;

            /**
             * Encodes the specified Details_73b message. Does not implicitly {@link apollo.drivers.Details_73b.verify|verify} messages.
             * @param message Details_73b message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IDetails_73b, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Details_73b message, length delimited. Does not implicitly {@link apollo.drivers.Details_73b.verify|verify} messages.
             * @param message Details_73b message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IDetails_73b, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Details_73b message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Details_73b
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Details_73b;

            /**
             * Decodes a Details_73b message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Details_73b
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Details_73b;

            /**
             * Verifies a Details_73b message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Details_73b message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Details_73b
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Details_73b;

            /**
             * Creates a plain object from a Details_73b message. Also converts values to other types if specified.
             * @param message Details_73b
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Details_73b, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Details_73b to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Details_73b
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Mobileye. */
        interface IMobileye {

            /** Mobileye header */
            header?: (apollo.common.IHeader|null);

            /** Mobileye aftermarket_669 */
            aftermarket_669?: (apollo.drivers.IAftermarket_669|null);

            /** Mobileye details_737 */
            details_737?: (apollo.drivers.IDetails_737|null);

            /** Mobileye details_738 */
            details_738?: (apollo.drivers.IDetails_738|null);

            /** Mobileye details_739 */
            details_739?: (apollo.drivers.IDetails_739[]|null);

            /** Mobileye details_73a */
            details_73a?: (apollo.drivers.IDetails_73a[]|null);

            /** Mobileye details_73b */
            details_73b?: (apollo.drivers.IDetails_73b[]|null);

            /** Mobileye lka_766 */
            lka_766?: (apollo.drivers.ILka_766|null);

            /** Mobileye lka_767 */
            lka_767?: (apollo.drivers.ILka_767|null);

            /** Mobileye lka_768 */
            lka_768?: (apollo.drivers.ILka_768|null);

            /** Mobileye lka_769 */
            lka_769?: (apollo.drivers.ILka_769|null);

            /** Mobileye reference_76a */
            reference_76a?: (apollo.drivers.IReference_76a|null);

            /** Mobileye num_76b */
            num_76b?: (apollo.drivers.INum_76b|null);

            /** Mobileye next_76c */
            next_76c?: (apollo.drivers.INext_76c[]|null);

            /** Mobileye next_76d */
            next_76d?: (apollo.drivers.INext_76d[]|null);
        }

        /** Represents a Mobileye. */
        class Mobileye implements IMobileye {

            /**
             * Constructs a new Mobileye.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IMobileye);

            /** Mobileye header. */
            public header?: (apollo.common.IHeader|null);

            /** Mobileye aftermarket_669. */
            public aftermarket_669?: (apollo.drivers.IAftermarket_669|null);

            /** Mobileye details_737. */
            public details_737?: (apollo.drivers.IDetails_737|null);

            /** Mobileye details_738. */
            public details_738?: (apollo.drivers.IDetails_738|null);

            /** Mobileye details_739. */
            public details_739: apollo.drivers.IDetails_739[];

            /** Mobileye details_73a. */
            public details_73a: apollo.drivers.IDetails_73a[];

            /** Mobileye details_73b. */
            public details_73b: apollo.drivers.IDetails_73b[];

            /** Mobileye lka_766. */
            public lka_766?: (apollo.drivers.ILka_766|null);

            /** Mobileye lka_767. */
            public lka_767?: (apollo.drivers.ILka_767|null);

            /** Mobileye lka_768. */
            public lka_768?: (apollo.drivers.ILka_768|null);

            /** Mobileye lka_769. */
            public lka_769?: (apollo.drivers.ILka_769|null);

            /** Mobileye reference_76a. */
            public reference_76a?: (apollo.drivers.IReference_76a|null);

            /** Mobileye num_76b. */
            public num_76b?: (apollo.drivers.INum_76b|null);

            /** Mobileye next_76c. */
            public next_76c: apollo.drivers.INext_76c[];

            /** Mobileye next_76d. */
            public next_76d: apollo.drivers.INext_76d[];

            /**
             * Creates a new Mobileye instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Mobileye instance
             */
            public static create(properties?: apollo.drivers.IMobileye): apollo.drivers.Mobileye;

            /**
             * Encodes the specified Mobileye message. Does not implicitly {@link apollo.drivers.Mobileye.verify|verify} messages.
             * @param message Mobileye message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IMobileye, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Mobileye message, length delimited. Does not implicitly {@link apollo.drivers.Mobileye.verify|verify} messages.
             * @param message Mobileye message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IMobileye, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Mobileye message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Mobileye
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Mobileye;

            /**
             * Decodes a Mobileye message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Mobileye
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Mobileye;

            /**
             * Verifies a Mobileye message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Mobileye message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Mobileye
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Mobileye;

            /**
             * Creates a plain object from a Mobileye message. Also converts values to other types if specified.
             * @param message Mobileye
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Mobileye, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Mobileye to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Mobileye
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an OculiiRawPointcloud. */
        interface IOculiiRawPointcloud {

            /** OculiiRawPointcloud range */
            range?: (number|null);

            /** OculiiRawPointcloud doppler */
            doppler?: (number|null);

            /** OculiiRawPointcloud azimuth */
            azimuth?: (number|null);

            /** OculiiRawPointcloud elevation */
            elevation?: (number|null);

            /** OculiiRawPointcloud power */
            power?: (number|null);
        }

        /** Represents an OculiiRawPointcloud. */
        class OculiiRawPointcloud implements IOculiiRawPointcloud {

            /**
             * Constructs a new OculiiRawPointcloud.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IOculiiRawPointcloud);

            /** OculiiRawPointcloud range. */
            public range: number;

            /** OculiiRawPointcloud doppler. */
            public doppler: number;

            /** OculiiRawPointcloud azimuth. */
            public azimuth: number;

            /** OculiiRawPointcloud elevation. */
            public elevation: number;

            /** OculiiRawPointcloud power. */
            public power: number;

            /**
             * Creates a new OculiiRawPointcloud instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OculiiRawPointcloud instance
             */
            public static create(properties?: apollo.drivers.IOculiiRawPointcloud): apollo.drivers.OculiiRawPointcloud;

            /**
             * Encodes the specified OculiiRawPointcloud message. Does not implicitly {@link apollo.drivers.OculiiRawPointcloud.verify|verify} messages.
             * @param message OculiiRawPointcloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IOculiiRawPointcloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OculiiRawPointcloud message, length delimited. Does not implicitly {@link apollo.drivers.OculiiRawPointcloud.verify|verify} messages.
             * @param message OculiiRawPointcloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IOculiiRawPointcloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OculiiRawPointcloud message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OculiiRawPointcloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.OculiiRawPointcloud;

            /**
             * Decodes an OculiiRawPointcloud message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OculiiRawPointcloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.OculiiRawPointcloud;

            /**
             * Verifies an OculiiRawPointcloud message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OculiiRawPointcloud message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OculiiRawPointcloud
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.OculiiRawPointcloud;

            /**
             * Creates a plain object from an OculiiRawPointcloud message. Also converts values to other types if specified.
             * @param message OculiiRawPointcloud
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.OculiiRawPointcloud, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OculiiRawPointcloud to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for OculiiRawPointcloud
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an OculiiPointXYZIV. */
        interface IOculiiPointXYZIV {

            /** OculiiPointXYZIV x */
            x?: (number|null);

            /** OculiiPointXYZIV y */
            y?: (number|null);

            /** OculiiPointXYZIV z */
            z?: (number|null);

            /** OculiiPointXYZIV intensity */
            intensity?: (number|null);

            /** OculiiPointXYZIV velocity */
            velocity?: (number|null);
        }

        /** Represents an OculiiPointXYZIV. */
        class OculiiPointXYZIV implements IOculiiPointXYZIV {

            /**
             * Constructs a new OculiiPointXYZIV.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IOculiiPointXYZIV);

            /** OculiiPointXYZIV x. */
            public x: number;

            /** OculiiPointXYZIV y. */
            public y: number;

            /** OculiiPointXYZIV z. */
            public z: number;

            /** OculiiPointXYZIV intensity. */
            public intensity: number;

            /** OculiiPointXYZIV velocity. */
            public velocity: number;

            /**
             * Creates a new OculiiPointXYZIV instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OculiiPointXYZIV instance
             */
            public static create(properties?: apollo.drivers.IOculiiPointXYZIV): apollo.drivers.OculiiPointXYZIV;

            /**
             * Encodes the specified OculiiPointXYZIV message. Does not implicitly {@link apollo.drivers.OculiiPointXYZIV.verify|verify} messages.
             * @param message OculiiPointXYZIV message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IOculiiPointXYZIV, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OculiiPointXYZIV message, length delimited. Does not implicitly {@link apollo.drivers.OculiiPointXYZIV.verify|verify} messages.
             * @param message OculiiPointXYZIV message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IOculiiPointXYZIV, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OculiiPointXYZIV message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OculiiPointXYZIV
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.OculiiPointXYZIV;

            /**
             * Decodes an OculiiPointXYZIV message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OculiiPointXYZIV
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.OculiiPointXYZIV;

            /**
             * Verifies an OculiiPointXYZIV message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OculiiPointXYZIV message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OculiiPointXYZIV
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.OculiiPointXYZIV;

            /**
             * Creates a plain object from an OculiiPointXYZIV message. Also converts values to other types if specified.
             * @param message OculiiPointXYZIV
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.OculiiPointXYZIV, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OculiiPointXYZIV to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for OculiiPointXYZIV
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an OculiiTrackTarget. */
        interface IOculiiTrackTarget {

            /** OculiiTrackTarget id */
            id?: (number|Long|null);

            /** OculiiTrackTarget xPos */
            xPos?: (number|null);

            /** OculiiTrackTarget yPos */
            yPos?: (number|null);

            /** OculiiTrackTarget zPos */
            zPos?: (number|null);

            /** OculiiTrackTarget xDot */
            xDot?: (number|null);

            /** OculiiTrackTarget yDot */
            yDot?: (number|null);

            /** OculiiTrackTarget zDot */
            zDot?: (number|null);

            /** OculiiTrackTarget confidence */
            confidence?: (number|null);

            /** OculiiTrackTarget trackClass */
            trackClass?: (apollo.drivers.OculiiTrackTarget.ObstacleClass|null);
        }

        /** Represents an OculiiTrackTarget. */
        class OculiiTrackTarget implements IOculiiTrackTarget {

            /**
             * Constructs a new OculiiTrackTarget.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IOculiiTrackTarget);

            /** OculiiTrackTarget id. */
            public id: (number|Long);

            /** OculiiTrackTarget xPos. */
            public xPos: number;

            /** OculiiTrackTarget yPos. */
            public yPos: number;

            /** OculiiTrackTarget zPos. */
            public zPos: number;

            /** OculiiTrackTarget xDot. */
            public xDot: number;

            /** OculiiTrackTarget yDot. */
            public yDot: number;

            /** OculiiTrackTarget zDot. */
            public zDot: number;

            /** OculiiTrackTarget confidence. */
            public confidence: number;

            /** OculiiTrackTarget trackClass. */
            public trackClass: apollo.drivers.OculiiTrackTarget.ObstacleClass;

            /**
             * Creates a new OculiiTrackTarget instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OculiiTrackTarget instance
             */
            public static create(properties?: apollo.drivers.IOculiiTrackTarget): apollo.drivers.OculiiTrackTarget;

            /**
             * Encodes the specified OculiiTrackTarget message. Does not implicitly {@link apollo.drivers.OculiiTrackTarget.verify|verify} messages.
             * @param message OculiiTrackTarget message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IOculiiTrackTarget, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OculiiTrackTarget message, length delimited. Does not implicitly {@link apollo.drivers.OculiiTrackTarget.verify|verify} messages.
             * @param message OculiiTrackTarget message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IOculiiTrackTarget, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OculiiTrackTarget message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OculiiTrackTarget
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.OculiiTrackTarget;

            /**
             * Decodes an OculiiTrackTarget message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OculiiTrackTarget
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.OculiiTrackTarget;

            /**
             * Verifies an OculiiTrackTarget message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OculiiTrackTarget message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OculiiTrackTarget
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.OculiiTrackTarget;

            /**
             * Creates a plain object from an OculiiTrackTarget message. Also converts values to other types if specified.
             * @param message OculiiTrackTarget
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.OculiiTrackTarget, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OculiiTrackTarget to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for OculiiTrackTarget
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace OculiiTrackTarget {

            /** ObstacleClass enum. */
            enum ObstacleClass {
                UNKNOWN = 0,
                PEDESTRIAN = 1,
                BICYCLE = 2,
                VEHICLE = 3,
                TRUCK = 4,
                BACKGROUND = 5
            }
        }

        /** Properties of an OculiiPointCloud. */
        interface IOculiiPointCloud {

            /** OculiiPointCloud header */
            header?: (apollo.common.IHeader|null);

            /** OculiiPointCloud frameId */
            frameId?: (string|null);

            /** OculiiPointCloud isDense */
            isDense?: (boolean|null);

            /** OculiiPointCloud point */
            point?: (apollo.drivers.IOculiiPointXYZIV[]|null);

            /** OculiiPointCloud measurementTime */
            measurementTime?: (number|null);

            /** OculiiPointCloud width */
            width?: (number|null);

            /** OculiiPointCloud height */
            height?: (number|null);

            /** OculiiPointCloud packetId */
            packetId?: (number|Long|null);

            /** OculiiPointCloud egoSpeed */
            egoSpeed?: (number|null);

            /** OculiiPointCloud egoAngle */
            egoAngle?: (number|null);

            /** OculiiPointCloud detectionSize */
            detectionSize?: (number|null);

            /** OculiiPointCloud trackSize */
            trackSize?: (number|null);

            /** OculiiPointCloud rawPointclouds */
            rawPointclouds?: (apollo.drivers.IOculiiRawPointcloud[]|null);

            /** OculiiPointCloud tracks */
            tracks?: (apollo.drivers.IOculiiTrackTarget[]|null);
        }

        /** Represents an OculiiPointCloud. */
        class OculiiPointCloud implements IOculiiPointCloud {

            /**
             * Constructs a new OculiiPointCloud.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IOculiiPointCloud);

            /** OculiiPointCloud header. */
            public header?: (apollo.common.IHeader|null);

            /** OculiiPointCloud frameId. */
            public frameId: string;

            /** OculiiPointCloud isDense. */
            public isDense: boolean;

            /** OculiiPointCloud point. */
            public point: apollo.drivers.IOculiiPointXYZIV[];

            /** OculiiPointCloud measurementTime. */
            public measurementTime: number;

            /** OculiiPointCloud width. */
            public width: number;

            /** OculiiPointCloud height. */
            public height: number;

            /** OculiiPointCloud packetId. */
            public packetId: (number|Long);

            /** OculiiPointCloud egoSpeed. */
            public egoSpeed: number;

            /** OculiiPointCloud egoAngle. */
            public egoAngle: number;

            /** OculiiPointCloud detectionSize. */
            public detectionSize: number;

            /** OculiiPointCloud trackSize. */
            public trackSize: number;

            /** OculiiPointCloud rawPointclouds. */
            public rawPointclouds: apollo.drivers.IOculiiRawPointcloud[];

            /** OculiiPointCloud tracks. */
            public tracks: apollo.drivers.IOculiiTrackTarget[];

            /**
             * Creates a new OculiiPointCloud instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OculiiPointCloud instance
             */
            public static create(properties?: apollo.drivers.IOculiiPointCloud): apollo.drivers.OculiiPointCloud;

            /**
             * Encodes the specified OculiiPointCloud message. Does not implicitly {@link apollo.drivers.OculiiPointCloud.verify|verify} messages.
             * @param message OculiiPointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IOculiiPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OculiiPointCloud message, length delimited. Does not implicitly {@link apollo.drivers.OculiiPointCloud.verify|verify} messages.
             * @param message OculiiPointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IOculiiPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OculiiPointCloud message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OculiiPointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.OculiiPointCloud;

            /**
             * Decodes an OculiiPointCloud message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OculiiPointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.OculiiPointCloud;

            /**
             * Verifies an OculiiPointCloud message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OculiiPointCloud message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OculiiPointCloud
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.OculiiPointCloud;

            /**
             * Creates a plain object from an OculiiPointCloud message. Also converts values to other types if specified.
             * @param message OculiiPointCloud
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.OculiiPointCloud, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OculiiPointCloud to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for OculiiPointCloud
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PointXYZIT. */
        interface IPointXYZIT {

            /** PointXYZIT x */
            x?: (number|null);

            /** PointXYZIT y */
            y?: (number|null);

            /** PointXYZIT z */
            z?: (number|null);

            /** PointXYZIT intensity */
            intensity?: (number|null);

            /** PointXYZIT timestamp */
            timestamp?: (number|Long|null);
        }

        /** Represents a PointXYZIT. */
        class PointXYZIT implements IPointXYZIT {

            /**
             * Constructs a new PointXYZIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IPointXYZIT);

            /** PointXYZIT x. */
            public x: number;

            /** PointXYZIT y. */
            public y: number;

            /** PointXYZIT z. */
            public z: number;

            /** PointXYZIT intensity. */
            public intensity: number;

            /** PointXYZIT timestamp. */
            public timestamp: (number|Long);

            /**
             * Creates a new PointXYZIT instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PointXYZIT instance
             */
            public static create(properties?: apollo.drivers.IPointXYZIT): apollo.drivers.PointXYZIT;

            /**
             * Encodes the specified PointXYZIT message. Does not implicitly {@link apollo.drivers.PointXYZIT.verify|verify} messages.
             * @param message PointXYZIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IPointXYZIT, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PointXYZIT message, length delimited. Does not implicitly {@link apollo.drivers.PointXYZIT.verify|verify} messages.
             * @param message PointXYZIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IPointXYZIT, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PointXYZIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PointXYZIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.PointXYZIT;

            /**
             * Decodes a PointXYZIT message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PointXYZIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.PointXYZIT;

            /**
             * Verifies a PointXYZIT message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PointXYZIT message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PointXYZIT
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.PointXYZIT;

            /**
             * Creates a plain object from a PointXYZIT message. Also converts values to other types if specified.
             * @param message PointXYZIT
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.PointXYZIT, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PointXYZIT to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PointXYZIT
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PointCloud. */
        interface IPointCloud {

            /** PointCloud header */
            header?: (apollo.common.IHeader|null);

            /** PointCloud frameId */
            frameId?: (string|null);

            /** PointCloud isDense */
            isDense?: (boolean|null);

            /** PointCloud point */
            point?: (apollo.drivers.IPointXYZIT[]|null);

            /** PointCloud measurementTime */
            measurementTime?: (number|null);

            /** PointCloud width */
            width?: (number|null);

            /** PointCloud height */
            height?: (number|null);
        }

        /** Represents a PointCloud. */
        class PointCloud implements IPointCloud {

            /**
             * Constructs a new PointCloud.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IPointCloud);

            /** PointCloud header. */
            public header?: (apollo.common.IHeader|null);

            /** PointCloud frameId. */
            public frameId: string;

            /** PointCloud isDense. */
            public isDense: boolean;

            /** PointCloud point. */
            public point: apollo.drivers.IPointXYZIT[];

            /** PointCloud measurementTime. */
            public measurementTime: number;

            /** PointCloud width. */
            public width: number;

            /** PointCloud height. */
            public height: number;

            /**
             * Creates a new PointCloud instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PointCloud instance
             */
            public static create(properties?: apollo.drivers.IPointCloud): apollo.drivers.PointCloud;

            /**
             * Encodes the specified PointCloud message. Does not implicitly {@link apollo.drivers.PointCloud.verify|verify} messages.
             * @param message PointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PointCloud message, length delimited. Does not implicitly {@link apollo.drivers.PointCloud.verify|verify} messages.
             * @param message PointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PointCloud message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.PointCloud;

            /**
             * Decodes a PointCloud message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.PointCloud;

            /**
             * Verifies a PointCloud message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PointCloud message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PointCloud
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.PointCloud;

            /**
             * Creates a plain object from a PointCloud message. Also converts values to other types if specified.
             * @param message PointCloud
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.PointCloud, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PointCloud to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PointCloud
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RacobitClusterListStatus_600. */
        interface IRacobitClusterListStatus_600 {

            /** RacobitClusterListStatus_600 near */
            near?: (number|null);

            /** RacobitClusterListStatus_600 far */
            far?: (number|null);

            /** RacobitClusterListStatus_600 measCounter */
            measCounter?: (number|null);

            /** RacobitClusterListStatus_600 interfaceVersion */
            interfaceVersion?: (number|null);
        }

        /** Represents a RacobitClusterListStatus_600. */
        class RacobitClusterListStatus_600 implements IRacobitClusterListStatus_600 {

            /**
             * Constructs a new RacobitClusterListStatus_600.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRacobitClusterListStatus_600);

            /** RacobitClusterListStatus_600 near. */
            public near: number;

            /** RacobitClusterListStatus_600 far. */
            public far: number;

            /** RacobitClusterListStatus_600 measCounter. */
            public measCounter: number;

            /** RacobitClusterListStatus_600 interfaceVersion. */
            public interfaceVersion: number;

            /**
             * Creates a new RacobitClusterListStatus_600 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RacobitClusterListStatus_600 instance
             */
            public static create(properties?: apollo.drivers.IRacobitClusterListStatus_600): apollo.drivers.RacobitClusterListStatus_600;

            /**
             * Encodes the specified RacobitClusterListStatus_600 message. Does not implicitly {@link apollo.drivers.RacobitClusterListStatus_600.verify|verify} messages.
             * @param message RacobitClusterListStatus_600 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRacobitClusterListStatus_600, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RacobitClusterListStatus_600 message, length delimited. Does not implicitly {@link apollo.drivers.RacobitClusterListStatus_600.verify|verify} messages.
             * @param message RacobitClusterListStatus_600 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRacobitClusterListStatus_600, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RacobitClusterListStatus_600 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RacobitClusterListStatus_600
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RacobitClusterListStatus_600;

            /**
             * Decodes a RacobitClusterListStatus_600 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RacobitClusterListStatus_600
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RacobitClusterListStatus_600;

            /**
             * Verifies a RacobitClusterListStatus_600 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RacobitClusterListStatus_600 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RacobitClusterListStatus_600
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RacobitClusterListStatus_600;

            /**
             * Creates a plain object from a RacobitClusterListStatus_600 message. Also converts values to other types if specified.
             * @param message RacobitClusterListStatus_600
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RacobitClusterListStatus_600, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RacobitClusterListStatus_600 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RacobitClusterListStatus_600
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RacobitObjectListStatus_60A. */
        interface IRacobitObjectListStatus_60A {

            /** RacobitObjectListStatus_60A nofObjects */
            nofObjects?: (number|null);

            /** RacobitObjectListStatus_60A measCounter */
            measCounter?: (number|null);

            /** RacobitObjectListStatus_60A interfaceVersion */
            interfaceVersion?: (number|null);
        }

        /** Represents a RacobitObjectListStatus_60A. */
        class RacobitObjectListStatus_60A implements IRacobitObjectListStatus_60A {

            /**
             * Constructs a new RacobitObjectListStatus_60A.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRacobitObjectListStatus_60A);

            /** RacobitObjectListStatus_60A nofObjects. */
            public nofObjects: number;

            /** RacobitObjectListStatus_60A measCounter. */
            public measCounter: number;

            /** RacobitObjectListStatus_60A interfaceVersion. */
            public interfaceVersion: number;

            /**
             * Creates a new RacobitObjectListStatus_60A instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RacobitObjectListStatus_60A instance
             */
            public static create(properties?: apollo.drivers.IRacobitObjectListStatus_60A): apollo.drivers.RacobitObjectListStatus_60A;

            /**
             * Encodes the specified RacobitObjectListStatus_60A message. Does not implicitly {@link apollo.drivers.RacobitObjectListStatus_60A.verify|verify} messages.
             * @param message RacobitObjectListStatus_60A message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRacobitObjectListStatus_60A, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RacobitObjectListStatus_60A message, length delimited. Does not implicitly {@link apollo.drivers.RacobitObjectListStatus_60A.verify|verify} messages.
             * @param message RacobitObjectListStatus_60A message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRacobitObjectListStatus_60A, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RacobitObjectListStatus_60A message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RacobitObjectListStatus_60A
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RacobitObjectListStatus_60A;

            /**
             * Decodes a RacobitObjectListStatus_60A message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RacobitObjectListStatus_60A
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RacobitObjectListStatus_60A;

            /**
             * Verifies a RacobitObjectListStatus_60A message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RacobitObjectListStatus_60A message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RacobitObjectListStatus_60A
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RacobitObjectListStatus_60A;

            /**
             * Creates a plain object from a RacobitObjectListStatus_60A message. Also converts values to other types if specified.
             * @param message RacobitObjectListStatus_60A
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RacobitObjectListStatus_60A, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RacobitObjectListStatus_60A to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RacobitObjectListStatus_60A
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RacobitRadarState_201. */
        interface IRacobitRadarState_201 {

            /** RacobitRadarState_201 maxDistance */
            maxDistance?: (number|null);

            /** RacobitRadarState_201 radarPower */
            radarPower?: (number|null);

            /** RacobitRadarState_201 outputType */
            outputType?: (apollo.drivers.RacobitRadarState_201.OutputType|null);

            /** RacobitRadarState_201 rcsThreshold */
            rcsThreshold?: (apollo.drivers.RacobitRadarState_201.RcsThreshold|null);

            /** RacobitRadarState_201 sendQuality */
            sendQuality?: (boolean|null);

            /** RacobitRadarState_201 sendExtInfo */
            sendExtInfo?: (boolean|null);
        }

        /** Represents a RacobitRadarState_201. */
        class RacobitRadarState_201 implements IRacobitRadarState_201 {

            /**
             * Constructs a new RacobitRadarState_201.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRacobitRadarState_201);

            /** RacobitRadarState_201 maxDistance. */
            public maxDistance: number;

            /** RacobitRadarState_201 radarPower. */
            public radarPower: number;

            /** RacobitRadarState_201 outputType. */
            public outputType: apollo.drivers.RacobitRadarState_201.OutputType;

            /** RacobitRadarState_201 rcsThreshold. */
            public rcsThreshold: apollo.drivers.RacobitRadarState_201.RcsThreshold;

            /** RacobitRadarState_201 sendQuality. */
            public sendQuality: boolean;

            /** RacobitRadarState_201 sendExtInfo. */
            public sendExtInfo: boolean;

            /**
             * Creates a new RacobitRadarState_201 instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RacobitRadarState_201 instance
             */
            public static create(properties?: apollo.drivers.IRacobitRadarState_201): apollo.drivers.RacobitRadarState_201;

            /**
             * Encodes the specified RacobitRadarState_201 message. Does not implicitly {@link apollo.drivers.RacobitRadarState_201.verify|verify} messages.
             * @param message RacobitRadarState_201 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRacobitRadarState_201, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RacobitRadarState_201 message, length delimited. Does not implicitly {@link apollo.drivers.RacobitRadarState_201.verify|verify} messages.
             * @param message RacobitRadarState_201 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRacobitRadarState_201, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RacobitRadarState_201 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RacobitRadarState_201
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RacobitRadarState_201;

            /**
             * Decodes a RacobitRadarState_201 message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RacobitRadarState_201
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RacobitRadarState_201;

            /**
             * Verifies a RacobitRadarState_201 message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RacobitRadarState_201 message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RacobitRadarState_201
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RacobitRadarState_201;

            /**
             * Creates a plain object from a RacobitRadarState_201 message. Also converts values to other types if specified.
             * @param message RacobitRadarState_201
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RacobitRadarState_201, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RacobitRadarState_201 to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RacobitRadarState_201
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace RacobitRadarState_201 {

            /** OutputType enum. */
            enum OutputType {
                OUTPUT_TYPE_NONE = 0,
                OUTPUT_TYPE_OBJECTS = 1,
                OUTPUT_TYPE_CLUSTERS = 2,
                OUTPUT_TYPE_ERROR = 3
            }

            /** RcsThreshold enum. */
            enum RcsThreshold {
                RCS_THRESHOLD_STANDARD = 0,
                RCS_THRESHOLD_HIGH_SENSITIVITY = 1,
                RCS_THRESHOLD_ERROR = 2
            }
        }

        /** Properties of a RacobitRadarObs. */
        interface IRacobitRadarObs {

            /** RacobitRadarObs header */
            header?: (apollo.common.IHeader|null);

            /** RacobitRadarObs clusterortrack */
            clusterortrack?: (boolean|null);

            /** RacobitRadarObs obstacleId */
            obstacleId?: (number|null);

            /** RacobitRadarObs longitudeDist */
            longitudeDist?: (number|null);

            /** RacobitRadarObs lateralDist */
            lateralDist?: (number|null);

            /** RacobitRadarObs longitudeVel */
            longitudeVel?: (number|null);

            /** RacobitRadarObs lateralVel */
            lateralVel?: (number|null);

            /** RacobitRadarObs rcs */
            rcs?: (number|null);

            /** RacobitRadarObs dynprop */
            dynprop?: (number|null);

            /** RacobitRadarObs longitudeDistRms */
            longitudeDistRms?: (number|null);

            /** RacobitRadarObs lateralDistRms */
            lateralDistRms?: (number|null);

            /** RacobitRadarObs longitudeVelRms */
            longitudeVelRms?: (number|null);

            /** RacobitRadarObs lateralVelRms */
            lateralVelRms?: (number|null);

            /** RacobitRadarObs probexist */
            probexist?: (number|null);

            /** RacobitRadarObs measState */
            measState?: (number|null);

            /** RacobitRadarObs longitudeAccel */
            longitudeAccel?: (number|null);

            /** RacobitRadarObs lateralAccel */
            lateralAccel?: (number|null);

            /** RacobitRadarObs oritationAngle */
            oritationAngle?: (number|null);

            /** RacobitRadarObs longitudeAccelRms */
            longitudeAccelRms?: (number|null);

            /** RacobitRadarObs lateralAccelRms */
            lateralAccelRms?: (number|null);

            /** RacobitRadarObs oritationAngleRms */
            oritationAngleRms?: (number|null);

            /** RacobitRadarObs length */
            length?: (number|null);

            /** RacobitRadarObs width */
            width?: (number|null);

            /** RacobitRadarObs obstacleClass */
            obstacleClass?: (number|null);
        }

        /** Represents a RacobitRadarObs. */
        class RacobitRadarObs implements IRacobitRadarObs {

            /**
             * Constructs a new RacobitRadarObs.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRacobitRadarObs);

            /** RacobitRadarObs header. */
            public header?: (apollo.common.IHeader|null);

            /** RacobitRadarObs clusterortrack. */
            public clusterortrack: boolean;

            /** RacobitRadarObs obstacleId. */
            public obstacleId: number;

            /** RacobitRadarObs longitudeDist. */
            public longitudeDist: number;

            /** RacobitRadarObs lateralDist. */
            public lateralDist: number;

            /** RacobitRadarObs longitudeVel. */
            public longitudeVel: number;

            /** RacobitRadarObs lateralVel. */
            public lateralVel: number;

            /** RacobitRadarObs rcs. */
            public rcs: number;

            /** RacobitRadarObs dynprop. */
            public dynprop: number;

            /** RacobitRadarObs longitudeDistRms. */
            public longitudeDistRms: number;

            /** RacobitRadarObs lateralDistRms. */
            public lateralDistRms: number;

            /** RacobitRadarObs longitudeVelRms. */
            public longitudeVelRms: number;

            /** RacobitRadarObs lateralVelRms. */
            public lateralVelRms: number;

            /** RacobitRadarObs probexist. */
            public probexist: number;

            /** RacobitRadarObs measState. */
            public measState: number;

            /** RacobitRadarObs longitudeAccel. */
            public longitudeAccel: number;

            /** RacobitRadarObs lateralAccel. */
            public lateralAccel: number;

            /** RacobitRadarObs oritationAngle. */
            public oritationAngle: number;

            /** RacobitRadarObs longitudeAccelRms. */
            public longitudeAccelRms: number;

            /** RacobitRadarObs lateralAccelRms. */
            public lateralAccelRms: number;

            /** RacobitRadarObs oritationAngleRms. */
            public oritationAngleRms: number;

            /** RacobitRadarObs length. */
            public length: number;

            /** RacobitRadarObs width. */
            public width: number;

            /** RacobitRadarObs obstacleClass. */
            public obstacleClass: number;

            /**
             * Creates a new RacobitRadarObs instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RacobitRadarObs instance
             */
            public static create(properties?: apollo.drivers.IRacobitRadarObs): apollo.drivers.RacobitRadarObs;

            /**
             * Encodes the specified RacobitRadarObs message. Does not implicitly {@link apollo.drivers.RacobitRadarObs.verify|verify} messages.
             * @param message RacobitRadarObs message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRacobitRadarObs, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RacobitRadarObs message, length delimited. Does not implicitly {@link apollo.drivers.RacobitRadarObs.verify|verify} messages.
             * @param message RacobitRadarObs message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRacobitRadarObs, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RacobitRadarObs message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RacobitRadarObs
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RacobitRadarObs;

            /**
             * Decodes a RacobitRadarObs message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RacobitRadarObs
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RacobitRadarObs;

            /**
             * Verifies a RacobitRadarObs message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RacobitRadarObs message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RacobitRadarObs
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RacobitRadarObs;

            /**
             * Creates a plain object from a RacobitRadarObs message. Also converts values to other types if specified.
             * @param message RacobitRadarObs
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RacobitRadarObs, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RacobitRadarObs to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RacobitRadarObs
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RacobitRadar. */
        interface IRacobitRadar {

            /** RacobitRadar header */
            header?: (apollo.common.IHeader|null);

            /** RacobitRadar contiobs */
            contiobs?: (apollo.drivers.IRacobitRadarObs[]|null);

            /** RacobitRadar radarState */
            radarState?: (apollo.drivers.IRacobitRadarState_201|null);

            /** RacobitRadar clusterListStatus */
            clusterListStatus?: (apollo.drivers.IRacobitClusterListStatus_600|null);

            /** RacobitRadar objectListStatus */
            objectListStatus?: (apollo.drivers.IRacobitObjectListStatus_60A|null);
        }

        /** Represents a RacobitRadar. */
        class RacobitRadar implements IRacobitRadar {

            /**
             * Constructs a new RacobitRadar.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRacobitRadar);

            /** RacobitRadar header. */
            public header?: (apollo.common.IHeader|null);

            /** RacobitRadar contiobs. */
            public contiobs: apollo.drivers.IRacobitRadarObs[];

            /** RacobitRadar radarState. */
            public radarState?: (apollo.drivers.IRacobitRadarState_201|null);

            /** RacobitRadar clusterListStatus. */
            public clusterListStatus?: (apollo.drivers.IRacobitClusterListStatus_600|null);

            /** RacobitRadar objectListStatus. */
            public objectListStatus?: (apollo.drivers.IRacobitObjectListStatus_60A|null);

            /**
             * Creates a new RacobitRadar instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RacobitRadar instance
             */
            public static create(properties?: apollo.drivers.IRacobitRadar): apollo.drivers.RacobitRadar;

            /**
             * Encodes the specified RacobitRadar message. Does not implicitly {@link apollo.drivers.RacobitRadar.verify|verify} messages.
             * @param message RacobitRadar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRacobitRadar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RacobitRadar message, length delimited. Does not implicitly {@link apollo.drivers.RacobitRadar.verify|verify} messages.
             * @param message RacobitRadar message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRacobitRadar, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RacobitRadar message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RacobitRadar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RacobitRadar;

            /**
             * Decodes a RacobitRadar message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RacobitRadar
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RacobitRadar;

            /**
             * Verifies a RacobitRadar message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RacobitRadar message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RacobitRadar
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RacobitRadar;

            /**
             * Creates a plain object from a RacobitRadar message. Also converts values to other types if specified.
             * @param message RacobitRadar
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RacobitRadar, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RacobitRadar to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RacobitRadar
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RadarObstacle. */
        interface IRadarObstacle {

            /** RadarObstacle id */
            id?: (number|null);

            /** RadarObstacle relativePosition */
            relativePosition?: (apollo.common.IPoint2D|null);

            /** RadarObstacle relativeVelocity */
            relativeVelocity?: (apollo.common.IPoint2D|null);

            /** RadarObstacle rcs */
            rcs?: (number|null);

            /** RadarObstacle movingStatus */
            movingStatus?: (apollo.drivers.RadarObstacle.MovingStatus|null);

            /** RadarObstacle width */
            width?: (number|null);

            /** RadarObstacle length */
            length?: (number|null);

            /** RadarObstacle height */
            height?: (number|null);

            /** RadarObstacle theta */
            theta?: (number|null);

            /** RadarObstacle absolutePosition */
            absolutePosition?: (apollo.common.IPoint2D|null);

            /** RadarObstacle absoluteVelocity */
            absoluteVelocity?: (apollo.common.IPoint2D|null);

            /** RadarObstacle count */
            count?: (number|null);

            /** RadarObstacle movingFramesCount */
            movingFramesCount?: (number|null);

            /** RadarObstacle status */
            status?: (apollo.drivers.RadarObstacle.Status|null);
        }

        /** Represents a RadarObstacle. */
        class RadarObstacle implements IRadarObstacle {

            /**
             * Constructs a new RadarObstacle.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRadarObstacle);

            /** RadarObstacle id. */
            public id: number;

            /** RadarObstacle relativePosition. */
            public relativePosition?: (apollo.common.IPoint2D|null);

            /** RadarObstacle relativeVelocity. */
            public relativeVelocity?: (apollo.common.IPoint2D|null);

            /** RadarObstacle rcs. */
            public rcs: number;

            /** RadarObstacle movingStatus. */
            public movingStatus: apollo.drivers.RadarObstacle.MovingStatus;

            /** RadarObstacle width. */
            public width: number;

            /** RadarObstacle length. */
            public length: number;

            /** RadarObstacle height. */
            public height: number;

            /** RadarObstacle theta. */
            public theta: number;

            /** RadarObstacle absolutePosition. */
            public absolutePosition?: (apollo.common.IPoint2D|null);

            /** RadarObstacle absoluteVelocity. */
            public absoluteVelocity?: (apollo.common.IPoint2D|null);

            /** RadarObstacle count. */
            public count: number;

            /** RadarObstacle movingFramesCount. */
            public movingFramesCount: number;

            /** RadarObstacle status. */
            public status: apollo.drivers.RadarObstacle.Status;

            /**
             * Creates a new RadarObstacle instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RadarObstacle instance
             */
            public static create(properties?: apollo.drivers.IRadarObstacle): apollo.drivers.RadarObstacle;

            /**
             * Encodes the specified RadarObstacle message. Does not implicitly {@link apollo.drivers.RadarObstacle.verify|verify} messages.
             * @param message RadarObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRadarObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RadarObstacle message, length delimited. Does not implicitly {@link apollo.drivers.RadarObstacle.verify|verify} messages.
             * @param message RadarObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRadarObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RadarObstacle message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RadarObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RadarObstacle;

            /**
             * Decodes a RadarObstacle message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RadarObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RadarObstacle;

            /**
             * Verifies a RadarObstacle message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RadarObstacle message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RadarObstacle
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RadarObstacle;

            /**
             * Creates a plain object from a RadarObstacle message. Also converts values to other types if specified.
             * @param message RadarObstacle
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RadarObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RadarObstacle to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RadarObstacle
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace RadarObstacle {

            /** Status enum. */
            enum Status {
                NO_TARGET = 0,
                NEW_TARGET = 1,
                NEW_UPDATED_TARGET = 2,
                UPDATED_TARGET = 3,
                COASTED_TARGET = 4,
                MERGED_TARGET = 5,
                INVALID_COASTED_TARGET = 6,
                NEW_COASTED_TARGET = 7
            }

            /** MovingStatus enum. */
            enum MovingStatus {
                STATIONARY = 0,
                NEARING = 1,
                AWAYING = 2,
                NONE = 3
            }
        }

        /** Properties of a RadarObstacles. */
        interface IRadarObstacles {

            /** RadarObstacles radarObstacle */
            radarObstacle?: ({ [k: string]: apollo.drivers.IRadarObstacle }|null);

            /** RadarObstacles header */
            header?: (apollo.common.IHeader|null);

            /** RadarObstacles errorCode */
            errorCode?: (apollo.common.ErrorCode|null);
        }

        /** Represents a RadarObstacles. */
        class RadarObstacles implements IRadarObstacles {

            /**
             * Constructs a new RadarObstacles.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRadarObstacles);

            /** RadarObstacles radarObstacle. */
            public radarObstacle: { [k: string]: apollo.drivers.IRadarObstacle };

            /** RadarObstacles header. */
            public header?: (apollo.common.IHeader|null);

            /** RadarObstacles errorCode. */
            public errorCode: apollo.common.ErrorCode;

            /**
             * Creates a new RadarObstacles instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RadarObstacles instance
             */
            public static create(properties?: apollo.drivers.IRadarObstacles): apollo.drivers.RadarObstacles;

            /**
             * Encodes the specified RadarObstacles message. Does not implicitly {@link apollo.drivers.RadarObstacles.verify|verify} messages.
             * @param message RadarObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRadarObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RadarObstacles message, length delimited. Does not implicitly {@link apollo.drivers.RadarObstacles.verify|verify} messages.
             * @param message RadarObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRadarObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RadarObstacles message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RadarObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RadarObstacles;

            /**
             * Decodes a RadarObstacles message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RadarObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RadarObstacles;

            /**
             * Verifies a RadarObstacles message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RadarObstacles message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RadarObstacles
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RadarObstacles;

            /**
             * Creates a plain object from a RadarObstacles message. Also converts values to other types if specified.
             * @param message RadarObstacles
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RadarObstacles, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RadarObstacles to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RadarObstacles
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RadarPointXYZVR. */
        interface IRadarPointXYZVR {

            /** RadarPointXYZVR x */
            x?: (number|null);

            /** RadarPointXYZVR y */
            y?: (number|null);

            /** RadarPointXYZVR z */
            z?: (number|null);

            /** RadarPointXYZVR velocity */
            velocity?: (number|null);

            /** RadarPointXYZVR rcs */
            rcs?: (number|null);
        }

        /** Represents a RadarPointXYZVR. */
        class RadarPointXYZVR implements IRadarPointXYZVR {

            /**
             * Constructs a new RadarPointXYZVR.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRadarPointXYZVR);

            /** RadarPointXYZVR x. */
            public x: number;

            /** RadarPointXYZVR y. */
            public y: number;

            /** RadarPointXYZVR z. */
            public z: number;

            /** RadarPointXYZVR velocity. */
            public velocity: number;

            /** RadarPointXYZVR rcs. */
            public rcs: number;

            /**
             * Creates a new RadarPointXYZVR instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RadarPointXYZVR instance
             */
            public static create(properties?: apollo.drivers.IRadarPointXYZVR): apollo.drivers.RadarPointXYZVR;

            /**
             * Encodes the specified RadarPointXYZVR message. Does not implicitly {@link apollo.drivers.RadarPointXYZVR.verify|verify} messages.
             * @param message RadarPointXYZVR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRadarPointXYZVR, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RadarPointXYZVR message, length delimited. Does not implicitly {@link apollo.drivers.RadarPointXYZVR.verify|verify} messages.
             * @param message RadarPointXYZVR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRadarPointXYZVR, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RadarPointXYZVR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RadarPointXYZVR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RadarPointXYZVR;

            /**
             * Decodes a RadarPointXYZVR message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RadarPointXYZVR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RadarPointXYZVR;

            /**
             * Verifies a RadarPointXYZVR message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RadarPointXYZVR message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RadarPointXYZVR
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RadarPointXYZVR;

            /**
             * Creates a plain object from a RadarPointXYZVR message. Also converts values to other types if specified.
             * @param message RadarPointXYZVR
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RadarPointXYZVR, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RadarPointXYZVR to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RadarPointXYZVR
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RadarPointCloud. */
        interface IRadarPointCloud {

            /** RadarPointCloud header */
            header?: (apollo.common.IHeader|null);

            /** RadarPointCloud frameId */
            frameId?: (string|null);

            /** RadarPointCloud isDense */
            isDense?: (boolean|null);

            /** RadarPointCloud point */
            point?: (apollo.drivers.IRadarPointXYZVR[]|null);

            /** RadarPointCloud measurementTime */
            measurementTime?: (number|null);

            /** RadarPointCloud width */
            width?: (number|null);

            /** RadarPointCloud height */
            height?: (number|null);
        }

        /** Represents a RadarPointCloud. */
        class RadarPointCloud implements IRadarPointCloud {

            /**
             * Constructs a new RadarPointCloud.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IRadarPointCloud);

            /** RadarPointCloud header. */
            public header?: (apollo.common.IHeader|null);

            /** RadarPointCloud frameId. */
            public frameId: string;

            /** RadarPointCloud isDense. */
            public isDense: boolean;

            /** RadarPointCloud point. */
            public point: apollo.drivers.IRadarPointXYZVR[];

            /** RadarPointCloud measurementTime. */
            public measurementTime: number;

            /** RadarPointCloud width. */
            public width: number;

            /** RadarPointCloud height. */
            public height: number;

            /**
             * Creates a new RadarPointCloud instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RadarPointCloud instance
             */
            public static create(properties?: apollo.drivers.IRadarPointCloud): apollo.drivers.RadarPointCloud;

            /**
             * Encodes the specified RadarPointCloud message. Does not implicitly {@link apollo.drivers.RadarPointCloud.verify|verify} messages.
             * @param message RadarPointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IRadarPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RadarPointCloud message, length delimited. Does not implicitly {@link apollo.drivers.RadarPointCloud.verify|verify} messages.
             * @param message RadarPointCloud message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IRadarPointCloud, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RadarPointCloud message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RadarPointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.RadarPointCloud;

            /**
             * Decodes a RadarPointCloud message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RadarPointCloud
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.RadarPointCloud;

            /**
             * Verifies a RadarPointCloud message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RadarPointCloud message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RadarPointCloud
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.RadarPointCloud;

            /**
             * Creates a plain object from a RadarPointCloud message. Also converts values to other types if specified.
             * @param message RadarPointCloud
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.RadarPointCloud, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RadarPointCloud to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RadarPointCloud
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** PixelFormat enum. */
        enum PixelFormat {
            RGB8 = 1001,
            RGBA8 = 1002,
            RGB16 = 1003,
            RGBA16 = 1004,
            BGR8 = 1005,
            BGRA8 = 1006,
            BGR16 = 1007,
            BGRA16 = 1008,
            MONO8 = 1009,
            MONO16 = 1010,
            TYPE_8UC1 = 2001,
            TYPE_8UC2 = 2002,
            TYPE_8UC3 = 2003,
            TYPE_8UC4 = 2004,
            TYPE_8SC1 = 2005,
            TYPE_8SC2 = 2006,
            TYPE_8SC3 = 2007,
            TYPE_8SC4 = 2008,
            TYPE_16UC1 = 2009,
            TYPE_16UC2 = 2010,
            TYPE_16UC3 = 2011,
            TYPE_16UC4 = 2012,
            TYPE_16SC1 = 2013,
            TYPE_16SC2 = 2014,
            TYPE_16SC3 = 2015,
            TYPE_16SC4 = 2016,
            TYPE_32SC1 = 2017,
            TYPE_32SC2 = 2018,
            TYPE_32SC3 = 2019,
            TYPE_32SC4 = 2020,
            TYPE_32FC1 = 2021,
            TYPE_32FC2 = 2022,
            TYPE_32FC3 = 2023,
            TYPE_32FC4 = 2024,
            TYPE_64FC1 = 2025,
            TYPE_64FC2 = 2026,
            TYPE_64FC3 = 2027,
            TYPE_64FC4 = 2028,
            BAYER_RGGB8 = 3001,
            BAYER_BGGR8 = 3002,
            BAYER_GBRG8 = 3003,
            BAYER_GRBG8 = 3004,
            BAYER_RGGB16 = 3005,
            BAYER_BGGR16 = 3006,
            BAYER_GBRG16 = 3007,
            BAYER_GRBG16 = 3008,
            YUV422 = 4001
        }

        /** Properties of an Image. */
        interface IImage {

            /** Image header */
            header?: (apollo.common.IHeader|null);

            /** Image frameId */
            frameId?: (string|null);

            /** Image measurementTime */
            measurementTime?: (number|null);

            /** Image height */
            height?: (number|null);

            /** Image width */
            width?: (number|null);

            /** Image encoding */
            encoding?: (string|null);

            /** Image step */
            step?: (number|null);

            /** Image data */
            data?: (Uint8Array|null);
        }

        /** Represents an Image. */
        class Image implements IImage {

            /**
             * Constructs a new Image.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IImage);

            /** Image header. */
            public header?: (apollo.common.IHeader|null);

            /** Image frameId. */
            public frameId: string;

            /** Image measurementTime. */
            public measurementTime: number;

            /** Image height. */
            public height: number;

            /** Image width. */
            public width: number;

            /** Image encoding. */
            public encoding: string;

            /** Image step. */
            public step: number;

            /** Image data. */
            public data: Uint8Array;

            /**
             * Creates a new Image instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Image instance
             */
            public static create(properties?: apollo.drivers.IImage): apollo.drivers.Image;

            /**
             * Encodes the specified Image message. Does not implicitly {@link apollo.drivers.Image.verify|verify} messages.
             * @param message Image message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IImage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Image message, length delimited. Does not implicitly {@link apollo.drivers.Image.verify|verify} messages.
             * @param message Image message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IImage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Image message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Image
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Image;

            /**
             * Decodes an Image message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Image
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Image;

            /**
             * Verifies an Image message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Image message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Image
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Image;

            /**
             * Creates a plain object from an Image message. Also converts values to other types if specified.
             * @param message Image
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Image, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Image to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Image
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CompressedImage. */
        interface ICompressedImage {

            /** CompressedImage header */
            header?: (apollo.common.IHeader|null);

            /** CompressedImage frameId */
            frameId?: (string|null);

            /** CompressedImage format */
            format?: (string|null);

            /** CompressedImage data */
            data?: (Uint8Array|null);

            /** CompressedImage measurementTime */
            measurementTime?: (number|null);

            /** CompressedImage frameType */
            frameType?: (number|null);

            /** CompressedImage width */
            width?: (number|null);

            /** CompressedImage height */
            height?: (number|null);
        }

        /** Represents a CompressedImage. */
        class CompressedImage implements ICompressedImage {

            /**
             * Constructs a new CompressedImage.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ICompressedImage);

            /** CompressedImage header. */
            public header?: (apollo.common.IHeader|null);

            /** CompressedImage frameId. */
            public frameId: string;

            /** CompressedImage format. */
            public format: string;

            /** CompressedImage data. */
            public data: Uint8Array;

            /** CompressedImage measurementTime. */
            public measurementTime: number;

            /** CompressedImage frameType. */
            public frameType: number;

            /** CompressedImage width. */
            public width: number;

            /** CompressedImage height. */
            public height: number;

            /**
             * Creates a new CompressedImage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CompressedImage instance
             */
            public static create(properties?: apollo.drivers.ICompressedImage): apollo.drivers.CompressedImage;

            /**
             * Encodes the specified CompressedImage message. Does not implicitly {@link apollo.drivers.CompressedImage.verify|verify} messages.
             * @param message CompressedImage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ICompressedImage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CompressedImage message, length delimited. Does not implicitly {@link apollo.drivers.CompressedImage.verify|verify} messages.
             * @param message CompressedImage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ICompressedImage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CompressedImage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CompressedImage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.CompressedImage;

            /**
             * Decodes a CompressedImage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CompressedImage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.CompressedImage;

            /**
             * Verifies a CompressedImage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CompressedImage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CompressedImage
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.CompressedImage;

            /**
             * Creates a plain object from a CompressedImage message. Also converts values to other types if specified.
             * @param message CompressedImage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.CompressedImage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CompressedImage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CompressedImage
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** LdwVersions enum. */
        enum LdwVersions {
            LDW_VERSION_C1 = 0,
            LDW_VERSION_C2 = 1,
            LDW_VERSION_FOUR_LANE_C2 = 2
        }

        /** LdwLaneStyle enum. */
        enum LdwLaneStyle {
            LDW_LANE_STYLE_NONE_LANE = 0,
            LDW_LANE_STYLE_PREDICT_LANE = 1,
            LDW_LANE_STYLE_BROKEN_LANE = 2,
            LDW_LANE_STYLE_SOLID_LANE = 3,
            LDW_LANE_STYLE_DOUBLE_BROKEN_LANE = 4,
            LDW_LANE_STYLE_DOUBLE_SOLID_LANE = 5,
            LDW_LANE_STYLE_TRIPLE_LANE = 6
        }

        /** LdwSteerStatus enum. */
        enum LdwSteerStatus {
            LDW_NORMAL_STEER = 0,
            LDW_STEER_ON_LEFT__LANE = 1,
            LDW_STEER_ON_RIGHT_LANE = 2,
            LDW_STEER_WARNING_LEFT_ = 3,
            LDW_STEER_WARNING_RIGHT = 4
        }

        /** LdwSoftStatus enum. */
        enum LdwSoftStatus {
            LDW_SOFT_DETECTION = 0,
            LDW_SOFT_SELF_LEARNING = 1,
            LDW_SOFT_MANUAL_LEARNING_MODE0 = 2,
            LDW_SOFT_MANUAL_LEARNING_MODE1 = 3
        }

        /** LdwWarningGrade enum. */
        enum LdwWarningGrade {
            LDW_WARNING_LOW = 0,
            LDW_WARNING_NORMAL = 1,
            LDW_WARNING_HIGHT = 2
        }

        /** Properties of a LdwLaneBoundary. */
        interface ILdwLaneBoundary {

            /** LdwLaneBoundary degree */
            degree?: (number|null);

            /** LdwLaneBoundary c0Position */
            c0Position?: (number|null);

            /** LdwLaneBoundary c1HeadingAngle */
            c1HeadingAngle?: (number|null);

            /** LdwLaneBoundary c2Curvature */
            c2Curvature?: (number|null);

            /** LdwLaneBoundary c3CurvatureDerivative */
            c3CurvatureDerivative?: (number|null);
        }

        /** Represents a LdwLaneBoundary. */
        class LdwLaneBoundary implements ILdwLaneBoundary {

            /**
             * Constructs a new LdwLaneBoundary.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILdwLaneBoundary);

            /** LdwLaneBoundary degree. */
            public degree: number;

            /** LdwLaneBoundary c0Position. */
            public c0Position: number;

            /** LdwLaneBoundary c1HeadingAngle. */
            public c1HeadingAngle: number;

            /** LdwLaneBoundary c2Curvature. */
            public c2Curvature: number;

            /** LdwLaneBoundary c3CurvatureDerivative. */
            public c3CurvatureDerivative: number;

            /**
             * Creates a new LdwLaneBoundary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LdwLaneBoundary instance
             */
            public static create(properties?: apollo.drivers.ILdwLaneBoundary): apollo.drivers.LdwLaneBoundary;

            /**
             * Encodes the specified LdwLaneBoundary message. Does not implicitly {@link apollo.drivers.LdwLaneBoundary.verify|verify} messages.
             * @param message LdwLaneBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILdwLaneBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LdwLaneBoundary message, length delimited. Does not implicitly {@link apollo.drivers.LdwLaneBoundary.verify|verify} messages.
             * @param message LdwLaneBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILdwLaneBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LdwLaneBoundary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LdwLaneBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.LdwLaneBoundary;

            /**
             * Decodes a LdwLaneBoundary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LdwLaneBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.LdwLaneBoundary;

            /**
             * Verifies a LdwLaneBoundary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LdwLaneBoundary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LdwLaneBoundary
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.LdwLaneBoundary;

            /**
             * Creates a plain object from a LdwLaneBoundary message. Also converts values to other types if specified.
             * @param message LdwLaneBoundary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.LdwLaneBoundary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LdwLaneBoundary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LdwLaneBoundary
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LdwLane. */
        interface ILdwLane {

            /** LdwLane width */
            width?: (number|null);

            /** LdwLane quality */
            quality?: (number|null);

            /** LdwLane style */
            style?: (apollo.drivers.LdwLaneStyle|null);

            /** LdwLane leftBoundary */
            leftBoundary?: (apollo.drivers.ILdwLaneBoundary|null);

            /** LdwLane rightBoundary */
            rightBoundary?: (apollo.drivers.ILdwLaneBoundary|null);
        }

        /** Represents a LdwLane. */
        class LdwLane implements ILdwLane {

            /**
             * Constructs a new LdwLane.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILdwLane);

            /** LdwLane width. */
            public width: number;

            /** LdwLane quality. */
            public quality: number;

            /** LdwLane style. */
            public style: apollo.drivers.LdwLaneStyle;

            /** LdwLane leftBoundary. */
            public leftBoundary?: (apollo.drivers.ILdwLaneBoundary|null);

            /** LdwLane rightBoundary. */
            public rightBoundary?: (apollo.drivers.ILdwLaneBoundary|null);

            /**
             * Creates a new LdwLane instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LdwLane instance
             */
            public static create(properties?: apollo.drivers.ILdwLane): apollo.drivers.LdwLane;

            /**
             * Encodes the specified LdwLane message. Does not implicitly {@link apollo.drivers.LdwLane.verify|verify} messages.
             * @param message LdwLane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILdwLane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LdwLane message, length delimited. Does not implicitly {@link apollo.drivers.LdwLane.verify|verify} messages.
             * @param message LdwLane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILdwLane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LdwLane message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LdwLane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.LdwLane;

            /**
             * Decodes a LdwLane message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LdwLane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.LdwLane;

            /**
             * Verifies a LdwLane message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LdwLane message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LdwLane
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.LdwLane;

            /**
             * Creates a plain object from a LdwLane message. Also converts values to other types if specified.
             * @param message LdwLane
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.LdwLane, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LdwLane to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LdwLane
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LdwRoadway. */
        interface ILdwRoadway {

            /** LdwRoadway width_0 */
            width_0?: (number|null);

            /** LdwRoadway width_1 */
            width_1?: (number|null);

            /** LdwRoadway width_2 */
            width_2?: (number|null);

            /** LdwRoadway isTracking */
            isTracking?: (boolean|null);

            /** LdwRoadway leftLane */
            leftLane?: (apollo.drivers.ILdwLane|null);

            /** LdwRoadway rightLane */
            rightLane?: (apollo.drivers.ILdwLane|null);

            /** LdwRoadway adjLeftLane */
            adjLeftLane?: (apollo.drivers.ILdwLane|null);

            /** LdwRoadway adjRightLane */
            adjRightLane?: (apollo.drivers.ILdwLane|null);
        }

        /** Represents a LdwRoadway. */
        class LdwRoadway implements ILdwRoadway {

            /**
             * Constructs a new LdwRoadway.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILdwRoadway);

            /** LdwRoadway width_0. */
            public width_0: number;

            /** LdwRoadway width_1. */
            public width_1: number;

            /** LdwRoadway width_2. */
            public width_2: number;

            /** LdwRoadway isTracking. */
            public isTracking: boolean;

            /** LdwRoadway leftLane. */
            public leftLane?: (apollo.drivers.ILdwLane|null);

            /** LdwRoadway rightLane. */
            public rightLane?: (apollo.drivers.ILdwLane|null);

            /** LdwRoadway adjLeftLane. */
            public adjLeftLane?: (apollo.drivers.ILdwLane|null);

            /** LdwRoadway adjRightLane. */
            public adjRightLane?: (apollo.drivers.ILdwLane|null);

            /**
             * Creates a new LdwRoadway instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LdwRoadway instance
             */
            public static create(properties?: apollo.drivers.ILdwRoadway): apollo.drivers.LdwRoadway;

            /**
             * Encodes the specified LdwRoadway message. Does not implicitly {@link apollo.drivers.LdwRoadway.verify|verify} messages.
             * @param message LdwRoadway message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILdwRoadway, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LdwRoadway message, length delimited. Does not implicitly {@link apollo.drivers.LdwRoadway.verify|verify} messages.
             * @param message LdwRoadway message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILdwRoadway, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LdwRoadway message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LdwRoadway
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.LdwRoadway;

            /**
             * Decodes a LdwRoadway message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LdwRoadway
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.LdwRoadway;

            /**
             * Verifies a LdwRoadway message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LdwRoadway message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LdwRoadway
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.LdwRoadway;

            /**
             * Creates a plain object from a LdwRoadway message. Also converts values to other types if specified.
             * @param message LdwRoadway
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.LdwRoadway, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LdwRoadway to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LdwRoadway
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LdwLensInfo. */
        interface ILdwLensInfo {

            /** LdwLensInfo xImageFocal */
            xImageFocal?: (number|null);

            /** LdwLensInfo yImageFocal */
            yImageFocal?: (number|null);

            /** LdwLensInfo xratioFocalPixel */
            xratioFocalPixel?: (number|null);

            /** LdwLensInfo yratioFocalPixel */
            yratioFocalPixel?: (number|null);

            /** LdwLensInfo mountingheight */
            mountingheight?: (number|null);

            /** LdwLensInfo mcosrx */
            mcosrx?: (number|null);

            /** LdwLensInfo msinrx */
            msinrx?: (number|null);

            /** LdwLensInfo mcosry */
            mcosry?: (number|null);

            /** LdwLensInfo msinry */
            msinry?: (number|null);
        }

        /** Represents a LdwLensInfo. */
        class LdwLensInfo implements ILdwLensInfo {

            /**
             * Constructs a new LdwLensInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILdwLensInfo);

            /** LdwLensInfo xImageFocal. */
            public xImageFocal: number;

            /** LdwLensInfo yImageFocal. */
            public yImageFocal: number;

            /** LdwLensInfo xratioFocalPixel. */
            public xratioFocalPixel: number;

            /** LdwLensInfo yratioFocalPixel. */
            public yratioFocalPixel: number;

            /** LdwLensInfo mountingheight. */
            public mountingheight: number;

            /** LdwLensInfo mcosrx. */
            public mcosrx: number;

            /** LdwLensInfo msinrx. */
            public msinrx: number;

            /** LdwLensInfo mcosry. */
            public mcosry: number;

            /** LdwLensInfo msinry. */
            public msinry: number;

            /**
             * Creates a new LdwLensInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LdwLensInfo instance
             */
            public static create(properties?: apollo.drivers.ILdwLensInfo): apollo.drivers.LdwLensInfo;

            /**
             * Encodes the specified LdwLensInfo message. Does not implicitly {@link apollo.drivers.LdwLensInfo.verify|verify} messages.
             * @param message LdwLensInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILdwLensInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LdwLensInfo message, length delimited. Does not implicitly {@link apollo.drivers.LdwLensInfo.verify|verify} messages.
             * @param message LdwLensInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILdwLensInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LdwLensInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LdwLensInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.LdwLensInfo;

            /**
             * Decodes a LdwLensInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LdwLensInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.LdwLensInfo;

            /**
             * Verifies a LdwLensInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LdwLensInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LdwLensInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.LdwLensInfo;

            /**
             * Creates a plain object from a LdwLensInfo message. Also converts values to other types if specified.
             * @param message LdwLensInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.LdwLensInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LdwLensInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LdwLensInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LdwDataPacks. */
        interface ILdwDataPacks {

            /** LdwDataPacks roadway */
            roadway?: (apollo.drivers.ILdwRoadway|null);

            /** LdwDataPacks softstatus */
            softstatus?: (apollo.drivers.LdwSoftStatus|null);

            /** LdwDataPacks steerstatus */
            steerstatus?: (apollo.drivers.LdwSteerStatus|null);

            /** LdwDataPacks lens */
            lens?: (apollo.drivers.ILdwLensInfo|null);
        }

        /** Represents a LdwDataPacks. */
        class LdwDataPacks implements ILdwDataPacks {

            /**
             * Constructs a new LdwDataPacks.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ILdwDataPacks);

            /** LdwDataPacks roadway. */
            public roadway?: (apollo.drivers.ILdwRoadway|null);

            /** LdwDataPacks softstatus. */
            public softstatus: apollo.drivers.LdwSoftStatus;

            /** LdwDataPacks steerstatus. */
            public steerstatus: apollo.drivers.LdwSteerStatus;

            /** LdwDataPacks lens. */
            public lens?: (apollo.drivers.ILdwLensInfo|null);

            /**
             * Creates a new LdwDataPacks instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LdwDataPacks instance
             */
            public static create(properties?: apollo.drivers.ILdwDataPacks): apollo.drivers.LdwDataPacks;

            /**
             * Encodes the specified LdwDataPacks message. Does not implicitly {@link apollo.drivers.LdwDataPacks.verify|verify} messages.
             * @param message LdwDataPacks message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ILdwDataPacks, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LdwDataPacks message, length delimited. Does not implicitly {@link apollo.drivers.LdwDataPacks.verify|verify} messages.
             * @param message LdwDataPacks message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ILdwDataPacks, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LdwDataPacks message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LdwDataPacks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.LdwDataPacks;

            /**
             * Decodes a LdwDataPacks message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LdwDataPacks
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.LdwDataPacks;

            /**
             * Verifies a LdwDataPacks message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LdwDataPacks message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LdwDataPacks
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.LdwDataPacks;

            /**
             * Creates a plain object from a LdwDataPacks message. Also converts values to other types if specified.
             * @param message LdwDataPacks
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.LdwDataPacks, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LdwDataPacks to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LdwDataPacks
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an OutputObstacle. */
        interface IOutputObstacle {

            /** OutputObstacle currentspeed */
            currentspeed?: (number|null);

            /** OutputObstacle framerate */
            framerate?: (number|null);

            /** OutputObstacle trackid */
            trackid?: (number|null);

            /** OutputObstacle trackframenum */
            trackframenum?: (number|null);

            /** OutputObstacle statelabel */
            statelabel?: (number|null);

            /** OutputObstacle classlabel */
            classlabel?: (number|null);

            /** OutputObstacle continuouslabel */
            continuouslabel?: (number|null);

            /** OutputObstacle fuzzyestimationvalid */
            fuzzyestimationvalid?: (number|null);

            /** OutputObstacle obstacletype */
            obstacletype?: (apollo.drivers.OutputObstacle.RecognitionType|null);

            /** OutputObstacle avgdisp */
            avgdisp?: (number|null);

            /** OutputObstacle avgdistancez */
            avgdistancez?: (number|null);

            /** OutputObstacle neardistancez */
            neardistancez?: (number|null);

            /** OutputObstacle fardistancez */
            fardistancez?: (number|null);

            /** OutputObstacle real3dleftx */
            real3dleftx?: (number|null);

            /** OutputObstacle real3drightx */
            real3drightx?: (number|null);

            /** OutputObstacle real3dcenterx */
            real3dcenterx?: (number|null);

            /** OutputObstacle real3dupy */
            real3dupy?: (number|null);

            /** OutputObstacle real3dlowy */
            real3dlowy?: (number|null);

            /** OutputObstacle firstpointx */
            firstpointx?: (number|null);

            /** OutputObstacle firstpointy */
            firstpointy?: (number|null);

            /** OutputObstacle secondpointx */
            secondpointx?: (number|null);

            /** OutputObstacle secondpointy */
            secondpointy?: (number|null);

            /** OutputObstacle thirdpointx */
            thirdpointx?: (number|null);

            /** OutputObstacle thirdpointy */
            thirdpointy?: (number|null);

            /** OutputObstacle fourthpointx */
            fourthpointx?: (number|null);

            /** OutputObstacle fourthpointy */
            fourthpointy?: (number|null);

            /** OutputObstacle fuzzyrelativedistancez */
            fuzzyrelativedistancez?: (number|null);

            /** OutputObstacle fuzzyrelativespeedz */
            fuzzyrelativespeedz?: (number|null);

            /** OutputObstacle fuzzycollisiontimez */
            fuzzycollisiontimez?: (number|null);

            /** OutputObstacle fuzzycollisionx */
            fuzzycollisionx?: (number|null);

            /** OutputObstacle fuzzy3dwidth */
            fuzzy3dwidth?: (number|null);

            /** OutputObstacle fuzzy3dcenterx */
            fuzzy3dcenterx?: (number|null);

            /** OutputObstacle fuzzy3dleftx */
            fuzzy3dleftx?: (number|null);

            /** OutputObstacle fuzzy3drightx */
            fuzzy3drightx?: (number|null);

            /** OutputObstacle fuzzy3dheight */
            fuzzy3dheight?: (number|null);

            /** OutputObstacle fuzzy3dupy */
            fuzzy3dupy?: (number|null);

            /** OutputObstacle fuzzy3dlowy */
            fuzzy3dlowy?: (number|null);

            /** OutputObstacle fuzzyrelativespeedcenterx */
            fuzzyrelativespeedcenterx?: (number|null);

            /** OutputObstacle fuzzyrelativespeedleftx */
            fuzzyrelativespeedleftx?: (number|null);

            /** OutputObstacle fuzzyrelativespeedrightx */
            fuzzyrelativespeedrightx?: (number|null);
        }

        /** Represents an OutputObstacle. */
        class OutputObstacle implements IOutputObstacle {

            /**
             * Constructs a new OutputObstacle.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IOutputObstacle);

            /** OutputObstacle currentspeed. */
            public currentspeed: number;

            /** OutputObstacle framerate. */
            public framerate: number;

            /** OutputObstacle trackid. */
            public trackid: number;

            /** OutputObstacle trackframenum. */
            public trackframenum: number;

            /** OutputObstacle statelabel. */
            public statelabel: number;

            /** OutputObstacle classlabel. */
            public classlabel: number;

            /** OutputObstacle continuouslabel. */
            public continuouslabel: number;

            /** OutputObstacle fuzzyestimationvalid. */
            public fuzzyestimationvalid: number;

            /** OutputObstacle obstacletype. */
            public obstacletype: apollo.drivers.OutputObstacle.RecognitionType;

            /** OutputObstacle avgdisp. */
            public avgdisp: number;

            /** OutputObstacle avgdistancez. */
            public avgdistancez: number;

            /** OutputObstacle neardistancez. */
            public neardistancez: number;

            /** OutputObstacle fardistancez. */
            public fardistancez: number;

            /** OutputObstacle real3dleftx. */
            public real3dleftx: number;

            /** OutputObstacle real3drightx. */
            public real3drightx: number;

            /** OutputObstacle real3dcenterx. */
            public real3dcenterx: number;

            /** OutputObstacle real3dupy. */
            public real3dupy: number;

            /** OutputObstacle real3dlowy. */
            public real3dlowy: number;

            /** OutputObstacle firstpointx. */
            public firstpointx: number;

            /** OutputObstacle firstpointy. */
            public firstpointy: number;

            /** OutputObstacle secondpointx. */
            public secondpointx: number;

            /** OutputObstacle secondpointy. */
            public secondpointy: number;

            /** OutputObstacle thirdpointx. */
            public thirdpointx: number;

            /** OutputObstacle thirdpointy. */
            public thirdpointy: number;

            /** OutputObstacle fourthpointx. */
            public fourthpointx: number;

            /** OutputObstacle fourthpointy. */
            public fourthpointy: number;

            /** OutputObstacle fuzzyrelativedistancez. */
            public fuzzyrelativedistancez: number;

            /** OutputObstacle fuzzyrelativespeedz. */
            public fuzzyrelativespeedz: number;

            /** OutputObstacle fuzzycollisiontimez. */
            public fuzzycollisiontimez: number;

            /** OutputObstacle fuzzycollisionx. */
            public fuzzycollisionx: number;

            /** OutputObstacle fuzzy3dwidth. */
            public fuzzy3dwidth: number;

            /** OutputObstacle fuzzy3dcenterx. */
            public fuzzy3dcenterx: number;

            /** OutputObstacle fuzzy3dleftx. */
            public fuzzy3dleftx: number;

            /** OutputObstacle fuzzy3drightx. */
            public fuzzy3drightx: number;

            /** OutputObstacle fuzzy3dheight. */
            public fuzzy3dheight: number;

            /** OutputObstacle fuzzy3dupy. */
            public fuzzy3dupy: number;

            /** OutputObstacle fuzzy3dlowy. */
            public fuzzy3dlowy: number;

            /** OutputObstacle fuzzyrelativespeedcenterx. */
            public fuzzyrelativespeedcenterx: number;

            /** OutputObstacle fuzzyrelativespeedleftx. */
            public fuzzyrelativespeedleftx: number;

            /** OutputObstacle fuzzyrelativespeedrightx. */
            public fuzzyrelativespeedrightx: number;

            /**
             * Creates a new OutputObstacle instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OutputObstacle instance
             */
            public static create(properties?: apollo.drivers.IOutputObstacle): apollo.drivers.OutputObstacle;

            /**
             * Encodes the specified OutputObstacle message. Does not implicitly {@link apollo.drivers.OutputObstacle.verify|verify} messages.
             * @param message OutputObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IOutputObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OutputObstacle message, length delimited. Does not implicitly {@link apollo.drivers.OutputObstacle.verify|verify} messages.
             * @param message OutputObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IOutputObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OutputObstacle message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OutputObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.OutputObstacle;

            /**
             * Decodes an OutputObstacle message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OutputObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.OutputObstacle;

            /**
             * Verifies an OutputObstacle message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OutputObstacle message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OutputObstacle
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.OutputObstacle;

            /**
             * Creates a plain object from an OutputObstacle message. Also converts values to other types if specified.
             * @param message OutputObstacle
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.OutputObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OutputObstacle to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for OutputObstacle
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace OutputObstacle {

            /** RecognitionType enum. */
            enum RecognitionType {
                INVALID = 0,
                VEHICLE = 1,
                PEDESTRIAN = 2,
                CHILD = 3,
                BICYCLE = 4,
                MOTO = 5,
                TRUCK = 6,
                BUS = 7,
                OTHERS = 8,
                ESTIMATED = 9,
                CONTINUOUS = 10
            }
        }

        /** Properties of a SmartereyeObstacles. */
        interface ISmartereyeObstacles {

            /** SmartereyeObstacles header */
            header?: (apollo.common.IHeader|null);

            /** SmartereyeObstacles numObstacles */
            numObstacles?: (number|null);

            /** SmartereyeObstacles outputObstacles */
            outputObstacles?: ({ [k: string]: apollo.drivers.IOutputObstacle }|null);
        }

        /** Represents a SmartereyeObstacles. */
        class SmartereyeObstacles implements ISmartereyeObstacles {

            /**
             * Constructs a new SmartereyeObstacles.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ISmartereyeObstacles);

            /** SmartereyeObstacles header. */
            public header?: (apollo.common.IHeader|null);

            /** SmartereyeObstacles numObstacles. */
            public numObstacles: number;

            /** SmartereyeObstacles outputObstacles. */
            public outputObstacles: { [k: string]: apollo.drivers.IOutputObstacle };

            /**
             * Creates a new SmartereyeObstacles instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SmartereyeObstacles instance
             */
            public static create(properties?: apollo.drivers.ISmartereyeObstacles): apollo.drivers.SmartereyeObstacles;

            /**
             * Encodes the specified SmartereyeObstacles message. Does not implicitly {@link apollo.drivers.SmartereyeObstacles.verify|verify} messages.
             * @param message SmartereyeObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ISmartereyeObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SmartereyeObstacles message, length delimited. Does not implicitly {@link apollo.drivers.SmartereyeObstacles.verify|verify} messages.
             * @param message SmartereyeObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ISmartereyeObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SmartereyeObstacles message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SmartereyeObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.SmartereyeObstacles;

            /**
             * Decodes a SmartereyeObstacles message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SmartereyeObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.SmartereyeObstacles;

            /**
             * Verifies a SmartereyeObstacles message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SmartereyeObstacles message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SmartereyeObstacles
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.SmartereyeObstacles;

            /**
             * Creates a plain object from a SmartereyeObstacles message. Also converts values to other types if specified.
             * @param message SmartereyeObstacles
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.SmartereyeObstacles, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SmartereyeObstacles to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SmartereyeObstacles
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SmartereyeLanemark. */
        interface ISmartereyeLanemark {

            /** SmartereyeLanemark laneRoadData */
            laneRoadData?: (apollo.drivers.ILdwDataPacks|null);
        }

        /** Represents a SmartereyeLanemark. */
        class SmartereyeLanemark implements ISmartereyeLanemark {

            /**
             * Constructs a new SmartereyeLanemark.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.ISmartereyeLanemark);

            /** SmartereyeLanemark laneRoadData. */
            public laneRoadData?: (apollo.drivers.ILdwDataPacks|null);

            /**
             * Creates a new SmartereyeLanemark instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SmartereyeLanemark instance
             */
            public static create(properties?: apollo.drivers.ISmartereyeLanemark): apollo.drivers.SmartereyeLanemark;

            /**
             * Encodes the specified SmartereyeLanemark message. Does not implicitly {@link apollo.drivers.SmartereyeLanemark.verify|verify} messages.
             * @param message SmartereyeLanemark message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.ISmartereyeLanemark, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SmartereyeLanemark message, length delimited. Does not implicitly {@link apollo.drivers.SmartereyeLanemark.verify|verify} messages.
             * @param message SmartereyeLanemark message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.ISmartereyeLanemark, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SmartereyeLanemark message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SmartereyeLanemark
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.SmartereyeLanemark;

            /**
             * Decodes a SmartereyeLanemark message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SmartereyeLanemark
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.SmartereyeLanemark;

            /**
             * Verifies a SmartereyeLanemark message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SmartereyeLanemark message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SmartereyeLanemark
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.SmartereyeLanemark;

            /**
             * Creates a plain object from a SmartereyeLanemark message. Also converts values to other types if specified.
             * @param message SmartereyeLanemark
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.SmartereyeLanemark, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SmartereyeLanemark to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SmartereyeLanemark
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Ultrasonic. */
        interface IUltrasonic {

            /** Ultrasonic header */
            header?: (apollo.common.IHeader|null);

            /** Ultrasonic ranges */
            ranges?: (number[]|null);
        }

        /** Represents an Ultrasonic. */
        class Ultrasonic implements IUltrasonic {

            /**
             * Constructs a new Ultrasonic.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.drivers.IUltrasonic);

            /** Ultrasonic header. */
            public header?: (apollo.common.IHeader|null);

            /** Ultrasonic ranges. */
            public ranges: number[];

            /**
             * Creates a new Ultrasonic instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Ultrasonic instance
             */
            public static create(properties?: apollo.drivers.IUltrasonic): apollo.drivers.Ultrasonic;

            /**
             * Encodes the specified Ultrasonic message. Does not implicitly {@link apollo.drivers.Ultrasonic.verify|verify} messages.
             * @param message Ultrasonic message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.drivers.IUltrasonic, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Ultrasonic message, length delimited. Does not implicitly {@link apollo.drivers.Ultrasonic.verify|verify} messages.
             * @param message Ultrasonic message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.drivers.IUltrasonic, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Ultrasonic message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Ultrasonic
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.drivers.Ultrasonic;

            /**
             * Decodes an Ultrasonic message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Ultrasonic
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.drivers.Ultrasonic;

            /**
             * Verifies an Ultrasonic message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Ultrasonic message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Ultrasonic
             */
            public static fromObject(object: { [k: string]: any }): apollo.drivers.Ultrasonic;

            /**
             * Creates a plain object from an Ultrasonic message. Also converts values to other types if specified.
             * @param message Ultrasonic
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.drivers.Ultrasonic, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Ultrasonic to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Ultrasonic
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace external_command. */
    namespace external_command {

        /** ActionCommandType enum. */
        enum ActionCommandType {
            FOLLOW = 1,
            CHANGE_LEFT = 2,
            CHANGE_RIGHT = 3,
            PULL_OVER = 4,
            STOP = 5,
            START = 6,
            CLEAR_PLANNING = 7,
            SWITCH_TO_MANUAL = 50,
            SWITCH_TO_AUTO = 51,
            VIN_REQ = 52
        }

        /** Properties of an ActionCommand. */
        interface IActionCommand {

            /** ActionCommand header */
            header?: (apollo.common.IHeader|null);

            /** ActionCommand commandId */
            commandId?: (number|Long|null);

            /** ActionCommand command */
            command: apollo.external_command.ActionCommandType;
        }

        /** Represents an ActionCommand. */
        class ActionCommand implements IActionCommand {

            /**
             * Constructs a new ActionCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IActionCommand);

            /** ActionCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** ActionCommand commandId. */
            public commandId: (number|Long);

            /** ActionCommand command. */
            public command: apollo.external_command.ActionCommandType;

            /**
             * Creates a new ActionCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ActionCommand instance
             */
            public static create(properties?: apollo.external_command.IActionCommand): apollo.external_command.ActionCommand;

            /**
             * Encodes the specified ActionCommand message. Does not implicitly {@link apollo.external_command.ActionCommand.verify|verify} messages.
             * @param message ActionCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IActionCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ActionCommand message, length delimited. Does not implicitly {@link apollo.external_command.ActionCommand.verify|verify} messages.
             * @param message ActionCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IActionCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ActionCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ActionCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.ActionCommand;

            /**
             * Decodes an ActionCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ActionCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.ActionCommand;

            /**
             * Verifies an ActionCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ActionCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ActionCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.ActionCommand;

            /**
             * Creates a plain object from an ActionCommand message. Also converts values to other types if specified.
             * @param message ActionCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.ActionCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ActionCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ActionCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ChassisCommand. */
        interface IChassisCommand {

            /** ChassisCommand header */
            header?: (apollo.common.IHeader|null);

            /** ChassisCommand commandId */
            commandId?: (number|Long|null);

            /** ChassisCommand basicSignal */
            basicSignal?: (apollo.common.IVehicleSignal|null);

            /** ChassisCommand customOperation */
            customOperation?: (google.protobuf.IAny|null);
        }

        /** Represents a ChassisCommand. */
        class ChassisCommand implements IChassisCommand {

            /**
             * Constructs a new ChassisCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IChassisCommand);

            /** ChassisCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** ChassisCommand commandId. */
            public commandId: (number|Long);

            /** ChassisCommand basicSignal. */
            public basicSignal?: (apollo.common.IVehicleSignal|null);

            /** ChassisCommand customOperation. */
            public customOperation?: (google.protobuf.IAny|null);

            /**
             * Creates a new ChassisCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChassisCommand instance
             */
            public static create(properties?: apollo.external_command.IChassisCommand): apollo.external_command.ChassisCommand;

            /**
             * Encodes the specified ChassisCommand message. Does not implicitly {@link apollo.external_command.ChassisCommand.verify|verify} messages.
             * @param message ChassisCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IChassisCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChassisCommand message, length delimited. Does not implicitly {@link apollo.external_command.ChassisCommand.verify|verify} messages.
             * @param message ChassisCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IChassisCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChassisCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChassisCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.ChassisCommand;

            /**
             * Decodes a ChassisCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChassisCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.ChassisCommand;

            /**
             * Verifies a ChassisCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChassisCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChassisCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.ChassisCommand;

            /**
             * Creates a plain object from a ChassisCommand message. Also converts values to other types if specified.
             * @param message ChassisCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.ChassisCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChassisCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ChassisCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** CommandStatusType enum. */
        enum CommandStatusType {
            RUNNING = 1,
            FINISHED = 2,
            ERROR = 3,
            UNKNOWN = 4
        }

        /** Properties of a CommandStatusRequest. */
        interface ICommandStatusRequest {

            /** CommandStatusRequest header */
            header?: (apollo.common.IHeader|null);

            /** CommandStatusRequest commandId */
            commandId?: (number|Long|null);
        }

        /** Represents a CommandStatusRequest. */
        class CommandStatusRequest implements ICommandStatusRequest {

            /**
             * Constructs a new CommandStatusRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.ICommandStatusRequest);

            /** CommandStatusRequest header. */
            public header?: (apollo.common.IHeader|null);

            /** CommandStatusRequest commandId. */
            public commandId: (number|Long);

            /**
             * Creates a new CommandStatusRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CommandStatusRequest instance
             */
            public static create(properties?: apollo.external_command.ICommandStatusRequest): apollo.external_command.CommandStatusRequest;

            /**
             * Encodes the specified CommandStatusRequest message. Does not implicitly {@link apollo.external_command.CommandStatusRequest.verify|verify} messages.
             * @param message CommandStatusRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.ICommandStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CommandStatusRequest message, length delimited. Does not implicitly {@link apollo.external_command.CommandStatusRequest.verify|verify} messages.
             * @param message CommandStatusRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.ICommandStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommandStatusRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommandStatusRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.CommandStatusRequest;

            /**
             * Decodes a CommandStatusRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommandStatusRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.CommandStatusRequest;

            /**
             * Verifies a CommandStatusRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommandStatusRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommandStatusRequest
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.CommandStatusRequest;

            /**
             * Creates a plain object from a CommandStatusRequest message. Also converts values to other types if specified.
             * @param message CommandStatusRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.CommandStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommandStatusRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CommandStatusRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CommandStatus. */
        interface ICommandStatus {

            /** CommandStatus header */
            header?: (apollo.common.IHeader|null);

            /** CommandStatus commandId */
            commandId?: (number|Long|null);

            /** CommandStatus status */
            status: apollo.external_command.CommandStatusType;

            /** CommandStatus message */
            message?: (string|null);
        }

        /** Represents a CommandStatus. */
        class CommandStatus implements ICommandStatus {

            /**
             * Constructs a new CommandStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.ICommandStatus);

            /** CommandStatus header. */
            public header?: (apollo.common.IHeader|null);

            /** CommandStatus commandId. */
            public commandId: (number|Long);

            /** CommandStatus status. */
            public status: apollo.external_command.CommandStatusType;

            /** CommandStatus message. */
            public message: string;

            /**
             * Creates a new CommandStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CommandStatus instance
             */
            public static create(properties?: apollo.external_command.ICommandStatus): apollo.external_command.CommandStatus;

            /**
             * Encodes the specified CommandStatus message. Does not implicitly {@link apollo.external_command.CommandStatus.verify|verify} messages.
             * @param message CommandStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.ICommandStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CommandStatus message, length delimited. Does not implicitly {@link apollo.external_command.CommandStatus.verify|verify} messages.
             * @param message CommandStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.ICommandStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommandStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommandStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.CommandStatus;

            /**
             * Decodes a CommandStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommandStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.CommandStatus;

            /**
             * Verifies a CommandStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommandStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommandStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.CommandStatus;

            /**
             * Creates a plain object from a CommandStatus message. Also converts values to other types if specified.
             * @param message CommandStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.CommandStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommandStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CommandStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a FreeSpaceCommand. */
        interface IFreeSpaceCommand {

            /** FreeSpaceCommand header */
            header?: (apollo.common.IHeader|null);

            /** FreeSpaceCommand commandId */
            commandId?: (number|Long|null);

            /** FreeSpaceCommand parkingSpotPose */
            parkingSpotPose: apollo.external_command.IPose;

            /** FreeSpaceCommand nonDrivableRoi */
            nonDrivableRoi?: (apollo.external_command.IRoiPolygon[]|null);

            /** FreeSpaceCommand drivableRoi */
            drivableRoi: apollo.external_command.IRoiPolygon;

            /** FreeSpaceCommand targetSpeed */
            targetSpeed?: (number|null);
        }

        /** Represents a FreeSpaceCommand. */
        class FreeSpaceCommand implements IFreeSpaceCommand {

            /**
             * Constructs a new FreeSpaceCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IFreeSpaceCommand);

            /** FreeSpaceCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** FreeSpaceCommand commandId. */
            public commandId: (number|Long);

            /** FreeSpaceCommand parkingSpotPose. */
            public parkingSpotPose: apollo.external_command.IPose;

            /** FreeSpaceCommand nonDrivableRoi. */
            public nonDrivableRoi: apollo.external_command.IRoiPolygon[];

            /** FreeSpaceCommand drivableRoi. */
            public drivableRoi: apollo.external_command.IRoiPolygon;

            /** FreeSpaceCommand targetSpeed. */
            public targetSpeed: number;

            /**
             * Creates a new FreeSpaceCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FreeSpaceCommand instance
             */
            public static create(properties?: apollo.external_command.IFreeSpaceCommand): apollo.external_command.FreeSpaceCommand;

            /**
             * Encodes the specified FreeSpaceCommand message. Does not implicitly {@link apollo.external_command.FreeSpaceCommand.verify|verify} messages.
             * @param message FreeSpaceCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IFreeSpaceCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FreeSpaceCommand message, length delimited. Does not implicitly {@link apollo.external_command.FreeSpaceCommand.verify|verify} messages.
             * @param message FreeSpaceCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IFreeSpaceCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FreeSpaceCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FreeSpaceCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.FreeSpaceCommand;

            /**
             * Decodes a FreeSpaceCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FreeSpaceCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.FreeSpaceCommand;

            /**
             * Verifies a FreeSpaceCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FreeSpaceCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FreeSpaceCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.FreeSpaceCommand;

            /**
             * Creates a plain object from a FreeSpaceCommand message. Also converts values to other types if specified.
             * @param message FreeSpaceCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.FreeSpaceCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FreeSpaceCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for FreeSpaceCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Point. */
        interface IPoint {

            /** Point x */
            x: number;

            /** Point y */
            y: number;
        }

        /** Represents a Point. */
        class Point implements IPoint {

            /**
             * Constructs a new Point.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IPoint);

            /** Point x. */
            public x: number;

            /** Point y. */
            public y: number;

            /**
             * Creates a new Point instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Point instance
             */
            public static create(properties?: apollo.external_command.IPoint): apollo.external_command.Point;

            /**
             * Encodes the specified Point message. Does not implicitly {@link apollo.external_command.Point.verify|verify} messages.
             * @param message Point message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Point message, length delimited. Does not implicitly {@link apollo.external_command.Point.verify|verify} messages.
             * @param message Point message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Point message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Point
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.Point;

            /**
             * Decodes a Point message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Point
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.Point;

            /**
             * Verifies a Point message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Point message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Point
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.Point;

            /**
             * Creates a plain object from a Point message. Also converts values to other types if specified.
             * @param message Point
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.Point, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Point to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Point
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Pose. */
        interface IPose {

            /** Pose x */
            x: number;

            /** Pose y */
            y: number;

            /** Pose heading */
            heading?: (number|null);
        }

        /** Represents a Pose. */
        class Pose implements IPose {

            /**
             * Constructs a new Pose.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IPose);

            /** Pose x. */
            public x: number;

            /** Pose y. */
            public y: number;

            /** Pose heading. */
            public heading: number;

            /**
             * Creates a new Pose instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Pose instance
             */
            public static create(properties?: apollo.external_command.IPose): apollo.external_command.Pose;

            /**
             * Encodes the specified Pose message. Does not implicitly {@link apollo.external_command.Pose.verify|verify} messages.
             * @param message Pose message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IPose, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Pose message, length delimited. Does not implicitly {@link apollo.external_command.Pose.verify|verify} messages.
             * @param message Pose message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IPose, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Pose message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Pose
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.Pose;

            /**
             * Decodes a Pose message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Pose
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.Pose;

            /**
             * Verifies a Pose message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Pose message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Pose
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.Pose;

            /**
             * Creates a plain object from a Pose message. Also converts values to other types if specified.
             * @param message Pose
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.Pose, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Pose to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Pose
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoiPolygon. */
        interface IRoiPolygon {

            /** RoiPolygon point */
            point?: (apollo.external_command.IPoint[]|null);
        }

        /** Represents a RoiPolygon. */
        class RoiPolygon implements IRoiPolygon {

            /**
             * Constructs a new RoiPolygon.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IRoiPolygon);

            /** RoiPolygon point. */
            public point: apollo.external_command.IPoint[];

            /**
             * Creates a new RoiPolygon instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoiPolygon instance
             */
            public static create(properties?: apollo.external_command.IRoiPolygon): apollo.external_command.RoiPolygon;

            /**
             * Encodes the specified RoiPolygon message. Does not implicitly {@link apollo.external_command.RoiPolygon.verify|verify} messages.
             * @param message RoiPolygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IRoiPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoiPolygon message, length delimited. Does not implicitly {@link apollo.external_command.RoiPolygon.verify|verify} messages.
             * @param message RoiPolygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IRoiPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoiPolygon message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoiPolygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.RoiPolygon;

            /**
             * Decodes a RoiPolygon message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoiPolygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.RoiPolygon;

            /**
             * Verifies a RoiPolygon message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoiPolygon message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoiPolygon
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.RoiPolygon;

            /**
             * Creates a plain object from a RoiPolygon message. Also converts values to other types if specified.
             * @param message RoiPolygon
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.RoiPolygon, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoiPolygon to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoiPolygon
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneFollowCommand. */
        interface ILaneFollowCommand {

            /** LaneFollowCommand header */
            header?: (apollo.common.IHeader|null);

            /** LaneFollowCommand commandId */
            commandId?: (number|Long|null);

            /** LaneFollowCommand isStartPoseSet */
            isStartPoseSet?: (boolean|null);

            /** LaneFollowCommand wayPoint */
            wayPoint?: (apollo.external_command.IPose[]|null);

            /** LaneFollowCommand endPose */
            endPose: apollo.external_command.IPose;

            /** LaneFollowCommand blacklistedLane */
            blacklistedLane?: (apollo.external_command.ILaneSegment[]|null);

            /** LaneFollowCommand blacklistedRoad */
            blacklistedRoad?: (string[]|null);

            /** LaneFollowCommand targetSpeed */
            targetSpeed?: (number|null);
        }

        /** Represents a LaneFollowCommand. */
        class LaneFollowCommand implements ILaneFollowCommand {

            /**
             * Constructs a new LaneFollowCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.ILaneFollowCommand);

            /** LaneFollowCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** LaneFollowCommand commandId. */
            public commandId: (number|Long);

            /** LaneFollowCommand isStartPoseSet. */
            public isStartPoseSet: boolean;

            /** LaneFollowCommand wayPoint. */
            public wayPoint: apollo.external_command.IPose[];

            /** LaneFollowCommand endPose. */
            public endPose: apollo.external_command.IPose;

            /** LaneFollowCommand blacklistedLane. */
            public blacklistedLane: apollo.external_command.ILaneSegment[];

            /** LaneFollowCommand blacklistedRoad. */
            public blacklistedRoad: string[];

            /** LaneFollowCommand targetSpeed. */
            public targetSpeed: number;

            /**
             * Creates a new LaneFollowCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneFollowCommand instance
             */
            public static create(properties?: apollo.external_command.ILaneFollowCommand): apollo.external_command.LaneFollowCommand;

            /**
             * Encodes the specified LaneFollowCommand message. Does not implicitly {@link apollo.external_command.LaneFollowCommand.verify|verify} messages.
             * @param message LaneFollowCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.ILaneFollowCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneFollowCommand message, length delimited. Does not implicitly {@link apollo.external_command.LaneFollowCommand.verify|verify} messages.
             * @param message LaneFollowCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.ILaneFollowCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneFollowCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneFollowCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.LaneFollowCommand;

            /**
             * Decodes a LaneFollowCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneFollowCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.LaneFollowCommand;

            /**
             * Verifies a LaneFollowCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneFollowCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneFollowCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.LaneFollowCommand;

            /**
             * Creates a plain object from a LaneFollowCommand message. Also converts values to other types if specified.
             * @param message LaneFollowCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.LaneFollowCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneFollowCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneFollowCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneSegment. */
        interface ILaneSegment {

            /** LaneSegment id */
            id?: (string|null);

            /** LaneSegment startS */
            startS?: (number|null);

            /** LaneSegment endS */
            endS?: (number|null);
        }

        /** Represents a LaneSegment. */
        class LaneSegment implements ILaneSegment {

            /**
             * Constructs a new LaneSegment.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.ILaneSegment);

            /** LaneSegment id. */
            public id: string;

            /** LaneSegment startS. */
            public startS: number;

            /** LaneSegment endS. */
            public endS: number;

            /**
             * Creates a new LaneSegment instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneSegment instance
             */
            public static create(properties?: apollo.external_command.ILaneSegment): apollo.external_command.LaneSegment;

            /**
             * Encodes the specified LaneSegment message. Does not implicitly {@link apollo.external_command.LaneSegment.verify|verify} messages.
             * @param message LaneSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.ILaneSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneSegment message, length delimited. Does not implicitly {@link apollo.external_command.LaneSegment.verify|verify} messages.
             * @param message LaneSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.ILaneSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneSegment message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.LaneSegment;

            /**
             * Decodes a LaneSegment message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.LaneSegment;

            /**
             * Verifies a LaneSegment message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneSegment message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneSegment
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.LaneSegment;

            /**
             * Creates a plain object from a LaneSegment message. Also converts values to other types if specified.
             * @param message LaneSegment
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.LaneSegment, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneSegment to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneSegment
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PathBoundary. */
        interface IPathBoundary {

            /** PathBoundary leftBoundary */
            leftBoundary?: (apollo.external_command.IPoint[]|null);

            /** PathBoundary rightBoundary */
            rightBoundary?: (apollo.external_command.IPoint[]|null);
        }

        /** Represents a PathBoundary. */
        class PathBoundary implements IPathBoundary {

            /**
             * Constructs a new PathBoundary.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IPathBoundary);

            /** PathBoundary leftBoundary. */
            public leftBoundary: apollo.external_command.IPoint[];

            /** PathBoundary rightBoundary. */
            public rightBoundary: apollo.external_command.IPoint[];

            /**
             * Creates a new PathBoundary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PathBoundary instance
             */
            public static create(properties?: apollo.external_command.IPathBoundary): apollo.external_command.PathBoundary;

            /**
             * Encodes the specified PathBoundary message. Does not implicitly {@link apollo.external_command.PathBoundary.verify|verify} messages.
             * @param message PathBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IPathBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PathBoundary message, length delimited. Does not implicitly {@link apollo.external_command.PathBoundary.verify|verify} messages.
             * @param message PathBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IPathBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PathBoundary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PathBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.PathBoundary;

            /**
             * Decodes a PathBoundary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PathBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.PathBoundary;

            /**
             * Verifies a PathBoundary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PathBoundary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PathBoundary
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.PathBoundary;

            /**
             * Creates a plain object from a PathBoundary message. Also converts values to other types if specified.
             * @param message PathBoundary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.PathBoundary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PathBoundary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PathBoundary
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a BoundaryWithWidth. */
        interface IBoundaryWithWidth {

            /** BoundaryWithWidth leftPathWidth */
            leftPathWidth: number;

            /** BoundaryWithWidth rightPathWidth */
            rightPathWidth: number;
        }

        /** Represents a BoundaryWithWidth. */
        class BoundaryWithWidth implements IBoundaryWithWidth {

            /**
             * Constructs a new BoundaryWithWidth.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IBoundaryWithWidth);

            /** BoundaryWithWidth leftPathWidth. */
            public leftPathWidth: number;

            /** BoundaryWithWidth rightPathWidth. */
            public rightPathWidth: number;

            /**
             * Creates a new BoundaryWithWidth instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BoundaryWithWidth instance
             */
            public static create(properties?: apollo.external_command.IBoundaryWithWidth): apollo.external_command.BoundaryWithWidth;

            /**
             * Encodes the specified BoundaryWithWidth message. Does not implicitly {@link apollo.external_command.BoundaryWithWidth.verify|verify} messages.
             * @param message BoundaryWithWidth message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IBoundaryWithWidth, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BoundaryWithWidth message, length delimited. Does not implicitly {@link apollo.external_command.BoundaryWithWidth.verify|verify} messages.
             * @param message BoundaryWithWidth message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IBoundaryWithWidth, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BoundaryWithWidth message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BoundaryWithWidth
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.BoundaryWithWidth;

            /**
             * Decodes a BoundaryWithWidth message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BoundaryWithWidth
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.BoundaryWithWidth;

            /**
             * Verifies a BoundaryWithWidth message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BoundaryWithWidth message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BoundaryWithWidth
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.BoundaryWithWidth;

            /**
             * Creates a plain object from a BoundaryWithWidth message. Also converts values to other types if specified.
             * @param message BoundaryWithWidth
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.BoundaryWithWidth, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BoundaryWithWidth to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for BoundaryWithWidth
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PathFollowCommand. */
        interface IPathFollowCommand {

            /** PathFollowCommand header */
            header?: (apollo.common.IHeader|null);

            /** PathFollowCommand commandId */
            commandId?: (number|Long|null);

            /** PathFollowCommand wayPoint */
            wayPoint?: (apollo.external_command.IPoint[]|null);

            /** PathFollowCommand pathBoundary */
            pathBoundary?: (apollo.external_command.IPathBoundary|null);

            /** PathFollowCommand boundaryWithWidth */
            boundaryWithWidth?: (apollo.external_command.IBoundaryWithWidth|null);

            /** PathFollowCommand targetSpeed */
            targetSpeed?: (number|null);
        }

        /** Represents a PathFollowCommand. */
        class PathFollowCommand implements IPathFollowCommand {

            /**
             * Constructs a new PathFollowCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IPathFollowCommand);

            /** PathFollowCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** PathFollowCommand commandId. */
            public commandId: (number|Long);

            /** PathFollowCommand wayPoint. */
            public wayPoint: apollo.external_command.IPoint[];

            /** PathFollowCommand pathBoundary. */
            public pathBoundary?: (apollo.external_command.IPathBoundary|null);

            /** PathFollowCommand boundaryWithWidth. */
            public boundaryWithWidth?: (apollo.external_command.IBoundaryWithWidth|null);

            /** PathFollowCommand targetSpeed. */
            public targetSpeed: number;

            /** PathFollowCommand boundary. */
            public boundary?: ("pathBoundary"|"boundaryWithWidth");

            /**
             * Creates a new PathFollowCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PathFollowCommand instance
             */
            public static create(properties?: apollo.external_command.IPathFollowCommand): apollo.external_command.PathFollowCommand;

            /**
             * Encodes the specified PathFollowCommand message. Does not implicitly {@link apollo.external_command.PathFollowCommand.verify|verify} messages.
             * @param message PathFollowCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IPathFollowCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PathFollowCommand message, length delimited. Does not implicitly {@link apollo.external_command.PathFollowCommand.verify|verify} messages.
             * @param message PathFollowCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IPathFollowCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PathFollowCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PathFollowCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.PathFollowCommand;

            /**
             * Decodes a PathFollowCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PathFollowCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.PathFollowCommand;

            /**
             * Verifies a PathFollowCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PathFollowCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PathFollowCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.PathFollowCommand;

            /**
             * Creates a plain object from a PathFollowCommand message. Also converts values to other types if specified.
             * @param message PathFollowCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.PathFollowCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PathFollowCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PathFollowCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpeedCommand. */
        interface ISpeedCommand {

            /** SpeedCommand header */
            header?: (apollo.common.IHeader|null);

            /** SpeedCommand commandId */
            commandId?: (number|Long|null);

            /** SpeedCommand targetSpeed */
            targetSpeed?: (number|null);

            /** SpeedCommand targetSpeedFactor */
            targetSpeedFactor?: (number|null);

            /** SpeedCommand isRestoreTargetSpeed */
            isRestoreTargetSpeed?: (boolean|null);
        }

        /** Represents a SpeedCommand. */
        class SpeedCommand implements ISpeedCommand {

            /**
             * Constructs a new SpeedCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.ISpeedCommand);

            /** SpeedCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** SpeedCommand commandId. */
            public commandId: (number|Long);

            /** SpeedCommand targetSpeed. */
            public targetSpeed?: (number|null);

            /** SpeedCommand targetSpeedFactor. */
            public targetSpeedFactor?: (number|null);

            /** SpeedCommand isRestoreTargetSpeed. */
            public isRestoreTargetSpeed?: (boolean|null);

            /** SpeedCommand linearSpeed. */
            public linearSpeed?: ("targetSpeed"|"targetSpeedFactor"|"isRestoreTargetSpeed");

            /**
             * Creates a new SpeedCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedCommand instance
             */
            public static create(properties?: apollo.external_command.ISpeedCommand): apollo.external_command.SpeedCommand;

            /**
             * Encodes the specified SpeedCommand message. Does not implicitly {@link apollo.external_command.SpeedCommand.verify|verify} messages.
             * @param message SpeedCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.ISpeedCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedCommand message, length delimited. Does not implicitly {@link apollo.external_command.SpeedCommand.verify|verify} messages.
             * @param message SpeedCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.ISpeedCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.SpeedCommand;

            /**
             * Decodes a SpeedCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.SpeedCommand;

            /**
             * Verifies a SpeedCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.SpeedCommand;

            /**
             * Creates a plain object from a SpeedCommand message. Also converts values to other types if specified.
             * @param message SpeedCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.SpeedCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ValetParkingCommand. */
        interface IValetParkingCommand {

            /** ValetParkingCommand header */
            header?: (apollo.common.IHeader|null);

            /** ValetParkingCommand commandId */
            commandId?: (number|Long|null);

            /** ValetParkingCommand isStartPoseSet */
            isStartPoseSet?: (boolean|null);

            /** ValetParkingCommand wayPoint */
            wayPoint?: (apollo.external_command.IPose[]|null);

            /** ValetParkingCommand blacklistedLane */
            blacklistedLane?: (apollo.external_command.ILaneSegment[]|null);

            /** ValetParkingCommand blacklistedRoad */
            blacklistedRoad?: (string[]|null);

            /** ValetParkingCommand parkingSpotId */
            parkingSpotId: string;

            /** ValetParkingCommand targetSpeed */
            targetSpeed?: (number|null);
        }

        /** Represents a ValetParkingCommand. */
        class ValetParkingCommand implements IValetParkingCommand {

            /**
             * Constructs a new ValetParkingCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.external_command.IValetParkingCommand);

            /** ValetParkingCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** ValetParkingCommand commandId. */
            public commandId: (number|Long);

            /** ValetParkingCommand isStartPoseSet. */
            public isStartPoseSet: boolean;

            /** ValetParkingCommand wayPoint. */
            public wayPoint: apollo.external_command.IPose[];

            /** ValetParkingCommand blacklistedLane. */
            public blacklistedLane: apollo.external_command.ILaneSegment[];

            /** ValetParkingCommand blacklistedRoad. */
            public blacklistedRoad: string[];

            /** ValetParkingCommand parkingSpotId. */
            public parkingSpotId: string;

            /** ValetParkingCommand targetSpeed. */
            public targetSpeed: number;

            /**
             * Creates a new ValetParkingCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ValetParkingCommand instance
             */
            public static create(properties?: apollo.external_command.IValetParkingCommand): apollo.external_command.ValetParkingCommand;

            /**
             * Encodes the specified ValetParkingCommand message. Does not implicitly {@link apollo.external_command.ValetParkingCommand.verify|verify} messages.
             * @param message ValetParkingCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.external_command.IValetParkingCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ValetParkingCommand message, length delimited. Does not implicitly {@link apollo.external_command.ValetParkingCommand.verify|verify} messages.
             * @param message ValetParkingCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.external_command.IValetParkingCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ValetParkingCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ValetParkingCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.external_command.ValetParkingCommand;

            /**
             * Decodes a ValetParkingCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ValetParkingCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.external_command.ValetParkingCommand;

            /**
             * Verifies a ValetParkingCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ValetParkingCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ValetParkingCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.external_command.ValetParkingCommand;

            /**
             * Creates a plain object from a ValetParkingCommand message. Also converts values to other types if specified.
             * @param message ValetParkingCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.external_command.ValetParkingCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ValetParkingCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ValetParkingCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace guardian. */
    namespace guardian {

        /** Properties of a GuardianCommand. */
        interface IGuardianCommand {

            /** GuardianCommand header */
            header?: (apollo.common.IHeader|null);

            /** GuardianCommand controlCommand */
            controlCommand?: (apollo.control.IControlCommand|null);
        }

        /** Represents a GuardianCommand. */
        class GuardianCommand implements IGuardianCommand {

            /**
             * Constructs a new GuardianCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.guardian.IGuardianCommand);

            /** GuardianCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** GuardianCommand controlCommand. */
            public controlCommand?: (apollo.control.IControlCommand|null);

            /**
             * Creates a new GuardianCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GuardianCommand instance
             */
            public static create(properties?: apollo.guardian.IGuardianCommand): apollo.guardian.GuardianCommand;

            /**
             * Encodes the specified GuardianCommand message. Does not implicitly {@link apollo.guardian.GuardianCommand.verify|verify} messages.
             * @param message GuardianCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.guardian.IGuardianCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GuardianCommand message, length delimited. Does not implicitly {@link apollo.guardian.GuardianCommand.verify|verify} messages.
             * @param message GuardianCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.guardian.IGuardianCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GuardianCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuardianCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.guardian.GuardianCommand;

            /**
             * Decodes a GuardianCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GuardianCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.guardian.GuardianCommand;

            /**
             * Verifies a GuardianCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GuardianCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GuardianCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.guardian.GuardianCommand;

            /**
             * Creates a plain object from a GuardianCommand message. Also converts values to other types if specified.
             * @param message GuardianCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.guardian.GuardianCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GuardianCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for GuardianCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace localization. */
    namespace localization {

        /** Properties of a Gps. */
        interface IGps {

            /** Gps header */
            header?: (apollo.common.IHeader|null);

            /** Gps localization */
            localization?: (apollo.localization.IPose|null);
        }

        /** Represents a Gps. */
        class Gps implements IGps {

            /**
             * Constructs a new Gps.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.IGps);

            /** Gps header. */
            public header?: (apollo.common.IHeader|null);

            /** Gps localization. */
            public localization?: (apollo.localization.IPose|null);

            /**
             * Creates a new Gps instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Gps instance
             */
            public static create(properties?: apollo.localization.IGps): apollo.localization.Gps;

            /**
             * Encodes the specified Gps message. Does not implicitly {@link apollo.localization.Gps.verify|verify} messages.
             * @param message Gps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.IGps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Gps message, length delimited. Does not implicitly {@link apollo.localization.Gps.verify|verify} messages.
             * @param message Gps message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.IGps, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Gps message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Gps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.Gps;

            /**
             * Decodes a Gps message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Gps
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.Gps;

            /**
             * Verifies a Gps message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Gps message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Gps
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.Gps;

            /**
             * Creates a plain object from a Gps message. Also converts values to other types if specified.
             * @param message Gps
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.Gps, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Gps to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Gps
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CorrectedImu. */
        interface ICorrectedImu {

            /** CorrectedImu header */
            header?: (apollo.common.IHeader|null);

            /** CorrectedImu imu */
            imu?: (apollo.localization.IPose|null);
        }

        /** Represents a CorrectedImu. */
        class CorrectedImu implements ICorrectedImu {

            /**
             * Constructs a new CorrectedImu.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.ICorrectedImu);

            /** CorrectedImu header. */
            public header?: (apollo.common.IHeader|null);

            /** CorrectedImu imu. */
            public imu?: (apollo.localization.IPose|null);

            /**
             * Creates a new CorrectedImu instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CorrectedImu instance
             */
            public static create(properties?: apollo.localization.ICorrectedImu): apollo.localization.CorrectedImu;

            /**
             * Encodes the specified CorrectedImu message. Does not implicitly {@link apollo.localization.CorrectedImu.verify|verify} messages.
             * @param message CorrectedImu message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.ICorrectedImu, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CorrectedImu message, length delimited. Does not implicitly {@link apollo.localization.CorrectedImu.verify|verify} messages.
             * @param message CorrectedImu message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.ICorrectedImu, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CorrectedImu message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CorrectedImu
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.CorrectedImu;

            /**
             * Decodes a CorrectedImu message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CorrectedImu
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.CorrectedImu;

            /**
             * Verifies a CorrectedImu message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CorrectedImu message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CorrectedImu
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.CorrectedImu;

            /**
             * Creates a plain object from a CorrectedImu message. Also converts values to other types if specified.
             * @param message CorrectedImu
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.CorrectedImu, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CorrectedImu to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CorrectedImu
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Uncertainty. */
        interface IUncertainty {

            /** Uncertainty positionStdDev */
            positionStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty orientationStdDev */
            orientationStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty linearVelocityStdDev */
            linearVelocityStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty linearAccelerationStdDev */
            linearAccelerationStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty angularVelocityStdDev */
            angularVelocityStdDev?: (apollo.common.IPoint3D|null);
        }

        /** Represents an Uncertainty. */
        class Uncertainty implements IUncertainty {

            /**
             * Constructs a new Uncertainty.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.IUncertainty);

            /** Uncertainty positionStdDev. */
            public positionStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty orientationStdDev. */
            public orientationStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty linearVelocityStdDev. */
            public linearVelocityStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty linearAccelerationStdDev. */
            public linearAccelerationStdDev?: (apollo.common.IPoint3D|null);

            /** Uncertainty angularVelocityStdDev. */
            public angularVelocityStdDev?: (apollo.common.IPoint3D|null);

            /**
             * Creates a new Uncertainty instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Uncertainty instance
             */
            public static create(properties?: apollo.localization.IUncertainty): apollo.localization.Uncertainty;

            /**
             * Encodes the specified Uncertainty message. Does not implicitly {@link apollo.localization.Uncertainty.verify|verify} messages.
             * @param message Uncertainty message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.IUncertainty, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Uncertainty message, length delimited. Does not implicitly {@link apollo.localization.Uncertainty.verify|verify} messages.
             * @param message Uncertainty message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.IUncertainty, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Uncertainty message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Uncertainty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.Uncertainty;

            /**
             * Decodes an Uncertainty message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Uncertainty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.Uncertainty;

            /**
             * Verifies an Uncertainty message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Uncertainty message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Uncertainty
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.Uncertainty;

            /**
             * Creates a plain object from an Uncertainty message. Also converts values to other types if specified.
             * @param message Uncertainty
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.Uncertainty, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Uncertainty to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Uncertainty
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LocalizationEstimate. */
        interface ILocalizationEstimate {

            /** LocalizationEstimate header */
            header?: (apollo.common.IHeader|null);

            /** LocalizationEstimate pose */
            pose?: (apollo.localization.IPose|null);

            /** LocalizationEstimate uncertainty */
            uncertainty?: (apollo.localization.IUncertainty|null);

            /** LocalizationEstimate measurementTime */
            measurementTime?: (number|null);

            /** LocalizationEstimate trajectoryPoint */
            trajectoryPoint?: (apollo.common.ITrajectoryPoint[]|null);

            /** LocalizationEstimate msfStatus */
            msfStatus?: (apollo.localization.IMsfStatus|null);

            /** LocalizationEstimate sensorStatus */
            sensorStatus?: (apollo.localization.IMsfSensorMsgStatus|null);
        }

        /** Represents a LocalizationEstimate. */
        class LocalizationEstimate implements ILocalizationEstimate {

            /**
             * Constructs a new LocalizationEstimate.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.ILocalizationEstimate);

            /** LocalizationEstimate header. */
            public header?: (apollo.common.IHeader|null);

            /** LocalizationEstimate pose. */
            public pose?: (apollo.localization.IPose|null);

            /** LocalizationEstimate uncertainty. */
            public uncertainty?: (apollo.localization.IUncertainty|null);

            /** LocalizationEstimate measurementTime. */
            public measurementTime: number;

            /** LocalizationEstimate trajectoryPoint. */
            public trajectoryPoint: apollo.common.ITrajectoryPoint[];

            /** LocalizationEstimate msfStatus. */
            public msfStatus?: (apollo.localization.IMsfStatus|null);

            /** LocalizationEstimate sensorStatus. */
            public sensorStatus?: (apollo.localization.IMsfSensorMsgStatus|null);

            /**
             * Creates a new LocalizationEstimate instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LocalizationEstimate instance
             */
            public static create(properties?: apollo.localization.ILocalizationEstimate): apollo.localization.LocalizationEstimate;

            /**
             * Encodes the specified LocalizationEstimate message. Does not implicitly {@link apollo.localization.LocalizationEstimate.verify|verify} messages.
             * @param message LocalizationEstimate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.ILocalizationEstimate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LocalizationEstimate message, length delimited. Does not implicitly {@link apollo.localization.LocalizationEstimate.verify|verify} messages.
             * @param message LocalizationEstimate message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.ILocalizationEstimate, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LocalizationEstimate message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LocalizationEstimate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.LocalizationEstimate;

            /**
             * Decodes a LocalizationEstimate message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LocalizationEstimate
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.LocalizationEstimate;

            /**
             * Verifies a LocalizationEstimate message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LocalizationEstimate message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LocalizationEstimate
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.LocalizationEstimate;

            /**
             * Creates a plain object from a LocalizationEstimate message. Also converts values to other types if specified.
             * @param message LocalizationEstimate
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.LocalizationEstimate, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LocalizationEstimate to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LocalizationEstimate
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** MeasureState enum. */
        enum MeasureState {
            OK = 0,
            WARNNING = 1,
            ERROR = 2,
            CRITICAL_ERROR = 3,
            FATAL_ERROR = 4
        }

        /** Properties of a LocalizationStatus. */
        interface ILocalizationStatus {

            /** LocalizationStatus header */
            header?: (apollo.common.IHeader|null);

            /** LocalizationStatus fusionStatus */
            fusionStatus?: (apollo.localization.MeasureState|null);

            /** LocalizationStatus gnssStatus */
            gnssStatus?: (apollo.localization.MeasureState|null);

            /** LocalizationStatus lidarStatus */
            lidarStatus?: (apollo.localization.MeasureState|null);

            /** LocalizationStatus measurementTime */
            measurementTime?: (number|null);

            /** LocalizationStatus stateMessage */
            stateMessage?: (string|null);
        }

        /** Represents a LocalizationStatus. */
        class LocalizationStatus implements ILocalizationStatus {

            /**
             * Constructs a new LocalizationStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.ILocalizationStatus);

            /** LocalizationStatus header. */
            public header?: (apollo.common.IHeader|null);

            /** LocalizationStatus fusionStatus. */
            public fusionStatus: apollo.localization.MeasureState;

            /** LocalizationStatus gnssStatus. */
            public gnssStatus: apollo.localization.MeasureState;

            /** LocalizationStatus lidarStatus. */
            public lidarStatus: apollo.localization.MeasureState;

            /** LocalizationStatus measurementTime. */
            public measurementTime: number;

            /** LocalizationStatus stateMessage. */
            public stateMessage: string;

            /**
             * Creates a new LocalizationStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LocalizationStatus instance
             */
            public static create(properties?: apollo.localization.ILocalizationStatus): apollo.localization.LocalizationStatus;

            /**
             * Encodes the specified LocalizationStatus message. Does not implicitly {@link apollo.localization.LocalizationStatus.verify|verify} messages.
             * @param message LocalizationStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.ILocalizationStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LocalizationStatus message, length delimited. Does not implicitly {@link apollo.localization.LocalizationStatus.verify|verify} messages.
             * @param message LocalizationStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.ILocalizationStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LocalizationStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LocalizationStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.LocalizationStatus;

            /**
             * Decodes a LocalizationStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LocalizationStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.LocalizationStatus;

            /**
             * Verifies a LocalizationStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LocalizationStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LocalizationStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.LocalizationStatus;

            /**
             * Creates a plain object from a LocalizationStatus message. Also converts values to other types if specified.
             * @param message LocalizationStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.LocalizationStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LocalizationStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LocalizationStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** LocalLidarStatus enum. */
        enum LocalLidarStatus {
            MSF_LOCAL_LIDAR_NORMAL = 0,
            MSF_LOCAL_LIDAR_MAP_MISSING = 1,
            MSF_LOCAL_LIDAR_EXTRINSICS_MISSING = 2,
            MSF_LOCAL_LIDAR_MAP_LOADING_FAILED = 3,
            MSF_LOCAL_LIDAR_NO_OUTPUT = 4,
            MSF_LOCAL_LIDAR_OUT_OF_MAP = 5,
            MSF_LOCAL_LIDAR_NOT_GOOD = 6,
            MSF_LOCAL_LIDAR_UNDEFINED_STATUS = 7
        }

        /** LocalLidarQuality enum. */
        enum LocalLidarQuality {
            MSF_LOCAL_LIDAR_VERY_GOOD = 0,
            MSF_LOCAL_LIDAR_GOOD = 1,
            MSF_LOCAL_LIDAR_NOT_BAD = 2,
            MSF_LOCAL_LIDAR_BAD = 3
        }

        /** LocalLidarConsistency enum. */
        enum LocalLidarConsistency {
            MSF_LOCAL_LIDAR_CONSISTENCY_00 = 0,
            MSF_LOCAL_LIDAR_CONSISTENCY_01 = 1,
            MSF_LOCAL_LIDAR_CONSISTENCY_02 = 2,
            MSF_LOCAL_LIDAR_CONSISTENCY_03 = 3
        }

        /** GnssConsistency enum. */
        enum GnssConsistency {
            MSF_GNSS_CONSISTENCY_00 = 0,
            MSF_GNSS_CONSISTENCY_01 = 1,
            MSF_GNSS_CONSISTENCY_02 = 2,
            MSF_GNSS_CONSISTENCY_03 = 3
        }

        /** GnssPositionType enum. */
        enum GnssPositionType {
            NONE = 0,
            FIXEDPOS = 1,
            FIXEDHEIGHT = 2,
            FLOATCONV = 4,
            WIDELANE = 5,
            NARROWLANE = 6,
            DOPPLER_VELOCITY = 8,
            SINGLE = 16,
            PSRDIFF = 17,
            WAAS = 18,
            PROPOGATED = 19,
            OMNISTAR = 20,
            L1_FLOAT = 32,
            IONOFREE_FLOAT = 33,
            NARROW_FLOAT = 34,
            L1_INT = 48,
            WIDE_INT = 49,
            NARROW_INT = 50,
            RTK_DIRECT_INS = 51,
            INS_SBAS = 52,
            INS_PSRSP = 53,
            INS_PSRDIFF = 54,
            INS_RTKFLOAT = 55,
            INS_RTKFIXED = 56,
            INS_OMNISTAR = 57,
            INS_OMNISTAR_HP = 58,
            INS_OMNISTAR_XP = 59,
            OMNISTAR_HP = 64,
            OMNISTAR_XP = 65,
            PPP_CONVERGING = 68,
            PPP = 69,
            INS_PPP_Converging = 73,
            INS_PPP = 74,
            MSG_LOSS = 91
        }

        /** ImuMsgDelayStatus enum. */
        enum ImuMsgDelayStatus {
            IMU_DELAY_NORMAL = 0,
            IMU_DELAY_1 = 1,
            IMU_DELAY_2 = 2,
            IMU_DELAY_3 = 3,
            IMU_DELAY_ABNORMAL = 4
        }

        /** ImuMsgMissingStatus enum. */
        enum ImuMsgMissingStatus {
            IMU_MISSING_NORMAL = 0,
            IMU_MISSING_1 = 1,
            IMU_MISSING_2 = 2,
            IMU_MISSING_3 = 3,
            IMU_MISSING_4 = 4,
            IMU_MISSING_5 = 5,
            IMU_MISSING_ABNORMAL = 6
        }

        /** ImuMsgDataStatus enum. */
        enum ImuMsgDataStatus {
            IMU_DATA_NORMAL = 0,
            IMU_DATA_ABNORMAL = 1,
            IMU_DATA_OTHER = 2
        }

        /** MsfRunningStatus enum. */
        enum MsfRunningStatus {
            MSF_SOL_LIDAR_GNSS = 0,
            MSF_SOL_X_GNSS = 1,
            MSF_SOL_LIDAR_X = 2,
            MSF_SOL_LIDAR_XX = 3,
            MSF_SOL_LIDAR_XXX = 4,
            MSF_SOL_X_X = 5,
            MSF_SOL_X_XX = 6,
            MSF_SOL_X_XXX = 7,
            MSF_SSOL_LIDAR_GNSS = 8,
            MSF_SSOL_X_GNSS = 9,
            MSF_SSOL_LIDAR_X = 10,
            MSF_SSOL_LIDAR_XX = 11,
            MSF_SSOL_LIDAR_XXX = 12,
            MSF_SSOL_X_X = 13,
            MSF_SSOL_X_XX = 14,
            MSF_SSOL_X_XXX = 15,
            MSF_NOSOL_LIDAR_GNSS = 16,
            MSF_NOSOL_X_GNSS = 17,
            MSF_NOSOL_LIDAR_X = 18,
            MSF_NOSOL_LIDAR_XX = 19,
            MSF_NOSOL_LIDAR_XXX = 20,
            MSF_NOSOL_X_X = 21,
            MSF_NOSOL_X_XX = 22,
            MSF_NOSOL_X_XXX = 23,
            MSF_RUNNING_INIT = 24
        }

        /** Properties of a MsfSensorMsgStatus. */
        interface IMsfSensorMsgStatus {

            /** MsfSensorMsgStatus imuDelayStatus */
            imuDelayStatus?: (apollo.localization.ImuMsgDelayStatus|null);

            /** MsfSensorMsgStatus imuMissingStatus */
            imuMissingStatus?: (apollo.localization.ImuMsgMissingStatus|null);

            /** MsfSensorMsgStatus imuDataStatus */
            imuDataStatus?: (apollo.localization.ImuMsgDataStatus|null);
        }

        /** Represents a MsfSensorMsgStatus. */
        class MsfSensorMsgStatus implements IMsfSensorMsgStatus {

            /**
             * Constructs a new MsfSensorMsgStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.IMsfSensorMsgStatus);

            /** MsfSensorMsgStatus imuDelayStatus. */
            public imuDelayStatus: apollo.localization.ImuMsgDelayStatus;

            /** MsfSensorMsgStatus imuMissingStatus. */
            public imuMissingStatus: apollo.localization.ImuMsgMissingStatus;

            /** MsfSensorMsgStatus imuDataStatus. */
            public imuDataStatus: apollo.localization.ImuMsgDataStatus;

            /**
             * Creates a new MsfSensorMsgStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsfSensorMsgStatus instance
             */
            public static create(properties?: apollo.localization.IMsfSensorMsgStatus): apollo.localization.MsfSensorMsgStatus;

            /**
             * Encodes the specified MsfSensorMsgStatus message. Does not implicitly {@link apollo.localization.MsfSensorMsgStatus.verify|verify} messages.
             * @param message MsfSensorMsgStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.IMsfSensorMsgStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsfSensorMsgStatus message, length delimited. Does not implicitly {@link apollo.localization.MsfSensorMsgStatus.verify|verify} messages.
             * @param message MsfSensorMsgStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.IMsfSensorMsgStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsfSensorMsgStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsfSensorMsgStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.MsfSensorMsgStatus;

            /**
             * Decodes a MsfSensorMsgStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsfSensorMsgStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.MsfSensorMsgStatus;

            /**
             * Verifies a MsfSensorMsgStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsfSensorMsgStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsfSensorMsgStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.MsfSensorMsgStatus;

            /**
             * Creates a plain object from a MsfSensorMsgStatus message. Also converts values to other types if specified.
             * @param message MsfSensorMsgStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.MsfSensorMsgStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsfSensorMsgStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MsfSensorMsgStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MsfStatus. */
        interface IMsfStatus {

            /** MsfStatus localLidarConsistency */
            localLidarConsistency?: (apollo.localization.LocalLidarConsistency|null);

            /** MsfStatus gnssConsistency */
            gnssConsistency?: (apollo.localization.GnssConsistency|null);

            /** MsfStatus localLidarStatus */
            localLidarStatus?: (apollo.localization.LocalLidarStatus|null);

            /** MsfStatus localLidarQuality */
            localLidarQuality?: (apollo.localization.LocalLidarQuality|null);

            /** MsfStatus gnssposPositionType */
            gnssposPositionType?: (apollo.localization.GnssPositionType|null);

            /** MsfStatus msfRunningStatus */
            msfRunningStatus?: (apollo.localization.MsfRunningStatus|null);
        }

        /** Represents a MsfStatus. */
        class MsfStatus implements IMsfStatus {

            /**
             * Constructs a new MsfStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.IMsfStatus);

            /** MsfStatus localLidarConsistency. */
            public localLidarConsistency: apollo.localization.LocalLidarConsistency;

            /** MsfStatus gnssConsistency. */
            public gnssConsistency: apollo.localization.GnssConsistency;

            /** MsfStatus localLidarStatus. */
            public localLidarStatus: apollo.localization.LocalLidarStatus;

            /** MsfStatus localLidarQuality. */
            public localLidarQuality: apollo.localization.LocalLidarQuality;

            /** MsfStatus gnssposPositionType. */
            public gnssposPositionType: apollo.localization.GnssPositionType;

            /** MsfStatus msfRunningStatus. */
            public msfRunningStatus: apollo.localization.MsfRunningStatus;

            /**
             * Creates a new MsfStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MsfStatus instance
             */
            public static create(properties?: apollo.localization.IMsfStatus): apollo.localization.MsfStatus;

            /**
             * Encodes the specified MsfStatus message. Does not implicitly {@link apollo.localization.MsfStatus.verify|verify} messages.
             * @param message MsfStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.IMsfStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MsfStatus message, length delimited. Does not implicitly {@link apollo.localization.MsfStatus.verify|verify} messages.
             * @param message MsfStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.IMsfStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MsfStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsfStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.MsfStatus;

            /**
             * Decodes a MsfStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MsfStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.MsfStatus;

            /**
             * Verifies a MsfStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MsfStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MsfStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.MsfStatus;

            /**
             * Creates a plain object from a MsfStatus message. Also converts values to other types if specified.
             * @param message MsfStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.MsfStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MsfStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MsfStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Pose. */
        interface IPose {

            /** Pose position */
            position?: (apollo.common.IPointENU|null);

            /** Pose orientation */
            orientation?: (apollo.common.IQuaternion|null);

            /** Pose linearVelocity */
            linearVelocity?: (apollo.common.IPoint3D|null);

            /** Pose linearAcceleration */
            linearAcceleration?: (apollo.common.IPoint3D|null);

            /** Pose angularVelocity */
            angularVelocity?: (apollo.common.IPoint3D|null);

            /** Pose heading */
            heading?: (number|null);

            /** Pose linearAccelerationVrf */
            linearAccelerationVrf?: (apollo.common.IPoint3D|null);

            /** Pose angularVelocityVrf */
            angularVelocityVrf?: (apollo.common.IPoint3D|null);

            /** Pose eulerAngles */
            eulerAngles?: (apollo.common.IPoint3D|null);
        }

        /** Represents a Pose. */
        class Pose implements IPose {

            /**
             * Constructs a new Pose.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.localization.IPose);

            /** Pose position. */
            public position?: (apollo.common.IPointENU|null);

            /** Pose orientation. */
            public orientation?: (apollo.common.IQuaternion|null);

            /** Pose linearVelocity. */
            public linearVelocity?: (apollo.common.IPoint3D|null);

            /** Pose linearAcceleration. */
            public linearAcceleration?: (apollo.common.IPoint3D|null);

            /** Pose angularVelocity. */
            public angularVelocity?: (apollo.common.IPoint3D|null);

            /** Pose heading. */
            public heading: number;

            /** Pose linearAccelerationVrf. */
            public linearAccelerationVrf?: (apollo.common.IPoint3D|null);

            /** Pose angularVelocityVrf. */
            public angularVelocityVrf?: (apollo.common.IPoint3D|null);

            /** Pose eulerAngles. */
            public eulerAngles?: (apollo.common.IPoint3D|null);

            /**
             * Creates a new Pose instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Pose instance
             */
            public static create(properties?: apollo.localization.IPose): apollo.localization.Pose;

            /**
             * Encodes the specified Pose message. Does not implicitly {@link apollo.localization.Pose.verify|verify} messages.
             * @param message Pose message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.localization.IPose, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Pose message, length delimited. Does not implicitly {@link apollo.localization.Pose.verify|verify} messages.
             * @param message Pose message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.localization.IPose, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Pose message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Pose
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.localization.Pose;

            /**
             * Decodes a Pose message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Pose
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.localization.Pose;

            /**
             * Verifies a Pose message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Pose message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Pose
             */
            public static fromObject(object: { [k: string]: any }): apollo.localization.Pose;

            /**
             * Creates a plain object from a Pose message. Also converts values to other types if specified.
             * @param message Pose
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.localization.Pose, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Pose to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Pose
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace hdmap. */
    namespace hdmap {

        /** Properties of a Projection. */
        interface IProjection {

            /** Projection proj */
            proj?: (string|null);
        }

        /** Represents a Projection. */
        class Projection implements IProjection {

            /**
             * Constructs a new Projection.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IProjection);

            /** Projection proj. */
            public proj: string;

            /**
             * Creates a new Projection instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Projection instance
             */
            public static create(properties?: apollo.hdmap.IProjection): apollo.hdmap.Projection;

            /**
             * Encodes the specified Projection message. Does not implicitly {@link apollo.hdmap.Projection.verify|verify} messages.
             * @param message Projection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IProjection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Projection message, length delimited. Does not implicitly {@link apollo.hdmap.Projection.verify|verify} messages.
             * @param message Projection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IProjection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Projection message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Projection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Projection;

            /**
             * Decodes a Projection message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Projection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Projection;

            /**
             * Verifies a Projection message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Projection message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Projection
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Projection;

            /**
             * Creates a plain object from a Projection message. Also converts values to other types if specified.
             * @param message Projection
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Projection, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Projection to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Projection
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Header. */
        interface IHeader {

            /** Header version */
            version?: (Uint8Array|null);

            /** Header date */
            date?: (Uint8Array|null);

            /** Header projection */
            projection?: (apollo.hdmap.IProjection|null);

            /** Header district */
            district?: (Uint8Array|null);

            /** Header generation */
            generation?: (Uint8Array|null);

            /** Header revMajor */
            revMajor?: (Uint8Array|null);

            /** Header revMinor */
            revMinor?: (Uint8Array|null);

            /** Header left */
            left?: (number|null);

            /** Header top */
            top?: (number|null);

            /** Header right */
            right?: (number|null);

            /** Header bottom */
            bottom?: (number|null);

            /** Header vendor */
            vendor?: (Uint8Array|null);
        }

        /** Represents a Header. */
        class Header implements IHeader {

            /**
             * Constructs a new Header.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IHeader);

            /** Header version. */
            public version: Uint8Array;

            /** Header date. */
            public date: Uint8Array;

            /** Header projection. */
            public projection?: (apollo.hdmap.IProjection|null);

            /** Header district. */
            public district: Uint8Array;

            /** Header generation. */
            public generation: Uint8Array;

            /** Header revMajor. */
            public revMajor: Uint8Array;

            /** Header revMinor. */
            public revMinor: Uint8Array;

            /** Header left. */
            public left: number;

            /** Header top. */
            public top: number;

            /** Header right. */
            public right: number;

            /** Header bottom. */
            public bottom: number;

            /** Header vendor. */
            public vendor: Uint8Array;

            /**
             * Creates a new Header instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Header instance
             */
            public static create(properties?: apollo.hdmap.IHeader): apollo.hdmap.Header;

            /**
             * Encodes the specified Header message. Does not implicitly {@link apollo.hdmap.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Header message, length delimited. Does not implicitly {@link apollo.hdmap.Header.verify|verify} messages.
             * @param message Header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IHeader, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Header message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Header;

            /**
             * Decodes a Header message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Header;

            /**
             * Verifies a Header message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Header message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Header
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Header;

            /**
             * Creates a plain object from a Header message. Also converts values to other types if specified.
             * @param message Header
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Header, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Header to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Header
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Map. */
        interface IMap {

            /** Map header */
            header?: (apollo.hdmap.IHeader|null);

            /** Map crosswalk */
            crosswalk?: (apollo.hdmap.ICrosswalk[]|null);

            /** Map junction */
            junction?: (apollo.hdmap.IJunction[]|null);

            /** Map lane */
            lane?: (apollo.hdmap.ILane[]|null);

            /** Map stopSign */
            stopSign?: (apollo.hdmap.IStopSign[]|null);

            /** Map signal */
            signal?: (apollo.hdmap.ISignal[]|null);

            /** Map yield */
            "yield"?: (apollo.hdmap.IYieldSign[]|null);

            /** Map overlap */
            overlap?: (apollo.hdmap.IOverlap[]|null);

            /** Map clearArea */
            clearArea?: (apollo.hdmap.IClearArea[]|null);

            /** Map speedBump */
            speedBump?: (apollo.hdmap.ISpeedBump[]|null);

            /** Map road */
            road?: (apollo.hdmap.IRoad[]|null);

            /** Map parkingSpace */
            parkingSpace?: (apollo.hdmap.IParkingSpace[]|null);

            /** Map pncJunction */
            pncJunction?: (apollo.hdmap.IPNCJunction[]|null);

            /** Map rsu */
            rsu?: (apollo.hdmap.IRSU[]|null);
        }

        /** Represents a Map. */
        class Map implements IMap {

            /**
             * Constructs a new Map.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IMap);

            /** Map header. */
            public header?: (apollo.hdmap.IHeader|null);

            /** Map crosswalk. */
            public crosswalk: apollo.hdmap.ICrosswalk[];

            /** Map junction. */
            public junction: apollo.hdmap.IJunction[];

            /** Map lane. */
            public lane: apollo.hdmap.ILane[];

            /** Map stopSign. */
            public stopSign: apollo.hdmap.IStopSign[];

            /** Map signal. */
            public signal: apollo.hdmap.ISignal[];

            /** Map yield. */
            public yield: apollo.hdmap.IYieldSign[];

            /** Map overlap. */
            public overlap: apollo.hdmap.IOverlap[];

            /** Map clearArea. */
            public clearArea: apollo.hdmap.IClearArea[];

            /** Map speedBump. */
            public speedBump: apollo.hdmap.ISpeedBump[];

            /** Map road. */
            public road: apollo.hdmap.IRoad[];

            /** Map parkingSpace. */
            public parkingSpace: apollo.hdmap.IParkingSpace[];

            /** Map pncJunction. */
            public pncJunction: apollo.hdmap.IPNCJunction[];

            /** Map rsu. */
            public rsu: apollo.hdmap.IRSU[];

            /**
             * Creates a new Map instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Map instance
             */
            public static create(properties?: apollo.hdmap.IMap): apollo.hdmap.Map;

            /**
             * Encodes the specified Map message. Does not implicitly {@link apollo.hdmap.Map.verify|verify} messages.
             * @param message Map message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IMap, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Map message, length delimited. Does not implicitly {@link apollo.hdmap.Map.verify|verify} messages.
             * @param message Map message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IMap, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Map message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Map
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Map;

            /**
             * Decodes a Map message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Map
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Map;

            /**
             * Verifies a Map message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Map message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Map
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Map;

            /**
             * Creates a plain object from a Map message. Also converts values to other types if specified.
             * @param message Map
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Map, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Map to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Map
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ClearArea. */
        interface IClearArea {

            /** ClearArea id */
            id?: (apollo.hdmap.IId|null);

            /** ClearArea overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** ClearArea polygon */
            polygon?: (apollo.hdmap.IPolygon|null);
        }

        /** Represents a ClearArea. */
        class ClearArea implements IClearArea {

            /**
             * Constructs a new ClearArea.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IClearArea);

            /** ClearArea id. */
            public id?: (apollo.hdmap.IId|null);

            /** ClearArea overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** ClearArea polygon. */
            public polygon?: (apollo.hdmap.IPolygon|null);

            /**
             * Creates a new ClearArea instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ClearArea instance
             */
            public static create(properties?: apollo.hdmap.IClearArea): apollo.hdmap.ClearArea;

            /**
             * Encodes the specified ClearArea message. Does not implicitly {@link apollo.hdmap.ClearArea.verify|verify} messages.
             * @param message ClearArea message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IClearArea, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ClearArea message, length delimited. Does not implicitly {@link apollo.hdmap.ClearArea.verify|verify} messages.
             * @param message ClearArea message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IClearArea, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ClearArea message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ClearArea
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.ClearArea;

            /**
             * Decodes a ClearArea message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ClearArea
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.ClearArea;

            /**
             * Verifies a ClearArea message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ClearArea message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ClearArea
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.ClearArea;

            /**
             * Creates a plain object from a ClearArea message. Also converts values to other types if specified.
             * @param message ClearArea
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.ClearArea, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ClearArea to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ClearArea
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Crosswalk. */
        interface ICrosswalk {

            /** Crosswalk id */
            id?: (apollo.hdmap.IId|null);

            /** Crosswalk polygon */
            polygon?: (apollo.hdmap.IPolygon|null);

            /** Crosswalk overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);
        }

        /** Represents a Crosswalk. */
        class Crosswalk implements ICrosswalk {

            /**
             * Constructs a new Crosswalk.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ICrosswalk);

            /** Crosswalk id. */
            public id?: (apollo.hdmap.IId|null);

            /** Crosswalk polygon. */
            public polygon?: (apollo.hdmap.IPolygon|null);

            /** Crosswalk overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /**
             * Creates a new Crosswalk instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Crosswalk instance
             */
            public static create(properties?: apollo.hdmap.ICrosswalk): apollo.hdmap.Crosswalk;

            /**
             * Encodes the specified Crosswalk message. Does not implicitly {@link apollo.hdmap.Crosswalk.verify|verify} messages.
             * @param message Crosswalk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ICrosswalk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Crosswalk message, length delimited. Does not implicitly {@link apollo.hdmap.Crosswalk.verify|verify} messages.
             * @param message Crosswalk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ICrosswalk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Crosswalk message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Crosswalk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Crosswalk;

            /**
             * Decodes a Crosswalk message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Crosswalk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Crosswalk;

            /**
             * Verifies a Crosswalk message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Crosswalk message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Crosswalk
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Crosswalk;

            /**
             * Creates a plain object from a Crosswalk message. Also converts values to other types if specified.
             * @param message Crosswalk
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Crosswalk, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Crosswalk to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Crosswalk
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Polygon. */
        interface IPolygon {

            /** Polygon point */
            point?: (apollo.common.IPointENU[]|null);
        }

        /** Represents a Polygon. */
        class Polygon implements IPolygon {

            /**
             * Constructs a new Polygon.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IPolygon);

            /** Polygon point. */
            public point: apollo.common.IPointENU[];

            /**
             * Creates a new Polygon instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Polygon instance
             */
            public static create(properties?: apollo.hdmap.IPolygon): apollo.hdmap.Polygon;

            /**
             * Encodes the specified Polygon message. Does not implicitly {@link apollo.hdmap.Polygon.verify|verify} messages.
             * @param message Polygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Polygon message, length delimited. Does not implicitly {@link apollo.hdmap.Polygon.verify|verify} messages.
             * @param message Polygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Polygon message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Polygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Polygon;

            /**
             * Decodes a Polygon message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Polygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Polygon;

            /**
             * Verifies a Polygon message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Polygon message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Polygon
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Polygon;

            /**
             * Creates a plain object from a Polygon message. Also converts values to other types if specified.
             * @param message Polygon
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Polygon, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Polygon to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Polygon
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LineSegment. */
        interface ILineSegment {

            /** LineSegment point */
            point?: (apollo.common.IPointENU[]|null);
        }

        /** Represents a LineSegment. */
        class LineSegment implements ILineSegment {

            /**
             * Constructs a new LineSegment.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ILineSegment);

            /** LineSegment point. */
            public point: apollo.common.IPointENU[];

            /**
             * Creates a new LineSegment instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LineSegment instance
             */
            public static create(properties?: apollo.hdmap.ILineSegment): apollo.hdmap.LineSegment;

            /**
             * Encodes the specified LineSegment message. Does not implicitly {@link apollo.hdmap.LineSegment.verify|verify} messages.
             * @param message LineSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ILineSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LineSegment message, length delimited. Does not implicitly {@link apollo.hdmap.LineSegment.verify|verify} messages.
             * @param message LineSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ILineSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LineSegment message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LineSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.LineSegment;

            /**
             * Decodes a LineSegment message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LineSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.LineSegment;

            /**
             * Verifies a LineSegment message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LineSegment message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LineSegment
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.LineSegment;

            /**
             * Creates a plain object from a LineSegment message. Also converts values to other types if specified.
             * @param message LineSegment
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.LineSegment, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LineSegment to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LineSegment
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CurveSegment. */
        interface ICurveSegment {

            /** CurveSegment lineSegment */
            lineSegment?: (apollo.hdmap.ILineSegment|null);

            /** CurveSegment s */
            s?: (number|null);

            /** CurveSegment startPosition */
            startPosition?: (apollo.common.IPointENU|null);

            /** CurveSegment heading */
            heading?: (number|null);

            /** CurveSegment length */
            length?: (number|null);
        }

        /** Represents a CurveSegment. */
        class CurveSegment implements ICurveSegment {

            /**
             * Constructs a new CurveSegment.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ICurveSegment);

            /** CurveSegment lineSegment. */
            public lineSegment?: (apollo.hdmap.ILineSegment|null);

            /** CurveSegment s. */
            public s: number;

            /** CurveSegment startPosition. */
            public startPosition?: (apollo.common.IPointENU|null);

            /** CurveSegment heading. */
            public heading: number;

            /** CurveSegment length. */
            public length: number;

            /** CurveSegment curveType. */
            public curveType?: "lineSegment";

            /**
             * Creates a new CurveSegment instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CurveSegment instance
             */
            public static create(properties?: apollo.hdmap.ICurveSegment): apollo.hdmap.CurveSegment;

            /**
             * Encodes the specified CurveSegment message. Does not implicitly {@link apollo.hdmap.CurveSegment.verify|verify} messages.
             * @param message CurveSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ICurveSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CurveSegment message, length delimited. Does not implicitly {@link apollo.hdmap.CurveSegment.verify|verify} messages.
             * @param message CurveSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ICurveSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CurveSegment message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CurveSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.CurveSegment;

            /**
             * Decodes a CurveSegment message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CurveSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.CurveSegment;

            /**
             * Verifies a CurveSegment message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CurveSegment message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CurveSegment
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.CurveSegment;

            /**
             * Creates a plain object from a CurveSegment message. Also converts values to other types if specified.
             * @param message CurveSegment
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.CurveSegment, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CurveSegment to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CurveSegment
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Curve. */
        interface ICurve {

            /** Curve segment */
            segment?: (apollo.hdmap.ICurveSegment[]|null);
        }

        /** Represents a Curve. */
        class Curve implements ICurve {

            /**
             * Constructs a new Curve.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ICurve);

            /** Curve segment. */
            public segment: apollo.hdmap.ICurveSegment[];

            /**
             * Creates a new Curve instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Curve instance
             */
            public static create(properties?: apollo.hdmap.ICurve): apollo.hdmap.Curve;

            /**
             * Encodes the specified Curve message. Does not implicitly {@link apollo.hdmap.Curve.verify|verify} messages.
             * @param message Curve message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ICurve, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Curve message, length delimited. Does not implicitly {@link apollo.hdmap.Curve.verify|verify} messages.
             * @param message Curve message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ICurve, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Curve message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Curve
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Curve;

            /**
             * Decodes a Curve message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Curve
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Curve;

            /**
             * Verifies a Curve message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Curve message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Curve
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Curve;

            /**
             * Creates a plain object from a Curve message. Also converts values to other types if specified.
             * @param message Curve
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Curve, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Curve to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Curve
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Id. */
        interface IId {

            /** Id id */
            id?: (string|null);
        }

        /** Represents an Id. */
        class Id implements IId {

            /**
             * Constructs a new Id.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IId);

            /** Id id. */
            public id: string;

            /**
             * Creates a new Id instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Id instance
             */
            public static create(properties?: apollo.hdmap.IId): apollo.hdmap.Id;

            /**
             * Encodes the specified Id message. Does not implicitly {@link apollo.hdmap.Id.verify|verify} messages.
             * @param message Id message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IId, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Id message, length delimited. Does not implicitly {@link apollo.hdmap.Id.verify|verify} messages.
             * @param message Id message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IId, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Id message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Id
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Id;

            /**
             * Decodes an Id message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Id
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Id;

            /**
             * Verifies an Id message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Id message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Id
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Id;

            /**
             * Creates a plain object from an Id message. Also converts values to other types if specified.
             * @param message Id
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Id, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Id to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Id
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Junction. */
        interface IJunction {

            /** Junction id */
            id?: (apollo.hdmap.IId|null);

            /** Junction polygon */
            polygon?: (apollo.hdmap.IPolygon|null);

            /** Junction overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** Junction type */
            type?: (apollo.hdmap.Junction.Type|null);
        }

        /** Represents a Junction. */
        class Junction implements IJunction {

            /**
             * Constructs a new Junction.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IJunction);

            /** Junction id. */
            public id?: (apollo.hdmap.IId|null);

            /** Junction polygon. */
            public polygon?: (apollo.hdmap.IPolygon|null);

            /** Junction overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** Junction type. */
            public type: apollo.hdmap.Junction.Type;

            /**
             * Creates a new Junction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Junction instance
             */
            public static create(properties?: apollo.hdmap.IJunction): apollo.hdmap.Junction;

            /**
             * Encodes the specified Junction message. Does not implicitly {@link apollo.hdmap.Junction.verify|verify} messages.
             * @param message Junction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IJunction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Junction message, length delimited. Does not implicitly {@link apollo.hdmap.Junction.verify|verify} messages.
             * @param message Junction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IJunction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Junction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Junction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Junction;

            /**
             * Decodes a Junction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Junction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Junction;

            /**
             * Verifies a Junction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Junction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Junction
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Junction;

            /**
             * Creates a plain object from a Junction message. Also converts values to other types if specified.
             * @param message Junction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Junction, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Junction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Junction
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Junction {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                IN_ROAD = 1,
                CROSS_ROAD = 2,
                FORK_ROAD = 3,
                MAIN_SIDE = 4,
                DEAD_END = 5
            }
        }

        /** Properties of a LaneBoundaryType. */
        interface ILaneBoundaryType {

            /** LaneBoundaryType s */
            s?: (number|null);

            /** LaneBoundaryType types */
            types?: (apollo.hdmap.LaneBoundaryType.Type[]|null);
        }

        /** Represents a LaneBoundaryType. */
        class LaneBoundaryType implements ILaneBoundaryType {

            /**
             * Constructs a new LaneBoundaryType.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ILaneBoundaryType);

            /** LaneBoundaryType s. */
            public s: number;

            /** LaneBoundaryType types. */
            public types: apollo.hdmap.LaneBoundaryType.Type[];

            /**
             * Creates a new LaneBoundaryType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneBoundaryType instance
             */
            public static create(properties?: apollo.hdmap.ILaneBoundaryType): apollo.hdmap.LaneBoundaryType;

            /**
             * Encodes the specified LaneBoundaryType message. Does not implicitly {@link apollo.hdmap.LaneBoundaryType.verify|verify} messages.
             * @param message LaneBoundaryType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ILaneBoundaryType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneBoundaryType message, length delimited. Does not implicitly {@link apollo.hdmap.LaneBoundaryType.verify|verify} messages.
             * @param message LaneBoundaryType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ILaneBoundaryType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneBoundaryType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneBoundaryType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.LaneBoundaryType;

            /**
             * Decodes a LaneBoundaryType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneBoundaryType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.LaneBoundaryType;

            /**
             * Verifies a LaneBoundaryType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneBoundaryType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneBoundaryType
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.LaneBoundaryType;

            /**
             * Creates a plain object from a LaneBoundaryType message. Also converts values to other types if specified.
             * @param message LaneBoundaryType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.LaneBoundaryType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneBoundaryType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneBoundaryType
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace LaneBoundaryType {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                DOTTED_YELLOW = 1,
                DOTTED_WHITE = 2,
                SOLID_YELLOW = 3,
                SOLID_WHITE = 4,
                DOUBLE_YELLOW = 5,
                CURB = 6
            }
        }

        /** Properties of a LaneBoundary. */
        interface ILaneBoundary {

            /** LaneBoundary curve */
            curve?: (apollo.hdmap.ICurve|null);

            /** LaneBoundary length */
            length?: (number|null);

            /** LaneBoundary virtual */
            virtual?: (boolean|null);

            /** LaneBoundary boundaryType */
            boundaryType?: (apollo.hdmap.ILaneBoundaryType[]|null);
        }

        /** Represents a LaneBoundary. */
        class LaneBoundary implements ILaneBoundary {

            /**
             * Constructs a new LaneBoundary.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ILaneBoundary);

            /** LaneBoundary curve. */
            public curve?: (apollo.hdmap.ICurve|null);

            /** LaneBoundary length. */
            public length: number;

            /** LaneBoundary virtual. */
            public virtual: boolean;

            /** LaneBoundary boundaryType. */
            public boundaryType: apollo.hdmap.ILaneBoundaryType[];

            /**
             * Creates a new LaneBoundary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneBoundary instance
             */
            public static create(properties?: apollo.hdmap.ILaneBoundary): apollo.hdmap.LaneBoundary;

            /**
             * Encodes the specified LaneBoundary message. Does not implicitly {@link apollo.hdmap.LaneBoundary.verify|verify} messages.
             * @param message LaneBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ILaneBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneBoundary message, length delimited. Does not implicitly {@link apollo.hdmap.LaneBoundary.verify|verify} messages.
             * @param message LaneBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ILaneBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneBoundary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.LaneBoundary;

            /**
             * Decodes a LaneBoundary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.LaneBoundary;

            /**
             * Verifies a LaneBoundary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneBoundary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneBoundary
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.LaneBoundary;

            /**
             * Creates a plain object from a LaneBoundary message. Also converts values to other types if specified.
             * @param message LaneBoundary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.LaneBoundary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneBoundary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneBoundary
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneSampleAssociation. */
        interface ILaneSampleAssociation {

            /** LaneSampleAssociation s */
            s?: (number|null);

            /** LaneSampleAssociation width */
            width?: (number|null);
        }

        /** Represents a LaneSampleAssociation. */
        class LaneSampleAssociation implements ILaneSampleAssociation {

            /**
             * Constructs a new LaneSampleAssociation.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ILaneSampleAssociation);

            /** LaneSampleAssociation s. */
            public s: number;

            /** LaneSampleAssociation width. */
            public width: number;

            /**
             * Creates a new LaneSampleAssociation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneSampleAssociation instance
             */
            public static create(properties?: apollo.hdmap.ILaneSampleAssociation): apollo.hdmap.LaneSampleAssociation;

            /**
             * Encodes the specified LaneSampleAssociation message. Does not implicitly {@link apollo.hdmap.LaneSampleAssociation.verify|verify} messages.
             * @param message LaneSampleAssociation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ILaneSampleAssociation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneSampleAssociation message, length delimited. Does not implicitly {@link apollo.hdmap.LaneSampleAssociation.verify|verify} messages.
             * @param message LaneSampleAssociation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ILaneSampleAssociation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneSampleAssociation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneSampleAssociation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.LaneSampleAssociation;

            /**
             * Decodes a LaneSampleAssociation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneSampleAssociation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.LaneSampleAssociation;

            /**
             * Verifies a LaneSampleAssociation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneSampleAssociation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneSampleAssociation
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.LaneSampleAssociation;

            /**
             * Creates a plain object from a LaneSampleAssociation message. Also converts values to other types if specified.
             * @param message LaneSampleAssociation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.LaneSampleAssociation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneSampleAssociation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneSampleAssociation
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Lane. */
        interface ILane {

            /** Lane id */
            id?: (apollo.hdmap.IId|null);

            /** Lane centralCurve */
            centralCurve?: (apollo.hdmap.ICurve|null);

            /** Lane leftBoundary */
            leftBoundary?: (apollo.hdmap.ILaneBoundary|null);

            /** Lane rightBoundary */
            rightBoundary?: (apollo.hdmap.ILaneBoundary|null);

            /** Lane length */
            length?: (number|null);

            /** Lane speedLimit */
            speedLimit?: (number|null);

            /** Lane overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** Lane predecessorId */
            predecessorId?: (apollo.hdmap.IId[]|null);

            /** Lane successorId */
            successorId?: (apollo.hdmap.IId[]|null);

            /** Lane leftNeighborForwardLaneId */
            leftNeighborForwardLaneId?: (apollo.hdmap.IId[]|null);

            /** Lane rightNeighborForwardLaneId */
            rightNeighborForwardLaneId?: (apollo.hdmap.IId[]|null);

            /** Lane type */
            type?: (apollo.hdmap.Lane.LaneType|null);

            /** Lane turn */
            turn?: (apollo.hdmap.Lane.LaneTurn|null);

            /** Lane leftNeighborReverseLaneId */
            leftNeighborReverseLaneId?: (apollo.hdmap.IId[]|null);

            /** Lane rightNeighborReverseLaneId */
            rightNeighborReverseLaneId?: (apollo.hdmap.IId[]|null);

            /** Lane junctionId */
            junctionId?: (apollo.hdmap.IId|null);

            /** Lane leftSample */
            leftSample?: (apollo.hdmap.ILaneSampleAssociation[]|null);

            /** Lane rightSample */
            rightSample?: (apollo.hdmap.ILaneSampleAssociation[]|null);

            /** Lane direction */
            direction?: (apollo.hdmap.Lane.LaneDirection|null);

            /** Lane leftRoadSample */
            leftRoadSample?: (apollo.hdmap.ILaneSampleAssociation[]|null);

            /** Lane rightRoadSample */
            rightRoadSample?: (apollo.hdmap.ILaneSampleAssociation[]|null);

            /** Lane selfReverseLaneId */
            selfReverseLaneId?: (apollo.hdmap.IId[]|null);
        }

        /** Represents a Lane. */
        class Lane implements ILane {

            /**
             * Constructs a new Lane.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ILane);

            /** Lane id. */
            public id?: (apollo.hdmap.IId|null);

            /** Lane centralCurve. */
            public centralCurve?: (apollo.hdmap.ICurve|null);

            /** Lane leftBoundary. */
            public leftBoundary?: (apollo.hdmap.ILaneBoundary|null);

            /** Lane rightBoundary. */
            public rightBoundary?: (apollo.hdmap.ILaneBoundary|null);

            /** Lane length. */
            public length: number;

            /** Lane speedLimit. */
            public speedLimit: number;

            /** Lane overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** Lane predecessorId. */
            public predecessorId: apollo.hdmap.IId[];

            /** Lane successorId. */
            public successorId: apollo.hdmap.IId[];

            /** Lane leftNeighborForwardLaneId. */
            public leftNeighborForwardLaneId: apollo.hdmap.IId[];

            /** Lane rightNeighborForwardLaneId. */
            public rightNeighborForwardLaneId: apollo.hdmap.IId[];

            /** Lane type. */
            public type: apollo.hdmap.Lane.LaneType;

            /** Lane turn. */
            public turn: apollo.hdmap.Lane.LaneTurn;

            /** Lane leftNeighborReverseLaneId. */
            public leftNeighborReverseLaneId: apollo.hdmap.IId[];

            /** Lane rightNeighborReverseLaneId. */
            public rightNeighborReverseLaneId: apollo.hdmap.IId[];

            /** Lane junctionId. */
            public junctionId?: (apollo.hdmap.IId|null);

            /** Lane leftSample. */
            public leftSample: apollo.hdmap.ILaneSampleAssociation[];

            /** Lane rightSample. */
            public rightSample: apollo.hdmap.ILaneSampleAssociation[];

            /** Lane direction. */
            public direction: apollo.hdmap.Lane.LaneDirection;

            /** Lane leftRoadSample. */
            public leftRoadSample: apollo.hdmap.ILaneSampleAssociation[];

            /** Lane rightRoadSample. */
            public rightRoadSample: apollo.hdmap.ILaneSampleAssociation[];

            /** Lane selfReverseLaneId. */
            public selfReverseLaneId: apollo.hdmap.IId[];

            /**
             * Creates a new Lane instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Lane instance
             */
            public static create(properties?: apollo.hdmap.ILane): apollo.hdmap.Lane;

            /**
             * Encodes the specified Lane message. Does not implicitly {@link apollo.hdmap.Lane.verify|verify} messages.
             * @param message Lane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ILane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Lane message, length delimited. Does not implicitly {@link apollo.hdmap.Lane.verify|verify} messages.
             * @param message Lane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ILane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Lane message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Lane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Lane;

            /**
             * Decodes a Lane message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Lane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Lane;

            /**
             * Verifies a Lane message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Lane message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Lane
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Lane;

            /**
             * Creates a plain object from a Lane message. Also converts values to other types if specified.
             * @param message Lane
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Lane, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Lane to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Lane
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Lane {

            /** LaneType enum. */
            enum LaneType {
                NONE = 1,
                CITY_DRIVING = 2,
                BIKING = 3,
                SIDEWALK = 4,
                PARKING = 5,
                SHOULDER = 6
            }

            /** LaneTurn enum. */
            enum LaneTurn {
                NO_TURN = 1,
                LEFT_TURN = 2,
                RIGHT_TURN = 3,
                U_TURN = 4
            }

            /** LaneDirection enum. */
            enum LaneDirection {
                FORWARD = 1,
                BACKWARD = 2,
                BIDIRECTION = 3
            }
        }

        /** Properties of a LaneOverlapInfo. */
        interface ILaneOverlapInfo {

            /** LaneOverlapInfo startS */
            startS?: (number|null);

            /** LaneOverlapInfo endS */
            endS?: (number|null);

            /** LaneOverlapInfo isMerge */
            isMerge?: (boolean|null);

            /** LaneOverlapInfo regionOverlapId */
            regionOverlapId?: (apollo.hdmap.IId|null);
        }

        /** Represents a LaneOverlapInfo. */
        class LaneOverlapInfo implements ILaneOverlapInfo {

            /**
             * Constructs a new LaneOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ILaneOverlapInfo);

            /** LaneOverlapInfo startS. */
            public startS: number;

            /** LaneOverlapInfo endS. */
            public endS: number;

            /** LaneOverlapInfo isMerge. */
            public isMerge: boolean;

            /** LaneOverlapInfo regionOverlapId. */
            public regionOverlapId?: (apollo.hdmap.IId|null);

            /**
             * Creates a new LaneOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.ILaneOverlapInfo): apollo.hdmap.LaneOverlapInfo;

            /**
             * Encodes the specified LaneOverlapInfo message. Does not implicitly {@link apollo.hdmap.LaneOverlapInfo.verify|verify} messages.
             * @param message LaneOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ILaneOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.LaneOverlapInfo.verify|verify} messages.
             * @param message LaneOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ILaneOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.LaneOverlapInfo;

            /**
             * Decodes a LaneOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.LaneOverlapInfo;

            /**
             * Verifies a LaneOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.LaneOverlapInfo;

            /**
             * Creates a plain object from a LaneOverlapInfo message. Also converts values to other types if specified.
             * @param message LaneOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.LaneOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SignalOverlapInfo. */
        interface ISignalOverlapInfo {
        }

        /** Represents a SignalOverlapInfo. */
        class SignalOverlapInfo implements ISignalOverlapInfo {

            /**
             * Constructs a new SignalOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISignalOverlapInfo);

            /**
             * Creates a new SignalOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SignalOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.ISignalOverlapInfo): apollo.hdmap.SignalOverlapInfo;

            /**
             * Encodes the specified SignalOverlapInfo message. Does not implicitly {@link apollo.hdmap.SignalOverlapInfo.verify|verify} messages.
             * @param message SignalOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISignalOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SignalOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.SignalOverlapInfo.verify|verify} messages.
             * @param message SignalOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISignalOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SignalOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SignalOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.SignalOverlapInfo;

            /**
             * Decodes a SignalOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SignalOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.SignalOverlapInfo;

            /**
             * Verifies a SignalOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SignalOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SignalOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.SignalOverlapInfo;

            /**
             * Creates a plain object from a SignalOverlapInfo message. Also converts values to other types if specified.
             * @param message SignalOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.SignalOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SignalOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SignalOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a StopSignOverlapInfo. */
        interface IStopSignOverlapInfo {
        }

        /** Represents a StopSignOverlapInfo. */
        class StopSignOverlapInfo implements IStopSignOverlapInfo {

            /**
             * Constructs a new StopSignOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IStopSignOverlapInfo);

            /**
             * Creates a new StopSignOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StopSignOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IStopSignOverlapInfo): apollo.hdmap.StopSignOverlapInfo;

            /**
             * Encodes the specified StopSignOverlapInfo message. Does not implicitly {@link apollo.hdmap.StopSignOverlapInfo.verify|verify} messages.
             * @param message StopSignOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IStopSignOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StopSignOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.StopSignOverlapInfo.verify|verify} messages.
             * @param message StopSignOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IStopSignOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StopSignOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StopSignOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.StopSignOverlapInfo;

            /**
             * Decodes a StopSignOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StopSignOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.StopSignOverlapInfo;

            /**
             * Verifies a StopSignOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StopSignOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StopSignOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.StopSignOverlapInfo;

            /**
             * Creates a plain object from a StopSignOverlapInfo message. Also converts values to other types if specified.
             * @param message StopSignOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.StopSignOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StopSignOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for StopSignOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CrosswalkOverlapInfo. */
        interface ICrosswalkOverlapInfo {

            /** CrosswalkOverlapInfo regionOverlapId */
            regionOverlapId?: (apollo.hdmap.IId|null);
        }

        /** Represents a CrosswalkOverlapInfo. */
        class CrosswalkOverlapInfo implements ICrosswalkOverlapInfo {

            /**
             * Constructs a new CrosswalkOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ICrosswalkOverlapInfo);

            /** CrosswalkOverlapInfo regionOverlapId. */
            public regionOverlapId?: (apollo.hdmap.IId|null);

            /**
             * Creates a new CrosswalkOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CrosswalkOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.ICrosswalkOverlapInfo): apollo.hdmap.CrosswalkOverlapInfo;

            /**
             * Encodes the specified CrosswalkOverlapInfo message. Does not implicitly {@link apollo.hdmap.CrosswalkOverlapInfo.verify|verify} messages.
             * @param message CrosswalkOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ICrosswalkOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CrosswalkOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.CrosswalkOverlapInfo.verify|verify} messages.
             * @param message CrosswalkOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ICrosswalkOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CrosswalkOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrosswalkOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.CrosswalkOverlapInfo;

            /**
             * Decodes a CrosswalkOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CrosswalkOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.CrosswalkOverlapInfo;

            /**
             * Verifies a CrosswalkOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CrosswalkOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CrosswalkOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.CrosswalkOverlapInfo;

            /**
             * Creates a plain object from a CrosswalkOverlapInfo message. Also converts values to other types if specified.
             * @param message CrosswalkOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.CrosswalkOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CrosswalkOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CrosswalkOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a JunctionOverlapInfo. */
        interface IJunctionOverlapInfo {
        }

        /** Represents a JunctionOverlapInfo. */
        class JunctionOverlapInfo implements IJunctionOverlapInfo {

            /**
             * Constructs a new JunctionOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IJunctionOverlapInfo);

            /**
             * Creates a new JunctionOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns JunctionOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IJunctionOverlapInfo): apollo.hdmap.JunctionOverlapInfo;

            /**
             * Encodes the specified JunctionOverlapInfo message. Does not implicitly {@link apollo.hdmap.JunctionOverlapInfo.verify|verify} messages.
             * @param message JunctionOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IJunctionOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified JunctionOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.JunctionOverlapInfo.verify|verify} messages.
             * @param message JunctionOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IJunctionOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a JunctionOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns JunctionOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.JunctionOverlapInfo;

            /**
             * Decodes a JunctionOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns JunctionOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.JunctionOverlapInfo;

            /**
             * Verifies a JunctionOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a JunctionOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns JunctionOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.JunctionOverlapInfo;

            /**
             * Creates a plain object from a JunctionOverlapInfo message. Also converts values to other types if specified.
             * @param message JunctionOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.JunctionOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this JunctionOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for JunctionOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a YieldOverlapInfo. */
        interface IYieldOverlapInfo {
        }

        /** Represents a YieldOverlapInfo. */
        class YieldOverlapInfo implements IYieldOverlapInfo {

            /**
             * Constructs a new YieldOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IYieldOverlapInfo);

            /**
             * Creates a new YieldOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns YieldOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IYieldOverlapInfo): apollo.hdmap.YieldOverlapInfo;

            /**
             * Encodes the specified YieldOverlapInfo message. Does not implicitly {@link apollo.hdmap.YieldOverlapInfo.verify|verify} messages.
             * @param message YieldOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IYieldOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified YieldOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.YieldOverlapInfo.verify|verify} messages.
             * @param message YieldOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IYieldOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a YieldOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns YieldOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.YieldOverlapInfo;

            /**
             * Decodes a YieldOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns YieldOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.YieldOverlapInfo;

            /**
             * Verifies a YieldOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a YieldOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns YieldOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.YieldOverlapInfo;

            /**
             * Creates a plain object from a YieldOverlapInfo message. Also converts values to other types if specified.
             * @param message YieldOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.YieldOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this YieldOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for YieldOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ClearAreaOverlapInfo. */
        interface IClearAreaOverlapInfo {
        }

        /** Represents a ClearAreaOverlapInfo. */
        class ClearAreaOverlapInfo implements IClearAreaOverlapInfo {

            /**
             * Constructs a new ClearAreaOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IClearAreaOverlapInfo);

            /**
             * Creates a new ClearAreaOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ClearAreaOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IClearAreaOverlapInfo): apollo.hdmap.ClearAreaOverlapInfo;

            /**
             * Encodes the specified ClearAreaOverlapInfo message. Does not implicitly {@link apollo.hdmap.ClearAreaOverlapInfo.verify|verify} messages.
             * @param message ClearAreaOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IClearAreaOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ClearAreaOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.ClearAreaOverlapInfo.verify|verify} messages.
             * @param message ClearAreaOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IClearAreaOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ClearAreaOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ClearAreaOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.ClearAreaOverlapInfo;

            /**
             * Decodes a ClearAreaOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ClearAreaOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.ClearAreaOverlapInfo;

            /**
             * Verifies a ClearAreaOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ClearAreaOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ClearAreaOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.ClearAreaOverlapInfo;

            /**
             * Creates a plain object from a ClearAreaOverlapInfo message. Also converts values to other types if specified.
             * @param message ClearAreaOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.ClearAreaOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ClearAreaOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ClearAreaOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpeedBumpOverlapInfo. */
        interface ISpeedBumpOverlapInfo {
        }

        /** Represents a SpeedBumpOverlapInfo. */
        class SpeedBumpOverlapInfo implements ISpeedBumpOverlapInfo {

            /**
             * Constructs a new SpeedBumpOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISpeedBumpOverlapInfo);

            /**
             * Creates a new SpeedBumpOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedBumpOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.ISpeedBumpOverlapInfo): apollo.hdmap.SpeedBumpOverlapInfo;

            /**
             * Encodes the specified SpeedBumpOverlapInfo message. Does not implicitly {@link apollo.hdmap.SpeedBumpOverlapInfo.verify|verify} messages.
             * @param message SpeedBumpOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISpeedBumpOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedBumpOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.SpeedBumpOverlapInfo.verify|verify} messages.
             * @param message SpeedBumpOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISpeedBumpOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedBumpOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedBumpOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.SpeedBumpOverlapInfo;

            /**
             * Decodes a SpeedBumpOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedBumpOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.SpeedBumpOverlapInfo;

            /**
             * Verifies a SpeedBumpOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedBumpOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedBumpOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.SpeedBumpOverlapInfo;

            /**
             * Creates a plain object from a SpeedBumpOverlapInfo message. Also converts values to other types if specified.
             * @param message SpeedBumpOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.SpeedBumpOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedBumpOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedBumpOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ParkingSpaceOverlapInfo. */
        interface IParkingSpaceOverlapInfo {
        }

        /** Represents a ParkingSpaceOverlapInfo. */
        class ParkingSpaceOverlapInfo implements IParkingSpaceOverlapInfo {

            /**
             * Constructs a new ParkingSpaceOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IParkingSpaceOverlapInfo);

            /**
             * Creates a new ParkingSpaceOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ParkingSpaceOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IParkingSpaceOverlapInfo): apollo.hdmap.ParkingSpaceOverlapInfo;

            /**
             * Encodes the specified ParkingSpaceOverlapInfo message. Does not implicitly {@link apollo.hdmap.ParkingSpaceOverlapInfo.verify|verify} messages.
             * @param message ParkingSpaceOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IParkingSpaceOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ParkingSpaceOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.ParkingSpaceOverlapInfo.verify|verify} messages.
             * @param message ParkingSpaceOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IParkingSpaceOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ParkingSpaceOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ParkingSpaceOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.ParkingSpaceOverlapInfo;

            /**
             * Decodes a ParkingSpaceOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ParkingSpaceOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.ParkingSpaceOverlapInfo;

            /**
             * Verifies a ParkingSpaceOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ParkingSpaceOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ParkingSpaceOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.ParkingSpaceOverlapInfo;

            /**
             * Creates a plain object from a ParkingSpaceOverlapInfo message. Also converts values to other types if specified.
             * @param message ParkingSpaceOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.ParkingSpaceOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ParkingSpaceOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ParkingSpaceOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PNCJunctionOverlapInfo. */
        interface IPNCJunctionOverlapInfo {
        }

        /** Represents a PNCJunctionOverlapInfo. */
        class PNCJunctionOverlapInfo implements IPNCJunctionOverlapInfo {

            /**
             * Constructs a new PNCJunctionOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IPNCJunctionOverlapInfo);

            /**
             * Creates a new PNCJunctionOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PNCJunctionOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IPNCJunctionOverlapInfo): apollo.hdmap.PNCJunctionOverlapInfo;

            /**
             * Encodes the specified PNCJunctionOverlapInfo message. Does not implicitly {@link apollo.hdmap.PNCJunctionOverlapInfo.verify|verify} messages.
             * @param message PNCJunctionOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IPNCJunctionOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PNCJunctionOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.PNCJunctionOverlapInfo.verify|verify} messages.
             * @param message PNCJunctionOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IPNCJunctionOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PNCJunctionOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PNCJunctionOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.PNCJunctionOverlapInfo;

            /**
             * Decodes a PNCJunctionOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PNCJunctionOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.PNCJunctionOverlapInfo;

            /**
             * Verifies a PNCJunctionOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PNCJunctionOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PNCJunctionOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.PNCJunctionOverlapInfo;

            /**
             * Creates a plain object from a PNCJunctionOverlapInfo message. Also converts values to other types if specified.
             * @param message PNCJunctionOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.PNCJunctionOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PNCJunctionOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PNCJunctionOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RSUOverlapInfo. */
        interface IRSUOverlapInfo {
        }

        /** Represents a RSUOverlapInfo. */
        class RSUOverlapInfo implements IRSUOverlapInfo {

            /**
             * Constructs a new RSUOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IRSUOverlapInfo);

            /**
             * Creates a new RSUOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RSUOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IRSUOverlapInfo): apollo.hdmap.RSUOverlapInfo;

            /**
             * Encodes the specified RSUOverlapInfo message. Does not implicitly {@link apollo.hdmap.RSUOverlapInfo.verify|verify} messages.
             * @param message RSUOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IRSUOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RSUOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.RSUOverlapInfo.verify|verify} messages.
             * @param message RSUOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IRSUOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RSUOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RSUOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.RSUOverlapInfo;

            /**
             * Decodes a RSUOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RSUOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.RSUOverlapInfo;

            /**
             * Verifies a RSUOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RSUOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RSUOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.RSUOverlapInfo;

            /**
             * Creates a plain object from a RSUOverlapInfo message. Also converts values to other types if specified.
             * @param message RSUOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.RSUOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RSUOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RSUOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RegionOverlapInfo. */
        interface IRegionOverlapInfo {

            /** RegionOverlapInfo id */
            id?: (apollo.hdmap.IId|null);

            /** RegionOverlapInfo polygon */
            polygon?: (apollo.hdmap.IPolygon[]|null);
        }

        /** Represents a RegionOverlapInfo. */
        class RegionOverlapInfo implements IRegionOverlapInfo {

            /**
             * Constructs a new RegionOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IRegionOverlapInfo);

            /** RegionOverlapInfo id. */
            public id?: (apollo.hdmap.IId|null);

            /** RegionOverlapInfo polygon. */
            public polygon: apollo.hdmap.IPolygon[];

            /**
             * Creates a new RegionOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RegionOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IRegionOverlapInfo): apollo.hdmap.RegionOverlapInfo;

            /**
             * Encodes the specified RegionOverlapInfo message. Does not implicitly {@link apollo.hdmap.RegionOverlapInfo.verify|verify} messages.
             * @param message RegionOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IRegionOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RegionOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.RegionOverlapInfo.verify|verify} messages.
             * @param message RegionOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IRegionOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RegionOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RegionOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.RegionOverlapInfo;

            /**
             * Decodes a RegionOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RegionOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.RegionOverlapInfo;

            /**
             * Verifies a RegionOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RegionOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RegionOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.RegionOverlapInfo;

            /**
             * Creates a plain object from a RegionOverlapInfo message. Also converts values to other types if specified.
             * @param message RegionOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.RegionOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RegionOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RegionOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectOverlapInfo. */
        interface IObjectOverlapInfo {

            /** ObjectOverlapInfo id */
            id?: (apollo.hdmap.IId|null);

            /** ObjectOverlapInfo laneOverlapInfo */
            laneOverlapInfo?: (apollo.hdmap.ILaneOverlapInfo|null);

            /** ObjectOverlapInfo signalOverlapInfo */
            signalOverlapInfo?: (apollo.hdmap.ISignalOverlapInfo|null);

            /** ObjectOverlapInfo stopSignOverlapInfo */
            stopSignOverlapInfo?: (apollo.hdmap.IStopSignOverlapInfo|null);

            /** ObjectOverlapInfo crosswalkOverlapInfo */
            crosswalkOverlapInfo?: (apollo.hdmap.ICrosswalkOverlapInfo|null);

            /** ObjectOverlapInfo junctionOverlapInfo */
            junctionOverlapInfo?: (apollo.hdmap.IJunctionOverlapInfo|null);

            /** ObjectOverlapInfo yieldSignOverlapInfo */
            yieldSignOverlapInfo?: (apollo.hdmap.IYieldOverlapInfo|null);

            /** ObjectOverlapInfo clearAreaOverlapInfo */
            clearAreaOverlapInfo?: (apollo.hdmap.IClearAreaOverlapInfo|null);

            /** ObjectOverlapInfo speedBumpOverlapInfo */
            speedBumpOverlapInfo?: (apollo.hdmap.ISpeedBumpOverlapInfo|null);

            /** ObjectOverlapInfo parkingSpaceOverlapInfo */
            parkingSpaceOverlapInfo?: (apollo.hdmap.IParkingSpaceOverlapInfo|null);

            /** ObjectOverlapInfo pncJunctionOverlapInfo */
            pncJunctionOverlapInfo?: (apollo.hdmap.IPNCJunctionOverlapInfo|null);

            /** ObjectOverlapInfo rsuOverlapInfo */
            rsuOverlapInfo?: (apollo.hdmap.IRSUOverlapInfo|null);
        }

        /** Represents an ObjectOverlapInfo. */
        class ObjectOverlapInfo implements IObjectOverlapInfo {

            /**
             * Constructs a new ObjectOverlapInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IObjectOverlapInfo);

            /** ObjectOverlapInfo id. */
            public id?: (apollo.hdmap.IId|null);

            /** ObjectOverlapInfo laneOverlapInfo. */
            public laneOverlapInfo?: (apollo.hdmap.ILaneOverlapInfo|null);

            /** ObjectOverlapInfo signalOverlapInfo. */
            public signalOverlapInfo?: (apollo.hdmap.ISignalOverlapInfo|null);

            /** ObjectOverlapInfo stopSignOverlapInfo. */
            public stopSignOverlapInfo?: (apollo.hdmap.IStopSignOverlapInfo|null);

            /** ObjectOverlapInfo crosswalkOverlapInfo. */
            public crosswalkOverlapInfo?: (apollo.hdmap.ICrosswalkOverlapInfo|null);

            /** ObjectOverlapInfo junctionOverlapInfo. */
            public junctionOverlapInfo?: (apollo.hdmap.IJunctionOverlapInfo|null);

            /** ObjectOverlapInfo yieldSignOverlapInfo. */
            public yieldSignOverlapInfo?: (apollo.hdmap.IYieldOverlapInfo|null);

            /** ObjectOverlapInfo clearAreaOverlapInfo. */
            public clearAreaOverlapInfo?: (apollo.hdmap.IClearAreaOverlapInfo|null);

            /** ObjectOverlapInfo speedBumpOverlapInfo. */
            public speedBumpOverlapInfo?: (apollo.hdmap.ISpeedBumpOverlapInfo|null);

            /** ObjectOverlapInfo parkingSpaceOverlapInfo. */
            public parkingSpaceOverlapInfo?: (apollo.hdmap.IParkingSpaceOverlapInfo|null);

            /** ObjectOverlapInfo pncJunctionOverlapInfo. */
            public pncJunctionOverlapInfo?: (apollo.hdmap.IPNCJunctionOverlapInfo|null);

            /** ObjectOverlapInfo rsuOverlapInfo. */
            public rsuOverlapInfo?: (apollo.hdmap.IRSUOverlapInfo|null);

            /** ObjectOverlapInfo overlapInfo. */
            public overlapInfo?: ("laneOverlapInfo"|"signalOverlapInfo"|"stopSignOverlapInfo"|"crosswalkOverlapInfo"|"junctionOverlapInfo"|"yieldSignOverlapInfo"|"clearAreaOverlapInfo"|"speedBumpOverlapInfo"|"parkingSpaceOverlapInfo"|"pncJunctionOverlapInfo"|"rsuOverlapInfo");

            /**
             * Creates a new ObjectOverlapInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectOverlapInfo instance
             */
            public static create(properties?: apollo.hdmap.IObjectOverlapInfo): apollo.hdmap.ObjectOverlapInfo;

            /**
             * Encodes the specified ObjectOverlapInfo message. Does not implicitly {@link apollo.hdmap.ObjectOverlapInfo.verify|verify} messages.
             * @param message ObjectOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IObjectOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectOverlapInfo message, length delimited. Does not implicitly {@link apollo.hdmap.ObjectOverlapInfo.verify|verify} messages.
             * @param message ObjectOverlapInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IObjectOverlapInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectOverlapInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.ObjectOverlapInfo;

            /**
             * Decodes an ObjectOverlapInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectOverlapInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.ObjectOverlapInfo;

            /**
             * Verifies an ObjectOverlapInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectOverlapInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectOverlapInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.ObjectOverlapInfo;

            /**
             * Creates a plain object from an ObjectOverlapInfo message. Also converts values to other types if specified.
             * @param message ObjectOverlapInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.ObjectOverlapInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectOverlapInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectOverlapInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Overlap. */
        interface IOverlap {

            /** Overlap id */
            id?: (apollo.hdmap.IId|null);

            /** Overlap object */
            object?: (apollo.hdmap.IObjectOverlapInfo[]|null);

            /** Overlap regionOverlap */
            regionOverlap?: (apollo.hdmap.IRegionOverlapInfo[]|null);
        }

        /** Represents an Overlap. */
        class Overlap implements IOverlap {

            /**
             * Constructs a new Overlap.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IOverlap);

            /** Overlap id. */
            public id?: (apollo.hdmap.IId|null);

            /** Overlap object. */
            public object: apollo.hdmap.IObjectOverlapInfo[];

            /** Overlap regionOverlap. */
            public regionOverlap: apollo.hdmap.IRegionOverlapInfo[];

            /**
             * Creates a new Overlap instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Overlap instance
             */
            public static create(properties?: apollo.hdmap.IOverlap): apollo.hdmap.Overlap;

            /**
             * Encodes the specified Overlap message. Does not implicitly {@link apollo.hdmap.Overlap.verify|verify} messages.
             * @param message Overlap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IOverlap, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Overlap message, length delimited. Does not implicitly {@link apollo.hdmap.Overlap.verify|verify} messages.
             * @param message Overlap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IOverlap, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Overlap message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Overlap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Overlap;

            /**
             * Decodes an Overlap message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Overlap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Overlap;

            /**
             * Verifies an Overlap message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Overlap message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Overlap
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Overlap;

            /**
             * Creates a plain object from an Overlap message. Also converts values to other types if specified.
             * @param message Overlap
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Overlap, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Overlap to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Overlap
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ParkingSpace. */
        interface IParkingSpace {

            /** ParkingSpace id */
            id?: (apollo.hdmap.IId|null);

            /** ParkingSpace polygon */
            polygon?: (apollo.hdmap.IPolygon|null);

            /** ParkingSpace overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** ParkingSpace heading */
            heading?: (number|null);
        }

        /** Represents a ParkingSpace. */
        class ParkingSpace implements IParkingSpace {

            /**
             * Constructs a new ParkingSpace.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IParkingSpace);

            /** ParkingSpace id. */
            public id?: (apollo.hdmap.IId|null);

            /** ParkingSpace polygon. */
            public polygon?: (apollo.hdmap.IPolygon|null);

            /** ParkingSpace overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** ParkingSpace heading. */
            public heading: number;

            /**
             * Creates a new ParkingSpace instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ParkingSpace instance
             */
            public static create(properties?: apollo.hdmap.IParkingSpace): apollo.hdmap.ParkingSpace;

            /**
             * Encodes the specified ParkingSpace message. Does not implicitly {@link apollo.hdmap.ParkingSpace.verify|verify} messages.
             * @param message ParkingSpace message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IParkingSpace, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ParkingSpace message, length delimited. Does not implicitly {@link apollo.hdmap.ParkingSpace.verify|verify} messages.
             * @param message ParkingSpace message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IParkingSpace, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ParkingSpace message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ParkingSpace
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.ParkingSpace;

            /**
             * Decodes a ParkingSpace message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ParkingSpace
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.ParkingSpace;

            /**
             * Verifies a ParkingSpace message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ParkingSpace message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ParkingSpace
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.ParkingSpace;

            /**
             * Creates a plain object from a ParkingSpace message. Also converts values to other types if specified.
             * @param message ParkingSpace
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.ParkingSpace, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ParkingSpace to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ParkingSpace
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ParkingLot. */
        interface IParkingLot {

            /** ParkingLot id */
            id?: (apollo.hdmap.IId|null);

            /** ParkingLot polygon */
            polygon?: (apollo.hdmap.IPolygon|null);

            /** ParkingLot overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);
        }

        /** Represents a ParkingLot. */
        class ParkingLot implements IParkingLot {

            /**
             * Constructs a new ParkingLot.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IParkingLot);

            /** ParkingLot id. */
            public id?: (apollo.hdmap.IId|null);

            /** ParkingLot polygon. */
            public polygon?: (apollo.hdmap.IPolygon|null);

            /** ParkingLot overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /**
             * Creates a new ParkingLot instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ParkingLot instance
             */
            public static create(properties?: apollo.hdmap.IParkingLot): apollo.hdmap.ParkingLot;

            /**
             * Encodes the specified ParkingLot message. Does not implicitly {@link apollo.hdmap.ParkingLot.verify|verify} messages.
             * @param message ParkingLot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IParkingLot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ParkingLot message, length delimited. Does not implicitly {@link apollo.hdmap.ParkingLot.verify|verify} messages.
             * @param message ParkingLot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IParkingLot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ParkingLot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ParkingLot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.ParkingLot;

            /**
             * Decodes a ParkingLot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ParkingLot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.ParkingLot;

            /**
             * Verifies a ParkingLot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ParkingLot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ParkingLot
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.ParkingLot;

            /**
             * Creates a plain object from a ParkingLot message. Also converts values to other types if specified.
             * @param message ParkingLot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.ParkingLot, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ParkingLot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ParkingLot
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Passage. */
        interface IPassage {

            /** Passage id */
            id?: (apollo.hdmap.IId|null);

            /** Passage signalId */
            signalId?: (apollo.hdmap.IId[]|null);

            /** Passage yieldId */
            yieldId?: (apollo.hdmap.IId[]|null);

            /** Passage stopSignId */
            stopSignId?: (apollo.hdmap.IId[]|null);

            /** Passage laneId */
            laneId?: (apollo.hdmap.IId[]|null);

            /** Passage type */
            type?: (apollo.hdmap.Passage.Type|null);
        }

        /** Represents a Passage. */
        class Passage implements IPassage {

            /**
             * Constructs a new Passage.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IPassage);

            /** Passage id. */
            public id?: (apollo.hdmap.IId|null);

            /** Passage signalId. */
            public signalId: apollo.hdmap.IId[];

            /** Passage yieldId. */
            public yieldId: apollo.hdmap.IId[];

            /** Passage stopSignId. */
            public stopSignId: apollo.hdmap.IId[];

            /** Passage laneId. */
            public laneId: apollo.hdmap.IId[];

            /** Passage type. */
            public type: apollo.hdmap.Passage.Type;

            /**
             * Creates a new Passage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Passage instance
             */
            public static create(properties?: apollo.hdmap.IPassage): apollo.hdmap.Passage;

            /**
             * Encodes the specified Passage message. Does not implicitly {@link apollo.hdmap.Passage.verify|verify} messages.
             * @param message Passage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IPassage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Passage message, length delimited. Does not implicitly {@link apollo.hdmap.Passage.verify|verify} messages.
             * @param message Passage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IPassage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Passage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Passage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Passage;

            /**
             * Decodes a Passage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Passage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Passage;

            /**
             * Verifies a Passage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Passage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Passage
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Passage;

            /**
             * Creates a plain object from a Passage message. Also converts values to other types if specified.
             * @param message Passage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Passage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Passage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Passage
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Passage {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                ENTRANCE = 1,
                EXIT = 2
            }
        }

        /** Properties of a PassageGroup. */
        interface IPassageGroup {

            /** PassageGroup id */
            id?: (apollo.hdmap.IId|null);

            /** PassageGroup passage */
            passage?: (apollo.hdmap.IPassage[]|null);
        }

        /** Represents a PassageGroup. */
        class PassageGroup implements IPassageGroup {

            /**
             * Constructs a new PassageGroup.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IPassageGroup);

            /** PassageGroup id. */
            public id?: (apollo.hdmap.IId|null);

            /** PassageGroup passage. */
            public passage: apollo.hdmap.IPassage[];

            /**
             * Creates a new PassageGroup instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PassageGroup instance
             */
            public static create(properties?: apollo.hdmap.IPassageGroup): apollo.hdmap.PassageGroup;

            /**
             * Encodes the specified PassageGroup message. Does not implicitly {@link apollo.hdmap.PassageGroup.verify|verify} messages.
             * @param message PassageGroup message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IPassageGroup, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PassageGroup message, length delimited. Does not implicitly {@link apollo.hdmap.PassageGroup.verify|verify} messages.
             * @param message PassageGroup message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IPassageGroup, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PassageGroup message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PassageGroup
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.PassageGroup;

            /**
             * Decodes a PassageGroup message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PassageGroup
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.PassageGroup;

            /**
             * Verifies a PassageGroup message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PassageGroup message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PassageGroup
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.PassageGroup;

            /**
             * Creates a plain object from a PassageGroup message. Also converts values to other types if specified.
             * @param message PassageGroup
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.PassageGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PassageGroup to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PassageGroup
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PNCJunction. */
        interface IPNCJunction {

            /** PNCJunction id */
            id?: (apollo.hdmap.IId|null);

            /** PNCJunction polygon */
            polygon?: (apollo.hdmap.IPolygon|null);

            /** PNCJunction overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** PNCJunction passageGroup */
            passageGroup?: (apollo.hdmap.IPassageGroup[]|null);
        }

        /** Represents a PNCJunction. */
        class PNCJunction implements IPNCJunction {

            /**
             * Constructs a new PNCJunction.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IPNCJunction);

            /** PNCJunction id. */
            public id?: (apollo.hdmap.IId|null);

            /** PNCJunction polygon. */
            public polygon?: (apollo.hdmap.IPolygon|null);

            /** PNCJunction overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** PNCJunction passageGroup. */
            public passageGroup: apollo.hdmap.IPassageGroup[];

            /**
             * Creates a new PNCJunction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PNCJunction instance
             */
            public static create(properties?: apollo.hdmap.IPNCJunction): apollo.hdmap.PNCJunction;

            /**
             * Encodes the specified PNCJunction message. Does not implicitly {@link apollo.hdmap.PNCJunction.verify|verify} messages.
             * @param message PNCJunction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IPNCJunction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PNCJunction message, length delimited. Does not implicitly {@link apollo.hdmap.PNCJunction.verify|verify} messages.
             * @param message PNCJunction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IPNCJunction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PNCJunction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PNCJunction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.PNCJunction;

            /**
             * Decodes a PNCJunction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PNCJunction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.PNCJunction;

            /**
             * Verifies a PNCJunction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PNCJunction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PNCJunction
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.PNCJunction;

            /**
             * Creates a plain object from a PNCJunction message. Also converts values to other types if specified.
             * @param message PNCJunction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.PNCJunction, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PNCJunction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PNCJunction
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a BoundaryEdge. */
        interface IBoundaryEdge {

            /** BoundaryEdge curve */
            curve?: (apollo.hdmap.ICurve|null);

            /** BoundaryEdge type */
            type?: (apollo.hdmap.BoundaryEdge.Type|null);
        }

        /** Represents a BoundaryEdge. */
        class BoundaryEdge implements IBoundaryEdge {

            /**
             * Constructs a new BoundaryEdge.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IBoundaryEdge);

            /** BoundaryEdge curve. */
            public curve?: (apollo.hdmap.ICurve|null);

            /** BoundaryEdge type. */
            public type: apollo.hdmap.BoundaryEdge.Type;

            /**
             * Creates a new BoundaryEdge instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BoundaryEdge instance
             */
            public static create(properties?: apollo.hdmap.IBoundaryEdge): apollo.hdmap.BoundaryEdge;

            /**
             * Encodes the specified BoundaryEdge message. Does not implicitly {@link apollo.hdmap.BoundaryEdge.verify|verify} messages.
             * @param message BoundaryEdge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IBoundaryEdge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BoundaryEdge message, length delimited. Does not implicitly {@link apollo.hdmap.BoundaryEdge.verify|verify} messages.
             * @param message BoundaryEdge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IBoundaryEdge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BoundaryEdge message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BoundaryEdge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.BoundaryEdge;

            /**
             * Decodes a BoundaryEdge message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BoundaryEdge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.BoundaryEdge;

            /**
             * Verifies a BoundaryEdge message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BoundaryEdge message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BoundaryEdge
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.BoundaryEdge;

            /**
             * Creates a plain object from a BoundaryEdge message. Also converts values to other types if specified.
             * @param message BoundaryEdge
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.BoundaryEdge, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BoundaryEdge to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for BoundaryEdge
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace BoundaryEdge {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                NORMAL = 1,
                LEFT_BOUNDARY = 2,
                RIGHT_BOUNDARY = 3
            }
        }

        /** Properties of a BoundaryPolygon. */
        interface IBoundaryPolygon {

            /** BoundaryPolygon edge */
            edge?: (apollo.hdmap.IBoundaryEdge[]|null);
        }

        /** Represents a BoundaryPolygon. */
        class BoundaryPolygon implements IBoundaryPolygon {

            /**
             * Constructs a new BoundaryPolygon.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IBoundaryPolygon);

            /** BoundaryPolygon edge. */
            public edge: apollo.hdmap.IBoundaryEdge[];

            /**
             * Creates a new BoundaryPolygon instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BoundaryPolygon instance
             */
            public static create(properties?: apollo.hdmap.IBoundaryPolygon): apollo.hdmap.BoundaryPolygon;

            /**
             * Encodes the specified BoundaryPolygon message. Does not implicitly {@link apollo.hdmap.BoundaryPolygon.verify|verify} messages.
             * @param message BoundaryPolygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IBoundaryPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BoundaryPolygon message, length delimited. Does not implicitly {@link apollo.hdmap.BoundaryPolygon.verify|verify} messages.
             * @param message BoundaryPolygon message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IBoundaryPolygon, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BoundaryPolygon message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BoundaryPolygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.BoundaryPolygon;

            /**
             * Decodes a BoundaryPolygon message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BoundaryPolygon
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.BoundaryPolygon;

            /**
             * Verifies a BoundaryPolygon message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BoundaryPolygon message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BoundaryPolygon
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.BoundaryPolygon;

            /**
             * Creates a plain object from a BoundaryPolygon message. Also converts values to other types if specified.
             * @param message BoundaryPolygon
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.BoundaryPolygon, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BoundaryPolygon to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for BoundaryPolygon
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoadBoundary. */
        interface IRoadBoundary {

            /** RoadBoundary outerPolygon */
            outerPolygon?: (apollo.hdmap.IBoundaryPolygon|null);

            /** RoadBoundary hole */
            hole?: (apollo.hdmap.IBoundaryPolygon[]|null);
        }

        /** Represents a RoadBoundary. */
        class RoadBoundary implements IRoadBoundary {

            /**
             * Constructs a new RoadBoundary.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IRoadBoundary);

            /** RoadBoundary outerPolygon. */
            public outerPolygon?: (apollo.hdmap.IBoundaryPolygon|null);

            /** RoadBoundary hole. */
            public hole: apollo.hdmap.IBoundaryPolygon[];

            /**
             * Creates a new RoadBoundary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoadBoundary instance
             */
            public static create(properties?: apollo.hdmap.IRoadBoundary): apollo.hdmap.RoadBoundary;

            /**
             * Encodes the specified RoadBoundary message. Does not implicitly {@link apollo.hdmap.RoadBoundary.verify|verify} messages.
             * @param message RoadBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IRoadBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoadBoundary message, length delimited. Does not implicitly {@link apollo.hdmap.RoadBoundary.verify|verify} messages.
             * @param message RoadBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IRoadBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoadBoundary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoadBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.RoadBoundary;

            /**
             * Decodes a RoadBoundary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoadBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.RoadBoundary;

            /**
             * Verifies a RoadBoundary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoadBoundary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoadBoundary
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.RoadBoundary;

            /**
             * Creates a plain object from a RoadBoundary message. Also converts values to other types if specified.
             * @param message RoadBoundary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.RoadBoundary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoadBoundary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoadBoundary
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoadROIBoundary. */
        interface IRoadROIBoundary {

            /** RoadROIBoundary id */
            id?: (apollo.hdmap.IId|null);

            /** RoadROIBoundary roadBoundaries */
            roadBoundaries?: (apollo.hdmap.IRoadBoundary[]|null);
        }

        /** Represents a RoadROIBoundary. */
        class RoadROIBoundary implements IRoadROIBoundary {

            /**
             * Constructs a new RoadROIBoundary.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IRoadROIBoundary);

            /** RoadROIBoundary id. */
            public id?: (apollo.hdmap.IId|null);

            /** RoadROIBoundary roadBoundaries. */
            public roadBoundaries: apollo.hdmap.IRoadBoundary[];

            /**
             * Creates a new RoadROIBoundary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoadROIBoundary instance
             */
            public static create(properties?: apollo.hdmap.IRoadROIBoundary): apollo.hdmap.RoadROIBoundary;

            /**
             * Encodes the specified RoadROIBoundary message. Does not implicitly {@link apollo.hdmap.RoadROIBoundary.verify|verify} messages.
             * @param message RoadROIBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IRoadROIBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoadROIBoundary message, length delimited. Does not implicitly {@link apollo.hdmap.RoadROIBoundary.verify|verify} messages.
             * @param message RoadROIBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IRoadROIBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoadROIBoundary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoadROIBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.RoadROIBoundary;

            /**
             * Decodes a RoadROIBoundary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoadROIBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.RoadROIBoundary;

            /**
             * Verifies a RoadROIBoundary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoadROIBoundary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoadROIBoundary
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.RoadROIBoundary;

            /**
             * Creates a plain object from a RoadROIBoundary message. Also converts values to other types if specified.
             * @param message RoadROIBoundary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.RoadROIBoundary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoadROIBoundary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoadROIBoundary
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoadSection. */
        interface IRoadSection {

            /** RoadSection id */
            id?: (apollo.hdmap.IId|null);

            /** RoadSection laneId */
            laneId?: (apollo.hdmap.IId[]|null);

            /** RoadSection boundary */
            boundary?: (apollo.hdmap.IRoadBoundary|null);
        }

        /** Represents a RoadSection. */
        class RoadSection implements IRoadSection {

            /**
             * Constructs a new RoadSection.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IRoadSection);

            /** RoadSection id. */
            public id?: (apollo.hdmap.IId|null);

            /** RoadSection laneId. */
            public laneId: apollo.hdmap.IId[];

            /** RoadSection boundary. */
            public boundary?: (apollo.hdmap.IRoadBoundary|null);

            /**
             * Creates a new RoadSection instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoadSection instance
             */
            public static create(properties?: apollo.hdmap.IRoadSection): apollo.hdmap.RoadSection;

            /**
             * Encodes the specified RoadSection message. Does not implicitly {@link apollo.hdmap.RoadSection.verify|verify} messages.
             * @param message RoadSection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IRoadSection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoadSection message, length delimited. Does not implicitly {@link apollo.hdmap.RoadSection.verify|verify} messages.
             * @param message RoadSection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IRoadSection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoadSection message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoadSection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.RoadSection;

            /**
             * Decodes a RoadSection message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoadSection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.RoadSection;

            /**
             * Verifies a RoadSection message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoadSection message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoadSection
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.RoadSection;

            /**
             * Creates a plain object from a RoadSection message. Also converts values to other types if specified.
             * @param message RoadSection
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.RoadSection, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoadSection to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoadSection
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Road. */
        interface IRoad {

            /** Road id */
            id?: (apollo.hdmap.IId|null);

            /** Road section */
            section?: (apollo.hdmap.IRoadSection[]|null);

            /** Road junctionId */
            junctionId?: (apollo.hdmap.IId|null);

            /** Road type */
            type?: (apollo.hdmap.Road.Type|null);
        }

        /** Represents a Road. */
        class Road implements IRoad {

            /**
             * Constructs a new Road.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IRoad);

            /** Road id. */
            public id?: (apollo.hdmap.IId|null);

            /** Road section. */
            public section: apollo.hdmap.IRoadSection[];

            /** Road junctionId. */
            public junctionId?: (apollo.hdmap.IId|null);

            /** Road type. */
            public type: apollo.hdmap.Road.Type;

            /**
             * Creates a new Road instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Road instance
             */
            public static create(properties?: apollo.hdmap.IRoad): apollo.hdmap.Road;

            /**
             * Encodes the specified Road message. Does not implicitly {@link apollo.hdmap.Road.verify|verify} messages.
             * @param message Road message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IRoad, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Road message, length delimited. Does not implicitly {@link apollo.hdmap.Road.verify|verify} messages.
             * @param message Road message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IRoad, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Road message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Road
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Road;

            /**
             * Decodes a Road message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Road
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Road;

            /**
             * Verifies a Road message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Road message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Road
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Road;

            /**
             * Creates a plain object from a Road message. Also converts values to other types if specified.
             * @param message Road
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Road, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Road to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Road
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Road {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                HIGHWAY = 1,
                CITY_ROAD = 2,
                PARK = 3
            }
        }

        /** Properties of a RSU. */
        interface IRSU {

            /** RSU id */
            id?: (apollo.hdmap.IId|null);

            /** RSU junctionId */
            junctionId?: (apollo.hdmap.IId|null);

            /** RSU overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);
        }

        /** Represents a RSU. */
        class RSU implements IRSU {

            /**
             * Constructs a new RSU.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IRSU);

            /** RSU id. */
            public id?: (apollo.hdmap.IId|null);

            /** RSU junctionId. */
            public junctionId?: (apollo.hdmap.IId|null);

            /** RSU overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /**
             * Creates a new RSU instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RSU instance
             */
            public static create(properties?: apollo.hdmap.IRSU): apollo.hdmap.RSU;

            /**
             * Encodes the specified RSU message. Does not implicitly {@link apollo.hdmap.RSU.verify|verify} messages.
             * @param message RSU message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IRSU, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RSU message, length delimited. Does not implicitly {@link apollo.hdmap.RSU.verify|verify} messages.
             * @param message RSU message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IRSU, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RSU message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RSU
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.RSU;

            /**
             * Decodes a RSU message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RSU
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.RSU;

            /**
             * Verifies a RSU message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RSU message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RSU
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.RSU;

            /**
             * Creates a plain object from a RSU message. Also converts values to other types if specified.
             * @param message RSU
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.RSU, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RSU to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RSU
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Subsignal. */
        interface ISubsignal {

            /** Subsignal id */
            id?: (apollo.hdmap.IId|null);

            /** Subsignal type */
            type?: (apollo.hdmap.Subsignal.Type|null);

            /** Subsignal location */
            location?: (apollo.common.IPointENU|null);
        }

        /** Represents a Subsignal. */
        class Subsignal implements ISubsignal {

            /**
             * Constructs a new Subsignal.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISubsignal);

            /** Subsignal id. */
            public id?: (apollo.hdmap.IId|null);

            /** Subsignal type. */
            public type: apollo.hdmap.Subsignal.Type;

            /** Subsignal location. */
            public location?: (apollo.common.IPointENU|null);

            /**
             * Creates a new Subsignal instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Subsignal instance
             */
            public static create(properties?: apollo.hdmap.ISubsignal): apollo.hdmap.Subsignal;

            /**
             * Encodes the specified Subsignal message. Does not implicitly {@link apollo.hdmap.Subsignal.verify|verify} messages.
             * @param message Subsignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISubsignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Subsignal message, length delimited. Does not implicitly {@link apollo.hdmap.Subsignal.verify|verify} messages.
             * @param message Subsignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISubsignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Subsignal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Subsignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Subsignal;

            /**
             * Decodes a Subsignal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Subsignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Subsignal;

            /**
             * Verifies a Subsignal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Subsignal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Subsignal
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Subsignal;

            /**
             * Creates a plain object from a Subsignal message. Also converts values to other types if specified.
             * @param message Subsignal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Subsignal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Subsignal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Subsignal
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Subsignal {

            /** Type enum. */
            enum Type {
                UNKNOWN = 1,
                CIRCLE = 2,
                ARROW_LEFT = 3,
                ARROW_FORWARD = 4,
                ARROW_RIGHT = 5,
                ARROW_LEFT_AND_FORWARD = 6,
                ARROW_RIGHT_AND_FORWARD = 7,
                ARROW_U_TURN = 8
            }
        }

        /** Properties of a SignInfo. */
        interface ISignInfo {

            /** SignInfo type */
            type?: (apollo.hdmap.SignInfo.Type|null);
        }

        /** Represents a SignInfo. */
        class SignInfo implements ISignInfo {

            /**
             * Constructs a new SignInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISignInfo);

            /** SignInfo type. */
            public type: apollo.hdmap.SignInfo.Type;

            /**
             * Creates a new SignInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SignInfo instance
             */
            public static create(properties?: apollo.hdmap.ISignInfo): apollo.hdmap.SignInfo;

            /**
             * Encodes the specified SignInfo message. Does not implicitly {@link apollo.hdmap.SignInfo.verify|verify} messages.
             * @param message SignInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISignInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SignInfo message, length delimited. Does not implicitly {@link apollo.hdmap.SignInfo.verify|verify} messages.
             * @param message SignInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISignInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SignInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SignInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.SignInfo;

            /**
             * Decodes a SignInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SignInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.SignInfo;

            /**
             * Verifies a SignInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SignInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SignInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.SignInfo;

            /**
             * Creates a plain object from a SignInfo message. Also converts values to other types if specified.
             * @param message SignInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.SignInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SignInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SignInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace SignInfo {

            /** Type enum. */
            enum Type {
                None = 0,
                NO_RIGHT_TURN_ON_RED = 1
            }
        }

        /** Properties of a Signal. */
        interface ISignal {

            /** Signal id */
            id?: (apollo.hdmap.IId|null);

            /** Signal boundary */
            boundary?: (apollo.hdmap.IPolygon|null);

            /** Signal subsignal */
            subsignal?: (apollo.hdmap.ISubsignal[]|null);

            /** Signal overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** Signal type */
            type?: (apollo.hdmap.Signal.Type|null);

            /** Signal stopLine */
            stopLine?: (apollo.hdmap.ICurve[]|null);

            /** Signal signInfo */
            signInfo?: (apollo.hdmap.ISignInfo[]|null);
        }

        /** Represents a Signal. */
        class Signal implements ISignal {

            /**
             * Constructs a new Signal.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISignal);

            /** Signal id. */
            public id?: (apollo.hdmap.IId|null);

            /** Signal boundary. */
            public boundary?: (apollo.hdmap.IPolygon|null);

            /** Signal subsignal. */
            public subsignal: apollo.hdmap.ISubsignal[];

            /** Signal overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** Signal type. */
            public type: apollo.hdmap.Signal.Type;

            /** Signal stopLine. */
            public stopLine: apollo.hdmap.ICurve[];

            /** Signal signInfo. */
            public signInfo: apollo.hdmap.ISignInfo[];

            /**
             * Creates a new Signal instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Signal instance
             */
            public static create(properties?: apollo.hdmap.ISignal): apollo.hdmap.Signal;

            /**
             * Encodes the specified Signal message. Does not implicitly {@link apollo.hdmap.Signal.verify|verify} messages.
             * @param message Signal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Signal message, length delimited. Does not implicitly {@link apollo.hdmap.Signal.verify|verify} messages.
             * @param message Signal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Signal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Signal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.Signal;

            /**
             * Decodes a Signal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Signal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.Signal;

            /**
             * Verifies a Signal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Signal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Signal
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.Signal;

            /**
             * Creates a plain object from a Signal message. Also converts values to other types if specified.
             * @param message Signal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.Signal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Signal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Signal
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Signal {

            /** Type enum. */
            enum Type {
                UNKNOWN = 1,
                MIX_2_HORIZONTAL = 2,
                MIX_2_VERTICAL = 3,
                MIX_3_HORIZONTAL = 4,
                MIX_3_VERTICAL = 5,
                SINGLE = 6
            }
        }

        /** Properties of a SpeedBump. */
        interface ISpeedBump {

            /** SpeedBump id */
            id?: (apollo.hdmap.IId|null);

            /** SpeedBump overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** SpeedBump position */
            position?: (apollo.hdmap.ICurve[]|null);
        }

        /** Represents a SpeedBump. */
        class SpeedBump implements ISpeedBump {

            /**
             * Constructs a new SpeedBump.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISpeedBump);

            /** SpeedBump id. */
            public id?: (apollo.hdmap.IId|null);

            /** SpeedBump overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** SpeedBump position. */
            public position: apollo.hdmap.ICurve[];

            /**
             * Creates a new SpeedBump instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedBump instance
             */
            public static create(properties?: apollo.hdmap.ISpeedBump): apollo.hdmap.SpeedBump;

            /**
             * Encodes the specified SpeedBump message. Does not implicitly {@link apollo.hdmap.SpeedBump.verify|verify} messages.
             * @param message SpeedBump message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISpeedBump, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedBump message, length delimited. Does not implicitly {@link apollo.hdmap.SpeedBump.verify|verify} messages.
             * @param message SpeedBump message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISpeedBump, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedBump message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedBump
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.SpeedBump;

            /**
             * Decodes a SpeedBump message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedBump
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.SpeedBump;

            /**
             * Verifies a SpeedBump message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedBump message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedBump
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.SpeedBump;

            /**
             * Creates a plain object from a SpeedBump message. Also converts values to other types if specified.
             * @param message SpeedBump
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.SpeedBump, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedBump to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedBump
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpeedControl. */
        interface ISpeedControl {

            /** SpeedControl name */
            name?: (string|null);

            /** SpeedControl polygon */
            polygon?: (apollo.hdmap.IPolygon|null);

            /** SpeedControl speedLimit */
            speedLimit?: (number|null);
        }

        /** Represents a SpeedControl. */
        class SpeedControl implements ISpeedControl {

            /**
             * Constructs a new SpeedControl.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISpeedControl);

            /** SpeedControl name. */
            public name: string;

            /** SpeedControl polygon. */
            public polygon?: (apollo.hdmap.IPolygon|null);

            /** SpeedControl speedLimit. */
            public speedLimit: number;

            /**
             * Creates a new SpeedControl instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedControl instance
             */
            public static create(properties?: apollo.hdmap.ISpeedControl): apollo.hdmap.SpeedControl;

            /**
             * Encodes the specified SpeedControl message. Does not implicitly {@link apollo.hdmap.SpeedControl.verify|verify} messages.
             * @param message SpeedControl message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISpeedControl, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedControl message, length delimited. Does not implicitly {@link apollo.hdmap.SpeedControl.verify|verify} messages.
             * @param message SpeedControl message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISpeedControl, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedControl message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedControl
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.SpeedControl;

            /**
             * Decodes a SpeedControl message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedControl
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.SpeedControl;

            /**
             * Verifies a SpeedControl message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedControl message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedControl
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.SpeedControl;

            /**
             * Creates a plain object from a SpeedControl message. Also converts values to other types if specified.
             * @param message SpeedControl
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.SpeedControl, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedControl to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedControl
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpeedControls. */
        interface ISpeedControls {

            /** SpeedControls speedControl */
            speedControl?: (apollo.hdmap.ISpeedControl[]|null);
        }

        /** Represents a SpeedControls. */
        class SpeedControls implements ISpeedControls {

            /**
             * Constructs a new SpeedControls.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.ISpeedControls);

            /** SpeedControls speedControl. */
            public speedControl: apollo.hdmap.ISpeedControl[];

            /**
             * Creates a new SpeedControls instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedControls instance
             */
            public static create(properties?: apollo.hdmap.ISpeedControls): apollo.hdmap.SpeedControls;

            /**
             * Encodes the specified SpeedControls message. Does not implicitly {@link apollo.hdmap.SpeedControls.verify|verify} messages.
             * @param message SpeedControls message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.ISpeedControls, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedControls message, length delimited. Does not implicitly {@link apollo.hdmap.SpeedControls.verify|verify} messages.
             * @param message SpeedControls message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.ISpeedControls, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedControls message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedControls
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.SpeedControls;

            /**
             * Decodes a SpeedControls message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedControls
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.SpeedControls;

            /**
             * Verifies a SpeedControls message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedControls message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedControls
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.SpeedControls;

            /**
             * Creates a plain object from a SpeedControls message. Also converts values to other types if specified.
             * @param message SpeedControls
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.SpeedControls, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedControls to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedControls
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a StopSign. */
        interface IStopSign {

            /** StopSign id */
            id?: (apollo.hdmap.IId|null);

            /** StopSign stopLine */
            stopLine?: (apollo.hdmap.ICurve[]|null);

            /** StopSign overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);

            /** StopSign type */
            type?: (apollo.hdmap.StopSign.StopType|null);
        }

        /** Represents a StopSign. */
        class StopSign implements IStopSign {

            /**
             * Constructs a new StopSign.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IStopSign);

            /** StopSign id. */
            public id?: (apollo.hdmap.IId|null);

            /** StopSign stopLine. */
            public stopLine: apollo.hdmap.ICurve[];

            /** StopSign overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /** StopSign type. */
            public type: apollo.hdmap.StopSign.StopType;

            /**
             * Creates a new StopSign instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StopSign instance
             */
            public static create(properties?: apollo.hdmap.IStopSign): apollo.hdmap.StopSign;

            /**
             * Encodes the specified StopSign message. Does not implicitly {@link apollo.hdmap.StopSign.verify|verify} messages.
             * @param message StopSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IStopSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StopSign message, length delimited. Does not implicitly {@link apollo.hdmap.StopSign.verify|verify} messages.
             * @param message StopSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IStopSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StopSign message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StopSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.StopSign;

            /**
             * Decodes a StopSign message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StopSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.StopSign;

            /**
             * Verifies a StopSign message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StopSign message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StopSign
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.StopSign;

            /**
             * Creates a plain object from a StopSign message. Also converts values to other types if specified.
             * @param message StopSign
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.StopSign, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StopSign to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for StopSign
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace StopSign {

            /** StopType enum. */
            enum StopType {
                UNKNOWN = 0,
                ONE_WAY = 1,
                TWO_WAY = 2,
                THREE_WAY = 3,
                FOUR_WAY = 4,
                ALL_WAY = 5
            }
        }

        /** Properties of a YieldSign. */
        interface IYieldSign {

            /** YieldSign id */
            id?: (apollo.hdmap.IId|null);

            /** YieldSign stopLine */
            stopLine?: (apollo.hdmap.ICurve[]|null);

            /** YieldSign overlapId */
            overlapId?: (apollo.hdmap.IId[]|null);
        }

        /** Represents a YieldSign. */
        class YieldSign implements IYieldSign {

            /**
             * Constructs a new YieldSign.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.hdmap.IYieldSign);

            /** YieldSign id. */
            public id?: (apollo.hdmap.IId|null);

            /** YieldSign stopLine. */
            public stopLine: apollo.hdmap.ICurve[];

            /** YieldSign overlapId. */
            public overlapId: apollo.hdmap.IId[];

            /**
             * Creates a new YieldSign instance using the specified properties.
             * @param [properties] Properties to set
             * @returns YieldSign instance
             */
            public static create(properties?: apollo.hdmap.IYieldSign): apollo.hdmap.YieldSign;

            /**
             * Encodes the specified YieldSign message. Does not implicitly {@link apollo.hdmap.YieldSign.verify|verify} messages.
             * @param message YieldSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.hdmap.IYieldSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified YieldSign message, length delimited. Does not implicitly {@link apollo.hdmap.YieldSign.verify|verify} messages.
             * @param message YieldSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.hdmap.IYieldSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a YieldSign message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns YieldSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.hdmap.YieldSign;

            /**
             * Decodes a YieldSign message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns YieldSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.hdmap.YieldSign;

            /**
             * Verifies a YieldSign message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a YieldSign message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns YieldSign
             */
            public static fromObject(object: { [k: string]: any }): apollo.hdmap.YieldSign;

            /**
             * Creates a plain object from a YieldSign message. Also converts values to other types if specified.
             * @param message YieldSign
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.hdmap.YieldSign, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this YieldSign to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for YieldSign
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace data. */
    namespace data {

        /** RecordingState enum. */
        enum RecordingState {
            STOPPED = 0,
            RECORDING = 1,
            TERMINATING = 2
        }

        /** Properties of a SmartRecorderStatus. */
        interface ISmartRecorderStatus {

            /** SmartRecorderStatus header */
            header?: (apollo.common.IHeader|null);

            /** SmartRecorderStatus recordingState */
            recordingState?: (apollo.data.RecordingState|null);

            /** SmartRecorderStatus stateMessage */
            stateMessage?: (string|null);
        }

        /** Represents a SmartRecorderStatus. */
        class SmartRecorderStatus implements ISmartRecorderStatus {

            /**
             * Constructs a new SmartRecorderStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.data.ISmartRecorderStatus);

            /** SmartRecorderStatus header. */
            public header?: (apollo.common.IHeader|null);

            /** SmartRecorderStatus recordingState. */
            public recordingState: apollo.data.RecordingState;

            /** SmartRecorderStatus stateMessage. */
            public stateMessage: string;

            /**
             * Creates a new SmartRecorderStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SmartRecorderStatus instance
             */
            public static create(properties?: apollo.data.ISmartRecorderStatus): apollo.data.SmartRecorderStatus;

            /**
             * Encodes the specified SmartRecorderStatus message. Does not implicitly {@link apollo.data.SmartRecorderStatus.verify|verify} messages.
             * @param message SmartRecorderStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.data.ISmartRecorderStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SmartRecorderStatus message, length delimited. Does not implicitly {@link apollo.data.SmartRecorderStatus.verify|verify} messages.
             * @param message SmartRecorderStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.data.ISmartRecorderStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SmartRecorderStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SmartRecorderStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.data.SmartRecorderStatus;

            /**
             * Decodes a SmartRecorderStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SmartRecorderStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.data.SmartRecorderStatus;

            /**
             * Verifies a SmartRecorderStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SmartRecorderStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SmartRecorderStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.data.SmartRecorderStatus;

            /**
             * Creates a plain object from a SmartRecorderStatus message. Also converts values to other types if specified.
             * @param message SmartRecorderStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.data.SmartRecorderStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SmartRecorderStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SmartRecorderStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace monitor. */
    namespace monitor {

        /** Properties of a ComponentStatus. */
        interface IComponentStatus {

            /** ComponentStatus status */
            status?: (apollo.monitor.ComponentStatus.Status|null);

            /** ComponentStatus message */
            message?: (string|null);
        }

        /** Represents a ComponentStatus. */
        class ComponentStatus implements IComponentStatus {

            /**
             * Constructs a new ComponentStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.monitor.IComponentStatus);

            /** ComponentStatus status. */
            public status: apollo.monitor.ComponentStatus.Status;

            /** ComponentStatus message. */
            public message: string;

            /**
             * Creates a new ComponentStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ComponentStatus instance
             */
            public static create(properties?: apollo.monitor.IComponentStatus): apollo.monitor.ComponentStatus;

            /**
             * Encodes the specified ComponentStatus message. Does not implicitly {@link apollo.monitor.ComponentStatus.verify|verify} messages.
             * @param message ComponentStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.monitor.IComponentStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ComponentStatus message, length delimited. Does not implicitly {@link apollo.monitor.ComponentStatus.verify|verify} messages.
             * @param message ComponentStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.monitor.IComponentStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ComponentStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ComponentStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.monitor.ComponentStatus;

            /**
             * Decodes a ComponentStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ComponentStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.monitor.ComponentStatus;

            /**
             * Verifies a ComponentStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ComponentStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ComponentStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.monitor.ComponentStatus;

            /**
             * Creates a plain object from a ComponentStatus message. Also converts values to other types if specified.
             * @param message ComponentStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.monitor.ComponentStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ComponentStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ComponentStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ComponentStatus {

            /** Status enum. */
            enum Status {
                UNKNOWN = 0,
                OK = 1,
                WARN = 2,
                ERROR = 3,
                FATAL = 4
            }
        }

        /** Properties of a Component. */
        interface IComponent {

            /** Component summary */
            summary?: (apollo.monitor.IComponentStatus|null);

            /** Component processStatus */
            processStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component channelStatus */
            channelStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component resourceStatus */
            resourceStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component otherStatus */
            otherStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component moduleStatus */
            moduleStatus?: (apollo.monitor.IComponentStatus|null);
        }

        /** Represents a Component. */
        class Component implements IComponent {

            /**
             * Constructs a new Component.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.monitor.IComponent);

            /** Component summary. */
            public summary?: (apollo.monitor.IComponentStatus|null);

            /** Component processStatus. */
            public processStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component channelStatus. */
            public channelStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component resourceStatus. */
            public resourceStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component otherStatus. */
            public otherStatus?: (apollo.monitor.IComponentStatus|null);

            /** Component moduleStatus. */
            public moduleStatus?: (apollo.monitor.IComponentStatus|null);

            /**
             * Creates a new Component instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Component instance
             */
            public static create(properties?: apollo.monitor.IComponent): apollo.monitor.Component;

            /**
             * Encodes the specified Component message. Does not implicitly {@link apollo.monitor.Component.verify|verify} messages.
             * @param message Component message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.monitor.IComponent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Component message, length delimited. Does not implicitly {@link apollo.monitor.Component.verify|verify} messages.
             * @param message Component message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.monitor.IComponent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Component message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Component
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.monitor.Component;

            /**
             * Decodes a Component message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Component
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.monitor.Component;

            /**
             * Verifies a Component message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Component message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Component
             */
            public static fromObject(object: { [k: string]: any }): apollo.monitor.Component;

            /**
             * Creates a plain object from a Component message. Also converts values to other types if specified.
             * @param message Component
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.monitor.Component, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Component to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Component
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SystemStatus. */
        interface ISystemStatus {

            /** SystemStatus header */
            header?: (apollo.common.IHeader|null);

            /** SystemStatus hmiModules */
            hmiModules?: ({ [k: string]: apollo.monitor.IComponentStatus }|null);

            /** SystemStatus components */
            components?: ({ [k: string]: apollo.monitor.IComponent }|null);

            /** SystemStatus passengerMsg */
            passengerMsg?: (string|null);

            /** SystemStatus safetyModeTriggerTime */
            safetyModeTriggerTime?: (number|null);

            /** SystemStatus requireEmergencyStop */
            requireEmergencyStop?: (boolean|null);

            /** SystemStatus isRealtimeInSimulation */
            isRealtimeInSimulation?: (boolean|null);

            /** SystemStatus otherComponents */
            otherComponents?: ({ [k: string]: apollo.monitor.IComponentStatus }|null);

            /** SystemStatus dataRecorderComponent */
            dataRecorderComponent?: (apollo.monitor.IComponent|null);

            /** SystemStatus detectImmediately */
            detectImmediately?: (boolean|null);

            /** SystemStatus terminalComponent */
            terminalComponent?: (apollo.monitor.IComponent|null);
        }

        /** Represents a SystemStatus. */
        class SystemStatus implements ISystemStatus {

            /**
             * Constructs a new SystemStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.monitor.ISystemStatus);

            /** SystemStatus header. */
            public header?: (apollo.common.IHeader|null);

            /** SystemStatus hmiModules. */
            public hmiModules: { [k: string]: apollo.monitor.IComponentStatus };

            /** SystemStatus components. */
            public components: { [k: string]: apollo.monitor.IComponent };

            /** SystemStatus passengerMsg. */
            public passengerMsg: string;

            /** SystemStatus safetyModeTriggerTime. */
            public safetyModeTriggerTime: number;

            /** SystemStatus requireEmergencyStop. */
            public requireEmergencyStop: boolean;

            /** SystemStatus isRealtimeInSimulation. */
            public isRealtimeInSimulation: boolean;

            /** SystemStatus otherComponents. */
            public otherComponents: { [k: string]: apollo.monitor.IComponentStatus };

            /** SystemStatus dataRecorderComponent. */
            public dataRecorderComponent?: (apollo.monitor.IComponent|null);

            /** SystemStatus detectImmediately. */
            public detectImmediately: boolean;

            /** SystemStatus terminalComponent. */
            public terminalComponent?: (apollo.monitor.IComponent|null);

            /**
             * Creates a new SystemStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SystemStatus instance
             */
            public static create(properties?: apollo.monitor.ISystemStatus): apollo.monitor.SystemStatus;

            /**
             * Encodes the specified SystemStatus message. Does not implicitly {@link apollo.monitor.SystemStatus.verify|verify} messages.
             * @param message SystemStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.monitor.ISystemStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SystemStatus message, length delimited. Does not implicitly {@link apollo.monitor.SystemStatus.verify|verify} messages.
             * @param message SystemStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.monitor.ISystemStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SystemStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SystemStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.monitor.SystemStatus;

            /**
             * Decodes a SystemStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SystemStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.monitor.SystemStatus;

            /**
             * Verifies a SystemStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SystemStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SystemStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.monitor.SystemStatus;

            /**
             * Creates a plain object from a SystemStatus message. Also converts values to other types if specified.
             * @param message SystemStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.monitor.SystemStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SystemStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SystemStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace perception. */
    namespace perception {

        /** Properties of a SensorFrameInfo. */
        interface ISensorFrameInfo {

            /** SensorFrameInfo sensorId */
            sensorId?: (string|null);

            /** SensorFrameInfo timestamp */
            timestamp?: (number|null);

            /** SensorFrameInfo sensor2worldPose */
            sensor2worldPose?: (number[]|null);
        }

        /** Represents a SensorFrameInfo. */
        class SensorFrameInfo implements ISensorFrameInfo {

            /**
             * Constructs a new SensorFrameInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ISensorFrameInfo);

            /** SensorFrameInfo sensorId. */
            public sensorId: string;

            /** SensorFrameInfo timestamp. */
            public timestamp: number;

            /** SensorFrameInfo sensor2worldPose. */
            public sensor2worldPose: number[];

            /**
             * Creates a new SensorFrameInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SensorFrameInfo instance
             */
            public static create(properties?: apollo.perception.ISensorFrameInfo): apollo.perception.SensorFrameInfo;

            /**
             * Encodes the specified SensorFrameInfo message. Does not implicitly {@link apollo.perception.SensorFrameInfo.verify|verify} messages.
             * @param message SensorFrameInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ISensorFrameInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SensorFrameInfo message, length delimited. Does not implicitly {@link apollo.perception.SensorFrameInfo.verify|verify} messages.
             * @param message SensorFrameInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ISensorFrameInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SensorFrameInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SensorFrameInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.SensorFrameInfo;

            /**
             * Decodes a SensorFrameInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SensorFrameInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.SensorFrameInfo;

            /**
             * Verifies a SensorFrameInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SensorFrameInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SensorFrameInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.SensorFrameInfo;

            /**
             * Creates a plain object from a SensorFrameInfo message. Also converts values to other types if specified.
             * @param message SensorFrameInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.SensorFrameInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SensorFrameInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SensorFrameInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PerceptionBenchmarkFrame. */
        interface IPerceptionBenchmarkFrame {

            /** PerceptionBenchmarkFrame perceptionObstacle */
            perceptionObstacle?: (apollo.perception.IPerceptionObstacle[]|null);

            /** PerceptionBenchmarkFrame header */
            header?: (apollo.common.IHeader|null);

            /** PerceptionBenchmarkFrame errorCode */
            errorCode?: (apollo.common.ErrorCode|null);

            /** PerceptionBenchmarkFrame sensorFrameInfo */
            sensorFrameInfo?: (apollo.perception.ISensorFrameInfo|null);
        }

        /** Represents a PerceptionBenchmarkFrame. */
        class PerceptionBenchmarkFrame implements IPerceptionBenchmarkFrame {

            /**
             * Constructs a new PerceptionBenchmarkFrame.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.IPerceptionBenchmarkFrame);

            /** PerceptionBenchmarkFrame perceptionObstacle. */
            public perceptionObstacle: apollo.perception.IPerceptionObstacle[];

            /** PerceptionBenchmarkFrame header. */
            public header?: (apollo.common.IHeader|null);

            /** PerceptionBenchmarkFrame errorCode. */
            public errorCode: apollo.common.ErrorCode;

            /** PerceptionBenchmarkFrame sensorFrameInfo. */
            public sensorFrameInfo?: (apollo.perception.ISensorFrameInfo|null);

            /**
             * Creates a new PerceptionBenchmarkFrame instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PerceptionBenchmarkFrame instance
             */
            public static create(properties?: apollo.perception.IPerceptionBenchmarkFrame): apollo.perception.PerceptionBenchmarkFrame;

            /**
             * Encodes the specified PerceptionBenchmarkFrame message. Does not implicitly {@link apollo.perception.PerceptionBenchmarkFrame.verify|verify} messages.
             * @param message PerceptionBenchmarkFrame message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.IPerceptionBenchmarkFrame, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PerceptionBenchmarkFrame message, length delimited. Does not implicitly {@link apollo.perception.PerceptionBenchmarkFrame.verify|verify} messages.
             * @param message PerceptionBenchmarkFrame message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.IPerceptionBenchmarkFrame, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PerceptionBenchmarkFrame message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PerceptionBenchmarkFrame
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.PerceptionBenchmarkFrame;

            /**
             * Decodes a PerceptionBenchmarkFrame message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PerceptionBenchmarkFrame
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.PerceptionBenchmarkFrame;

            /**
             * Verifies a PerceptionBenchmarkFrame message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PerceptionBenchmarkFrame message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PerceptionBenchmarkFrame
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.PerceptionBenchmarkFrame;

            /**
             * Creates a plain object from a PerceptionBenchmarkFrame message. Also converts values to other types if specified.
             * @param message PerceptionBenchmarkFrame
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.PerceptionBenchmarkFrame, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PerceptionBenchmarkFrame to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PerceptionBenchmarkFrame
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Namespace camera. */
        namespace camera {

            /** CameraErrorCode enum. */
            enum CameraErrorCode {
                ERROR_NONE = 0,
                ERROR_UNKNOWN = 1
            }

            /** LaneLineType enum. */
            enum LaneLineType {
                WHITE_DASHED = 0,
                WHITE_SOLID = 1,
                YELLOW_DASHED = 2,
                YELLOW_SOLID = 3
            }

            /** LaneLinePositionType enum. */
            enum LaneLinePositionType {
                BOLLARD_LEFT = -5,
                FOURTH_LEFT = -4,
                THIRD_LEFT = -3,
                ADJACENT_LEFT = -2,
                EGO_LEFT = -1,
                EGO_RIGHT = 1,
                ADJACENT_RIGHT = 2,
                THIRD_RIGHT = 3,
                FOURTH_RIGHT = 4,
                BOLLARD_RIGHT = 5,
                OTHER = 6,
                UNKNOWN = 7
            }

            /** LaneLineUseType enum. */
            enum LaneLineUseType {
                REAL = 0,
                VIRTUAL = 1
            }

            /** Properties of a LaneLineCubicCurve. */
            interface ILaneLineCubicCurve {

                /** LaneLineCubicCurve longitudeMin */
                longitudeMin?: (number|null);

                /** LaneLineCubicCurve longitudeMax */
                longitudeMax?: (number|null);

                /** LaneLineCubicCurve a */
                a?: (number|null);

                /** LaneLineCubicCurve b */
                b?: (number|null);

                /** LaneLineCubicCurve c */
                c?: (number|null);

                /** LaneLineCubicCurve d */
                d?: (number|null);
            }

            /** Represents a LaneLineCubicCurve. */
            class LaneLineCubicCurve implements ILaneLineCubicCurve {

                /**
                 * Constructs a new LaneLineCubicCurve.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.perception.camera.ILaneLineCubicCurve);

                /** LaneLineCubicCurve longitudeMin. */
                public longitudeMin: number;

                /** LaneLineCubicCurve longitudeMax. */
                public longitudeMax: number;

                /** LaneLineCubicCurve a. */
                public a: number;

                /** LaneLineCubicCurve b. */
                public b: number;

                /** LaneLineCubicCurve c. */
                public c: number;

                /** LaneLineCubicCurve d. */
                public d: number;

                /**
                 * Creates a new LaneLineCubicCurve instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns LaneLineCubicCurve instance
                 */
                public static create(properties?: apollo.perception.camera.ILaneLineCubicCurve): apollo.perception.camera.LaneLineCubicCurve;

                /**
                 * Encodes the specified LaneLineCubicCurve message. Does not implicitly {@link apollo.perception.camera.LaneLineCubicCurve.verify|verify} messages.
                 * @param message LaneLineCubicCurve message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.perception.camera.ILaneLineCubicCurve, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified LaneLineCubicCurve message, length delimited. Does not implicitly {@link apollo.perception.camera.LaneLineCubicCurve.verify|verify} messages.
                 * @param message LaneLineCubicCurve message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.perception.camera.ILaneLineCubicCurve, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a LaneLineCubicCurve message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns LaneLineCubicCurve
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.camera.LaneLineCubicCurve;

                /**
                 * Decodes a LaneLineCubicCurve message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns LaneLineCubicCurve
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.camera.LaneLineCubicCurve;

                /**
                 * Verifies a LaneLineCubicCurve message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a LaneLineCubicCurve message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns LaneLineCubicCurve
                 */
                public static fromObject(object: { [k: string]: any }): apollo.perception.camera.LaneLineCubicCurve;

                /**
                 * Creates a plain object from a LaneLineCubicCurve message. Also converts values to other types if specified.
                 * @param message LaneLineCubicCurve
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.perception.camera.LaneLineCubicCurve, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this LaneLineCubicCurve to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for LaneLineCubicCurve
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an EndPoints. */
            interface IEndPoints {

                /** EndPoints start */
                start?: (apollo.common.IPoint2D|null);

                /** EndPoints end */
                end?: (apollo.common.IPoint2D|null);
            }

            /** Represents an EndPoints. */
            class EndPoints implements IEndPoints {

                /**
                 * Constructs a new EndPoints.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.perception.camera.IEndPoints);

                /** EndPoints start. */
                public start?: (apollo.common.IPoint2D|null);

                /** EndPoints end. */
                public end?: (apollo.common.IPoint2D|null);

                /**
                 * Creates a new EndPoints instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EndPoints instance
                 */
                public static create(properties?: apollo.perception.camera.IEndPoints): apollo.perception.camera.EndPoints;

                /**
                 * Encodes the specified EndPoints message. Does not implicitly {@link apollo.perception.camera.EndPoints.verify|verify} messages.
                 * @param message EndPoints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.perception.camera.IEndPoints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EndPoints message, length delimited. Does not implicitly {@link apollo.perception.camera.EndPoints.verify|verify} messages.
                 * @param message EndPoints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.perception.camera.IEndPoints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EndPoints message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EndPoints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.camera.EndPoints;

                /**
                 * Decodes an EndPoints message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EndPoints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.camera.EndPoints;

                /**
                 * Verifies an EndPoints message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EndPoints message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EndPoints
                 */
                public static fromObject(object: { [k: string]: any }): apollo.perception.camera.EndPoints;

                /**
                 * Creates a plain object from an EndPoints message. Also converts values to other types if specified.
                 * @param message EndPoints
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.perception.camera.EndPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EndPoints to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EndPoints
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CameraLaneLine. */
            interface ICameraLaneLine {

                /** CameraLaneLine type */
                type?: (apollo.perception.camera.LaneLineType|null);

                /** CameraLaneLine posType */
                posType?: (apollo.perception.camera.LaneLinePositionType|null);

                /** CameraLaneLine curveCameraCoord */
                curveCameraCoord?: (apollo.perception.camera.ILaneLineCubicCurve|null);

                /** CameraLaneLine curveImageCoord */
                curveImageCoord?: (apollo.perception.camera.ILaneLineCubicCurve|null);

                /** CameraLaneLine curveCameraPointSet */
                curveCameraPointSet?: (apollo.common.IPoint3D[]|null);

                /** CameraLaneLine curveImagePointSet */
                curveImagePointSet?: (apollo.common.IPoint2D[]|null);

                /** CameraLaneLine imageEndPointSet */
                imageEndPointSet?: (apollo.perception.camera.IEndPoints[]|null);

                /** CameraLaneLine trackId */
                trackId?: (number|null);

                /** CameraLaneLine confidence */
                confidence?: (number|null);

                /** CameraLaneLine useType */
                useType?: (apollo.perception.camera.LaneLineUseType|null);
            }

            /** Represents a CameraLaneLine. */
            class CameraLaneLine implements ICameraLaneLine {

                /**
                 * Constructs a new CameraLaneLine.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.perception.camera.ICameraLaneLine);

                /** CameraLaneLine type. */
                public type: apollo.perception.camera.LaneLineType;

                /** CameraLaneLine posType. */
                public posType: apollo.perception.camera.LaneLinePositionType;

                /** CameraLaneLine curveCameraCoord. */
                public curveCameraCoord?: (apollo.perception.camera.ILaneLineCubicCurve|null);

                /** CameraLaneLine curveImageCoord. */
                public curveImageCoord?: (apollo.perception.camera.ILaneLineCubicCurve|null);

                /** CameraLaneLine curveCameraPointSet. */
                public curveCameraPointSet: apollo.common.IPoint3D[];

                /** CameraLaneLine curveImagePointSet. */
                public curveImagePointSet: apollo.common.IPoint2D[];

                /** CameraLaneLine imageEndPointSet. */
                public imageEndPointSet: apollo.perception.camera.IEndPoints[];

                /** CameraLaneLine trackId. */
                public trackId: number;

                /** CameraLaneLine confidence. */
                public confidence: number;

                /** CameraLaneLine useType. */
                public useType: apollo.perception.camera.LaneLineUseType;

                /**
                 * Creates a new CameraLaneLine instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CameraLaneLine instance
                 */
                public static create(properties?: apollo.perception.camera.ICameraLaneLine): apollo.perception.camera.CameraLaneLine;

                /**
                 * Encodes the specified CameraLaneLine message. Does not implicitly {@link apollo.perception.camera.CameraLaneLine.verify|verify} messages.
                 * @param message CameraLaneLine message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.perception.camera.ICameraLaneLine, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CameraLaneLine message, length delimited. Does not implicitly {@link apollo.perception.camera.CameraLaneLine.verify|verify} messages.
                 * @param message CameraLaneLine message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.perception.camera.ICameraLaneLine, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CameraLaneLine message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CameraLaneLine
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.camera.CameraLaneLine;

                /**
                 * Decodes a CameraLaneLine message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CameraLaneLine
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.camera.CameraLaneLine;

                /**
                 * Verifies a CameraLaneLine message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CameraLaneLine message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CameraLaneLine
                 */
                public static fromObject(object: { [k: string]: any }): apollo.perception.camera.CameraLaneLine;

                /**
                 * Creates a plain object from a CameraLaneLine message. Also converts values to other types if specified.
                 * @param message CameraLaneLine
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.perception.camera.CameraLaneLine, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CameraLaneLine to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CameraLaneLine
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CameraCalibrator. */
            interface ICameraCalibrator {

                /** CameraCalibrator pitchAngle */
                pitchAngle?: (number|null);

                /** CameraCalibrator cameraHeight */
                cameraHeight?: (number|null);
            }

            /** Represents a CameraCalibrator. */
            class CameraCalibrator implements ICameraCalibrator {

                /**
                 * Constructs a new CameraCalibrator.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.perception.camera.ICameraCalibrator);

                /** CameraCalibrator pitchAngle. */
                public pitchAngle: number;

                /** CameraCalibrator cameraHeight. */
                public cameraHeight: number;

                /**
                 * Creates a new CameraCalibrator instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CameraCalibrator instance
                 */
                public static create(properties?: apollo.perception.camera.ICameraCalibrator): apollo.perception.camera.CameraCalibrator;

                /**
                 * Encodes the specified CameraCalibrator message. Does not implicitly {@link apollo.perception.camera.CameraCalibrator.verify|verify} messages.
                 * @param message CameraCalibrator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.perception.camera.ICameraCalibrator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CameraCalibrator message, length delimited. Does not implicitly {@link apollo.perception.camera.CameraCalibrator.verify|verify} messages.
                 * @param message CameraCalibrator message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.perception.camera.ICameraCalibrator, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CameraCalibrator message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CameraCalibrator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.camera.CameraCalibrator;

                /**
                 * Decodes a CameraCalibrator message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CameraCalibrator
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.camera.CameraCalibrator;

                /**
                 * Verifies a CameraCalibrator message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CameraCalibrator message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CameraCalibrator
                 */
                public static fromObject(object: { [k: string]: any }): apollo.perception.camera.CameraCalibrator;

                /**
                 * Creates a plain object from a CameraCalibrator message. Also converts values to other types if specified.
                 * @param message CameraCalibrator
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.perception.camera.CameraCalibrator, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CameraCalibrator to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CameraCalibrator
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CameraObstacle. */
            interface ICameraObstacle {

                /** CameraObstacle obstacle */
                obstacle?: (apollo.perception.IPerceptionObstacle|null);

                /** CameraObstacle type */
                type?: (apollo.perception.camera.CameraObstacle.CameraType|null);

                /** CameraObstacle typeProbs */
                typeProbs?: (number[]|null);

                /** CameraObstacle upperLeft */
                upperLeft?: (apollo.common.IPoint2D|null);

                /** CameraObstacle lowerRight */
                lowerRight?: (apollo.common.IPoint2D|null);

                /** CameraObstacle keyPoints */
                keyPoints?: (apollo.common.IPoint2D[]|null);

                /** CameraObstacle debugMessage */
                debugMessage?: (string[]|null);
            }

            /** Represents a CameraObstacle. */
            class CameraObstacle implements ICameraObstacle {

                /**
                 * Constructs a new CameraObstacle.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.perception.camera.ICameraObstacle);

                /** CameraObstacle obstacle. */
                public obstacle?: (apollo.perception.IPerceptionObstacle|null);

                /** CameraObstacle type. */
                public type: apollo.perception.camera.CameraObstacle.CameraType;

                /** CameraObstacle typeProbs. */
                public typeProbs: number[];

                /** CameraObstacle upperLeft. */
                public upperLeft?: (apollo.common.IPoint2D|null);

                /** CameraObstacle lowerRight. */
                public lowerRight?: (apollo.common.IPoint2D|null);

                /** CameraObstacle keyPoints. */
                public keyPoints: apollo.common.IPoint2D[];

                /** CameraObstacle debugMessage. */
                public debugMessage: string[];

                /**
                 * Creates a new CameraObstacle instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CameraObstacle instance
                 */
                public static create(properties?: apollo.perception.camera.ICameraObstacle): apollo.perception.camera.CameraObstacle;

                /**
                 * Encodes the specified CameraObstacle message. Does not implicitly {@link apollo.perception.camera.CameraObstacle.verify|verify} messages.
                 * @param message CameraObstacle message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.perception.camera.ICameraObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CameraObstacle message, length delimited. Does not implicitly {@link apollo.perception.camera.CameraObstacle.verify|verify} messages.
                 * @param message CameraObstacle message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.perception.camera.ICameraObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CameraObstacle message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CameraObstacle
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.camera.CameraObstacle;

                /**
                 * Decodes a CameraObstacle message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CameraObstacle
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.camera.CameraObstacle;

                /**
                 * Verifies a CameraObstacle message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CameraObstacle message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CameraObstacle
                 */
                public static fromObject(object: { [k: string]: any }): apollo.perception.camera.CameraObstacle;

                /**
                 * Creates a plain object from a CameraObstacle message. Also converts values to other types if specified.
                 * @param message CameraObstacle
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.perception.camera.CameraObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CameraObstacle to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CameraObstacle
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace CameraObstacle {

                /** CameraType enum. */
                enum CameraType {
                    UNKNOWN = 0,
                    UNKNOWN_MOVABLE = 1,
                    UNKNOWN_UNMOVABLE = 2,
                    PEDESTRIAN = 3,
                    BICYCLE = 4,
                    VEHICLE = 5
                }
            }

            /** Properties of a CameraDebug. */
            interface ICameraDebug {

                /** CameraDebug header */
                header?: (apollo.common.IHeader|null);

                /** CameraDebug sourceTopic */
                sourceTopic?: (string|null);

                /** CameraDebug errorCode */
                errorCode?: (apollo.perception.camera.CameraErrorCode|null);

                /** CameraDebug cameraCalibrator */
                cameraCalibrator?: (apollo.perception.camera.ICameraCalibrator|null);

                /** CameraDebug cameraLaneline */
                cameraLaneline?: (apollo.perception.camera.ICameraLaneLine[]|null);

                /** CameraDebug cameraObstacle */
                cameraObstacle?: (apollo.perception.camera.ICameraObstacle[]|null);
            }

            /** Represents a CameraDebug. */
            class CameraDebug implements ICameraDebug {

                /**
                 * Constructs a new CameraDebug.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.perception.camera.ICameraDebug);

                /** CameraDebug header. */
                public header?: (apollo.common.IHeader|null);

                /** CameraDebug sourceTopic. */
                public sourceTopic: string;

                /** CameraDebug errorCode. */
                public errorCode: apollo.perception.camera.CameraErrorCode;

                /** CameraDebug cameraCalibrator. */
                public cameraCalibrator?: (apollo.perception.camera.ICameraCalibrator|null);

                /** CameraDebug cameraLaneline. */
                public cameraLaneline: apollo.perception.camera.ICameraLaneLine[];

                /** CameraDebug cameraObstacle. */
                public cameraObstacle: apollo.perception.camera.ICameraObstacle[];

                /**
                 * Creates a new CameraDebug instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CameraDebug instance
                 */
                public static create(properties?: apollo.perception.camera.ICameraDebug): apollo.perception.camera.CameraDebug;

                /**
                 * Encodes the specified CameraDebug message. Does not implicitly {@link apollo.perception.camera.CameraDebug.verify|verify} messages.
                 * @param message CameraDebug message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.perception.camera.ICameraDebug, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CameraDebug message, length delimited. Does not implicitly {@link apollo.perception.camera.CameraDebug.verify|verify} messages.
                 * @param message CameraDebug message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.perception.camera.ICameraDebug, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CameraDebug message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CameraDebug
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.camera.CameraDebug;

                /**
                 * Decodes a CameraDebug message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CameraDebug
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.camera.CameraDebug;

                /**
                 * Verifies a CameraDebug message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CameraDebug message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CameraDebug
                 */
                public static fromObject(object: { [k: string]: any }): apollo.perception.camera.CameraDebug;

                /**
                 * Creates a plain object from a CameraDebug message. Also converts values to other types if specified.
                 * @param message CameraDebug
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.perception.camera.CameraDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CameraDebug to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CameraDebug
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Properties of a PerceptionLanes. */
        interface IPerceptionLanes {

            /** PerceptionLanes header */
            header?: (apollo.common.IHeader|null);

            /** PerceptionLanes sourceTopic */
            sourceTopic?: (string|null);

            /** PerceptionLanes errorCode */
            errorCode?: (apollo.perception.camera.CameraErrorCode|null);

            /** PerceptionLanes cameraCalibrator */
            cameraCalibrator?: (apollo.perception.camera.ICameraCalibrator|null);

            /** PerceptionLanes cameraLaneline */
            cameraLaneline?: (apollo.perception.camera.ICameraLaneLine[]|null);
        }

        /** Represents a PerceptionLanes. */
        class PerceptionLanes implements IPerceptionLanes {

            /**
             * Constructs a new PerceptionLanes.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.IPerceptionLanes);

            /** PerceptionLanes header. */
            public header?: (apollo.common.IHeader|null);

            /** PerceptionLanes sourceTopic. */
            public sourceTopic: string;

            /** PerceptionLanes errorCode. */
            public errorCode: apollo.perception.camera.CameraErrorCode;

            /** PerceptionLanes cameraCalibrator. */
            public cameraCalibrator?: (apollo.perception.camera.ICameraCalibrator|null);

            /** PerceptionLanes cameraLaneline. */
            public cameraLaneline: apollo.perception.camera.ICameraLaneLine[];

            /**
             * Creates a new PerceptionLanes instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PerceptionLanes instance
             */
            public static create(properties?: apollo.perception.IPerceptionLanes): apollo.perception.PerceptionLanes;

            /**
             * Encodes the specified PerceptionLanes message. Does not implicitly {@link apollo.perception.PerceptionLanes.verify|verify} messages.
             * @param message PerceptionLanes message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.IPerceptionLanes, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PerceptionLanes message, length delimited. Does not implicitly {@link apollo.perception.PerceptionLanes.verify|verify} messages.
             * @param message PerceptionLanes message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.IPerceptionLanes, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PerceptionLanes message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PerceptionLanes
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.PerceptionLanes;

            /**
             * Decodes a PerceptionLanes message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PerceptionLanes
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.PerceptionLanes;

            /**
             * Verifies a PerceptionLanes message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PerceptionLanes message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PerceptionLanes
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.PerceptionLanes;

            /**
             * Creates a plain object from a PerceptionLanes message. Also converts values to other types if specified.
             * @param message PerceptionLanes
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.PerceptionLanes, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PerceptionLanes to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PerceptionLanes
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a BBox2D. */
        interface IBBox2D {

            /** BBox2D xmin */
            xmin?: (number|null);

            /** BBox2D ymin */
            ymin?: (number|null);

            /** BBox2D xmax */
            xmax?: (number|null);

            /** BBox2D ymax */
            ymax?: (number|null);
        }

        /** Represents a BBox2D. */
        class BBox2D implements IBBox2D {

            /**
             * Constructs a new BBox2D.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.IBBox2D);

            /** BBox2D xmin. */
            public xmin: number;

            /** BBox2D ymin. */
            public ymin: number;

            /** BBox2D xmax. */
            public xmax: number;

            /** BBox2D ymax. */
            public ymax: number;

            /**
             * Creates a new BBox2D instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BBox2D instance
             */
            public static create(properties?: apollo.perception.IBBox2D): apollo.perception.BBox2D;

            /**
             * Encodes the specified BBox2D message. Does not implicitly {@link apollo.perception.BBox2D.verify|verify} messages.
             * @param message BBox2D message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.IBBox2D, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BBox2D message, length delimited. Does not implicitly {@link apollo.perception.BBox2D.verify|verify} messages.
             * @param message BBox2D message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.IBBox2D, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BBox2D message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BBox2D
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.BBox2D;

            /**
             * Decodes a BBox2D message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BBox2D
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.BBox2D;

            /**
             * Verifies a BBox2D message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BBox2D message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BBox2D
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.BBox2D;

            /**
             * Creates a plain object from a BBox2D message. Also converts values to other types if specified.
             * @param message BBox2D
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.BBox2D, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BBox2D to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for BBox2D
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LightStatus. */
        interface ILightStatus {

            /** LightStatus brakeVisible */
            brakeVisible?: (number|null);

            /** LightStatus brakeSwitchOn */
            brakeSwitchOn?: (number|null);

            /** LightStatus leftTurnVisible */
            leftTurnVisible?: (number|null);

            /** LightStatus leftTurnSwitchOn */
            leftTurnSwitchOn?: (number|null);

            /** LightStatus rightTurnVisible */
            rightTurnVisible?: (number|null);

            /** LightStatus rightTurnSwitchOn */
            rightTurnSwitchOn?: (number|null);
        }

        /** Represents a LightStatus. */
        class LightStatus implements ILightStatus {

            /**
             * Constructs a new LightStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ILightStatus);

            /** LightStatus brakeVisible. */
            public brakeVisible: number;

            /** LightStatus brakeSwitchOn. */
            public brakeSwitchOn: number;

            /** LightStatus leftTurnVisible. */
            public leftTurnVisible: number;

            /** LightStatus leftTurnSwitchOn. */
            public leftTurnSwitchOn: number;

            /** LightStatus rightTurnVisible. */
            public rightTurnVisible: number;

            /** LightStatus rightTurnSwitchOn. */
            public rightTurnSwitchOn: number;

            /**
             * Creates a new LightStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LightStatus instance
             */
            public static create(properties?: apollo.perception.ILightStatus): apollo.perception.LightStatus;

            /**
             * Encodes the specified LightStatus message. Does not implicitly {@link apollo.perception.LightStatus.verify|verify} messages.
             * @param message LightStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ILightStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LightStatus message, length delimited. Does not implicitly {@link apollo.perception.LightStatus.verify|verify} messages.
             * @param message LightStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ILightStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LightStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LightStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.LightStatus;

            /**
             * Decodes a LightStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LightStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.LightStatus;

            /**
             * Verifies a LightStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LightStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LightStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.LightStatus;

            /**
             * Creates a plain object from a LightStatus message. Also converts values to other types if specified.
             * @param message LightStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.LightStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LightStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LightStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a V2XInformation. */
        interface IV2XInformation {

            /** V2XInformation v2xType */
            v2xType?: (apollo.perception.V2XInformation.V2XType[]|null);
        }

        /** Represents a V2XInformation. */
        class V2XInformation implements IV2XInformation {

            /**
             * Constructs a new V2XInformation.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.IV2XInformation);

            /** V2XInformation v2xType. */
            public v2xType: apollo.perception.V2XInformation.V2XType[];

            /**
             * Creates a new V2XInformation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns V2XInformation instance
             */
            public static create(properties?: apollo.perception.IV2XInformation): apollo.perception.V2XInformation;

            /**
             * Encodes the specified V2XInformation message. Does not implicitly {@link apollo.perception.V2XInformation.verify|verify} messages.
             * @param message V2XInformation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.IV2XInformation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified V2XInformation message, length delimited. Does not implicitly {@link apollo.perception.V2XInformation.verify|verify} messages.
             * @param message V2XInformation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.IV2XInformation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a V2XInformation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns V2XInformation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.V2XInformation;

            /**
             * Decodes a V2XInformation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns V2XInformation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.V2XInformation;

            /**
             * Verifies a V2XInformation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a V2XInformation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns V2XInformation
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.V2XInformation;

            /**
             * Creates a plain object from a V2XInformation message. Also converts values to other types if specified.
             * @param message V2XInformation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.V2XInformation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this V2XInformation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for V2XInformation
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace V2XInformation {

            /** V2XType enum. */
            enum V2XType {
                NONE = 0,
                ZOMBIES_CAR = 1,
                BLIND_ZONE = 2
            }
        }

        /** Properties of a SensorMeasurement. */
        interface ISensorMeasurement {

            /** SensorMeasurement sensorId */
            sensorId?: (string|null);

            /** SensorMeasurement id */
            id?: (number|null);

            /** SensorMeasurement position */
            position?: (apollo.common.IPoint3D|null);

            /** SensorMeasurement theta */
            theta?: (number|null);

            /** SensorMeasurement length */
            length?: (number|null);

            /** SensorMeasurement width */
            width?: (number|null);

            /** SensorMeasurement height */
            height?: (number|null);

            /** SensorMeasurement velocity */
            velocity?: (apollo.common.IPoint3D|null);

            /** SensorMeasurement type */
            type?: (apollo.perception.PerceptionObstacle.Type|null);

            /** SensorMeasurement subType */
            subType?: (apollo.perception.PerceptionObstacle.SubType|null);

            /** SensorMeasurement timestamp */
            timestamp?: (number|null);

            /** SensorMeasurement box */
            box?: (apollo.perception.IBBox2D|null);
        }

        /** Represents a SensorMeasurement. */
        class SensorMeasurement implements ISensorMeasurement {

            /**
             * Constructs a new SensorMeasurement.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ISensorMeasurement);

            /** SensorMeasurement sensorId. */
            public sensorId: string;

            /** SensorMeasurement id. */
            public id: number;

            /** SensorMeasurement position. */
            public position?: (apollo.common.IPoint3D|null);

            /** SensorMeasurement theta. */
            public theta: number;

            /** SensorMeasurement length. */
            public length: number;

            /** SensorMeasurement width. */
            public width: number;

            /** SensorMeasurement height. */
            public height: number;

            /** SensorMeasurement velocity. */
            public velocity?: (apollo.common.IPoint3D|null);

            /** SensorMeasurement type. */
            public type: apollo.perception.PerceptionObstacle.Type;

            /** SensorMeasurement subType. */
            public subType: apollo.perception.PerceptionObstacle.SubType;

            /** SensorMeasurement timestamp. */
            public timestamp: number;

            /** SensorMeasurement box. */
            public box?: (apollo.perception.IBBox2D|null);

            /**
             * Creates a new SensorMeasurement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SensorMeasurement instance
             */
            public static create(properties?: apollo.perception.ISensorMeasurement): apollo.perception.SensorMeasurement;

            /**
             * Encodes the specified SensorMeasurement message. Does not implicitly {@link apollo.perception.SensorMeasurement.verify|verify} messages.
             * @param message SensorMeasurement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ISensorMeasurement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SensorMeasurement message, length delimited. Does not implicitly {@link apollo.perception.SensorMeasurement.verify|verify} messages.
             * @param message SensorMeasurement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ISensorMeasurement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SensorMeasurement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SensorMeasurement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.SensorMeasurement;

            /**
             * Decodes a SensorMeasurement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SensorMeasurement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.SensorMeasurement;

            /**
             * Verifies a SensorMeasurement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SensorMeasurement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SensorMeasurement
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.SensorMeasurement;

            /**
             * Creates a plain object from a SensorMeasurement message. Also converts values to other types if specified.
             * @param message SensorMeasurement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.SensorMeasurement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SensorMeasurement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SensorMeasurement
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Trajectory. */
        interface ITrajectory {

            /** Trajectory probability */
            probability?: (number|null);

            /** Trajectory trajectoryPoint */
            trajectoryPoint?: (apollo.common.ITrajectoryPoint[]|null);
        }

        /** Represents a Trajectory. */
        class Trajectory implements ITrajectory {

            /**
             * Constructs a new Trajectory.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ITrajectory);

            /** Trajectory probability. */
            public probability: number;

            /** Trajectory trajectoryPoint. */
            public trajectoryPoint: apollo.common.ITrajectoryPoint[];

            /**
             * Creates a new Trajectory instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Trajectory instance
             */
            public static create(properties?: apollo.perception.ITrajectory): apollo.perception.Trajectory;

            /**
             * Encodes the specified Trajectory message. Does not implicitly {@link apollo.perception.Trajectory.verify|verify} messages.
             * @param message Trajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ITrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Trajectory message, length delimited. Does not implicitly {@link apollo.perception.Trajectory.verify|verify} messages.
             * @param message Trajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ITrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Trajectory message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Trajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.Trajectory;

            /**
             * Decodes a Trajectory message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Trajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.Trajectory;

            /**
             * Verifies a Trajectory message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Trajectory message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Trajectory
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.Trajectory;

            /**
             * Creates a plain object from a Trajectory message. Also converts values to other types if specified.
             * @param message Trajectory
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.Trajectory, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Trajectory to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Trajectory
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DebugMessage. */
        interface IDebugMessage {

            /** DebugMessage trajectory */
            trajectory?: (apollo.perception.ITrajectory[]|null);
        }

        /** Represents a DebugMessage. */
        class DebugMessage implements IDebugMessage {

            /**
             * Constructs a new DebugMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.IDebugMessage);

            /** DebugMessage trajectory. */
            public trajectory: apollo.perception.ITrajectory[];

            /**
             * Creates a new DebugMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DebugMessage instance
             */
            public static create(properties?: apollo.perception.IDebugMessage): apollo.perception.DebugMessage;

            /**
             * Encodes the specified DebugMessage message. Does not implicitly {@link apollo.perception.DebugMessage.verify|verify} messages.
             * @param message DebugMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.IDebugMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DebugMessage message, length delimited. Does not implicitly {@link apollo.perception.DebugMessage.verify|verify} messages.
             * @param message DebugMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.IDebugMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DebugMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DebugMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.DebugMessage;

            /**
             * Decodes a DebugMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DebugMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.DebugMessage;

            /**
             * Verifies a DebugMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DebugMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DebugMessage
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.DebugMessage;

            /**
             * Creates a plain object from a DebugMessage message. Also converts values to other types if specified.
             * @param message DebugMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.DebugMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DebugMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DebugMessage
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PerceptionObstacle. */
        interface IPerceptionObstacle {

            /** PerceptionObstacle id */
            id?: (number|null);

            /** PerceptionObstacle position */
            position?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle theta */
            theta?: (number|null);

            /** PerceptionObstacle velocity */
            velocity?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle length */
            length?: (number|null);

            /** PerceptionObstacle width */
            width?: (number|null);

            /** PerceptionObstacle height */
            height?: (number|null);

            /** PerceptionObstacle polygonPoint */
            polygonPoint?: (apollo.common.IPoint3D[]|null);

            /** PerceptionObstacle trackingTime */
            trackingTime?: (number|null);

            /** PerceptionObstacle type */
            type?: (apollo.perception.PerceptionObstacle.Type|null);

            /** PerceptionObstacle timestamp */
            timestamp?: (number|null);

            /** PerceptionObstacle pointCloud */
            pointCloud?: (number[]|null);

            /** PerceptionObstacle confidence */
            confidence?: (number|null);

            /** PerceptionObstacle confidenceType */
            confidenceType?: (apollo.perception.PerceptionObstacle.ConfidenceType|null);

            /** PerceptionObstacle drops */
            drops?: (apollo.common.IPoint3D[]|null);

            /** PerceptionObstacle acceleration */
            acceleration?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle anchorPoint */
            anchorPoint?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle bbox2d */
            bbox2d?: (apollo.perception.IBBox2D|null);

            /** PerceptionObstacle subType */
            subType?: (apollo.perception.PerceptionObstacle.SubType|null);

            /** PerceptionObstacle measurements */
            measurements?: (apollo.perception.ISensorMeasurement[]|null);

            /** PerceptionObstacle heightAboveGround */
            heightAboveGround?: (number|null);

            /** PerceptionObstacle positionCovariance */
            positionCovariance?: (number[]|null);

            /** PerceptionObstacle velocityCovariance */
            velocityCovariance?: (number[]|null);

            /** PerceptionObstacle accelerationCovariance */
            accelerationCovariance?: (number[]|null);

            /** PerceptionObstacle lightStatus */
            lightStatus?: (apollo.perception.ILightStatus|null);

            /** PerceptionObstacle msg */
            msg?: (apollo.perception.IDebugMessage|null);

            /** PerceptionObstacle source */
            source?: (apollo.perception.PerceptionObstacle.Source|null);

            /** PerceptionObstacle v2xInfo */
            v2xInfo?: (apollo.perception.IV2XInformation|null);
        }

        /** Represents a PerceptionObstacle. */
        class PerceptionObstacle implements IPerceptionObstacle {

            /**
             * Constructs a new PerceptionObstacle.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.IPerceptionObstacle);

            /** PerceptionObstacle id. */
            public id: number;

            /** PerceptionObstacle position. */
            public position?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle theta. */
            public theta: number;

            /** PerceptionObstacle velocity. */
            public velocity?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle length. */
            public length: number;

            /** PerceptionObstacle width. */
            public width: number;

            /** PerceptionObstacle height. */
            public height: number;

            /** PerceptionObstacle polygonPoint. */
            public polygonPoint: apollo.common.IPoint3D[];

            /** PerceptionObstacle trackingTime. */
            public trackingTime: number;

            /** PerceptionObstacle type. */
            public type: apollo.perception.PerceptionObstacle.Type;

            /** PerceptionObstacle timestamp. */
            public timestamp: number;

            /** PerceptionObstacle pointCloud. */
            public pointCloud: number[];

            /** PerceptionObstacle confidence. */
            public confidence: number;

            /** PerceptionObstacle confidenceType. */
            public confidenceType: apollo.perception.PerceptionObstacle.ConfidenceType;

            /** PerceptionObstacle drops. */
            public drops: apollo.common.IPoint3D[];

            /** PerceptionObstacle acceleration. */
            public acceleration?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle anchorPoint. */
            public anchorPoint?: (apollo.common.IPoint3D|null);

            /** PerceptionObstacle bbox2d. */
            public bbox2d?: (apollo.perception.IBBox2D|null);

            /** PerceptionObstacle subType. */
            public subType: apollo.perception.PerceptionObstacle.SubType;

            /** PerceptionObstacle measurements. */
            public measurements: apollo.perception.ISensorMeasurement[];

            /** PerceptionObstacle heightAboveGround. */
            public heightAboveGround: number;

            /** PerceptionObstacle positionCovariance. */
            public positionCovariance: number[];

            /** PerceptionObstacle velocityCovariance. */
            public velocityCovariance: number[];

            /** PerceptionObstacle accelerationCovariance. */
            public accelerationCovariance: number[];

            /** PerceptionObstacle lightStatus. */
            public lightStatus?: (apollo.perception.ILightStatus|null);

            /** PerceptionObstacle msg. */
            public msg?: (apollo.perception.IDebugMessage|null);

            /** PerceptionObstacle source. */
            public source: apollo.perception.PerceptionObstacle.Source;

            /** PerceptionObstacle v2xInfo. */
            public v2xInfo?: (apollo.perception.IV2XInformation|null);

            /**
             * Creates a new PerceptionObstacle instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PerceptionObstacle instance
             */
            public static create(properties?: apollo.perception.IPerceptionObstacle): apollo.perception.PerceptionObstacle;

            /**
             * Encodes the specified PerceptionObstacle message. Does not implicitly {@link apollo.perception.PerceptionObstacle.verify|verify} messages.
             * @param message PerceptionObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.IPerceptionObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PerceptionObstacle message, length delimited. Does not implicitly {@link apollo.perception.PerceptionObstacle.verify|verify} messages.
             * @param message PerceptionObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.IPerceptionObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PerceptionObstacle message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PerceptionObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.PerceptionObstacle;

            /**
             * Decodes a PerceptionObstacle message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PerceptionObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.PerceptionObstacle;

            /**
             * Verifies a PerceptionObstacle message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PerceptionObstacle message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PerceptionObstacle
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.PerceptionObstacle;

            /**
             * Creates a plain object from a PerceptionObstacle message. Also converts values to other types if specified.
             * @param message PerceptionObstacle
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.PerceptionObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PerceptionObstacle to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PerceptionObstacle
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace PerceptionObstacle {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                UNKNOWN_MOVABLE = 1,
                UNKNOWN_UNMOVABLE = 2,
                PEDESTRIAN = 3,
                BICYCLE = 4,
                VEHICLE = 5
            }

            /** ConfidenceType enum. */
            enum ConfidenceType {
                CONFIDENCE_UNKNOWN = 0,
                CONFIDENCE_CNN = 1,
                CONFIDENCE_RADAR = 2
            }

            /** SubType enum. */
            enum SubType {
                ST_UNKNOWN = 0,
                ST_UNKNOWN_MOVABLE = 1,
                ST_UNKNOWN_UNMOVABLE = 2,
                ST_CAR = 3,
                ST_VAN = 4,
                ST_TRUCK = 5,
                ST_BUS = 6,
                ST_CYCLIST = 7,
                ST_MOTORCYCLIST = 8,
                ST_TRICYCLIST = 9,
                ST_PEDESTRIAN = 10,
                ST_TRAFFICCONE = 11,
                ST_SMALLMOT = 12,
                ST_BIGMOT = 13,
                ST_NONMOT = 14
            }

            /** Source enum. */
            enum Source {
                HOST_VEHICLE = 0,
                V2X = 1
            }
        }

        /** Properties of a LaneMarker. */
        interface ILaneMarker {

            /** LaneMarker laneType */
            laneType?: (apollo.hdmap.LaneBoundaryType.Type|null);

            /** LaneMarker quality */
            quality?: (number|null);

            /** LaneMarker modelDegree */
            modelDegree?: (number|null);

            /** LaneMarker c0Position */
            c0Position?: (number|null);

            /** LaneMarker c1HeadingAngle */
            c1HeadingAngle?: (number|null);

            /** LaneMarker c2Curvature */
            c2Curvature?: (number|null);

            /** LaneMarker c3CurvatureDerivative */
            c3CurvatureDerivative?: (number|null);

            /** LaneMarker viewRange */
            viewRange?: (number|null);

            /** LaneMarker longitudeStart */
            longitudeStart?: (number|null);

            /** LaneMarker longitudeEnd */
            longitudeEnd?: (number|null);
        }

        /** Represents a LaneMarker. */
        class LaneMarker implements ILaneMarker {

            /**
             * Constructs a new LaneMarker.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ILaneMarker);

            /** LaneMarker laneType. */
            public laneType: apollo.hdmap.LaneBoundaryType.Type;

            /** LaneMarker quality. */
            public quality: number;

            /** LaneMarker modelDegree. */
            public modelDegree: number;

            /** LaneMarker c0Position. */
            public c0Position: number;

            /** LaneMarker c1HeadingAngle. */
            public c1HeadingAngle: number;

            /** LaneMarker c2Curvature. */
            public c2Curvature: number;

            /** LaneMarker c3CurvatureDerivative. */
            public c3CurvatureDerivative: number;

            /** LaneMarker viewRange. */
            public viewRange: number;

            /** LaneMarker longitudeStart. */
            public longitudeStart: number;

            /** LaneMarker longitudeEnd. */
            public longitudeEnd: number;

            /**
             * Creates a new LaneMarker instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneMarker instance
             */
            public static create(properties?: apollo.perception.ILaneMarker): apollo.perception.LaneMarker;

            /**
             * Encodes the specified LaneMarker message. Does not implicitly {@link apollo.perception.LaneMarker.verify|verify} messages.
             * @param message LaneMarker message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ILaneMarker, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneMarker message, length delimited. Does not implicitly {@link apollo.perception.LaneMarker.verify|verify} messages.
             * @param message LaneMarker message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ILaneMarker, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneMarker message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneMarker
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.LaneMarker;

            /**
             * Decodes a LaneMarker message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneMarker
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.LaneMarker;

            /**
             * Verifies a LaneMarker message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneMarker message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneMarker
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.LaneMarker;

            /**
             * Creates a plain object from a LaneMarker message. Also converts values to other types if specified.
             * @param message LaneMarker
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.LaneMarker, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneMarker to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneMarker
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneMarkers. */
        interface ILaneMarkers {

            /** LaneMarkers leftLaneMarker */
            leftLaneMarker?: (apollo.perception.ILaneMarker|null);

            /** LaneMarkers rightLaneMarker */
            rightLaneMarker?: (apollo.perception.ILaneMarker|null);

            /** LaneMarkers nextLeftLaneMarker */
            nextLeftLaneMarker?: (apollo.perception.ILaneMarker[]|null);

            /** LaneMarkers nextRightLaneMarker */
            nextRightLaneMarker?: (apollo.perception.ILaneMarker[]|null);
        }

        /** Represents a LaneMarkers. */
        class LaneMarkers implements ILaneMarkers {

            /**
             * Constructs a new LaneMarkers.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ILaneMarkers);

            /** LaneMarkers leftLaneMarker. */
            public leftLaneMarker?: (apollo.perception.ILaneMarker|null);

            /** LaneMarkers rightLaneMarker. */
            public rightLaneMarker?: (apollo.perception.ILaneMarker|null);

            /** LaneMarkers nextLeftLaneMarker. */
            public nextLeftLaneMarker: apollo.perception.ILaneMarker[];

            /** LaneMarkers nextRightLaneMarker. */
            public nextRightLaneMarker: apollo.perception.ILaneMarker[];

            /**
             * Creates a new LaneMarkers instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneMarkers instance
             */
            public static create(properties?: apollo.perception.ILaneMarkers): apollo.perception.LaneMarkers;

            /**
             * Encodes the specified LaneMarkers message. Does not implicitly {@link apollo.perception.LaneMarkers.verify|verify} messages.
             * @param message LaneMarkers message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ILaneMarkers, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneMarkers message, length delimited. Does not implicitly {@link apollo.perception.LaneMarkers.verify|verify} messages.
             * @param message LaneMarkers message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ILaneMarkers, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneMarkers message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneMarkers
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.LaneMarkers;

            /**
             * Decodes a LaneMarkers message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneMarkers
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.LaneMarkers;

            /**
             * Verifies a LaneMarkers message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneMarkers message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneMarkers
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.LaneMarkers;

            /**
             * Creates a plain object from a LaneMarkers message. Also converts values to other types if specified.
             * @param message LaneMarkers
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.LaneMarkers, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneMarkers to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneMarkers
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CIPVInfo. */
        interface ICIPVInfo {

            /** CIPVInfo cipvId */
            cipvId?: (number|null);

            /** CIPVInfo potentialCipvId */
            potentialCipvId?: (number[]|null);
        }

        /** Represents a CIPVInfo. */
        class CIPVInfo implements ICIPVInfo {

            /**
             * Constructs a new CIPVInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ICIPVInfo);

            /** CIPVInfo cipvId. */
            public cipvId: number;

            /** CIPVInfo potentialCipvId. */
            public potentialCipvId: number[];

            /**
             * Creates a new CIPVInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CIPVInfo instance
             */
            public static create(properties?: apollo.perception.ICIPVInfo): apollo.perception.CIPVInfo;

            /**
             * Encodes the specified CIPVInfo message. Does not implicitly {@link apollo.perception.CIPVInfo.verify|verify} messages.
             * @param message CIPVInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ICIPVInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CIPVInfo message, length delimited. Does not implicitly {@link apollo.perception.CIPVInfo.verify|verify} messages.
             * @param message CIPVInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ICIPVInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CIPVInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CIPVInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.CIPVInfo;

            /**
             * Decodes a CIPVInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CIPVInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.CIPVInfo;

            /**
             * Verifies a CIPVInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CIPVInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CIPVInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.CIPVInfo;

            /**
             * Creates a plain object from a CIPVInfo message. Also converts values to other types if specified.
             * @param message CIPVInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.CIPVInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CIPVInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CIPVInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PerceptionObstacles. */
        interface IPerceptionObstacles {

            /** PerceptionObstacles perceptionObstacle */
            perceptionObstacle?: (apollo.perception.IPerceptionObstacle[]|null);

            /** PerceptionObstacles header */
            header?: (apollo.common.IHeader|null);

            /** PerceptionObstacles errorCode */
            errorCode?: (apollo.common.ErrorCode|null);

            /** PerceptionObstacles laneMarker */
            laneMarker?: (apollo.perception.ILaneMarkers|null);

            /** PerceptionObstacles cipvInfo */
            cipvInfo?: (apollo.perception.ICIPVInfo|null);
        }

        /** Represents a PerceptionObstacles. */
        class PerceptionObstacles implements IPerceptionObstacles {

            /**
             * Constructs a new PerceptionObstacles.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.IPerceptionObstacles);

            /** PerceptionObstacles perceptionObstacle. */
            public perceptionObstacle: apollo.perception.IPerceptionObstacle[];

            /** PerceptionObstacles header. */
            public header?: (apollo.common.IHeader|null);

            /** PerceptionObstacles errorCode. */
            public errorCode: apollo.common.ErrorCode;

            /** PerceptionObstacles laneMarker. */
            public laneMarker?: (apollo.perception.ILaneMarkers|null);

            /** PerceptionObstacles cipvInfo. */
            public cipvInfo?: (apollo.perception.ICIPVInfo|null);

            /**
             * Creates a new PerceptionObstacles instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PerceptionObstacles instance
             */
            public static create(properties?: apollo.perception.IPerceptionObstacles): apollo.perception.PerceptionObstacles;

            /**
             * Encodes the specified PerceptionObstacles message. Does not implicitly {@link apollo.perception.PerceptionObstacles.verify|verify} messages.
             * @param message PerceptionObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.IPerceptionObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PerceptionObstacles message, length delimited. Does not implicitly {@link apollo.perception.PerceptionObstacles.verify|verify} messages.
             * @param message PerceptionObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.IPerceptionObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PerceptionObstacles message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PerceptionObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.PerceptionObstacles;

            /**
             * Decodes a PerceptionObstacles message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PerceptionObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.PerceptionObstacles;

            /**
             * Verifies a PerceptionObstacles message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PerceptionObstacles message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PerceptionObstacles
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.PerceptionObstacles;

            /**
             * Creates a plain object from a PerceptionObstacles message. Also converts values to other types if specified.
             * @param message PerceptionObstacles
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.PerceptionObstacles, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PerceptionObstacles to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PerceptionObstacles
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TrafficLightBox. */
        interface ITrafficLightBox {

            /** TrafficLightBox x */
            x?: (number|null);

            /** TrafficLightBox y */
            y?: (number|null);

            /** TrafficLightBox width */
            width?: (number|null);

            /** TrafficLightBox height */
            height?: (number|null);

            /** TrafficLightBox color */
            color?: (apollo.perception.TrafficLight.Color|null);

            /** TrafficLightBox selected */
            selected?: (boolean|null);

            /** TrafficLightBox cameraName */
            cameraName?: (string|null);
        }

        /** Represents a TrafficLightBox. */
        class TrafficLightBox implements ITrafficLightBox {

            /**
             * Constructs a new TrafficLightBox.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ITrafficLightBox);

            /** TrafficLightBox x. */
            public x: number;

            /** TrafficLightBox y. */
            public y: number;

            /** TrafficLightBox width. */
            public width: number;

            /** TrafficLightBox height. */
            public height: number;

            /** TrafficLightBox color. */
            public color: apollo.perception.TrafficLight.Color;

            /** TrafficLightBox selected. */
            public selected: boolean;

            /** TrafficLightBox cameraName. */
            public cameraName: string;

            /**
             * Creates a new TrafficLightBox instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TrafficLightBox instance
             */
            public static create(properties?: apollo.perception.ITrafficLightBox): apollo.perception.TrafficLightBox;

            /**
             * Encodes the specified TrafficLightBox message. Does not implicitly {@link apollo.perception.TrafficLightBox.verify|verify} messages.
             * @param message TrafficLightBox message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ITrafficLightBox, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TrafficLightBox message, length delimited. Does not implicitly {@link apollo.perception.TrafficLightBox.verify|verify} messages.
             * @param message TrafficLightBox message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ITrafficLightBox, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TrafficLightBox message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TrafficLightBox
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.TrafficLightBox;

            /**
             * Decodes a TrafficLightBox message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TrafficLightBox
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.TrafficLightBox;

            /**
             * Verifies a TrafficLightBox message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TrafficLightBox message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TrafficLightBox
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.TrafficLightBox;

            /**
             * Creates a plain object from a TrafficLightBox message. Also converts values to other types if specified.
             * @param message TrafficLightBox
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.TrafficLightBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TrafficLightBox to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TrafficLightBox
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TrafficLightDebug. */
        interface ITrafficLightDebug {

            /** TrafficLightDebug cropbox */
            cropbox?: (apollo.perception.ITrafficLightBox|null);

            /** TrafficLightDebug box */
            box?: (apollo.perception.ITrafficLightBox[]|null);

            /** TrafficLightDebug signalNum */
            signalNum?: (number|null);

            /** TrafficLightDebug validPos */
            validPos?: (number|null);

            /** TrafficLightDebug tsDiffPos */
            tsDiffPos?: (number|null);

            /** TrafficLightDebug tsDiffSys */
            tsDiffSys?: (number|null);

            /** TrafficLightDebug projectError */
            projectError?: (number|null);

            /** TrafficLightDebug distanceToStopLine */
            distanceToStopLine?: (number|null);

            /** TrafficLightDebug cameraId */
            cameraId?: (number|null);

            /** TrafficLightDebug cropRoi */
            cropRoi?: (apollo.perception.ITrafficLightBox[]|null);

            /** TrafficLightDebug projectedRoi */
            projectedRoi?: (apollo.perception.ITrafficLightBox[]|null);

            /** TrafficLightDebug rectifiedRoi */
            rectifiedRoi?: (apollo.perception.ITrafficLightBox[]|null);

            /** TrafficLightDebug debugRoi */
            debugRoi?: (apollo.perception.ITrafficLightBox[]|null);
        }

        /** Represents a TrafficLightDebug. */
        class TrafficLightDebug implements ITrafficLightDebug {

            /**
             * Constructs a new TrafficLightDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ITrafficLightDebug);

            /** TrafficLightDebug cropbox. */
            public cropbox?: (apollo.perception.ITrafficLightBox|null);

            /** TrafficLightDebug box. */
            public box: apollo.perception.ITrafficLightBox[];

            /** TrafficLightDebug signalNum. */
            public signalNum: number;

            /** TrafficLightDebug validPos. */
            public validPos: number;

            /** TrafficLightDebug tsDiffPos. */
            public tsDiffPos: number;

            /** TrafficLightDebug tsDiffSys. */
            public tsDiffSys: number;

            /** TrafficLightDebug projectError. */
            public projectError: number;

            /** TrafficLightDebug distanceToStopLine. */
            public distanceToStopLine: number;

            /** TrafficLightDebug cameraId. */
            public cameraId: number;

            /** TrafficLightDebug cropRoi. */
            public cropRoi: apollo.perception.ITrafficLightBox[];

            /** TrafficLightDebug projectedRoi. */
            public projectedRoi: apollo.perception.ITrafficLightBox[];

            /** TrafficLightDebug rectifiedRoi. */
            public rectifiedRoi: apollo.perception.ITrafficLightBox[];

            /** TrafficLightDebug debugRoi. */
            public debugRoi: apollo.perception.ITrafficLightBox[];

            /**
             * Creates a new TrafficLightDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TrafficLightDebug instance
             */
            public static create(properties?: apollo.perception.ITrafficLightDebug): apollo.perception.TrafficLightDebug;

            /**
             * Encodes the specified TrafficLightDebug message. Does not implicitly {@link apollo.perception.TrafficLightDebug.verify|verify} messages.
             * @param message TrafficLightDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ITrafficLightDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TrafficLightDebug message, length delimited. Does not implicitly {@link apollo.perception.TrafficLightDebug.verify|verify} messages.
             * @param message TrafficLightDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ITrafficLightDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TrafficLightDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TrafficLightDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.TrafficLightDebug;

            /**
             * Decodes a TrafficLightDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TrafficLightDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.TrafficLightDebug;

            /**
             * Verifies a TrafficLightDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TrafficLightDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TrafficLightDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.TrafficLightDebug;

            /**
             * Creates a plain object from a TrafficLightDebug message. Also converts values to other types if specified.
             * @param message TrafficLightDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.TrafficLightDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TrafficLightDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TrafficLightDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TrafficLight. */
        interface ITrafficLight {

            /** TrafficLight color */
            color?: (apollo.perception.TrafficLight.Color|null);

            /** TrafficLight id */
            id?: (string|null);

            /** TrafficLight confidence */
            confidence?: (number|null);

            /** TrafficLight trackingTime */
            trackingTime?: (number|null);

            /** TrafficLight blink */
            blink?: (boolean|null);

            /** TrafficLight remainingTime */
            remainingTime?: (number|null);
        }

        /** Represents a TrafficLight. */
        class TrafficLight implements ITrafficLight {

            /**
             * Constructs a new TrafficLight.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ITrafficLight);

            /** TrafficLight color. */
            public color: apollo.perception.TrafficLight.Color;

            /** TrafficLight id. */
            public id: string;

            /** TrafficLight confidence. */
            public confidence: number;

            /** TrafficLight trackingTime. */
            public trackingTime: number;

            /** TrafficLight blink. */
            public blink: boolean;

            /** TrafficLight remainingTime. */
            public remainingTime: number;

            /**
             * Creates a new TrafficLight instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TrafficLight instance
             */
            public static create(properties?: apollo.perception.ITrafficLight): apollo.perception.TrafficLight;

            /**
             * Encodes the specified TrafficLight message. Does not implicitly {@link apollo.perception.TrafficLight.verify|verify} messages.
             * @param message TrafficLight message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ITrafficLight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TrafficLight message, length delimited. Does not implicitly {@link apollo.perception.TrafficLight.verify|verify} messages.
             * @param message TrafficLight message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ITrafficLight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TrafficLight message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TrafficLight
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.TrafficLight;

            /**
             * Decodes a TrafficLight message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TrafficLight
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.TrafficLight;

            /**
             * Verifies a TrafficLight message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TrafficLight message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TrafficLight
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.TrafficLight;

            /**
             * Creates a plain object from a TrafficLight message. Also converts values to other types if specified.
             * @param message TrafficLight
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.TrafficLight, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TrafficLight to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TrafficLight
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace TrafficLight {

            /** Color enum. */
            enum Color {
                UNKNOWN = 0,
                RED = 1,
                YELLOW = 2,
                GREEN = 3,
                BLACK = 4
            }
        }

        /** Properties of a TrafficLightDetection. */
        interface ITrafficLightDetection {

            /** TrafficLightDetection header */
            header?: (apollo.common.IHeader|null);

            /** TrafficLightDetection trafficLight */
            trafficLight?: (apollo.perception.ITrafficLight[]|null);

            /** TrafficLightDetection trafficLightDebug */
            trafficLightDebug?: (apollo.perception.ITrafficLightDebug|null);

            /** TrafficLightDetection containLights */
            containLights?: (boolean|null);

            /** TrafficLightDetection cameraId */
            cameraId?: (apollo.perception.TrafficLightDetection.CameraID|null);
        }

        /** Represents a TrafficLightDetection. */
        class TrafficLightDetection implements ITrafficLightDetection {

            /**
             * Constructs a new TrafficLightDetection.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.perception.ITrafficLightDetection);

            /** TrafficLightDetection header. */
            public header?: (apollo.common.IHeader|null);

            /** TrafficLightDetection trafficLight. */
            public trafficLight: apollo.perception.ITrafficLight[];

            /** TrafficLightDetection trafficLightDebug. */
            public trafficLightDebug?: (apollo.perception.ITrafficLightDebug|null);

            /** TrafficLightDetection containLights. */
            public containLights: boolean;

            /** TrafficLightDetection cameraId. */
            public cameraId: apollo.perception.TrafficLightDetection.CameraID;

            /**
             * Creates a new TrafficLightDetection instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TrafficLightDetection instance
             */
            public static create(properties?: apollo.perception.ITrafficLightDetection): apollo.perception.TrafficLightDetection;

            /**
             * Encodes the specified TrafficLightDetection message. Does not implicitly {@link apollo.perception.TrafficLightDetection.verify|verify} messages.
             * @param message TrafficLightDetection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.perception.ITrafficLightDetection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TrafficLightDetection message, length delimited. Does not implicitly {@link apollo.perception.TrafficLightDetection.verify|verify} messages.
             * @param message TrafficLightDetection message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.perception.ITrafficLightDetection, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TrafficLightDetection message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TrafficLightDetection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.perception.TrafficLightDetection;

            /**
             * Decodes a TrafficLightDetection message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TrafficLightDetection
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.perception.TrafficLightDetection;

            /**
             * Verifies a TrafficLightDetection message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TrafficLightDetection message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TrafficLightDetection
             */
            public static fromObject(object: { [k: string]: any }): apollo.perception.TrafficLightDetection;

            /**
             * Creates a plain object from a TrafficLightDetection message. Also converts values to other types if specified.
             * @param message TrafficLightDetection
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.perception.TrafficLightDetection, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TrafficLightDetection to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TrafficLightDetection
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace TrafficLightDetection {

            /** CameraID enum. */
            enum CameraID {
                CAMERA_FRONT_LONG = 0,
                CAMERA_FRONT_NARROW = 1,
                CAMERA_FRONT_SHORT = 2,
                CAMERA_FRONT_WIDE = 3
            }
        }
    }

    /** Namespace planning. */
    namespace planning {

        /** Properties of a TargetLane. */
        interface ITargetLane {

            /** TargetLane id */
            id?: (string|null);

            /** TargetLane startS */
            startS?: (number|null);

            /** TargetLane endS */
            endS?: (number|null);

            /** TargetLane speedLimit */
            speedLimit?: (number|null);
        }

        /** Represents a TargetLane. */
        class TargetLane implements ITargetLane {

            /**
             * Constructs a new TargetLane.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.ITargetLane);

            /** TargetLane id. */
            public id: string;

            /** TargetLane startS. */
            public startS: number;

            /** TargetLane endS. */
            public endS: number;

            /** TargetLane speedLimit. */
            public speedLimit: number;

            /**
             * Creates a new TargetLane instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TargetLane instance
             */
            public static create(properties?: apollo.planning.ITargetLane): apollo.planning.TargetLane;

            /**
             * Encodes the specified TargetLane message. Does not implicitly {@link apollo.planning.TargetLane.verify|verify} messages.
             * @param message TargetLane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.ITargetLane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TargetLane message, length delimited. Does not implicitly {@link apollo.planning.TargetLane.verify|verify} messages.
             * @param message TargetLane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.ITargetLane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TargetLane message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TargetLane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.TargetLane;

            /**
             * Decodes a TargetLane message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TargetLane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.TargetLane;

            /**
             * Verifies a TargetLane message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TargetLane message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TargetLane
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.TargetLane;

            /**
             * Creates a plain object from a TargetLane message. Also converts values to other types if specified.
             * @param message TargetLane
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.TargetLane, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TargetLane to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TargetLane
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectIgnore. */
        interface IObjectIgnore {
        }

        /** Represents an ObjectIgnore. */
        class ObjectIgnore implements IObjectIgnore {

            /**
             * Constructs a new ObjectIgnore.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectIgnore);

            /**
             * Creates a new ObjectIgnore instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectIgnore instance
             */
            public static create(properties?: apollo.planning.IObjectIgnore): apollo.planning.ObjectIgnore;

            /**
             * Encodes the specified ObjectIgnore message. Does not implicitly {@link apollo.planning.ObjectIgnore.verify|verify} messages.
             * @param message ObjectIgnore message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectIgnore, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectIgnore message, length delimited. Does not implicitly {@link apollo.planning.ObjectIgnore.verify|verify} messages.
             * @param message ObjectIgnore message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectIgnore, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectIgnore message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectIgnore
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectIgnore;

            /**
             * Decodes an ObjectIgnore message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectIgnore
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectIgnore;

            /**
             * Verifies an ObjectIgnore message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectIgnore message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectIgnore
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectIgnore;

            /**
             * Creates a plain object from an ObjectIgnore message. Also converts values to other types if specified.
             * @param message ObjectIgnore
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectIgnore, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectIgnore to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectIgnore
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** StopReasonCode enum. */
        enum StopReasonCode {
            STOP_REASON_HEAD_VEHICLE = 1,
            STOP_REASON_DESTINATION = 2,
            STOP_REASON_PEDESTRIAN = 3,
            STOP_REASON_OBSTACLE = 4,
            STOP_REASON_PREPARKING = 5,
            STOP_REASON_SIGNAL = 100,
            STOP_REASON_STOP_SIGN = 101,
            STOP_REASON_YIELD_SIGN = 102,
            STOP_REASON_CLEAR_ZONE = 103,
            STOP_REASON_CROSSWALK = 104,
            STOP_REASON_CREEPER = 105,
            STOP_REASON_REFERENCE_END = 106,
            STOP_REASON_YELLOW_SIGNAL = 107,
            STOP_REASON_PULL_OVER = 108,
            STOP_REASON_SIDEPASS_SAFETY = 109,
            STOP_REASON_PRE_OPEN_SPACE_STOP = 200,
            STOP_REASON_LANE_CHANGE_URGENCY = 201,
            STOP_REASON_EMERGENCY = 202
        }

        /** Properties of an ObjectStop. */
        interface IObjectStop {

            /** ObjectStop reasonCode */
            reasonCode?: (apollo.planning.StopReasonCode|null);

            /** ObjectStop distanceS */
            distanceS?: (number|null);

            /** ObjectStop stopPoint */
            stopPoint?: (apollo.common.IPointENU|null);

            /** ObjectStop stopHeading */
            stopHeading?: (number|null);

            /** ObjectStop waitForObstacle */
            waitForObstacle?: (string[]|null);
        }

        /** Represents an ObjectStop. */
        class ObjectStop implements IObjectStop {

            /**
             * Constructs a new ObjectStop.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectStop);

            /** ObjectStop reasonCode. */
            public reasonCode: apollo.planning.StopReasonCode;

            /** ObjectStop distanceS. */
            public distanceS: number;

            /** ObjectStop stopPoint. */
            public stopPoint?: (apollo.common.IPointENU|null);

            /** ObjectStop stopHeading. */
            public stopHeading: number;

            /** ObjectStop waitForObstacle. */
            public waitForObstacle: string[];

            /**
             * Creates a new ObjectStop instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectStop instance
             */
            public static create(properties?: apollo.planning.IObjectStop): apollo.planning.ObjectStop;

            /**
             * Encodes the specified ObjectStop message. Does not implicitly {@link apollo.planning.ObjectStop.verify|verify} messages.
             * @param message ObjectStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectStop message, length delimited. Does not implicitly {@link apollo.planning.ObjectStop.verify|verify} messages.
             * @param message ObjectStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectStop message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectStop;

            /**
             * Decodes an ObjectStop message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectStop;

            /**
             * Verifies an ObjectStop message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectStop message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectStop
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectStop;

            /**
             * Creates a plain object from an ObjectStop message. Also converts values to other types if specified.
             * @param message ObjectStop
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectStop, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectStop to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectStop
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectNudge. */
        interface IObjectNudge {

            /** ObjectNudge type */
            type?: (apollo.planning.ObjectNudge.Type|null);

            /** ObjectNudge distanceL */
            distanceL?: (number|null);
        }

        /** Represents an ObjectNudge. */
        class ObjectNudge implements IObjectNudge {

            /**
             * Constructs a new ObjectNudge.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectNudge);

            /** ObjectNudge type. */
            public type: apollo.planning.ObjectNudge.Type;

            /** ObjectNudge distanceL. */
            public distanceL: number;

            /**
             * Creates a new ObjectNudge instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectNudge instance
             */
            public static create(properties?: apollo.planning.IObjectNudge): apollo.planning.ObjectNudge;

            /**
             * Encodes the specified ObjectNudge message. Does not implicitly {@link apollo.planning.ObjectNudge.verify|verify} messages.
             * @param message ObjectNudge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectNudge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectNudge message, length delimited. Does not implicitly {@link apollo.planning.ObjectNudge.verify|verify} messages.
             * @param message ObjectNudge message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectNudge, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectNudge message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectNudge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectNudge;

            /**
             * Decodes an ObjectNudge message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectNudge
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectNudge;

            /**
             * Verifies an ObjectNudge message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectNudge message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectNudge
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectNudge;

            /**
             * Creates a plain object from an ObjectNudge message. Also converts values to other types if specified.
             * @param message ObjectNudge
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectNudge, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectNudge to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectNudge
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ObjectNudge {

            /** Type enum. */
            enum Type {
                LEFT_NUDGE = 1,
                RIGHT_NUDGE = 2,
                DYNAMIC_LEFT_NUDGE = 3,
                DYNAMIC_RIGHT_NUDGE = 4
            }
        }

        /** Properties of an ObjectYield. */
        interface IObjectYield {

            /** ObjectYield distanceS */
            distanceS?: (number|null);

            /** ObjectYield fencePoint */
            fencePoint?: (apollo.common.IPointENU|null);

            /** ObjectYield fenceHeading */
            fenceHeading?: (number|null);

            /** ObjectYield timeBuffer */
            timeBuffer?: (number|null);
        }

        /** Represents an ObjectYield. */
        class ObjectYield implements IObjectYield {

            /**
             * Constructs a new ObjectYield.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectYield);

            /** ObjectYield distanceS. */
            public distanceS: number;

            /** ObjectYield fencePoint. */
            public fencePoint?: (apollo.common.IPointENU|null);

            /** ObjectYield fenceHeading. */
            public fenceHeading: number;

            /** ObjectYield timeBuffer. */
            public timeBuffer: number;

            /**
             * Creates a new ObjectYield instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectYield instance
             */
            public static create(properties?: apollo.planning.IObjectYield): apollo.planning.ObjectYield;

            /**
             * Encodes the specified ObjectYield message. Does not implicitly {@link apollo.planning.ObjectYield.verify|verify} messages.
             * @param message ObjectYield message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectYield, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectYield message, length delimited. Does not implicitly {@link apollo.planning.ObjectYield.verify|verify} messages.
             * @param message ObjectYield message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectYield, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectYield message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectYield
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectYield;

            /**
             * Decodes an ObjectYield message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectYield
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectYield;

            /**
             * Verifies an ObjectYield message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectYield message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectYield
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectYield;

            /**
             * Creates a plain object from an ObjectYield message. Also converts values to other types if specified.
             * @param message ObjectYield
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectYield, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectYield to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectYield
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectFollow. */
        interface IObjectFollow {

            /** ObjectFollow distanceS */
            distanceS?: (number|null);

            /** ObjectFollow fencePoint */
            fencePoint?: (apollo.common.IPointENU|null);

            /** ObjectFollow fenceHeading */
            fenceHeading?: (number|null);
        }

        /** Represents an ObjectFollow. */
        class ObjectFollow implements IObjectFollow {

            /**
             * Constructs a new ObjectFollow.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectFollow);

            /** ObjectFollow distanceS. */
            public distanceS: number;

            /** ObjectFollow fencePoint. */
            public fencePoint?: (apollo.common.IPointENU|null);

            /** ObjectFollow fenceHeading. */
            public fenceHeading: number;

            /**
             * Creates a new ObjectFollow instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectFollow instance
             */
            public static create(properties?: apollo.planning.IObjectFollow): apollo.planning.ObjectFollow;

            /**
             * Encodes the specified ObjectFollow message. Does not implicitly {@link apollo.planning.ObjectFollow.verify|verify} messages.
             * @param message ObjectFollow message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectFollow, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectFollow message, length delimited. Does not implicitly {@link apollo.planning.ObjectFollow.verify|verify} messages.
             * @param message ObjectFollow message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectFollow, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectFollow message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectFollow
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectFollow;

            /**
             * Decodes an ObjectFollow message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectFollow
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectFollow;

            /**
             * Verifies an ObjectFollow message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectFollow message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectFollow
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectFollow;

            /**
             * Creates a plain object from an ObjectFollow message. Also converts values to other types if specified.
             * @param message ObjectFollow
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectFollow, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectFollow to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectFollow
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectOvertake. */
        interface IObjectOvertake {

            /** ObjectOvertake distanceS */
            distanceS?: (number|null);

            /** ObjectOvertake fencePoint */
            fencePoint?: (apollo.common.IPointENU|null);

            /** ObjectOvertake fenceHeading */
            fenceHeading?: (number|null);

            /** ObjectOvertake timeBuffer */
            timeBuffer?: (number|null);
        }

        /** Represents an ObjectOvertake. */
        class ObjectOvertake implements IObjectOvertake {

            /**
             * Constructs a new ObjectOvertake.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectOvertake);

            /** ObjectOvertake distanceS. */
            public distanceS: number;

            /** ObjectOvertake fencePoint. */
            public fencePoint?: (apollo.common.IPointENU|null);

            /** ObjectOvertake fenceHeading. */
            public fenceHeading: number;

            /** ObjectOvertake timeBuffer. */
            public timeBuffer: number;

            /**
             * Creates a new ObjectOvertake instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectOvertake instance
             */
            public static create(properties?: apollo.planning.IObjectOvertake): apollo.planning.ObjectOvertake;

            /**
             * Encodes the specified ObjectOvertake message. Does not implicitly {@link apollo.planning.ObjectOvertake.verify|verify} messages.
             * @param message ObjectOvertake message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectOvertake, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectOvertake message, length delimited. Does not implicitly {@link apollo.planning.ObjectOvertake.verify|verify} messages.
             * @param message ObjectOvertake message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectOvertake, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectOvertake message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectOvertake
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectOvertake;

            /**
             * Decodes an ObjectOvertake message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectOvertake
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectOvertake;

            /**
             * Verifies an ObjectOvertake message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectOvertake message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectOvertake
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectOvertake;

            /**
             * Creates a plain object from an ObjectOvertake message. Also converts values to other types if specified.
             * @param message ObjectOvertake
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectOvertake, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectOvertake to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectOvertake
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectSidePass. */
        interface IObjectSidePass {

            /** ObjectSidePass type */
            type?: (apollo.planning.ObjectSidePass.Type|null);
        }

        /** Represents an ObjectSidePass. */
        class ObjectSidePass implements IObjectSidePass {

            /**
             * Constructs a new ObjectSidePass.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectSidePass);

            /** ObjectSidePass type. */
            public type: apollo.planning.ObjectSidePass.Type;

            /**
             * Creates a new ObjectSidePass instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectSidePass instance
             */
            public static create(properties?: apollo.planning.IObjectSidePass): apollo.planning.ObjectSidePass;

            /**
             * Encodes the specified ObjectSidePass message. Does not implicitly {@link apollo.planning.ObjectSidePass.verify|verify} messages.
             * @param message ObjectSidePass message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectSidePass, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectSidePass message, length delimited. Does not implicitly {@link apollo.planning.ObjectSidePass.verify|verify} messages.
             * @param message ObjectSidePass message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectSidePass, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectSidePass message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectSidePass
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectSidePass;

            /**
             * Decodes an ObjectSidePass message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectSidePass
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectSidePass;

            /**
             * Verifies an ObjectSidePass message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectSidePass message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectSidePass
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectSidePass;

            /**
             * Creates a plain object from an ObjectSidePass message. Also converts values to other types if specified.
             * @param message ObjectSidePass
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectSidePass, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectSidePass to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectSidePass
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ObjectSidePass {

            /** Type enum. */
            enum Type {
                LEFT = 1,
                RIGHT = 2
            }
        }

        /** Properties of an ObjectAvoid. */
        interface IObjectAvoid {
        }

        /** Represents an ObjectAvoid. */
        class ObjectAvoid implements IObjectAvoid {

            /**
             * Constructs a new ObjectAvoid.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectAvoid);

            /**
             * Creates a new ObjectAvoid instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectAvoid instance
             */
            public static create(properties?: apollo.planning.IObjectAvoid): apollo.planning.ObjectAvoid;

            /**
             * Encodes the specified ObjectAvoid message. Does not implicitly {@link apollo.planning.ObjectAvoid.verify|verify} messages.
             * @param message ObjectAvoid message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectAvoid, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectAvoid message, length delimited. Does not implicitly {@link apollo.planning.ObjectAvoid.verify|verify} messages.
             * @param message ObjectAvoid message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectAvoid, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectAvoid message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectAvoid
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectAvoid;

            /**
             * Decodes an ObjectAvoid message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectAvoid
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectAvoid;

            /**
             * Verifies an ObjectAvoid message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectAvoid message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectAvoid
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectAvoid;

            /**
             * Creates a plain object from an ObjectAvoid message. Also converts values to other types if specified.
             * @param message ObjectAvoid
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectAvoid, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectAvoid to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectAvoid
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectStatus. */
        interface IObjectStatus {

            /** ObjectStatus motionType */
            motionType?: (apollo.planning.IObjectMotionType|null);

            /** ObjectStatus decisionType */
            decisionType?: (apollo.planning.IObjectDecisionType|null);
        }

        /** Represents an ObjectStatus. */
        class ObjectStatus implements IObjectStatus {

            /**
             * Constructs a new ObjectStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectStatus);

            /** ObjectStatus motionType. */
            public motionType?: (apollo.planning.IObjectMotionType|null);

            /** ObjectStatus decisionType. */
            public decisionType?: (apollo.planning.IObjectDecisionType|null);

            /**
             * Creates a new ObjectStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectStatus instance
             */
            public static create(properties?: apollo.planning.IObjectStatus): apollo.planning.ObjectStatus;

            /**
             * Encodes the specified ObjectStatus message. Does not implicitly {@link apollo.planning.ObjectStatus.verify|verify} messages.
             * @param message ObjectStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectStatus message, length delimited. Does not implicitly {@link apollo.planning.ObjectStatus.verify|verify} messages.
             * @param message ObjectStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectStatus;

            /**
             * Decodes an ObjectStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectStatus;

            /**
             * Verifies an ObjectStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectStatus
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectStatus;

            /**
             * Creates a plain object from an ObjectStatus message. Also converts values to other types if specified.
             * @param message ObjectStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectStatus
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectStatic. */
        interface IObjectStatic {
        }

        /** Represents an ObjectStatic. */
        class ObjectStatic implements IObjectStatic {

            /**
             * Constructs a new ObjectStatic.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectStatic);

            /**
             * Creates a new ObjectStatic instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectStatic instance
             */
            public static create(properties?: apollo.planning.IObjectStatic): apollo.planning.ObjectStatic;

            /**
             * Encodes the specified ObjectStatic message. Does not implicitly {@link apollo.planning.ObjectStatic.verify|verify} messages.
             * @param message ObjectStatic message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectStatic, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectStatic message, length delimited. Does not implicitly {@link apollo.planning.ObjectStatic.verify|verify} messages.
             * @param message ObjectStatic message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectStatic, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectStatic message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectStatic
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectStatic;

            /**
             * Decodes an ObjectStatic message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectStatic
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectStatic;

            /**
             * Verifies an ObjectStatic message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectStatic message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectStatic
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectStatic;

            /**
             * Creates a plain object from an ObjectStatic message. Also converts values to other types if specified.
             * @param message ObjectStatic
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectStatic, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectStatic to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectStatic
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectDynamic. */
        interface IObjectDynamic {
        }

        /** Represents an ObjectDynamic. */
        class ObjectDynamic implements IObjectDynamic {

            /**
             * Constructs a new ObjectDynamic.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectDynamic);

            /**
             * Creates a new ObjectDynamic instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectDynamic instance
             */
            public static create(properties?: apollo.planning.IObjectDynamic): apollo.planning.ObjectDynamic;

            /**
             * Encodes the specified ObjectDynamic message. Does not implicitly {@link apollo.planning.ObjectDynamic.verify|verify} messages.
             * @param message ObjectDynamic message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectDynamic, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectDynamic message, length delimited. Does not implicitly {@link apollo.planning.ObjectDynamic.verify|verify} messages.
             * @param message ObjectDynamic message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectDynamic, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectDynamic message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectDynamic
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectDynamic;

            /**
             * Decodes an ObjectDynamic message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectDynamic
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectDynamic;

            /**
             * Verifies an ObjectDynamic message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectDynamic message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectDynamic
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectDynamic;

            /**
             * Creates a plain object from an ObjectDynamic message. Also converts values to other types if specified.
             * @param message ObjectDynamic
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectDynamic, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectDynamic to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectDynamic
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectMotionType. */
        interface IObjectMotionType {

            /** ObjectMotionType static */
            "static"?: (apollo.planning.IObjectStatic|null);

            /** ObjectMotionType dynamic */
            dynamic?: (apollo.planning.IObjectDynamic|null);
        }

        /** Represents an ObjectMotionType. */
        class ObjectMotionType implements IObjectMotionType {

            /**
             * Constructs a new ObjectMotionType.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectMotionType);

            /** ObjectMotionType static. */
            public static?: (apollo.planning.IObjectStatic|null);

            /** ObjectMotionType dynamic. */
            public dynamic?: (apollo.planning.IObjectDynamic|null);

            /** ObjectMotionType motionTag. */
            public motionTag?: ("static"|"dynamic");

            /**
             * Creates a new ObjectMotionType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectMotionType instance
             */
            public static create(properties?: apollo.planning.IObjectMotionType): apollo.planning.ObjectMotionType;

            /**
             * Encodes the specified ObjectMotionType message. Does not implicitly {@link apollo.planning.ObjectMotionType.verify|verify} messages.
             * @param message ObjectMotionType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectMotionType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectMotionType message, length delimited. Does not implicitly {@link apollo.planning.ObjectMotionType.verify|verify} messages.
             * @param message ObjectMotionType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectMotionType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectMotionType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectMotionType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectMotionType;

            /**
             * Decodes an ObjectMotionType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectMotionType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectMotionType;

            /**
             * Verifies an ObjectMotionType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectMotionType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectMotionType
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectMotionType;

            /**
             * Creates a plain object from an ObjectMotionType message. Also converts values to other types if specified.
             * @param message ObjectMotionType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectMotionType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectMotionType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectMotionType
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectDecisionType. */
        interface IObjectDecisionType {

            /** ObjectDecisionType ignore */
            ignore?: (apollo.planning.IObjectIgnore|null);

            /** ObjectDecisionType stop */
            stop?: (apollo.planning.IObjectStop|null);

            /** ObjectDecisionType follow */
            follow?: (apollo.planning.IObjectFollow|null);

            /** ObjectDecisionType yield */
            "yield"?: (apollo.planning.IObjectYield|null);

            /** ObjectDecisionType overtake */
            overtake?: (apollo.planning.IObjectOvertake|null);

            /** ObjectDecisionType nudge */
            nudge?: (apollo.planning.IObjectNudge|null);

            /** ObjectDecisionType avoid */
            avoid?: (apollo.planning.IObjectAvoid|null);

            /** ObjectDecisionType sidePass */
            sidePass?: (apollo.planning.IObjectSidePass|null);
        }

        /** Represents an ObjectDecisionType. */
        class ObjectDecisionType implements IObjectDecisionType {

            /**
             * Constructs a new ObjectDecisionType.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectDecisionType);

            /** ObjectDecisionType ignore. */
            public ignore?: (apollo.planning.IObjectIgnore|null);

            /** ObjectDecisionType stop. */
            public stop?: (apollo.planning.IObjectStop|null);

            /** ObjectDecisionType follow. */
            public follow?: (apollo.planning.IObjectFollow|null);

            /** ObjectDecisionType yield. */
            public yield?: (apollo.planning.IObjectYield|null);

            /** ObjectDecisionType overtake. */
            public overtake?: (apollo.planning.IObjectOvertake|null);

            /** ObjectDecisionType nudge. */
            public nudge?: (apollo.planning.IObjectNudge|null);

            /** ObjectDecisionType avoid. */
            public avoid?: (apollo.planning.IObjectAvoid|null);

            /** ObjectDecisionType sidePass. */
            public sidePass?: (apollo.planning.IObjectSidePass|null);

            /** ObjectDecisionType objectTag. */
            public objectTag?: ("ignore"|"stop"|"follow"|"yield"|"overtake"|"nudge"|"avoid"|"sidePass");

            /**
             * Creates a new ObjectDecisionType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectDecisionType instance
             */
            public static create(properties?: apollo.planning.IObjectDecisionType): apollo.planning.ObjectDecisionType;

            /**
             * Encodes the specified ObjectDecisionType message. Does not implicitly {@link apollo.planning.ObjectDecisionType.verify|verify} messages.
             * @param message ObjectDecisionType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectDecisionType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectDecisionType message, length delimited. Does not implicitly {@link apollo.planning.ObjectDecisionType.verify|verify} messages.
             * @param message ObjectDecisionType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectDecisionType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectDecisionType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectDecisionType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectDecisionType;

            /**
             * Decodes an ObjectDecisionType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectDecisionType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectDecisionType;

            /**
             * Verifies an ObjectDecisionType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectDecisionType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectDecisionType
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectDecisionType;

            /**
             * Creates a plain object from an ObjectDecisionType message. Also converts values to other types if specified.
             * @param message ObjectDecisionType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectDecisionType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectDecisionType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectDecisionType
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectDecision. */
        interface IObjectDecision {

            /** ObjectDecision id */
            id?: (string|null);

            /** ObjectDecision perceptionId */
            perceptionId?: (number|null);

            /** ObjectDecision objectDecision */
            objectDecision?: (apollo.planning.IObjectDecisionType[]|null);
        }

        /** Represents an ObjectDecision. */
        class ObjectDecision implements IObjectDecision {

            /**
             * Constructs a new ObjectDecision.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectDecision);

            /** ObjectDecision id. */
            public id: string;

            /** ObjectDecision perceptionId. */
            public perceptionId: number;

            /** ObjectDecision objectDecision. */
            public objectDecision: apollo.planning.IObjectDecisionType[];

            /**
             * Creates a new ObjectDecision instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectDecision instance
             */
            public static create(properties?: apollo.planning.IObjectDecision): apollo.planning.ObjectDecision;

            /**
             * Encodes the specified ObjectDecision message. Does not implicitly {@link apollo.planning.ObjectDecision.verify|verify} messages.
             * @param message ObjectDecision message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectDecision, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectDecision message, length delimited. Does not implicitly {@link apollo.planning.ObjectDecision.verify|verify} messages.
             * @param message ObjectDecision message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectDecision, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectDecision message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectDecision
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectDecision;

            /**
             * Decodes an ObjectDecision message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectDecision
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectDecision;

            /**
             * Verifies an ObjectDecision message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectDecision message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectDecision
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectDecision;

            /**
             * Creates a plain object from an ObjectDecision message. Also converts values to other types if specified.
             * @param message ObjectDecision
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectDecision, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectDecision to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectDecision
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectDecisions. */
        interface IObjectDecisions {

            /** ObjectDecisions decision */
            decision?: (apollo.planning.IObjectDecision[]|null);
        }

        /** Represents an ObjectDecisions. */
        class ObjectDecisions implements IObjectDecisions {

            /**
             * Constructs a new ObjectDecisions.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IObjectDecisions);

            /** ObjectDecisions decision. */
            public decision: apollo.planning.IObjectDecision[];

            /**
             * Creates a new ObjectDecisions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectDecisions instance
             */
            public static create(properties?: apollo.planning.IObjectDecisions): apollo.planning.ObjectDecisions;

            /**
             * Encodes the specified ObjectDecisions message. Does not implicitly {@link apollo.planning.ObjectDecisions.verify|verify} messages.
             * @param message ObjectDecisions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IObjectDecisions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectDecisions message, length delimited. Does not implicitly {@link apollo.planning.ObjectDecisions.verify|verify} messages.
             * @param message ObjectDecisions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IObjectDecisions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectDecisions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectDecisions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ObjectDecisions;

            /**
             * Decodes an ObjectDecisions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectDecisions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ObjectDecisions;

            /**
             * Verifies an ObjectDecisions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectDecisions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectDecisions
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ObjectDecisions;

            /**
             * Creates a plain object from an ObjectDecisions message. Also converts values to other types if specified.
             * @param message ObjectDecisions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ObjectDecisions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectDecisions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectDecisions
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MainStop. */
        interface IMainStop {

            /** MainStop reasonCode */
            reasonCode?: (apollo.planning.StopReasonCode|null);

            /** MainStop reason */
            reason?: (string|null);

            /** MainStop stopPoint */
            stopPoint?: (apollo.common.IPointENU|null);

            /** MainStop stopHeading */
            stopHeading?: (number|null);

            /** MainStop changeLaneType */
            changeLaneType?: (apollo.routing.ChangeLaneType|null);
        }

        /** Represents a MainStop. */
        class MainStop implements IMainStop {

            /**
             * Constructs a new MainStop.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainStop);

            /** MainStop reasonCode. */
            public reasonCode: apollo.planning.StopReasonCode;

            /** MainStop reason. */
            public reason: string;

            /** MainStop stopPoint. */
            public stopPoint?: (apollo.common.IPointENU|null);

            /** MainStop stopHeading. */
            public stopHeading: number;

            /** MainStop changeLaneType. */
            public changeLaneType: apollo.routing.ChangeLaneType;

            /**
             * Creates a new MainStop instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainStop instance
             */
            public static create(properties?: apollo.planning.IMainStop): apollo.planning.MainStop;

            /**
             * Encodes the specified MainStop message. Does not implicitly {@link apollo.planning.MainStop.verify|verify} messages.
             * @param message MainStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainStop message, length delimited. Does not implicitly {@link apollo.planning.MainStop.verify|verify} messages.
             * @param message MainStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainStop message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainStop;

            /**
             * Decodes a MainStop message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainStop;

            /**
             * Verifies a MainStop message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainStop message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainStop
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainStop;

            /**
             * Creates a plain object from a MainStop message. Also converts values to other types if specified.
             * @param message MainStop
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainStop, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainStop to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainStop
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an EmergencyStopHardBrake. */
        interface IEmergencyStopHardBrake {
        }

        /** Represents an EmergencyStopHardBrake. */
        class EmergencyStopHardBrake implements IEmergencyStopHardBrake {

            /**
             * Constructs a new EmergencyStopHardBrake.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IEmergencyStopHardBrake);

            /**
             * Creates a new EmergencyStopHardBrake instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EmergencyStopHardBrake instance
             */
            public static create(properties?: apollo.planning.IEmergencyStopHardBrake): apollo.planning.EmergencyStopHardBrake;

            /**
             * Encodes the specified EmergencyStopHardBrake message. Does not implicitly {@link apollo.planning.EmergencyStopHardBrake.verify|verify} messages.
             * @param message EmergencyStopHardBrake message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IEmergencyStopHardBrake, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EmergencyStopHardBrake message, length delimited. Does not implicitly {@link apollo.planning.EmergencyStopHardBrake.verify|verify} messages.
             * @param message EmergencyStopHardBrake message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IEmergencyStopHardBrake, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EmergencyStopHardBrake message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EmergencyStopHardBrake
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.EmergencyStopHardBrake;

            /**
             * Decodes an EmergencyStopHardBrake message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EmergencyStopHardBrake
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.EmergencyStopHardBrake;

            /**
             * Verifies an EmergencyStopHardBrake message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EmergencyStopHardBrake message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EmergencyStopHardBrake
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.EmergencyStopHardBrake;

            /**
             * Creates a plain object from an EmergencyStopHardBrake message. Also converts values to other types if specified.
             * @param message EmergencyStopHardBrake
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.EmergencyStopHardBrake, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EmergencyStopHardBrake to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for EmergencyStopHardBrake
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an EmergencyStopCruiseToStop. */
        interface IEmergencyStopCruiseToStop {
        }

        /** Represents an EmergencyStopCruiseToStop. */
        class EmergencyStopCruiseToStop implements IEmergencyStopCruiseToStop {

            /**
             * Constructs a new EmergencyStopCruiseToStop.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IEmergencyStopCruiseToStop);

            /**
             * Creates a new EmergencyStopCruiseToStop instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EmergencyStopCruiseToStop instance
             */
            public static create(properties?: apollo.planning.IEmergencyStopCruiseToStop): apollo.planning.EmergencyStopCruiseToStop;

            /**
             * Encodes the specified EmergencyStopCruiseToStop message. Does not implicitly {@link apollo.planning.EmergencyStopCruiseToStop.verify|verify} messages.
             * @param message EmergencyStopCruiseToStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IEmergencyStopCruiseToStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EmergencyStopCruiseToStop message, length delimited. Does not implicitly {@link apollo.planning.EmergencyStopCruiseToStop.verify|verify} messages.
             * @param message EmergencyStopCruiseToStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IEmergencyStopCruiseToStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EmergencyStopCruiseToStop message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EmergencyStopCruiseToStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.EmergencyStopCruiseToStop;

            /**
             * Decodes an EmergencyStopCruiseToStop message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EmergencyStopCruiseToStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.EmergencyStopCruiseToStop;

            /**
             * Verifies an EmergencyStopCruiseToStop message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EmergencyStopCruiseToStop message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EmergencyStopCruiseToStop
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.EmergencyStopCruiseToStop;

            /**
             * Creates a plain object from an EmergencyStopCruiseToStop message. Also converts values to other types if specified.
             * @param message EmergencyStopCruiseToStop
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.EmergencyStopCruiseToStop, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EmergencyStopCruiseToStop to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for EmergencyStopCruiseToStop
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MainEmergencyStop. */
        interface IMainEmergencyStop {

            /** MainEmergencyStop reasonCode */
            reasonCode?: (apollo.planning.MainEmergencyStop.ReasonCode|null);

            /** MainEmergencyStop reason */
            reason?: (string|null);

            /** MainEmergencyStop hardBrake */
            hardBrake?: (apollo.planning.IEmergencyStopHardBrake|null);

            /** MainEmergencyStop cruiseToStop */
            cruiseToStop?: (apollo.planning.IEmergencyStopCruiseToStop|null);
        }

        /** Represents a MainEmergencyStop. */
        class MainEmergencyStop implements IMainEmergencyStop {

            /**
             * Constructs a new MainEmergencyStop.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainEmergencyStop);

            /** MainEmergencyStop reasonCode. */
            public reasonCode: apollo.planning.MainEmergencyStop.ReasonCode;

            /** MainEmergencyStop reason. */
            public reason: string;

            /** MainEmergencyStop hardBrake. */
            public hardBrake?: (apollo.planning.IEmergencyStopHardBrake|null);

            /** MainEmergencyStop cruiseToStop. */
            public cruiseToStop?: (apollo.planning.IEmergencyStopCruiseToStop|null);

            /** MainEmergencyStop task. */
            public task?: ("hardBrake"|"cruiseToStop");

            /**
             * Creates a new MainEmergencyStop instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainEmergencyStop instance
             */
            public static create(properties?: apollo.planning.IMainEmergencyStop): apollo.planning.MainEmergencyStop;

            /**
             * Encodes the specified MainEmergencyStop message. Does not implicitly {@link apollo.planning.MainEmergencyStop.verify|verify} messages.
             * @param message MainEmergencyStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainEmergencyStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainEmergencyStop message, length delimited. Does not implicitly {@link apollo.planning.MainEmergencyStop.verify|verify} messages.
             * @param message MainEmergencyStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainEmergencyStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainEmergencyStop message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainEmergencyStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainEmergencyStop;

            /**
             * Decodes a MainEmergencyStop message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainEmergencyStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainEmergencyStop;

            /**
             * Verifies a MainEmergencyStop message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainEmergencyStop message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainEmergencyStop
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainEmergencyStop;

            /**
             * Creates a plain object from a MainEmergencyStop message. Also converts values to other types if specified.
             * @param message MainEmergencyStop
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainEmergencyStop, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainEmergencyStop to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainEmergencyStop
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace MainEmergencyStop {

            /** ReasonCode enum. */
            enum ReasonCode {
                ESTOP_REASON_INTERNAL_ERR = 1,
                ESTOP_REASON_COLLISION = 2,
                ESTOP_REASON_ST_FIND_PATH = 3,
                ESTOP_REASON_ST_MAKE_DECISION = 4,
                ESTOP_REASON_SENSOR_ERROR = 5
            }
        }

        /** Properties of a MainCruise. */
        interface IMainCruise {

            /** MainCruise changeLaneType */
            changeLaneType?: (apollo.routing.ChangeLaneType|null);
        }

        /** Represents a MainCruise. */
        class MainCruise implements IMainCruise {

            /**
             * Constructs a new MainCruise.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainCruise);

            /** MainCruise changeLaneType. */
            public changeLaneType: apollo.routing.ChangeLaneType;

            /**
             * Creates a new MainCruise instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainCruise instance
             */
            public static create(properties?: apollo.planning.IMainCruise): apollo.planning.MainCruise;

            /**
             * Encodes the specified MainCruise message. Does not implicitly {@link apollo.planning.MainCruise.verify|verify} messages.
             * @param message MainCruise message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainCruise, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainCruise message, length delimited. Does not implicitly {@link apollo.planning.MainCruise.verify|verify} messages.
             * @param message MainCruise message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainCruise, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainCruise message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainCruise
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainCruise;

            /**
             * Decodes a MainCruise message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainCruise
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainCruise;

            /**
             * Verifies a MainCruise message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainCruise message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainCruise
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainCruise;

            /**
             * Creates a plain object from a MainCruise message. Also converts values to other types if specified.
             * @param message MainCruise
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainCruise, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainCruise to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainCruise
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MainChangeLane. */
        interface IMainChangeLane {

            /** MainChangeLane type */
            type?: (apollo.planning.MainChangeLane.Type|null);

            /** MainChangeLane defaultLane */
            defaultLane?: (apollo.planning.ITargetLane[]|null);

            /** MainChangeLane defaultLaneStop */
            defaultLaneStop?: (apollo.planning.IMainStop|null);

            /** MainChangeLane targetLaneStop */
            targetLaneStop?: (apollo.planning.IMainStop|null);
        }

        /** Represents a MainChangeLane. */
        class MainChangeLane implements IMainChangeLane {

            /**
             * Constructs a new MainChangeLane.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainChangeLane);

            /** MainChangeLane type. */
            public type: apollo.planning.MainChangeLane.Type;

            /** MainChangeLane defaultLane. */
            public defaultLane: apollo.planning.ITargetLane[];

            /** MainChangeLane defaultLaneStop. */
            public defaultLaneStop?: (apollo.planning.IMainStop|null);

            /** MainChangeLane targetLaneStop. */
            public targetLaneStop?: (apollo.planning.IMainStop|null);

            /**
             * Creates a new MainChangeLane instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainChangeLane instance
             */
            public static create(properties?: apollo.planning.IMainChangeLane): apollo.planning.MainChangeLane;

            /**
             * Encodes the specified MainChangeLane message. Does not implicitly {@link apollo.planning.MainChangeLane.verify|verify} messages.
             * @param message MainChangeLane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainChangeLane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainChangeLane message, length delimited. Does not implicitly {@link apollo.planning.MainChangeLane.verify|verify} messages.
             * @param message MainChangeLane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainChangeLane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainChangeLane message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainChangeLane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainChangeLane;

            /**
             * Decodes a MainChangeLane message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainChangeLane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainChangeLane;

            /**
             * Verifies a MainChangeLane message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainChangeLane message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainChangeLane
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainChangeLane;

            /**
             * Creates a plain object from a MainChangeLane message. Also converts values to other types if specified.
             * @param message MainChangeLane
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainChangeLane, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainChangeLane to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainChangeLane
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace MainChangeLane {

            /** Type enum. */
            enum Type {
                LEFT = 1,
                RIGHT = 2
            }
        }

        /** Properties of a MainMissionComplete. */
        interface IMainMissionComplete {

            /** MainMissionComplete stopPoint */
            stopPoint?: (apollo.common.IPointENU|null);

            /** MainMissionComplete stopHeading */
            stopHeading?: (number|null);
        }

        /** Represents a MainMissionComplete. */
        class MainMissionComplete implements IMainMissionComplete {

            /**
             * Constructs a new MainMissionComplete.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainMissionComplete);

            /** MainMissionComplete stopPoint. */
            public stopPoint?: (apollo.common.IPointENU|null);

            /** MainMissionComplete stopHeading. */
            public stopHeading: number;

            /**
             * Creates a new MainMissionComplete instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainMissionComplete instance
             */
            public static create(properties?: apollo.planning.IMainMissionComplete): apollo.planning.MainMissionComplete;

            /**
             * Encodes the specified MainMissionComplete message. Does not implicitly {@link apollo.planning.MainMissionComplete.verify|verify} messages.
             * @param message MainMissionComplete message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainMissionComplete, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainMissionComplete message, length delimited. Does not implicitly {@link apollo.planning.MainMissionComplete.verify|verify} messages.
             * @param message MainMissionComplete message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainMissionComplete, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainMissionComplete message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainMissionComplete
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainMissionComplete;

            /**
             * Decodes a MainMissionComplete message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainMissionComplete
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainMissionComplete;

            /**
             * Verifies a MainMissionComplete message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainMissionComplete message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainMissionComplete
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainMissionComplete;

            /**
             * Creates a plain object from a MainMissionComplete message. Also converts values to other types if specified.
             * @param message MainMissionComplete
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainMissionComplete, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainMissionComplete to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainMissionComplete
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MainNotReady. */
        interface IMainNotReady {

            /** MainNotReady reason */
            reason?: (string|null);
        }

        /** Represents a MainNotReady. */
        class MainNotReady implements IMainNotReady {

            /**
             * Constructs a new MainNotReady.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainNotReady);

            /** MainNotReady reason. */
            public reason: string;

            /**
             * Creates a new MainNotReady instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainNotReady instance
             */
            public static create(properties?: apollo.planning.IMainNotReady): apollo.planning.MainNotReady;

            /**
             * Encodes the specified MainNotReady message. Does not implicitly {@link apollo.planning.MainNotReady.verify|verify} messages.
             * @param message MainNotReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainNotReady, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainNotReady message, length delimited. Does not implicitly {@link apollo.planning.MainNotReady.verify|verify} messages.
             * @param message MainNotReady message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainNotReady, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainNotReady message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainNotReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainNotReady;

            /**
             * Decodes a MainNotReady message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainNotReady
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainNotReady;

            /**
             * Verifies a MainNotReady message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainNotReady message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainNotReady
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainNotReady;

            /**
             * Creates a plain object from a MainNotReady message. Also converts values to other types if specified.
             * @param message MainNotReady
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainNotReady, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainNotReady to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainNotReady
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MainParking. */
        interface IMainParking {

            /** MainParking status */
            status?: (apollo.planning.MainParking.ParkingStatus|null);
        }

        /** Represents a MainParking. */
        class MainParking implements IMainParking {

            /**
             * Constructs a new MainParking.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainParking);

            /** MainParking status. */
            public status: apollo.planning.MainParking.ParkingStatus;

            /**
             * Creates a new MainParking instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainParking instance
             */
            public static create(properties?: apollo.planning.IMainParking): apollo.planning.MainParking;

            /**
             * Encodes the specified MainParking message. Does not implicitly {@link apollo.planning.MainParking.verify|verify} messages.
             * @param message MainParking message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainParking, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainParking message, length delimited. Does not implicitly {@link apollo.planning.MainParking.verify|verify} messages.
             * @param message MainParking message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainParking, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainParking message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainParking
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainParking;

            /**
             * Decodes a MainParking message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainParking
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainParking;

            /**
             * Verifies a MainParking message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainParking message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainParking
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainParking;

            /**
             * Creates a plain object from a MainParking message. Also converts values to other types if specified.
             * @param message MainParking
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainParking, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainParking to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainParking
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace MainParking {

            /** ParkingStatus enum. */
            enum ParkingStatus {
                IN_PARKING = 1
            }
        }

        /** Properties of a MainDecision. */
        interface IMainDecision {

            /** MainDecision cruise */
            cruise?: (apollo.planning.IMainCruise|null);

            /** MainDecision stop */
            stop?: (apollo.planning.IMainStop|null);

            /** MainDecision estop */
            estop?: (apollo.planning.IMainEmergencyStop|null);

            /** MainDecision changeLane */
            changeLane?: (apollo.planning.IMainChangeLane|null);

            /** MainDecision missionComplete */
            missionComplete?: (apollo.planning.IMainMissionComplete|null);

            /** MainDecision notReady */
            notReady?: (apollo.planning.IMainNotReady|null);

            /** MainDecision parking */
            parking?: (apollo.planning.IMainParking|null);

            /** MainDecision targetLane */
            targetLane?: (apollo.planning.ITargetLane[]|null);
        }

        /** Represents a MainDecision. */
        class MainDecision implements IMainDecision {

            /**
             * Constructs a new MainDecision.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IMainDecision);

            /** MainDecision cruise. */
            public cruise?: (apollo.planning.IMainCruise|null);

            /** MainDecision stop. */
            public stop?: (apollo.planning.IMainStop|null);

            /** MainDecision estop. */
            public estop?: (apollo.planning.IMainEmergencyStop|null);

            /** MainDecision changeLane. */
            public changeLane?: (apollo.planning.IMainChangeLane|null);

            /** MainDecision missionComplete. */
            public missionComplete?: (apollo.planning.IMainMissionComplete|null);

            /** MainDecision notReady. */
            public notReady?: (apollo.planning.IMainNotReady|null);

            /** MainDecision parking. */
            public parking?: (apollo.planning.IMainParking|null);

            /** MainDecision targetLane. */
            public targetLane: apollo.planning.ITargetLane[];

            /** MainDecision task. */
            public task?: ("cruise"|"stop"|"estop"|"changeLane"|"missionComplete"|"notReady"|"parking");

            /**
             * Creates a new MainDecision instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MainDecision instance
             */
            public static create(properties?: apollo.planning.IMainDecision): apollo.planning.MainDecision;

            /**
             * Encodes the specified MainDecision message. Does not implicitly {@link apollo.planning.MainDecision.verify|verify} messages.
             * @param message MainDecision message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IMainDecision, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MainDecision message, length delimited. Does not implicitly {@link apollo.planning.MainDecision.verify|verify} messages.
             * @param message MainDecision message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IMainDecision, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MainDecision message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MainDecision
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.MainDecision;

            /**
             * Decodes a MainDecision message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MainDecision
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.MainDecision;

            /**
             * Verifies a MainDecision message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MainDecision message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MainDecision
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.MainDecision;

            /**
             * Creates a plain object from a MainDecision message. Also converts values to other types if specified.
             * @param message MainDecision
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.MainDecision, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MainDecision to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MainDecision
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DecisionResult. */
        interface IDecisionResult {

            /** DecisionResult mainDecision */
            mainDecision?: (apollo.planning.IMainDecision|null);

            /** DecisionResult objectDecision */
            objectDecision?: (apollo.planning.IObjectDecisions|null);

            /** DecisionResult vehicleSignal */
            vehicleSignal?: (apollo.common.IVehicleSignal|null);
        }

        /** Represents a DecisionResult. */
        class DecisionResult implements IDecisionResult {

            /**
             * Constructs a new DecisionResult.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IDecisionResult);

            /** DecisionResult mainDecision. */
            public mainDecision?: (apollo.planning.IMainDecision|null);

            /** DecisionResult objectDecision. */
            public objectDecision?: (apollo.planning.IObjectDecisions|null);

            /** DecisionResult vehicleSignal. */
            public vehicleSignal?: (apollo.common.IVehicleSignal|null);

            /**
             * Creates a new DecisionResult instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DecisionResult instance
             */
            public static create(properties?: apollo.planning.IDecisionResult): apollo.planning.DecisionResult;

            /**
             * Encodes the specified DecisionResult message. Does not implicitly {@link apollo.planning.DecisionResult.verify|verify} messages.
             * @param message DecisionResult message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IDecisionResult, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DecisionResult message, length delimited. Does not implicitly {@link apollo.planning.DecisionResult.verify|verify} messages.
             * @param message DecisionResult message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IDecisionResult, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DecisionResult message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DecisionResult
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.DecisionResult;

            /**
             * Decodes a DecisionResult message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DecisionResult
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.DecisionResult;

            /**
             * Verifies a DecisionResult message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DecisionResult message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DecisionResult
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.DecisionResult;

            /**
             * Creates a plain object from a DecisionResult message. Also converts values to other types if specified.
             * @param message DecisionResult
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.DecisionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DecisionResult to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DecisionResult
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PadMessage. */
        interface IPadMessage {

            /** PadMessage header */
            header?: (apollo.common.IHeader|null);

            /** PadMessage action */
            action?: (apollo.planning.PadMessage.DrivingAction|null);
        }

        /** Represents a PadMessage. */
        class PadMessage implements IPadMessage {

            /**
             * Constructs a new PadMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IPadMessage);

            /** PadMessage header. */
            public header?: (apollo.common.IHeader|null);

            /** PadMessage action. */
            public action: apollo.planning.PadMessage.DrivingAction;

            /**
             * Creates a new PadMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PadMessage instance
             */
            public static create(properties?: apollo.planning.IPadMessage): apollo.planning.PadMessage;

            /**
             * Encodes the specified PadMessage message. Does not implicitly {@link apollo.planning.PadMessage.verify|verify} messages.
             * @param message PadMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IPadMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PadMessage message, length delimited. Does not implicitly {@link apollo.planning.PadMessage.verify|verify} messages.
             * @param message PadMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IPadMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PadMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PadMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.PadMessage;

            /**
             * Decodes a PadMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PadMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.PadMessage;

            /**
             * Verifies a PadMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PadMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PadMessage
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.PadMessage;

            /**
             * Creates a plain object from a PadMessage message. Also converts values to other types if specified.
             * @param message PadMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.PadMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PadMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PadMessage
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace PadMessage {

            /** DrivingAction enum. */
            enum DrivingAction {
                NONE = 100,
                FOLLOW = 0,
                CHANGE_LEFT = 1,
                CHANGE_RIGHT = 2,
                PULL_OVER = 3,
                STOP = 4,
                RESUME_CRUISE = 5,
                CLEAR_PLANNING = 6
            }
        }

        /** Properties of a EStop. */
        interface IEStop {

            /** EStop isEstop */
            isEstop?: (boolean|null);

            /** EStop reason */
            reason?: (string|null);
        }

        /** Represents a EStop. */
        class EStop implements IEStop {

            /**
             * Constructs a new EStop.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IEStop);

            /** EStop isEstop. */
            public isEstop: boolean;

            /** EStop reason. */
            public reason: string;

            /**
             * Creates a new EStop instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EStop instance
             */
            public static create(properties?: apollo.planning.IEStop): apollo.planning.EStop;

            /**
             * Encodes the specified EStop message. Does not implicitly {@link apollo.planning.EStop.verify|verify} messages.
             * @param message EStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IEStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EStop message, length delimited. Does not implicitly {@link apollo.planning.EStop.verify|verify} messages.
             * @param message EStop message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IEStop, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a EStop message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.EStop;

            /**
             * Decodes a EStop message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EStop
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.EStop;

            /**
             * Verifies a EStop message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a EStop message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EStop
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.EStop;

            /**
             * Creates a plain object from a EStop message. Also converts values to other types if specified.
             * @param message EStop
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.EStop, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EStop to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for EStop
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TaskStats. */
        interface ITaskStats {

            /** TaskStats name */
            name?: (string|null);

            /** TaskStats timeMs */
            timeMs?: (number|null);
        }

        /** Represents a TaskStats. */
        class TaskStats implements ITaskStats {

            /**
             * Constructs a new TaskStats.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.ITaskStats);

            /** TaskStats name. */
            public name: string;

            /** TaskStats timeMs. */
            public timeMs: number;

            /**
             * Creates a new TaskStats instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TaskStats instance
             */
            public static create(properties?: apollo.planning.ITaskStats): apollo.planning.TaskStats;

            /**
             * Encodes the specified TaskStats message. Does not implicitly {@link apollo.planning.TaskStats.verify|verify} messages.
             * @param message TaskStats message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.ITaskStats, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TaskStats message, length delimited. Does not implicitly {@link apollo.planning.TaskStats.verify|verify} messages.
             * @param message TaskStats message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.ITaskStats, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TaskStats message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskStats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.TaskStats;

            /**
             * Decodes a TaskStats message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TaskStats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.TaskStats;

            /**
             * Verifies a TaskStats message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TaskStats message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TaskStats
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.TaskStats;

            /**
             * Creates a plain object from a TaskStats message. Also converts values to other types if specified.
             * @param message TaskStats
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.TaskStats, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TaskStats to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TaskStats
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LatencyStats. */
        interface ILatencyStats {

            /** LatencyStats totalTimeMs */
            totalTimeMs?: (number|null);

            /** LatencyStats taskStats */
            taskStats?: (apollo.planning.ITaskStats[]|null);

            /** LatencyStats initFrameTimeMs */
            initFrameTimeMs?: (number|null);
        }

        /** Represents a LatencyStats. */
        class LatencyStats implements ILatencyStats {

            /**
             * Constructs a new LatencyStats.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.ILatencyStats);

            /** LatencyStats totalTimeMs. */
            public totalTimeMs: number;

            /** LatencyStats taskStats. */
            public taskStats: apollo.planning.ITaskStats[];

            /** LatencyStats initFrameTimeMs. */
            public initFrameTimeMs: number;

            /**
             * Creates a new LatencyStats instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LatencyStats instance
             */
            public static create(properties?: apollo.planning.ILatencyStats): apollo.planning.LatencyStats;

            /**
             * Encodes the specified LatencyStats message. Does not implicitly {@link apollo.planning.LatencyStats.verify|verify} messages.
             * @param message LatencyStats message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.ILatencyStats, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LatencyStats message, length delimited. Does not implicitly {@link apollo.planning.LatencyStats.verify|verify} messages.
             * @param message LatencyStats message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.ILatencyStats, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LatencyStats message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LatencyStats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.LatencyStats;

            /**
             * Decodes a LatencyStats message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LatencyStats
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.LatencyStats;

            /**
             * Verifies a LatencyStats message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LatencyStats message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LatencyStats
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.LatencyStats;

            /**
             * Creates a plain object from a LatencyStats message. Also converts values to other types if specified.
             * @param message LatencyStats
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.LatencyStats, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LatencyStats to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LatencyStats
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** JucType enum. */
        enum JucType {
            UNKNOWN = 0,
            IN_ROAD = 1,
            CROSS_ROAD = 2,
            FORK_ROAD = 3,
            MAIN_SIDE = 4,
            DEAD_END = 5
        }

        /** Properties of a RSSInfo. */
        interface IRSSInfo {

            /** RSSInfo isRssSafe */
            isRssSafe?: (boolean|null);

            /** RSSInfo curDistLon */
            curDistLon?: (number|null);

            /** RSSInfo rssSafeDistLon */
            rssSafeDistLon?: (number|null);

            /** RSSInfo accLonRangeMinimum */
            accLonRangeMinimum?: (number|null);

            /** RSSInfo accLonRangeMaximum */
            accLonRangeMaximum?: (number|null);

            /** RSSInfo accLatLeftRangeMinimum */
            accLatLeftRangeMinimum?: (number|null);

            /** RSSInfo accLatLeftRangeMaximum */
            accLatLeftRangeMaximum?: (number|null);

            /** RSSInfo accLatRightRangeMinimum */
            accLatRightRangeMinimum?: (number|null);

            /** RSSInfo accLatRightRangeMaximum */
            accLatRightRangeMaximum?: (number|null);
        }

        /** Represents a RSSInfo. */
        class RSSInfo implements IRSSInfo {

            /**
             * Constructs a new RSSInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IRSSInfo);

            /** RSSInfo isRssSafe. */
            public isRssSafe: boolean;

            /** RSSInfo curDistLon. */
            public curDistLon: number;

            /** RSSInfo rssSafeDistLon. */
            public rssSafeDistLon: number;

            /** RSSInfo accLonRangeMinimum. */
            public accLonRangeMinimum: number;

            /** RSSInfo accLonRangeMaximum. */
            public accLonRangeMaximum: number;

            /** RSSInfo accLatLeftRangeMinimum. */
            public accLatLeftRangeMinimum: number;

            /** RSSInfo accLatLeftRangeMaximum. */
            public accLatLeftRangeMaximum: number;

            /** RSSInfo accLatRightRangeMinimum. */
            public accLatRightRangeMinimum: number;

            /** RSSInfo accLatRightRangeMaximum. */
            public accLatRightRangeMaximum: number;

            /**
             * Creates a new RSSInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RSSInfo instance
             */
            public static create(properties?: apollo.planning.IRSSInfo): apollo.planning.RSSInfo;

            /**
             * Encodes the specified RSSInfo message. Does not implicitly {@link apollo.planning.RSSInfo.verify|verify} messages.
             * @param message RSSInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IRSSInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RSSInfo message, length delimited. Does not implicitly {@link apollo.planning.RSSInfo.verify|verify} messages.
             * @param message RSSInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IRSSInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RSSInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RSSInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.RSSInfo;

            /**
             * Decodes a RSSInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RSSInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.RSSInfo;

            /**
             * Verifies a RSSInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RSSInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RSSInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.RSSInfo;

            /**
             * Creates a plain object from a RSSInfo message. Also converts values to other types if specified.
             * @param message RSSInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.RSSInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RSSInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RSSInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ADCTrajectory. */
        interface IADCTrajectory {

            /** ADCTrajectory header */
            header?: (apollo.common.IHeader|null);

            /** ADCTrajectory totalPathLength */
            totalPathLength?: (number|null);

            /** ADCTrajectory totalPathTime */
            totalPathTime?: (number|null);

            /** ADCTrajectory estop */
            estop?: (apollo.planning.IEStop|null);

            /** ADCTrajectory debug */
            debug?: (apollo.planning_internal.IDebug|null);

            /** ADCTrajectory isReplan */
            isReplan?: (boolean|null);

            /** ADCTrajectory gear */
            gear?: (apollo.canbus.Chassis.GearPosition|null);

            /** ADCTrajectory trajectoryPoint */
            trajectoryPoint?: (apollo.common.ITrajectoryPoint[]|null);

            /** ADCTrajectory pathPoint */
            pathPoint?: (apollo.common.IPathPoint[]|null);

            /** ADCTrajectory decision */
            decision?: (apollo.planning.IDecisionResult|null);

            /** ADCTrajectory latencyStats */
            latencyStats?: (apollo.planning.ILatencyStats|null);

            /** ADCTrajectory routingHeader */
            routingHeader?: (apollo.common.IHeader|null);

            /** ADCTrajectory rightOfWayStatus */
            rightOfWayStatus?: (apollo.planning.ADCTrajectory.RightOfWayStatus|null);

            /** ADCTrajectory laneId */
            laneId?: (apollo.hdmap.IId[]|null);

            /** ADCTrajectory engageAdvice */
            engageAdvice?: (apollo.common.IEngageAdvice|null);

            /** ADCTrajectory criticalRegion */
            criticalRegion?: (apollo.planning.ADCTrajectory.ICriticalRegion|null);

            /** ADCTrajectory trajectoryType */
            trajectoryType?: (apollo.planning.ADCTrajectory.TrajectoryType|null);

            /** ADCTrajectory replanReason */
            replanReason?: (string|null);

            /** ADCTrajectory targetLaneId */
            targetLaneId?: (apollo.hdmap.IId[]|null);

            /** ADCTrajectory carInDeadEnd */
            carInDeadEnd?: (boolean|null);

            /** ADCTrajectory rssInfo */
            rssInfo?: (apollo.planning.IRSSInfo|null);
        }

        /** Represents a ADCTrajectory. */
        class ADCTrajectory implements IADCTrajectory {

            /**
             * Constructs a new ADCTrajectory.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IADCTrajectory);

            /** ADCTrajectory header. */
            public header?: (apollo.common.IHeader|null);

            /** ADCTrajectory totalPathLength. */
            public totalPathLength: number;

            /** ADCTrajectory totalPathTime. */
            public totalPathTime: number;

            /** ADCTrajectory estop. */
            public estop?: (apollo.planning.IEStop|null);

            /** ADCTrajectory debug. */
            public debug?: (apollo.planning_internal.IDebug|null);

            /** ADCTrajectory isReplan. */
            public isReplan: boolean;

            /** ADCTrajectory gear. */
            public gear: apollo.canbus.Chassis.GearPosition;

            /** ADCTrajectory trajectoryPoint. */
            public trajectoryPoint: apollo.common.ITrajectoryPoint[];

            /** ADCTrajectory pathPoint. */
            public pathPoint: apollo.common.IPathPoint[];

            /** ADCTrajectory decision. */
            public decision?: (apollo.planning.IDecisionResult|null);

            /** ADCTrajectory latencyStats. */
            public latencyStats?: (apollo.planning.ILatencyStats|null);

            /** ADCTrajectory routingHeader. */
            public routingHeader?: (apollo.common.IHeader|null);

            /** ADCTrajectory rightOfWayStatus. */
            public rightOfWayStatus: apollo.planning.ADCTrajectory.RightOfWayStatus;

            /** ADCTrajectory laneId. */
            public laneId: apollo.hdmap.IId[];

            /** ADCTrajectory engageAdvice. */
            public engageAdvice?: (apollo.common.IEngageAdvice|null);

            /** ADCTrajectory criticalRegion. */
            public criticalRegion?: (apollo.planning.ADCTrajectory.ICriticalRegion|null);

            /** ADCTrajectory trajectoryType. */
            public trajectoryType: apollo.planning.ADCTrajectory.TrajectoryType;

            /** ADCTrajectory replanReason. */
            public replanReason: string;

            /** ADCTrajectory targetLaneId. */
            public targetLaneId: apollo.hdmap.IId[];

            /** ADCTrajectory carInDeadEnd. */
            public carInDeadEnd: boolean;

            /** ADCTrajectory rssInfo. */
            public rssInfo?: (apollo.planning.IRSSInfo|null);

            /**
             * Creates a new ADCTrajectory instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ADCTrajectory instance
             */
            public static create(properties?: apollo.planning.IADCTrajectory): apollo.planning.ADCTrajectory;

            /**
             * Encodes the specified ADCTrajectory message. Does not implicitly {@link apollo.planning.ADCTrajectory.verify|verify} messages.
             * @param message ADCTrajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IADCTrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ADCTrajectory message, length delimited. Does not implicitly {@link apollo.planning.ADCTrajectory.verify|verify} messages.
             * @param message ADCTrajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IADCTrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ADCTrajectory message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ADCTrajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ADCTrajectory;

            /**
             * Decodes a ADCTrajectory message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ADCTrajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ADCTrajectory;

            /**
             * Verifies a ADCTrajectory message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ADCTrajectory message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ADCTrajectory
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ADCTrajectory;

            /**
             * Creates a plain object from a ADCTrajectory message. Also converts values to other types if specified.
             * @param message ADCTrajectory
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ADCTrajectory, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ADCTrajectory to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ADCTrajectory
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ADCTrajectory {

            /** RightOfWayStatus enum. */
            enum RightOfWayStatus {
                UNPROTECTED = 0,
                PROTECTED = 1
            }

            /** Properties of a CriticalRegion. */
            interface ICriticalRegion {

                /** CriticalRegion region */
                region?: (apollo.common.IPolygon[]|null);
            }

            /** Represents a CriticalRegion. */
            class CriticalRegion implements ICriticalRegion {

                /**
                 * Constructs a new CriticalRegion.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.planning.ADCTrajectory.ICriticalRegion);

                /** CriticalRegion region. */
                public region: apollo.common.IPolygon[];

                /**
                 * Creates a new CriticalRegion instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CriticalRegion instance
                 */
                public static create(properties?: apollo.planning.ADCTrajectory.ICriticalRegion): apollo.planning.ADCTrajectory.CriticalRegion;

                /**
                 * Encodes the specified CriticalRegion message. Does not implicitly {@link apollo.planning.ADCTrajectory.CriticalRegion.verify|verify} messages.
                 * @param message CriticalRegion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.planning.ADCTrajectory.ICriticalRegion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CriticalRegion message, length delimited. Does not implicitly {@link apollo.planning.ADCTrajectory.CriticalRegion.verify|verify} messages.
                 * @param message CriticalRegion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.planning.ADCTrajectory.ICriticalRegion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CriticalRegion message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CriticalRegion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ADCTrajectory.CriticalRegion;

                /**
                 * Decodes a CriticalRegion message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CriticalRegion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ADCTrajectory.CriticalRegion;

                /**
                 * Verifies a CriticalRegion message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CriticalRegion message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CriticalRegion
                 */
                public static fromObject(object: { [k: string]: any }): apollo.planning.ADCTrajectory.CriticalRegion;

                /**
                 * Creates a plain object from a CriticalRegion message. Also converts values to other types if specified.
                 * @param message CriticalRegion
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.planning.ADCTrajectory.CriticalRegion, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CriticalRegion to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CriticalRegion
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** TrajectoryType enum. */
            enum TrajectoryType {
                UNKNOWN = 0,
                NORMAL = 1,
                PATH_FALLBACK = 2,
                SPEED_FALLBACK = 3,
                PATH_REUSED = 4,
                OPEN_SPACE = 5
            }
        }

        /** Properties of a ParkingCommand. */
        interface IParkingCommand {

            /** ParkingCommand header */
            header?: (apollo.common.IHeader|null);

            /** ParkingCommand parkingSpotId */
            parkingSpotId: string;

            /** ParkingCommand targetSpeed */
            targetSpeed?: (number|null);
        }

        /** Represents a ParkingCommand. */
        class ParkingCommand implements IParkingCommand {

            /**
             * Constructs a new ParkingCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IParkingCommand);

            /** ParkingCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** ParkingCommand parkingSpotId. */
            public parkingSpotId: string;

            /** ParkingCommand targetSpeed. */
            public targetSpeed: number;

            /**
             * Creates a new ParkingCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ParkingCommand instance
             */
            public static create(properties?: apollo.planning.IParkingCommand): apollo.planning.ParkingCommand;

            /**
             * Encodes the specified ParkingCommand message. Does not implicitly {@link apollo.planning.ParkingCommand.verify|verify} messages.
             * @param message ParkingCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IParkingCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ParkingCommand message, length delimited. Does not implicitly {@link apollo.planning.ParkingCommand.verify|verify} messages.
             * @param message ParkingCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IParkingCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ParkingCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ParkingCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.ParkingCommand;

            /**
             * Decodes a ParkingCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ParkingCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.ParkingCommand;

            /**
             * Verifies a ParkingCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ParkingCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ParkingCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.ParkingCommand;

            /**
             * Creates a plain object from a ParkingCommand message. Also converts values to other types if specified.
             * @param message ParkingCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.ParkingCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ParkingCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ParkingCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PlanningCommand. */
        interface IPlanningCommand {

            /** PlanningCommand header */
            header?: (apollo.common.IHeader|null);

            /** PlanningCommand commandId */
            commandId?: (number|Long|null);

            /** PlanningCommand laneFollowCommand */
            laneFollowCommand?: (apollo.routing.IRoutingResponse|null);

            /** PlanningCommand targetSpeed */
            targetSpeed?: (number|null);

            /** PlanningCommand isMotionCommand */
            isMotionCommand?: (boolean|null);

            /** PlanningCommand parkingCommand */
            parkingCommand?: (apollo.planning.IParkingCommand|null);

            /** PlanningCommand customCommand */
            customCommand?: (google.protobuf.IAny|null);
        }

        /** Represents a PlanningCommand. */
        class PlanningCommand implements IPlanningCommand {

            /**
             * Constructs a new PlanningCommand.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.IPlanningCommand);

            /** PlanningCommand header. */
            public header?: (apollo.common.IHeader|null);

            /** PlanningCommand commandId. */
            public commandId: (number|Long);

            /** PlanningCommand laneFollowCommand. */
            public laneFollowCommand?: (apollo.routing.IRoutingResponse|null);

            /** PlanningCommand targetSpeed. */
            public targetSpeed: number;

            /** PlanningCommand isMotionCommand. */
            public isMotionCommand: boolean;

            /** PlanningCommand parkingCommand. */
            public parkingCommand?: (apollo.planning.IParkingCommand|null);

            /** PlanningCommand customCommand. */
            public customCommand?: (google.protobuf.IAny|null);

            /** PlanningCommand command. */
            public command?: ("parkingCommand"|"customCommand");

            /**
             * Creates a new PlanningCommand instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlanningCommand instance
             */
            public static create(properties?: apollo.planning.IPlanningCommand): apollo.planning.PlanningCommand;

            /**
             * Encodes the specified PlanningCommand message. Does not implicitly {@link apollo.planning.PlanningCommand.verify|verify} messages.
             * @param message PlanningCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.IPlanningCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlanningCommand message, length delimited. Does not implicitly {@link apollo.planning.PlanningCommand.verify|verify} messages.
             * @param message PlanningCommand message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.IPlanningCommand, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlanningCommand message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlanningCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.PlanningCommand;

            /**
             * Decodes a PlanningCommand message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlanningCommand
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.PlanningCommand;

            /**
             * Verifies a PlanningCommand message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlanningCommand message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlanningCommand
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.PlanningCommand;

            /**
             * Creates a plain object from a PlanningCommand message. Also converts values to other types if specified.
             * @param message PlanningCommand
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.PlanningCommand, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlanningCommand to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PlanningCommand
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SLBoundary. */
        interface ISLBoundary {

            /** SLBoundary startS */
            startS?: (number|null);

            /** SLBoundary endS */
            endS?: (number|null);

            /** SLBoundary startL */
            startL?: (number|null);

            /** SLBoundary endL */
            endL?: (number|null);

            /** SLBoundary boundaryPoint */
            boundaryPoint?: (apollo.common.ISLPoint[]|null);
        }

        /** Represents a SLBoundary. */
        class SLBoundary implements ISLBoundary {

            /**
             * Constructs a new SLBoundary.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning.ISLBoundary);

            /** SLBoundary startS. */
            public startS: number;

            /** SLBoundary endS. */
            public endS: number;

            /** SLBoundary startL. */
            public startL: number;

            /** SLBoundary endL. */
            public endL: number;

            /** SLBoundary boundaryPoint. */
            public boundaryPoint: apollo.common.ISLPoint[];

            /**
             * Creates a new SLBoundary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SLBoundary instance
             */
            public static create(properties?: apollo.planning.ISLBoundary): apollo.planning.SLBoundary;

            /**
             * Encodes the specified SLBoundary message. Does not implicitly {@link apollo.planning.SLBoundary.verify|verify} messages.
             * @param message SLBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning.ISLBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SLBoundary message, length delimited. Does not implicitly {@link apollo.planning.SLBoundary.verify|verify} messages.
             * @param message SLBoundary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning.ISLBoundary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SLBoundary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SLBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning.SLBoundary;

            /**
             * Decodes a SLBoundary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SLBoundary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning.SLBoundary;

            /**
             * Verifies a SLBoundary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SLBoundary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SLBoundary
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning.SLBoundary;

            /**
             * Creates a plain object from a SLBoundary message. Also converts values to other types if specified.
             * @param message SLBoundary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning.SLBoundary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SLBoundary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SLBoundary
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace planning_internal. */
    namespace planning_internal {

        /** Properties of a Debug. */
        interface IDebug {

            /** Debug planningData */
            planningData?: (apollo.planning_internal.IPlanningData|null);
        }

        /** Represents a Debug. */
        class Debug implements IDebug {

            /**
             * Constructs a new Debug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IDebug);

            /** Debug planningData. */
            public planningData?: (apollo.planning_internal.IPlanningData|null);

            /**
             * Creates a new Debug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Debug instance
             */
            public static create(properties?: apollo.planning_internal.IDebug): apollo.planning_internal.Debug;

            /**
             * Encodes the specified Debug message. Does not implicitly {@link apollo.planning_internal.Debug.verify|verify} messages.
             * @param message Debug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Debug message, length delimited. Does not implicitly {@link apollo.planning_internal.Debug.verify|verify} messages.
             * @param message Debug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Debug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Debug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.Debug;

            /**
             * Decodes a Debug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Debug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.Debug;

            /**
             * Verifies a Debug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Debug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Debug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.Debug;

            /**
             * Creates a plain object from a Debug message. Also converts values to other types if specified.
             * @param message Debug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.Debug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Debug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Debug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpeedPlan. */
        interface ISpeedPlan {

            /** SpeedPlan name */
            name?: (string|null);

            /** SpeedPlan speedPoint */
            speedPoint?: (apollo.common.ISpeedPoint[]|null);
        }

        /** Represents a SpeedPlan. */
        class SpeedPlan implements ISpeedPlan {

            /**
             * Constructs a new SpeedPlan.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ISpeedPlan);

            /** SpeedPlan name. */
            public name: string;

            /** SpeedPlan speedPoint. */
            public speedPoint: apollo.common.ISpeedPoint[];

            /**
             * Creates a new SpeedPlan instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedPlan instance
             */
            public static create(properties?: apollo.planning_internal.ISpeedPlan): apollo.planning_internal.SpeedPlan;

            /**
             * Encodes the specified SpeedPlan message. Does not implicitly {@link apollo.planning_internal.SpeedPlan.verify|verify} messages.
             * @param message SpeedPlan message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ISpeedPlan, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedPlan message, length delimited. Does not implicitly {@link apollo.planning_internal.SpeedPlan.verify|verify} messages.
             * @param message SpeedPlan message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ISpeedPlan, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedPlan message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedPlan
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.SpeedPlan;

            /**
             * Decodes a SpeedPlan message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedPlan
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.SpeedPlan;

            /**
             * Verifies a SpeedPlan message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedPlan message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedPlan
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.SpeedPlan;

            /**
             * Creates a plain object from a SpeedPlan message. Also converts values to other types if specified.
             * @param message SpeedPlan
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.SpeedPlan, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedPlan to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedPlan
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a StGraphBoundaryDebug. */
        interface IStGraphBoundaryDebug {

            /** StGraphBoundaryDebug name */
            name?: (string|null);

            /** StGraphBoundaryDebug point */
            point?: (apollo.common.ISpeedPoint[]|null);

            /** StGraphBoundaryDebug type */
            type?: (apollo.planning_internal.StGraphBoundaryDebug.StBoundaryType|null);
        }

        /** Represents a StGraphBoundaryDebug. */
        class StGraphBoundaryDebug implements IStGraphBoundaryDebug {

            /**
             * Constructs a new StGraphBoundaryDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IStGraphBoundaryDebug);

            /** StGraphBoundaryDebug name. */
            public name: string;

            /** StGraphBoundaryDebug point. */
            public point: apollo.common.ISpeedPoint[];

            /** StGraphBoundaryDebug type. */
            public type: apollo.planning_internal.StGraphBoundaryDebug.StBoundaryType;

            /**
             * Creates a new StGraphBoundaryDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StGraphBoundaryDebug instance
             */
            public static create(properties?: apollo.planning_internal.IStGraphBoundaryDebug): apollo.planning_internal.StGraphBoundaryDebug;

            /**
             * Encodes the specified StGraphBoundaryDebug message. Does not implicitly {@link apollo.planning_internal.StGraphBoundaryDebug.verify|verify} messages.
             * @param message StGraphBoundaryDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IStGraphBoundaryDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StGraphBoundaryDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.StGraphBoundaryDebug.verify|verify} messages.
             * @param message StGraphBoundaryDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IStGraphBoundaryDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StGraphBoundaryDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StGraphBoundaryDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.StGraphBoundaryDebug;

            /**
             * Decodes a StGraphBoundaryDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StGraphBoundaryDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.StGraphBoundaryDebug;

            /**
             * Verifies a StGraphBoundaryDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StGraphBoundaryDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StGraphBoundaryDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.StGraphBoundaryDebug;

            /**
             * Creates a plain object from a StGraphBoundaryDebug message. Also converts values to other types if specified.
             * @param message StGraphBoundaryDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.StGraphBoundaryDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StGraphBoundaryDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for StGraphBoundaryDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace StGraphBoundaryDebug {

            /** StBoundaryType enum. */
            enum StBoundaryType {
                ST_BOUNDARY_TYPE_UNKNOWN = 1,
                ST_BOUNDARY_TYPE_STOP = 2,
                ST_BOUNDARY_TYPE_FOLLOW = 3,
                ST_BOUNDARY_TYPE_YIELD = 4,
                ST_BOUNDARY_TYPE_OVERTAKE = 5,
                ST_BOUNDARY_TYPE_KEEP_CLEAR = 6,
                ST_BOUNDARY_TYPE_DRIVABLE_REGION = 7
            }
        }

        /** Properties of a SLFrameDebug. */
        interface ISLFrameDebug {

            /** SLFrameDebug name */
            name?: (string|null);

            /** SLFrameDebug sampledS */
            sampledS?: (number[]|null);

            /** SLFrameDebug staticObstacleLowerBound */
            staticObstacleLowerBound?: (number[]|null);

            /** SLFrameDebug dynamicObstacleLowerBound */
            dynamicObstacleLowerBound?: (number[]|null);

            /** SLFrameDebug staticObstacleUpperBound */
            staticObstacleUpperBound?: (number[]|null);

            /** SLFrameDebug dynamicObstacleUpperBound */
            dynamicObstacleUpperBound?: (number[]|null);

            /** SLFrameDebug mapLowerBound */
            mapLowerBound?: (number[]|null);

            /** SLFrameDebug mapUpperBound */
            mapUpperBound?: (number[]|null);

            /** SLFrameDebug slPath */
            slPath?: (apollo.common.ISLPoint[]|null);

            /** SLFrameDebug aggregatedBoundaryS */
            aggregatedBoundaryS?: (number[]|null);

            /** SLFrameDebug aggregatedBoundaryLow */
            aggregatedBoundaryLow?: (number[]|null);

            /** SLFrameDebug aggregatedBoundaryHigh */
            aggregatedBoundaryHigh?: (number[]|null);
        }

        /** Represents a SLFrameDebug. */
        class SLFrameDebug implements ISLFrameDebug {

            /**
             * Constructs a new SLFrameDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ISLFrameDebug);

            /** SLFrameDebug name. */
            public name: string;

            /** SLFrameDebug sampledS. */
            public sampledS: number[];

            /** SLFrameDebug staticObstacleLowerBound. */
            public staticObstacleLowerBound: number[];

            /** SLFrameDebug dynamicObstacleLowerBound. */
            public dynamicObstacleLowerBound: number[];

            /** SLFrameDebug staticObstacleUpperBound. */
            public staticObstacleUpperBound: number[];

            /** SLFrameDebug dynamicObstacleUpperBound. */
            public dynamicObstacleUpperBound: number[];

            /** SLFrameDebug mapLowerBound. */
            public mapLowerBound: number[];

            /** SLFrameDebug mapUpperBound. */
            public mapUpperBound: number[];

            /** SLFrameDebug slPath. */
            public slPath: apollo.common.ISLPoint[];

            /** SLFrameDebug aggregatedBoundaryS. */
            public aggregatedBoundaryS: number[];

            /** SLFrameDebug aggregatedBoundaryLow. */
            public aggregatedBoundaryLow: number[];

            /** SLFrameDebug aggregatedBoundaryHigh. */
            public aggregatedBoundaryHigh: number[];

            /**
             * Creates a new SLFrameDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SLFrameDebug instance
             */
            public static create(properties?: apollo.planning_internal.ISLFrameDebug): apollo.planning_internal.SLFrameDebug;

            /**
             * Encodes the specified SLFrameDebug message. Does not implicitly {@link apollo.planning_internal.SLFrameDebug.verify|verify} messages.
             * @param message SLFrameDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ISLFrameDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SLFrameDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.SLFrameDebug.verify|verify} messages.
             * @param message SLFrameDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ISLFrameDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SLFrameDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SLFrameDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.SLFrameDebug;

            /**
             * Decodes a SLFrameDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SLFrameDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.SLFrameDebug;

            /**
             * Verifies a SLFrameDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SLFrameDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SLFrameDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.SLFrameDebug;

            /**
             * Creates a plain object from a SLFrameDebug message. Also converts values to other types if specified.
             * @param message SLFrameDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.SLFrameDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SLFrameDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SLFrameDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a STGraphDebug. */
        interface ISTGraphDebug {

            /** STGraphDebug name */
            name?: (string|null);

            /** STGraphDebug boundary */
            boundary?: (apollo.planning_internal.IStGraphBoundaryDebug[]|null);

            /** STGraphDebug speedLimit */
            speedLimit?: (apollo.common.ISpeedPoint[]|null);

            /** STGraphDebug speedProfile */
            speedProfile?: (apollo.common.ISpeedPoint[]|null);

            /** STGraphDebug speedConstraint */
            speedConstraint?: (apollo.planning_internal.STGraphDebug.ISTGraphSpeedConstraint|null);

            /** STGraphDebug kernelCruiseRef */
            kernelCruiseRef?: (apollo.planning_internal.STGraphDebug.ISTGraphKernelCuiseRef|null);

            /** STGraphDebug kernelFollowRef */
            kernelFollowRef?: (apollo.planning_internal.STGraphDebug.ISTGraphKernelFollowRef|null);
        }

        /** Represents a STGraphDebug. */
        class STGraphDebug implements ISTGraphDebug {

            /**
             * Constructs a new STGraphDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ISTGraphDebug);

            /** STGraphDebug name. */
            public name: string;

            /** STGraphDebug boundary. */
            public boundary: apollo.planning_internal.IStGraphBoundaryDebug[];

            /** STGraphDebug speedLimit. */
            public speedLimit: apollo.common.ISpeedPoint[];

            /** STGraphDebug speedProfile. */
            public speedProfile: apollo.common.ISpeedPoint[];

            /** STGraphDebug speedConstraint. */
            public speedConstraint?: (apollo.planning_internal.STGraphDebug.ISTGraphSpeedConstraint|null);

            /** STGraphDebug kernelCruiseRef. */
            public kernelCruiseRef?: (apollo.planning_internal.STGraphDebug.ISTGraphKernelCuiseRef|null);

            /** STGraphDebug kernelFollowRef. */
            public kernelFollowRef?: (apollo.planning_internal.STGraphDebug.ISTGraphKernelFollowRef|null);

            /**
             * Creates a new STGraphDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns STGraphDebug instance
             */
            public static create(properties?: apollo.planning_internal.ISTGraphDebug): apollo.planning_internal.STGraphDebug;

            /**
             * Encodes the specified STGraphDebug message. Does not implicitly {@link apollo.planning_internal.STGraphDebug.verify|verify} messages.
             * @param message STGraphDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ISTGraphDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified STGraphDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.STGraphDebug.verify|verify} messages.
             * @param message STGraphDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ISTGraphDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a STGraphDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns STGraphDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.STGraphDebug;

            /**
             * Decodes a STGraphDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns STGraphDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.STGraphDebug;

            /**
             * Verifies a STGraphDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a STGraphDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns STGraphDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.STGraphDebug;

            /**
             * Creates a plain object from a STGraphDebug message. Also converts values to other types if specified.
             * @param message STGraphDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.STGraphDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this STGraphDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for STGraphDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace STGraphDebug {

            /** Properties of a STGraphSpeedConstraint. */
            interface ISTGraphSpeedConstraint {

                /** STGraphSpeedConstraint t */
                t?: (number[]|null);

                /** STGraphSpeedConstraint lowerBound */
                lowerBound?: (number[]|null);

                /** STGraphSpeedConstraint upperBound */
                upperBound?: (number[]|null);
            }

            /** Represents a STGraphSpeedConstraint. */
            class STGraphSpeedConstraint implements ISTGraphSpeedConstraint {

                /**
                 * Constructs a new STGraphSpeedConstraint.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.planning_internal.STGraphDebug.ISTGraphSpeedConstraint);

                /** STGraphSpeedConstraint t. */
                public t: number[];

                /** STGraphSpeedConstraint lowerBound. */
                public lowerBound: number[];

                /** STGraphSpeedConstraint upperBound. */
                public upperBound: number[];

                /**
                 * Creates a new STGraphSpeedConstraint instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns STGraphSpeedConstraint instance
                 */
                public static create(properties?: apollo.planning_internal.STGraphDebug.ISTGraphSpeedConstraint): apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint;

                /**
                 * Encodes the specified STGraphSpeedConstraint message. Does not implicitly {@link apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint.verify|verify} messages.
                 * @param message STGraphSpeedConstraint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.planning_internal.STGraphDebug.ISTGraphSpeedConstraint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified STGraphSpeedConstraint message, length delimited. Does not implicitly {@link apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint.verify|verify} messages.
                 * @param message STGraphSpeedConstraint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.planning_internal.STGraphDebug.ISTGraphSpeedConstraint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a STGraphSpeedConstraint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns STGraphSpeedConstraint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint;

                /**
                 * Decodes a STGraphSpeedConstraint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns STGraphSpeedConstraint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint;

                /**
                 * Verifies a STGraphSpeedConstraint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a STGraphSpeedConstraint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns STGraphSpeedConstraint
                 */
                public static fromObject(object: { [k: string]: any }): apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint;

                /**
                 * Creates a plain object from a STGraphSpeedConstraint message. Also converts values to other types if specified.
                 * @param message STGraphSpeedConstraint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.planning_internal.STGraphDebug.STGraphSpeedConstraint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this STGraphSpeedConstraint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for STGraphSpeedConstraint
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a STGraphKernelCuiseRef. */
            interface ISTGraphKernelCuiseRef {

                /** STGraphKernelCuiseRef t */
                t?: (number[]|null);

                /** STGraphKernelCuiseRef cruiseLineS */
                cruiseLineS?: (number[]|null);
            }

            /** Represents a STGraphKernelCuiseRef. */
            class STGraphKernelCuiseRef implements ISTGraphKernelCuiseRef {

                /**
                 * Constructs a new STGraphKernelCuiseRef.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.planning_internal.STGraphDebug.ISTGraphKernelCuiseRef);

                /** STGraphKernelCuiseRef t. */
                public t: number[];

                /** STGraphKernelCuiseRef cruiseLineS. */
                public cruiseLineS: number[];

                /**
                 * Creates a new STGraphKernelCuiseRef instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns STGraphKernelCuiseRef instance
                 */
                public static create(properties?: apollo.planning_internal.STGraphDebug.ISTGraphKernelCuiseRef): apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef;

                /**
                 * Encodes the specified STGraphKernelCuiseRef message. Does not implicitly {@link apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef.verify|verify} messages.
                 * @param message STGraphKernelCuiseRef message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.planning_internal.STGraphDebug.ISTGraphKernelCuiseRef, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified STGraphKernelCuiseRef message, length delimited. Does not implicitly {@link apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef.verify|verify} messages.
                 * @param message STGraphKernelCuiseRef message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.planning_internal.STGraphDebug.ISTGraphKernelCuiseRef, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a STGraphKernelCuiseRef message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns STGraphKernelCuiseRef
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef;

                /**
                 * Decodes a STGraphKernelCuiseRef message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns STGraphKernelCuiseRef
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef;

                /**
                 * Verifies a STGraphKernelCuiseRef message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a STGraphKernelCuiseRef message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns STGraphKernelCuiseRef
                 */
                public static fromObject(object: { [k: string]: any }): apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef;

                /**
                 * Creates a plain object from a STGraphKernelCuiseRef message. Also converts values to other types if specified.
                 * @param message STGraphKernelCuiseRef
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.planning_internal.STGraphDebug.STGraphKernelCuiseRef, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this STGraphKernelCuiseRef to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for STGraphKernelCuiseRef
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a STGraphKernelFollowRef. */
            interface ISTGraphKernelFollowRef {

                /** STGraphKernelFollowRef t */
                t?: (number[]|null);

                /** STGraphKernelFollowRef followLineS */
                followLineS?: (number[]|null);
            }

            /** Represents a STGraphKernelFollowRef. */
            class STGraphKernelFollowRef implements ISTGraphKernelFollowRef {

                /**
                 * Constructs a new STGraphKernelFollowRef.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.planning_internal.STGraphDebug.ISTGraphKernelFollowRef);

                /** STGraphKernelFollowRef t. */
                public t: number[];

                /** STGraphKernelFollowRef followLineS. */
                public followLineS: number[];

                /**
                 * Creates a new STGraphKernelFollowRef instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns STGraphKernelFollowRef instance
                 */
                public static create(properties?: apollo.planning_internal.STGraphDebug.ISTGraphKernelFollowRef): apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef;

                /**
                 * Encodes the specified STGraphKernelFollowRef message. Does not implicitly {@link apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef.verify|verify} messages.
                 * @param message STGraphKernelFollowRef message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.planning_internal.STGraphDebug.ISTGraphKernelFollowRef, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified STGraphKernelFollowRef message, length delimited. Does not implicitly {@link apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef.verify|verify} messages.
                 * @param message STGraphKernelFollowRef message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.planning_internal.STGraphDebug.ISTGraphKernelFollowRef, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a STGraphKernelFollowRef message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns STGraphKernelFollowRef
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef;

                /**
                 * Decodes a STGraphKernelFollowRef message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns STGraphKernelFollowRef
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef;

                /**
                 * Verifies a STGraphKernelFollowRef message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a STGraphKernelFollowRef message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns STGraphKernelFollowRef
                 */
                public static fromObject(object: { [k: string]: any }): apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef;

                /**
                 * Creates a plain object from a STGraphKernelFollowRef message. Also converts values to other types if specified.
                 * @param message STGraphKernelFollowRef
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.planning_internal.STGraphDebug.STGraphKernelFollowRef, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this STGraphKernelFollowRef to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for STGraphKernelFollowRef
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Properties of a SignalLightDebug. */
        interface ISignalLightDebug {

            /** SignalLightDebug adcSpeed */
            adcSpeed?: (number|null);

            /** SignalLightDebug adcFrontS */
            adcFrontS?: (number|null);

            /** SignalLightDebug signal */
            signal?: (apollo.planning_internal.SignalLightDebug.ISignalDebug[]|null);
        }

        /** Represents a SignalLightDebug. */
        class SignalLightDebug implements ISignalLightDebug {

            /**
             * Constructs a new SignalLightDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ISignalLightDebug);

            /** SignalLightDebug adcSpeed. */
            public adcSpeed: number;

            /** SignalLightDebug adcFrontS. */
            public adcFrontS: number;

            /** SignalLightDebug signal. */
            public signal: apollo.planning_internal.SignalLightDebug.ISignalDebug[];

            /**
             * Creates a new SignalLightDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SignalLightDebug instance
             */
            public static create(properties?: apollo.planning_internal.ISignalLightDebug): apollo.planning_internal.SignalLightDebug;

            /**
             * Encodes the specified SignalLightDebug message. Does not implicitly {@link apollo.planning_internal.SignalLightDebug.verify|verify} messages.
             * @param message SignalLightDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ISignalLightDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SignalLightDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.SignalLightDebug.verify|verify} messages.
             * @param message SignalLightDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ISignalLightDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SignalLightDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SignalLightDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.SignalLightDebug;

            /**
             * Decodes a SignalLightDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SignalLightDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.SignalLightDebug;

            /**
             * Verifies a SignalLightDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SignalLightDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SignalLightDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.SignalLightDebug;

            /**
             * Creates a plain object from a SignalLightDebug message. Also converts values to other types if specified.
             * @param message SignalLightDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.SignalLightDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SignalLightDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SignalLightDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace SignalLightDebug {

            /** Properties of a SignalDebug. */
            interface ISignalDebug {

                /** SignalDebug lightId */
                lightId?: (string|null);

                /** SignalDebug color */
                color?: (apollo.perception.TrafficLight.Color|null);

                /** SignalDebug lightStopS */
                lightStopS?: (number|null);

                /** SignalDebug adcStopDeceleration */
                adcStopDeceleration?: (number|null);

                /** SignalDebug isStopWallCreated */
                isStopWallCreated?: (boolean|null);
            }

            /** Represents a SignalDebug. */
            class SignalDebug implements ISignalDebug {

                /**
                 * Constructs a new SignalDebug.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.planning_internal.SignalLightDebug.ISignalDebug);

                /** SignalDebug lightId. */
                public lightId: string;

                /** SignalDebug color. */
                public color: apollo.perception.TrafficLight.Color;

                /** SignalDebug lightStopS. */
                public lightStopS: number;

                /** SignalDebug adcStopDeceleration. */
                public adcStopDeceleration: number;

                /** SignalDebug isStopWallCreated. */
                public isStopWallCreated: boolean;

                /**
                 * Creates a new SignalDebug instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SignalDebug instance
                 */
                public static create(properties?: apollo.planning_internal.SignalLightDebug.ISignalDebug): apollo.planning_internal.SignalLightDebug.SignalDebug;

                /**
                 * Encodes the specified SignalDebug message. Does not implicitly {@link apollo.planning_internal.SignalLightDebug.SignalDebug.verify|verify} messages.
                 * @param message SignalDebug message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.planning_internal.SignalLightDebug.ISignalDebug, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SignalDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.SignalLightDebug.SignalDebug.verify|verify} messages.
                 * @param message SignalDebug message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.planning_internal.SignalLightDebug.ISignalDebug, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SignalDebug message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SignalDebug
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.SignalLightDebug.SignalDebug;

                /**
                 * Decodes a SignalDebug message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SignalDebug
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.SignalLightDebug.SignalDebug;

                /**
                 * Verifies a SignalDebug message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SignalDebug message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SignalDebug
                 */
                public static fromObject(object: { [k: string]: any }): apollo.planning_internal.SignalLightDebug.SignalDebug;

                /**
                 * Creates a plain object from a SignalDebug message. Also converts values to other types if specified.
                 * @param message SignalDebug
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.planning_internal.SignalLightDebug.SignalDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SignalDebug to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SignalDebug
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Properties of a DecisionTag. */
        interface IDecisionTag {

            /** DecisionTag deciderTag */
            deciderTag?: (string|null);

            /** DecisionTag decision */
            decision?: (apollo.planning.IObjectDecisionType|null);
        }

        /** Represents a DecisionTag. */
        class DecisionTag implements IDecisionTag {

            /**
             * Constructs a new DecisionTag.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IDecisionTag);

            /** DecisionTag deciderTag. */
            public deciderTag: string;

            /** DecisionTag decision. */
            public decision?: (apollo.planning.IObjectDecisionType|null);

            /**
             * Creates a new DecisionTag instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DecisionTag instance
             */
            public static create(properties?: apollo.planning_internal.IDecisionTag): apollo.planning_internal.DecisionTag;

            /**
             * Encodes the specified DecisionTag message. Does not implicitly {@link apollo.planning_internal.DecisionTag.verify|verify} messages.
             * @param message DecisionTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IDecisionTag, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DecisionTag message, length delimited. Does not implicitly {@link apollo.planning_internal.DecisionTag.verify|verify} messages.
             * @param message DecisionTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IDecisionTag, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DecisionTag message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DecisionTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.DecisionTag;

            /**
             * Decodes a DecisionTag message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DecisionTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.DecisionTag;

            /**
             * Verifies a DecisionTag message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DecisionTag message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DecisionTag
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.DecisionTag;

            /**
             * Creates a plain object from a DecisionTag message. Also converts values to other types if specified.
             * @param message DecisionTag
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.DecisionTag, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DecisionTag to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DecisionTag
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObstacleDebug. */
        interface IObstacleDebug {

            /** ObstacleDebug id */
            id?: (string|null);

            /** ObstacleDebug slBoundary */
            slBoundary?: (apollo.planning.ISLBoundary|null);

            /** ObstacleDebug decisionTag */
            decisionTag?: (apollo.planning_internal.IDecisionTag[]|null);

            /** ObstacleDebug verticesXCoords */
            verticesXCoords?: (number[]|null);

            /** ObstacleDebug verticesYCoords */
            verticesYCoords?: (number[]|null);
        }

        /** Represents an ObstacleDebug. */
        class ObstacleDebug implements IObstacleDebug {

            /**
             * Constructs a new ObstacleDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IObstacleDebug);

            /** ObstacleDebug id. */
            public id: string;

            /** ObstacleDebug slBoundary. */
            public slBoundary?: (apollo.planning.ISLBoundary|null);

            /** ObstacleDebug decisionTag. */
            public decisionTag: apollo.planning_internal.IDecisionTag[];

            /** ObstacleDebug verticesXCoords. */
            public verticesXCoords: number[];

            /** ObstacleDebug verticesYCoords. */
            public verticesYCoords: number[];

            /**
             * Creates a new ObstacleDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObstacleDebug instance
             */
            public static create(properties?: apollo.planning_internal.IObstacleDebug): apollo.planning_internal.ObstacleDebug;

            /**
             * Encodes the specified ObstacleDebug message. Does not implicitly {@link apollo.planning_internal.ObstacleDebug.verify|verify} messages.
             * @param message ObstacleDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IObstacleDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObstacleDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.ObstacleDebug.verify|verify} messages.
             * @param message ObstacleDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IObstacleDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObstacleDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObstacleDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.ObstacleDebug;

            /**
             * Decodes an ObstacleDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObstacleDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.ObstacleDebug;

            /**
             * Verifies an ObstacleDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObstacleDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObstacleDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.ObstacleDebug;

            /**
             * Creates a plain object from an ObstacleDebug message. Also converts values to other types if specified.
             * @param message ObstacleDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.ObstacleDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObstacleDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObstacleDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ReferenceLineDebug. */
        interface IReferenceLineDebug {

            /** ReferenceLineDebug id */
            id?: (string|null);

            /** ReferenceLineDebug length */
            length?: (number|null);

            /** ReferenceLineDebug cost */
            cost?: (number|null);

            /** ReferenceLineDebug isChangeLanePath */
            isChangeLanePath?: (boolean|null);

            /** ReferenceLineDebug isDrivable */
            isDrivable?: (boolean|null);

            /** ReferenceLineDebug isProtected */
            isProtected?: (boolean|null);

            /** ReferenceLineDebug isOffroad */
            isOffroad?: (boolean|null);

            /** ReferenceLineDebug minimumBoundary */
            minimumBoundary?: (number|null);

            /** ReferenceLineDebug averageKappa */
            averageKappa?: (number|null);

            /** ReferenceLineDebug averageDkappa */
            averageDkappa?: (number|null);

            /** ReferenceLineDebug kappaRms */
            kappaRms?: (number|null);

            /** ReferenceLineDebug dkappaRms */
            dkappaRms?: (number|null);

            /** ReferenceLineDebug kappaMaxAbs */
            kappaMaxAbs?: (number|null);

            /** ReferenceLineDebug dkappaMaxAbs */
            dkappaMaxAbs?: (number|null);

            /** ReferenceLineDebug averageOffset */
            averageOffset?: (number|null);
        }

        /** Represents a ReferenceLineDebug. */
        class ReferenceLineDebug implements IReferenceLineDebug {

            /**
             * Constructs a new ReferenceLineDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IReferenceLineDebug);

            /** ReferenceLineDebug id. */
            public id: string;

            /** ReferenceLineDebug length. */
            public length: number;

            /** ReferenceLineDebug cost. */
            public cost: number;

            /** ReferenceLineDebug isChangeLanePath. */
            public isChangeLanePath: boolean;

            /** ReferenceLineDebug isDrivable. */
            public isDrivable: boolean;

            /** ReferenceLineDebug isProtected. */
            public isProtected: boolean;

            /** ReferenceLineDebug isOffroad. */
            public isOffroad: boolean;

            /** ReferenceLineDebug minimumBoundary. */
            public minimumBoundary: number;

            /** ReferenceLineDebug averageKappa. */
            public averageKappa: number;

            /** ReferenceLineDebug averageDkappa. */
            public averageDkappa: number;

            /** ReferenceLineDebug kappaRms. */
            public kappaRms: number;

            /** ReferenceLineDebug dkappaRms. */
            public dkappaRms: number;

            /** ReferenceLineDebug kappaMaxAbs. */
            public kappaMaxAbs: number;

            /** ReferenceLineDebug dkappaMaxAbs. */
            public dkappaMaxAbs: number;

            /** ReferenceLineDebug averageOffset. */
            public averageOffset: number;

            /**
             * Creates a new ReferenceLineDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ReferenceLineDebug instance
             */
            public static create(properties?: apollo.planning_internal.IReferenceLineDebug): apollo.planning_internal.ReferenceLineDebug;

            /**
             * Encodes the specified ReferenceLineDebug message. Does not implicitly {@link apollo.planning_internal.ReferenceLineDebug.verify|verify} messages.
             * @param message ReferenceLineDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IReferenceLineDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ReferenceLineDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.ReferenceLineDebug.verify|verify} messages.
             * @param message ReferenceLineDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IReferenceLineDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ReferenceLineDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ReferenceLineDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.ReferenceLineDebug;

            /**
             * Decodes a ReferenceLineDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ReferenceLineDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.ReferenceLineDebug;

            /**
             * Verifies a ReferenceLineDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ReferenceLineDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ReferenceLineDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.ReferenceLineDebug;

            /**
             * Creates a plain object from a ReferenceLineDebug message. Also converts values to other types if specified.
             * @param message ReferenceLineDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.ReferenceLineDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ReferenceLineDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ReferenceLineDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SampleLayerDebug. */
        interface ISampleLayerDebug {

            /** SampleLayerDebug slPoint */
            slPoint?: (apollo.common.ISLPoint[]|null);
        }

        /** Represents a SampleLayerDebug. */
        class SampleLayerDebug implements ISampleLayerDebug {

            /**
             * Constructs a new SampleLayerDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ISampleLayerDebug);

            /** SampleLayerDebug slPoint. */
            public slPoint: apollo.common.ISLPoint[];

            /**
             * Creates a new SampleLayerDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SampleLayerDebug instance
             */
            public static create(properties?: apollo.planning_internal.ISampleLayerDebug): apollo.planning_internal.SampleLayerDebug;

            /**
             * Encodes the specified SampleLayerDebug message. Does not implicitly {@link apollo.planning_internal.SampleLayerDebug.verify|verify} messages.
             * @param message SampleLayerDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ISampleLayerDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SampleLayerDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.SampleLayerDebug.verify|verify} messages.
             * @param message SampleLayerDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ISampleLayerDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SampleLayerDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SampleLayerDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.SampleLayerDebug;

            /**
             * Decodes a SampleLayerDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SampleLayerDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.SampleLayerDebug;

            /**
             * Verifies a SampleLayerDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SampleLayerDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SampleLayerDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.SampleLayerDebug;

            /**
             * Creates a plain object from a SampleLayerDebug message. Also converts values to other types if specified.
             * @param message SampleLayerDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.SampleLayerDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SampleLayerDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SampleLayerDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DpPolyGraphDebug. */
        interface IDpPolyGraphDebug {

            /** DpPolyGraphDebug sampleLayer */
            sampleLayer?: (apollo.planning_internal.ISampleLayerDebug[]|null);

            /** DpPolyGraphDebug minCostPoint */
            minCostPoint?: (apollo.common.ISLPoint[]|null);
        }

        /** Represents a DpPolyGraphDebug. */
        class DpPolyGraphDebug implements IDpPolyGraphDebug {

            /**
             * Constructs a new DpPolyGraphDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IDpPolyGraphDebug);

            /** DpPolyGraphDebug sampleLayer. */
            public sampleLayer: apollo.planning_internal.ISampleLayerDebug[];

            /** DpPolyGraphDebug minCostPoint. */
            public minCostPoint: apollo.common.ISLPoint[];

            /**
             * Creates a new DpPolyGraphDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DpPolyGraphDebug instance
             */
            public static create(properties?: apollo.planning_internal.IDpPolyGraphDebug): apollo.planning_internal.DpPolyGraphDebug;

            /**
             * Encodes the specified DpPolyGraphDebug message. Does not implicitly {@link apollo.planning_internal.DpPolyGraphDebug.verify|verify} messages.
             * @param message DpPolyGraphDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IDpPolyGraphDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DpPolyGraphDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.DpPolyGraphDebug.verify|verify} messages.
             * @param message DpPolyGraphDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IDpPolyGraphDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DpPolyGraphDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DpPolyGraphDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.DpPolyGraphDebug;

            /**
             * Decodes a DpPolyGraphDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DpPolyGraphDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.DpPolyGraphDebug;

            /**
             * Verifies a DpPolyGraphDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DpPolyGraphDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DpPolyGraphDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.DpPolyGraphDebug;

            /**
             * Creates a plain object from a DpPolyGraphDebug message. Also converts values to other types if specified.
             * @param message DpPolyGraphDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.DpPolyGraphDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DpPolyGraphDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DpPolyGraphDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ScenarioDebug. */
        interface IScenarioDebug {

            /** ScenarioDebug scenarioType */
            scenarioType?: (number|null);

            /** ScenarioDebug stageType */
            stageType?: (number|null);

            /** ScenarioDebug msg */
            msg?: (string|null);

            /** ScenarioDebug scenarioPluginType */
            scenarioPluginType?: (string|null);

            /** ScenarioDebug stagePluginType */
            stagePluginType?: (string|null);
        }

        /** Represents a ScenarioDebug. */
        class ScenarioDebug implements IScenarioDebug {

            /**
             * Constructs a new ScenarioDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IScenarioDebug);

            /** ScenarioDebug scenarioType. */
            public scenarioType: number;

            /** ScenarioDebug stageType. */
            public stageType: number;

            /** ScenarioDebug msg. */
            public msg: string;

            /** ScenarioDebug scenarioPluginType. */
            public scenarioPluginType: string;

            /** ScenarioDebug stagePluginType. */
            public stagePluginType: string;

            /**
             * Creates a new ScenarioDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ScenarioDebug instance
             */
            public static create(properties?: apollo.planning_internal.IScenarioDebug): apollo.planning_internal.ScenarioDebug;

            /**
             * Encodes the specified ScenarioDebug message. Does not implicitly {@link apollo.planning_internal.ScenarioDebug.verify|verify} messages.
             * @param message ScenarioDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IScenarioDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ScenarioDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.ScenarioDebug.verify|verify} messages.
             * @param message ScenarioDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IScenarioDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ScenarioDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ScenarioDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.ScenarioDebug;

            /**
             * Decodes a ScenarioDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ScenarioDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.ScenarioDebug;

            /**
             * Verifies a ScenarioDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ScenarioDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ScenarioDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.ScenarioDebug;

            /**
             * Creates a plain object from a ScenarioDebug message. Also converts values to other types if specified.
             * @param message ScenarioDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.ScenarioDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ScenarioDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ScenarioDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Trajectories. */
        interface ITrajectories {

            /** Trajectories trajectory */
            trajectory?: (apollo.common.ITrajectory[]|null);
        }

        /** Represents a Trajectories. */
        class Trajectories implements ITrajectories {

            /**
             * Constructs a new Trajectories.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ITrajectories);

            /** Trajectories trajectory. */
            public trajectory: apollo.common.ITrajectory[];

            /**
             * Creates a new Trajectories instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Trajectories instance
             */
            public static create(properties?: apollo.planning_internal.ITrajectories): apollo.planning_internal.Trajectories;

            /**
             * Encodes the specified Trajectories message. Does not implicitly {@link apollo.planning_internal.Trajectories.verify|verify} messages.
             * @param message Trajectories message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ITrajectories, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Trajectories message, length delimited. Does not implicitly {@link apollo.planning_internal.Trajectories.verify|verify} messages.
             * @param message Trajectories message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ITrajectories, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Trajectories message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Trajectories
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.Trajectories;

            /**
             * Decodes a Trajectories message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Trajectories
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.Trajectories;

            /**
             * Verifies a Trajectories message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Trajectories message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Trajectories
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.Trajectories;

            /**
             * Creates a plain object from a Trajectories message. Also converts values to other types if specified.
             * @param message Trajectories
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.Trajectories, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Trajectories to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Trajectories
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an OpenSpaceDebug. */
        interface IOpenSpaceDebug {

            /** OpenSpaceDebug trajectories */
            trajectories?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug warmStartTrajectory */
            warmStartTrajectory?: (apollo.common.IVehicleMotion|null);

            /** OpenSpaceDebug smoothedTrajectory */
            smoothedTrajectory?: (apollo.common.IVehicleMotion|null);

            /** OpenSpaceDebug warmStartDualLambda */
            warmStartDualLambda?: (number[]|null);

            /** OpenSpaceDebug warmStartDualMiu */
            warmStartDualMiu?: (number[]|null);

            /** OpenSpaceDebug optimizedDualLambda */
            optimizedDualLambda?: (number[]|null);

            /** OpenSpaceDebug optimizedDualMiu */
            optimizedDualMiu?: (number[]|null);

            /** OpenSpaceDebug xyBoundary */
            xyBoundary?: (number[]|null);

            /** OpenSpaceDebug obstacles */
            obstacles?: (apollo.planning_internal.IObstacleDebug[]|null);

            /** OpenSpaceDebug roiShiftPoint */
            roiShiftPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug endPoint */
            endPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug partitionedTrajectories */
            partitionedTrajectories?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug chosenTrajectory */
            chosenTrajectory?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug isFallbackTrajectory */
            isFallbackTrajectory?: (boolean|null);

            /** OpenSpaceDebug fallbackTrajectory */
            fallbackTrajectory?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug trajectoryStitchingPoint */
            trajectoryStitchingPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug futureCollisionPoint */
            futureCollisionPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug timeLatency */
            timeLatency?: (number|null);

            /** OpenSpaceDebug originPoint */
            originPoint?: (apollo.common.IPointENU|null);

            /** OpenSpaceDebug originHeadingRad */
            originHeadingRad?: (number|null);
        }

        /** Represents an OpenSpaceDebug. */
        class OpenSpaceDebug implements IOpenSpaceDebug {

            /**
             * Constructs a new OpenSpaceDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IOpenSpaceDebug);

            /** OpenSpaceDebug trajectories. */
            public trajectories?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug warmStartTrajectory. */
            public warmStartTrajectory?: (apollo.common.IVehicleMotion|null);

            /** OpenSpaceDebug smoothedTrajectory. */
            public smoothedTrajectory?: (apollo.common.IVehicleMotion|null);

            /** OpenSpaceDebug warmStartDualLambda. */
            public warmStartDualLambda: number[];

            /** OpenSpaceDebug warmStartDualMiu. */
            public warmStartDualMiu: number[];

            /** OpenSpaceDebug optimizedDualLambda. */
            public optimizedDualLambda: number[];

            /** OpenSpaceDebug optimizedDualMiu. */
            public optimizedDualMiu: number[];

            /** OpenSpaceDebug xyBoundary. */
            public xyBoundary: number[];

            /** OpenSpaceDebug obstacles. */
            public obstacles: apollo.planning_internal.IObstacleDebug[];

            /** OpenSpaceDebug roiShiftPoint. */
            public roiShiftPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug endPoint. */
            public endPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug partitionedTrajectories. */
            public partitionedTrajectories?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug chosenTrajectory. */
            public chosenTrajectory?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug isFallbackTrajectory. */
            public isFallbackTrajectory: boolean;

            /** OpenSpaceDebug fallbackTrajectory. */
            public fallbackTrajectory?: (apollo.planning_internal.ITrajectories|null);

            /** OpenSpaceDebug trajectoryStitchingPoint. */
            public trajectoryStitchingPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug futureCollisionPoint. */
            public futureCollisionPoint?: (apollo.common.ITrajectoryPoint|null);

            /** OpenSpaceDebug timeLatency. */
            public timeLatency: number;

            /** OpenSpaceDebug originPoint. */
            public originPoint?: (apollo.common.IPointENU|null);

            /** OpenSpaceDebug originHeadingRad. */
            public originHeadingRad: number;

            /**
             * Creates a new OpenSpaceDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OpenSpaceDebug instance
             */
            public static create(properties?: apollo.planning_internal.IOpenSpaceDebug): apollo.planning_internal.OpenSpaceDebug;

            /**
             * Encodes the specified OpenSpaceDebug message. Does not implicitly {@link apollo.planning_internal.OpenSpaceDebug.verify|verify} messages.
             * @param message OpenSpaceDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IOpenSpaceDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OpenSpaceDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.OpenSpaceDebug.verify|verify} messages.
             * @param message OpenSpaceDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IOpenSpaceDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OpenSpaceDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OpenSpaceDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.OpenSpaceDebug;

            /**
             * Decodes an OpenSpaceDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OpenSpaceDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.OpenSpaceDebug;

            /**
             * Verifies an OpenSpaceDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OpenSpaceDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OpenSpaceDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.OpenSpaceDebug;

            /**
             * Creates a plain object from an OpenSpaceDebug message. Also converts values to other types if specified.
             * @param message OpenSpaceDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.OpenSpaceDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OpenSpaceDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for OpenSpaceDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SmootherDebug. */
        interface ISmootherDebug {

            /** SmootherDebug isSmoothed */
            isSmoothed?: (boolean|null);

            /** SmootherDebug type */
            type?: (apollo.planning_internal.SmootherDebug.SmootherType|null);

            /** SmootherDebug reason */
            reason?: (string|null);
        }

        /** Represents a SmootherDebug. */
        class SmootherDebug implements ISmootherDebug {

            /**
             * Constructs a new SmootherDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ISmootherDebug);

            /** SmootherDebug isSmoothed. */
            public isSmoothed: boolean;

            /** SmootherDebug type. */
            public type: apollo.planning_internal.SmootherDebug.SmootherType;

            /** SmootherDebug reason. */
            public reason: string;

            /**
             * Creates a new SmootherDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SmootherDebug instance
             */
            public static create(properties?: apollo.planning_internal.ISmootherDebug): apollo.planning_internal.SmootherDebug;

            /**
             * Encodes the specified SmootherDebug message. Does not implicitly {@link apollo.planning_internal.SmootherDebug.verify|verify} messages.
             * @param message SmootherDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ISmootherDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SmootherDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.SmootherDebug.verify|verify} messages.
             * @param message SmootherDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ISmootherDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SmootherDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SmootherDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.SmootherDebug;

            /**
             * Decodes a SmootherDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SmootherDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.SmootherDebug;

            /**
             * Verifies a SmootherDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SmootherDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SmootherDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.SmootherDebug;

            /**
             * Creates a plain object from a SmootherDebug message. Also converts values to other types if specified.
             * @param message SmootherDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.SmootherDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SmootherDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SmootherDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace SmootherDebug {

            /** SmootherType enum. */
            enum SmootherType {
                SMOOTHER_NONE = 1,
                SMOOTHER_CLOSE_STOP = 2
            }
        }

        /** Properties of a PullOverDebug. */
        interface IPullOverDebug {

            /** PullOverDebug position */
            position?: (apollo.common.IPointENU|null);

            /** PullOverDebug theta */
            theta?: (number|null);

            /** PullOverDebug lengthFront */
            lengthFront?: (number|null);

            /** PullOverDebug lengthBack */
            lengthBack?: (number|null);

            /** PullOverDebug widthLeft */
            widthLeft?: (number|null);

            /** PullOverDebug widthRight */
            widthRight?: (number|null);
        }

        /** Represents a PullOverDebug. */
        class PullOverDebug implements IPullOverDebug {

            /**
             * Constructs a new PullOverDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IPullOverDebug);

            /** PullOverDebug position. */
            public position?: (apollo.common.IPointENU|null);

            /** PullOverDebug theta. */
            public theta: number;

            /** PullOverDebug lengthFront. */
            public lengthFront: number;

            /** PullOverDebug lengthBack. */
            public lengthBack: number;

            /** PullOverDebug widthLeft. */
            public widthLeft: number;

            /** PullOverDebug widthRight. */
            public widthRight: number;

            /**
             * Creates a new PullOverDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PullOverDebug instance
             */
            public static create(properties?: apollo.planning_internal.IPullOverDebug): apollo.planning_internal.PullOverDebug;

            /**
             * Encodes the specified PullOverDebug message. Does not implicitly {@link apollo.planning_internal.PullOverDebug.verify|verify} messages.
             * @param message PullOverDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IPullOverDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PullOverDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.PullOverDebug.verify|verify} messages.
             * @param message PullOverDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IPullOverDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PullOverDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PullOverDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.PullOverDebug;

            /**
             * Decodes a PullOverDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PullOverDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.PullOverDebug;

            /**
             * Verifies a PullOverDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PullOverDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PullOverDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.PullOverDebug;

            /**
             * Creates a plain object from a PullOverDebug message. Also converts values to other types if specified.
             * @param message PullOverDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.PullOverDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PullOverDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PullOverDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PlanningData. */
        interface IPlanningData {

            /** PlanningData adcPosition */
            adcPosition?: (apollo.localization.ILocalizationEstimate|null);

            /** PlanningData chassis */
            chassis?: (apollo.canbus.IChassis|null);

            /** PlanningData routing */
            routing?: (apollo.routing.IRoutingResponse|null);

            /** PlanningData initPoint */
            initPoint?: (apollo.common.ITrajectoryPoint|null);

            /** PlanningData path */
            path?: (apollo.common.IPath[]|null);

            /** PlanningData speedPlan */
            speedPlan?: (apollo.planning_internal.ISpeedPlan[]|null);

            /** PlanningData stGraph */
            stGraph?: (apollo.planning_internal.ISTGraphDebug[]|null);

            /** PlanningData slFrame */
            slFrame?: (apollo.planning_internal.ISLFrameDebug[]|null);

            /** PlanningData predictionHeader */
            predictionHeader?: (apollo.common.IHeader|null);

            /** PlanningData signalLight */
            signalLight?: (apollo.planning_internal.ISignalLightDebug|null);

            /** PlanningData obstacle */
            obstacle?: (apollo.planning_internal.IObstacleDebug[]|null);

            /** PlanningData referenceLine */
            referenceLine?: (apollo.planning_internal.IReferenceLineDebug[]|null);

            /** PlanningData dpPolyGraph */
            dpPolyGraph?: (apollo.planning_internal.IDpPolyGraphDebug|null);

            /** PlanningData latticeStImage */
            latticeStImage?: (apollo.planning_internal.ILatticeStTraining|null);

            /** PlanningData relativeMap */
            relativeMap?: (apollo.relative_map.IMapMsg|null);

            /** PlanningData autoTuningTrainingData */
            autoTuningTrainingData?: (apollo.planning_internal.IAutoTuningTrainingData|null);

            /** PlanningData frontClearDistance */
            frontClearDistance?: (number|null);

            /** PlanningData chart */
            chart?: (apollo.dreamview.IChart[]|null);

            /** PlanningData scenario */
            scenario?: (apollo.planning_internal.IScenarioDebug|null);

            /** PlanningData openSpace */
            openSpace?: (apollo.planning_internal.IOpenSpaceDebug|null);

            /** PlanningData smoother */
            smoother?: (apollo.planning_internal.ISmootherDebug|null);

            /** PlanningData pullOver */
            pullOver?: (apollo.planning_internal.IPullOverDebug|null);

            /** PlanningData hybridModel */
            hybridModel?: (apollo.planning_internal.IHybridModelDebug|null);
        }

        /** Represents a PlanningData. */
        class PlanningData implements IPlanningData {

            /**
             * Constructs a new PlanningData.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IPlanningData);

            /** PlanningData adcPosition. */
            public adcPosition?: (apollo.localization.ILocalizationEstimate|null);

            /** PlanningData chassis. */
            public chassis?: (apollo.canbus.IChassis|null);

            /** PlanningData routing. */
            public routing?: (apollo.routing.IRoutingResponse|null);

            /** PlanningData initPoint. */
            public initPoint?: (apollo.common.ITrajectoryPoint|null);

            /** PlanningData path. */
            public path: apollo.common.IPath[];

            /** PlanningData speedPlan. */
            public speedPlan: apollo.planning_internal.ISpeedPlan[];

            /** PlanningData stGraph. */
            public stGraph: apollo.planning_internal.ISTGraphDebug[];

            /** PlanningData slFrame. */
            public slFrame: apollo.planning_internal.ISLFrameDebug[];

            /** PlanningData predictionHeader. */
            public predictionHeader?: (apollo.common.IHeader|null);

            /** PlanningData signalLight. */
            public signalLight?: (apollo.planning_internal.ISignalLightDebug|null);

            /** PlanningData obstacle. */
            public obstacle: apollo.planning_internal.IObstacleDebug[];

            /** PlanningData referenceLine. */
            public referenceLine: apollo.planning_internal.IReferenceLineDebug[];

            /** PlanningData dpPolyGraph. */
            public dpPolyGraph?: (apollo.planning_internal.IDpPolyGraphDebug|null);

            /** PlanningData latticeStImage. */
            public latticeStImage?: (apollo.planning_internal.ILatticeStTraining|null);

            /** PlanningData relativeMap. */
            public relativeMap?: (apollo.relative_map.IMapMsg|null);

            /** PlanningData autoTuningTrainingData. */
            public autoTuningTrainingData?: (apollo.planning_internal.IAutoTuningTrainingData|null);

            /** PlanningData frontClearDistance. */
            public frontClearDistance: number;

            /** PlanningData chart. */
            public chart: apollo.dreamview.IChart[];

            /** PlanningData scenario. */
            public scenario?: (apollo.planning_internal.IScenarioDebug|null);

            /** PlanningData openSpace. */
            public openSpace?: (apollo.planning_internal.IOpenSpaceDebug|null);

            /** PlanningData smoother. */
            public smoother?: (apollo.planning_internal.ISmootherDebug|null);

            /** PlanningData pullOver. */
            public pullOver?: (apollo.planning_internal.IPullOverDebug|null);

            /** PlanningData hybridModel. */
            public hybridModel?: (apollo.planning_internal.IHybridModelDebug|null);

            /**
             * Creates a new PlanningData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlanningData instance
             */
            public static create(properties?: apollo.planning_internal.IPlanningData): apollo.planning_internal.PlanningData;

            /**
             * Encodes the specified PlanningData message. Does not implicitly {@link apollo.planning_internal.PlanningData.verify|verify} messages.
             * @param message PlanningData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IPlanningData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlanningData message, length delimited. Does not implicitly {@link apollo.planning_internal.PlanningData.verify|verify} messages.
             * @param message PlanningData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IPlanningData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlanningData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlanningData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.PlanningData;

            /**
             * Decodes a PlanningData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlanningData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.PlanningData;

            /**
             * Verifies a PlanningData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlanningData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlanningData
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.PlanningData;

            /**
             * Creates a plain object from a PlanningData message. Also converts values to other types if specified.
             * @param message PlanningData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.PlanningData, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlanningData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PlanningData
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LatticeStPixel. */
        interface ILatticeStPixel {

            /** LatticeStPixel s */
            s?: (number|null);

            /** LatticeStPixel t */
            t?: (number|null);

            /** LatticeStPixel r */
            r?: (number|null);

            /** LatticeStPixel g */
            g?: (number|null);

            /** LatticeStPixel b */
            b?: (number|null);
        }

        /** Represents a LatticeStPixel. */
        class LatticeStPixel implements ILatticeStPixel {

            /**
             * Constructs a new LatticeStPixel.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ILatticeStPixel);

            /** LatticeStPixel s. */
            public s: number;

            /** LatticeStPixel t. */
            public t: number;

            /** LatticeStPixel r. */
            public r: number;

            /** LatticeStPixel g. */
            public g: number;

            /** LatticeStPixel b. */
            public b: number;

            /**
             * Creates a new LatticeStPixel instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LatticeStPixel instance
             */
            public static create(properties?: apollo.planning_internal.ILatticeStPixel): apollo.planning_internal.LatticeStPixel;

            /**
             * Encodes the specified LatticeStPixel message. Does not implicitly {@link apollo.planning_internal.LatticeStPixel.verify|verify} messages.
             * @param message LatticeStPixel message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ILatticeStPixel, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LatticeStPixel message, length delimited. Does not implicitly {@link apollo.planning_internal.LatticeStPixel.verify|verify} messages.
             * @param message LatticeStPixel message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ILatticeStPixel, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LatticeStPixel message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LatticeStPixel
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.LatticeStPixel;

            /**
             * Decodes a LatticeStPixel message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LatticeStPixel
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.LatticeStPixel;

            /**
             * Verifies a LatticeStPixel message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LatticeStPixel message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LatticeStPixel
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.LatticeStPixel;

            /**
             * Creates a plain object from a LatticeStPixel message. Also converts values to other types if specified.
             * @param message LatticeStPixel
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.LatticeStPixel, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LatticeStPixel to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LatticeStPixel
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LatticeStTraining. */
        interface ILatticeStTraining {

            /** LatticeStTraining pixel */
            pixel?: (apollo.planning_internal.ILatticeStPixel[]|null);

            /** LatticeStTraining timestamp */
            timestamp?: (number|null);

            /** LatticeStTraining annotation */
            annotation?: (string|null);

            /** LatticeStTraining numSGrids */
            numSGrids?: (number|null);

            /** LatticeStTraining numTGrids */
            numTGrids?: (number|null);

            /** LatticeStTraining sResolution */
            sResolution?: (number|null);

            /** LatticeStTraining tResolution */
            tResolution?: (number|null);
        }

        /** Represents a LatticeStTraining. */
        class LatticeStTraining implements ILatticeStTraining {

            /**
             * Constructs a new LatticeStTraining.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ILatticeStTraining);

            /** LatticeStTraining pixel. */
            public pixel: apollo.planning_internal.ILatticeStPixel[];

            /** LatticeStTraining timestamp. */
            public timestamp: number;

            /** LatticeStTraining annotation. */
            public annotation: string;

            /** LatticeStTraining numSGrids. */
            public numSGrids: number;

            /** LatticeStTraining numTGrids. */
            public numTGrids: number;

            /** LatticeStTraining sResolution. */
            public sResolution: number;

            /** LatticeStTraining tResolution. */
            public tResolution: number;

            /**
             * Creates a new LatticeStTraining instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LatticeStTraining instance
             */
            public static create(properties?: apollo.planning_internal.ILatticeStTraining): apollo.planning_internal.LatticeStTraining;

            /**
             * Encodes the specified LatticeStTraining message. Does not implicitly {@link apollo.planning_internal.LatticeStTraining.verify|verify} messages.
             * @param message LatticeStTraining message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ILatticeStTraining, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LatticeStTraining message, length delimited. Does not implicitly {@link apollo.planning_internal.LatticeStTraining.verify|verify} messages.
             * @param message LatticeStTraining message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ILatticeStTraining, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LatticeStTraining message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LatticeStTraining
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.LatticeStTraining;

            /**
             * Decodes a LatticeStTraining message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LatticeStTraining
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.LatticeStTraining;

            /**
             * Verifies a LatticeStTraining message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LatticeStTraining message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LatticeStTraining
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.LatticeStTraining;

            /**
             * Creates a plain object from a LatticeStTraining message. Also converts values to other types if specified.
             * @param message LatticeStTraining
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.LatticeStTraining, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LatticeStTraining to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LatticeStTraining
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CostComponents. */
        interface ICostComponents {

            /** CostComponents costComponent */
            costComponent?: (number[]|null);
        }

        /** Represents a CostComponents. */
        class CostComponents implements ICostComponents {

            /**
             * Constructs a new CostComponents.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ICostComponents);

            /** CostComponents costComponent. */
            public costComponent: number[];

            /**
             * Creates a new CostComponents instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CostComponents instance
             */
            public static create(properties?: apollo.planning_internal.ICostComponents): apollo.planning_internal.CostComponents;

            /**
             * Encodes the specified CostComponents message. Does not implicitly {@link apollo.planning_internal.CostComponents.verify|verify} messages.
             * @param message CostComponents message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ICostComponents, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CostComponents message, length delimited. Does not implicitly {@link apollo.planning_internal.CostComponents.verify|verify} messages.
             * @param message CostComponents message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ICostComponents, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CostComponents message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CostComponents
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.CostComponents;

            /**
             * Decodes a CostComponents message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CostComponents
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.CostComponents;

            /**
             * Verifies a CostComponents message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CostComponents message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CostComponents
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.CostComponents;

            /**
             * Creates a plain object from a CostComponents message. Also converts values to other types if specified.
             * @param message CostComponents
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.CostComponents, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CostComponents to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CostComponents
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an AutoTuningTrainingData. */
        interface IAutoTuningTrainingData {

            /** AutoTuningTrainingData teacherComponent */
            teacherComponent?: (apollo.planning_internal.ICostComponents|null);

            /** AutoTuningTrainingData studentComponent */
            studentComponent?: (apollo.planning_internal.ICostComponents|null);
        }

        /** Represents an AutoTuningTrainingData. */
        class AutoTuningTrainingData implements IAutoTuningTrainingData {

            /**
             * Constructs a new AutoTuningTrainingData.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IAutoTuningTrainingData);

            /** AutoTuningTrainingData teacherComponent. */
            public teacherComponent?: (apollo.planning_internal.ICostComponents|null);

            /** AutoTuningTrainingData studentComponent. */
            public studentComponent?: (apollo.planning_internal.ICostComponents|null);

            /**
             * Creates a new AutoTuningTrainingData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AutoTuningTrainingData instance
             */
            public static create(properties?: apollo.planning_internal.IAutoTuningTrainingData): apollo.planning_internal.AutoTuningTrainingData;

            /**
             * Encodes the specified AutoTuningTrainingData message. Does not implicitly {@link apollo.planning_internal.AutoTuningTrainingData.verify|verify} messages.
             * @param message AutoTuningTrainingData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IAutoTuningTrainingData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AutoTuningTrainingData message, length delimited. Does not implicitly {@link apollo.planning_internal.AutoTuningTrainingData.verify|verify} messages.
             * @param message AutoTuningTrainingData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IAutoTuningTrainingData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AutoTuningTrainingData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AutoTuningTrainingData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.AutoTuningTrainingData;

            /**
             * Decodes an AutoTuningTrainingData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AutoTuningTrainingData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.AutoTuningTrainingData;

            /**
             * Verifies an AutoTuningTrainingData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AutoTuningTrainingData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AutoTuningTrainingData
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.AutoTuningTrainingData;

            /**
             * Creates a plain object from an AutoTuningTrainingData message. Also converts values to other types if specified.
             * @param message AutoTuningTrainingData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.AutoTuningTrainingData, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AutoTuningTrainingData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AutoTuningTrainingData
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CloudReferenceLineRequest. */
        interface ICloudReferenceLineRequest {

            /** CloudReferenceLineRequest laneSegment */
            laneSegment?: (apollo.routing.ILaneSegment[]|null);
        }

        /** Represents a CloudReferenceLineRequest. */
        class CloudReferenceLineRequest implements ICloudReferenceLineRequest {

            /**
             * Constructs a new CloudReferenceLineRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ICloudReferenceLineRequest);

            /** CloudReferenceLineRequest laneSegment. */
            public laneSegment: apollo.routing.ILaneSegment[];

            /**
             * Creates a new CloudReferenceLineRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloudReferenceLineRequest instance
             */
            public static create(properties?: apollo.planning_internal.ICloudReferenceLineRequest): apollo.planning_internal.CloudReferenceLineRequest;

            /**
             * Encodes the specified CloudReferenceLineRequest message. Does not implicitly {@link apollo.planning_internal.CloudReferenceLineRequest.verify|verify} messages.
             * @param message CloudReferenceLineRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ICloudReferenceLineRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloudReferenceLineRequest message, length delimited. Does not implicitly {@link apollo.planning_internal.CloudReferenceLineRequest.verify|verify} messages.
             * @param message CloudReferenceLineRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ICloudReferenceLineRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloudReferenceLineRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloudReferenceLineRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.CloudReferenceLineRequest;

            /**
             * Decodes a CloudReferenceLineRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloudReferenceLineRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.CloudReferenceLineRequest;

            /**
             * Verifies a CloudReferenceLineRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloudReferenceLineRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloudReferenceLineRequest
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.CloudReferenceLineRequest;

            /**
             * Creates a plain object from a CloudReferenceLineRequest message. Also converts values to other types if specified.
             * @param message CloudReferenceLineRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.CloudReferenceLineRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloudReferenceLineRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloudReferenceLineRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CloudReferenceLineRoutingRequest. */
        interface ICloudReferenceLineRoutingRequest {

            /** CloudReferenceLineRoutingRequest routing */
            routing?: (apollo.routing.IRoutingResponse|null);
        }

        /** Represents a CloudReferenceLineRoutingRequest. */
        class CloudReferenceLineRoutingRequest implements ICloudReferenceLineRoutingRequest {

            /**
             * Constructs a new CloudReferenceLineRoutingRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ICloudReferenceLineRoutingRequest);

            /** CloudReferenceLineRoutingRequest routing. */
            public routing?: (apollo.routing.IRoutingResponse|null);

            /**
             * Creates a new CloudReferenceLineRoutingRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloudReferenceLineRoutingRequest instance
             */
            public static create(properties?: apollo.planning_internal.ICloudReferenceLineRoutingRequest): apollo.planning_internal.CloudReferenceLineRoutingRequest;

            /**
             * Encodes the specified CloudReferenceLineRoutingRequest message. Does not implicitly {@link apollo.planning_internal.CloudReferenceLineRoutingRequest.verify|verify} messages.
             * @param message CloudReferenceLineRoutingRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ICloudReferenceLineRoutingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloudReferenceLineRoutingRequest message, length delimited. Does not implicitly {@link apollo.planning_internal.CloudReferenceLineRoutingRequest.verify|verify} messages.
             * @param message CloudReferenceLineRoutingRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ICloudReferenceLineRoutingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloudReferenceLineRoutingRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloudReferenceLineRoutingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.CloudReferenceLineRoutingRequest;

            /**
             * Decodes a CloudReferenceLineRoutingRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloudReferenceLineRoutingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.CloudReferenceLineRoutingRequest;

            /**
             * Verifies a CloudReferenceLineRoutingRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloudReferenceLineRoutingRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloudReferenceLineRoutingRequest
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.CloudReferenceLineRoutingRequest;

            /**
             * Creates a plain object from a CloudReferenceLineRoutingRequest message. Also converts values to other types if specified.
             * @param message CloudReferenceLineRoutingRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.CloudReferenceLineRoutingRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloudReferenceLineRoutingRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloudReferenceLineRoutingRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CloudReferenceLineResponse. */
        interface ICloudReferenceLineResponse {

            /** CloudReferenceLineResponse segment */
            segment?: (apollo.common.IPath[]|null);
        }

        /** Represents a CloudReferenceLineResponse. */
        class CloudReferenceLineResponse implements ICloudReferenceLineResponse {

            /**
             * Constructs a new CloudReferenceLineResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.ICloudReferenceLineResponse);

            /** CloudReferenceLineResponse segment. */
            public segment: apollo.common.IPath[];

            /**
             * Creates a new CloudReferenceLineResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloudReferenceLineResponse instance
             */
            public static create(properties?: apollo.planning_internal.ICloudReferenceLineResponse): apollo.planning_internal.CloudReferenceLineResponse;

            /**
             * Encodes the specified CloudReferenceLineResponse message. Does not implicitly {@link apollo.planning_internal.CloudReferenceLineResponse.verify|verify} messages.
             * @param message CloudReferenceLineResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.ICloudReferenceLineResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloudReferenceLineResponse message, length delimited. Does not implicitly {@link apollo.planning_internal.CloudReferenceLineResponse.verify|verify} messages.
             * @param message CloudReferenceLineResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.ICloudReferenceLineResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloudReferenceLineResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloudReferenceLineResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.CloudReferenceLineResponse;

            /**
             * Decodes a CloudReferenceLineResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloudReferenceLineResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.CloudReferenceLineResponse;

            /**
             * Verifies a CloudReferenceLineResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloudReferenceLineResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloudReferenceLineResponse
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.CloudReferenceLineResponse;

            /**
             * Creates a plain object from a CloudReferenceLineResponse message. Also converts values to other types if specified.
             * @param message CloudReferenceLineResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.CloudReferenceLineResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloudReferenceLineResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloudReferenceLineResponse
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a HybridModelDebug. */
        interface IHybridModelDebug {

            /** HybridModelDebug usingLearningModelOutput */
            usingLearningModelOutput?: (boolean|null);

            /** HybridModelDebug learningModelOutputUsageRatio */
            learningModelOutputUsageRatio?: (number|null);

            /** HybridModelDebug learningModelOutputFailReason */
            learningModelOutputFailReason?: (string|null);

            /** HybridModelDebug evaluatedPathReference */
            evaluatedPathReference?: (apollo.common.IPath|null);
        }

        /** Represents a HybridModelDebug. */
        class HybridModelDebug implements IHybridModelDebug {

            /**
             * Constructs a new HybridModelDebug.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.planning_internal.IHybridModelDebug);

            /** HybridModelDebug usingLearningModelOutput. */
            public usingLearningModelOutput: boolean;

            /** HybridModelDebug learningModelOutputUsageRatio. */
            public learningModelOutputUsageRatio: number;

            /** HybridModelDebug learningModelOutputFailReason. */
            public learningModelOutputFailReason: string;

            /** HybridModelDebug evaluatedPathReference. */
            public evaluatedPathReference?: (apollo.common.IPath|null);

            /**
             * Creates a new HybridModelDebug instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HybridModelDebug instance
             */
            public static create(properties?: apollo.planning_internal.IHybridModelDebug): apollo.planning_internal.HybridModelDebug;

            /**
             * Encodes the specified HybridModelDebug message. Does not implicitly {@link apollo.planning_internal.HybridModelDebug.verify|verify} messages.
             * @param message HybridModelDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.planning_internal.IHybridModelDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HybridModelDebug message, length delimited. Does not implicitly {@link apollo.planning_internal.HybridModelDebug.verify|verify} messages.
             * @param message HybridModelDebug message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.planning_internal.IHybridModelDebug, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HybridModelDebug message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HybridModelDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.planning_internal.HybridModelDebug;

            /**
             * Decodes a HybridModelDebug message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HybridModelDebug
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.planning_internal.HybridModelDebug;

            /**
             * Verifies a HybridModelDebug message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HybridModelDebug message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HybridModelDebug
             */
            public static fromObject(object: { [k: string]: any }): apollo.planning_internal.HybridModelDebug;

            /**
             * Creates a plain object from a HybridModelDebug message. Also converts values to other types if specified.
             * @param message HybridModelDebug
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.planning_internal.HybridModelDebug, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HybridModelDebug to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for HybridModelDebug
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace prediction. */
    namespace prediction {

        /** Properties of a Lane. */
        interface ILane {

            /** Lane currentLaneFeature */
            currentLaneFeature?: (apollo.prediction.ILaneFeature[]|null);

            /** Lane laneFeature */
            laneFeature?: (apollo.prediction.ILaneFeature|null);

            /** Lane nearbyLaneFeature */
            nearbyLaneFeature?: (apollo.prediction.ILaneFeature[]|null);

            /** Lane laneGraph */
            laneGraph?: (apollo.prediction.ILaneGraph|null);

            /** Lane laneGraphOrdered */
            laneGraphOrdered?: (apollo.prediction.ILaneGraph|null);

            /** Lane labelUpdateTimeDelta */
            labelUpdateTimeDelta?: (number|null);
        }

        /** Represents a Lane. */
        class Lane implements ILane {

            /**
             * Constructs a new Lane.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ILane);

            /** Lane currentLaneFeature. */
            public currentLaneFeature: apollo.prediction.ILaneFeature[];

            /** Lane laneFeature. */
            public laneFeature?: (apollo.prediction.ILaneFeature|null);

            /** Lane nearbyLaneFeature. */
            public nearbyLaneFeature: apollo.prediction.ILaneFeature[];

            /** Lane laneGraph. */
            public laneGraph?: (apollo.prediction.ILaneGraph|null);

            /** Lane laneGraphOrdered. */
            public laneGraphOrdered?: (apollo.prediction.ILaneGraph|null);

            /** Lane labelUpdateTimeDelta. */
            public labelUpdateTimeDelta: number;

            /**
             * Creates a new Lane instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Lane instance
             */
            public static create(properties?: apollo.prediction.ILane): apollo.prediction.Lane;

            /**
             * Encodes the specified Lane message. Does not implicitly {@link apollo.prediction.Lane.verify|verify} messages.
             * @param message Lane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ILane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Lane message, length delimited. Does not implicitly {@link apollo.prediction.Lane.verify|verify} messages.
             * @param message Lane message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ILane, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Lane message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Lane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.Lane;

            /**
             * Decodes a Lane message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Lane
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.Lane;

            /**
             * Verifies a Lane message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Lane message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Lane
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.Lane;

            /**
             * Creates a plain object from a Lane message. Also converts values to other types if specified.
             * @param message Lane
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.Lane, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Lane to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Lane
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneFeature. */
        interface ILaneFeature {

            /** LaneFeature laneId */
            laneId?: (string|null);

            /** LaneFeature laneTurnType */
            laneTurnType?: (number|null);

            /** LaneFeature laneS */
            laneS?: (number|null);

            /** LaneFeature laneL */
            laneL?: (number|null);

            /** LaneFeature angleDiff */
            angleDiff?: (number|null);

            /** LaneFeature distToLeftBoundary */
            distToLeftBoundary?: (number|null);

            /** LaneFeature distToRightBoundary */
            distToRightBoundary?: (number|null);

            /** LaneFeature laneHeading */
            laneHeading?: (number|null);

            /** LaneFeature laneType */
            laneType?: (apollo.hdmap.Lane.LaneType|null);
        }

        /** Represents a LaneFeature. */
        class LaneFeature implements ILaneFeature {

            /**
             * Constructs a new LaneFeature.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ILaneFeature);

            /** LaneFeature laneId. */
            public laneId: string;

            /** LaneFeature laneTurnType. */
            public laneTurnType: number;

            /** LaneFeature laneS. */
            public laneS: number;

            /** LaneFeature laneL. */
            public laneL: number;

            /** LaneFeature angleDiff. */
            public angleDiff: number;

            /** LaneFeature distToLeftBoundary. */
            public distToLeftBoundary: number;

            /** LaneFeature distToRightBoundary. */
            public distToRightBoundary: number;

            /** LaneFeature laneHeading. */
            public laneHeading: number;

            /** LaneFeature laneType. */
            public laneType: apollo.hdmap.Lane.LaneType;

            /**
             * Creates a new LaneFeature instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneFeature instance
             */
            public static create(properties?: apollo.prediction.ILaneFeature): apollo.prediction.LaneFeature;

            /**
             * Encodes the specified LaneFeature message. Does not implicitly {@link apollo.prediction.LaneFeature.verify|verify} messages.
             * @param message LaneFeature message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ILaneFeature, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneFeature message, length delimited. Does not implicitly {@link apollo.prediction.LaneFeature.verify|verify} messages.
             * @param message LaneFeature message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ILaneFeature, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneFeature message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneFeature
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.LaneFeature;

            /**
             * Decodes a LaneFeature message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneFeature
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.LaneFeature;

            /**
             * Verifies a LaneFeature message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneFeature message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneFeature
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.LaneFeature;

            /**
             * Creates a plain object from a LaneFeature message. Also converts values to other types if specified.
             * @param message LaneFeature
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.LaneFeature, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneFeature to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneFeature
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a JunctionExit. */
        interface IJunctionExit {

            /** JunctionExit exitLaneId */
            exitLaneId?: (string|null);

            /** JunctionExit exitPosition */
            exitPosition?: (apollo.common.IPoint3D|null);

            /** JunctionExit exitHeading */
            exitHeading?: (number|null);

            /** JunctionExit exitWidth */
            exitWidth?: (number|null);
        }

        /** Represents a JunctionExit. */
        class JunctionExit implements IJunctionExit {

            /**
             * Constructs a new JunctionExit.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IJunctionExit);

            /** JunctionExit exitLaneId. */
            public exitLaneId: string;

            /** JunctionExit exitPosition. */
            public exitPosition?: (apollo.common.IPoint3D|null);

            /** JunctionExit exitHeading. */
            public exitHeading: number;

            /** JunctionExit exitWidth. */
            public exitWidth: number;

            /**
             * Creates a new JunctionExit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns JunctionExit instance
             */
            public static create(properties?: apollo.prediction.IJunctionExit): apollo.prediction.JunctionExit;

            /**
             * Encodes the specified JunctionExit message. Does not implicitly {@link apollo.prediction.JunctionExit.verify|verify} messages.
             * @param message JunctionExit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IJunctionExit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified JunctionExit message, length delimited. Does not implicitly {@link apollo.prediction.JunctionExit.verify|verify} messages.
             * @param message JunctionExit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IJunctionExit, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a JunctionExit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns JunctionExit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.JunctionExit;

            /**
             * Decodes a JunctionExit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns JunctionExit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.JunctionExit;

            /**
             * Verifies a JunctionExit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a JunctionExit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns JunctionExit
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.JunctionExit;

            /**
             * Creates a plain object from a JunctionExit message. Also converts values to other types if specified.
             * @param message JunctionExit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.JunctionExit, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this JunctionExit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for JunctionExit
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a JunctionFeature. */
        interface IJunctionFeature {

            /** JunctionFeature junctionId */
            junctionId?: (string|null);

            /** JunctionFeature junctionRange */
            junctionRange?: (number|null);

            /** JunctionFeature enterLane */
            enterLane?: (apollo.prediction.ILaneFeature|null);

            /** JunctionFeature junctionExit */
            junctionExit?: (apollo.prediction.IJunctionExit[]|null);

            /** JunctionFeature junctionMlpFeature */
            junctionMlpFeature?: (number[]|null);

            /** JunctionFeature junctionMlpLabel */
            junctionMlpLabel?: (number[]|null);

            /** JunctionFeature junctionMlpProbability */
            junctionMlpProbability?: (number[]|null);

            /** JunctionFeature startLaneId */
            startLaneId?: (string[]|null);
        }

        /** Represents a JunctionFeature. */
        class JunctionFeature implements IJunctionFeature {

            /**
             * Constructs a new JunctionFeature.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IJunctionFeature);

            /** JunctionFeature junctionId. */
            public junctionId: string;

            /** JunctionFeature junctionRange. */
            public junctionRange: number;

            /** JunctionFeature enterLane. */
            public enterLane?: (apollo.prediction.ILaneFeature|null);

            /** JunctionFeature junctionExit. */
            public junctionExit: apollo.prediction.IJunctionExit[];

            /** JunctionFeature junctionMlpFeature. */
            public junctionMlpFeature: number[];

            /** JunctionFeature junctionMlpLabel. */
            public junctionMlpLabel: number[];

            /** JunctionFeature junctionMlpProbability. */
            public junctionMlpProbability: number[];

            /** JunctionFeature startLaneId. */
            public startLaneId: string[];

            /**
             * Creates a new JunctionFeature instance using the specified properties.
             * @param [properties] Properties to set
             * @returns JunctionFeature instance
             */
            public static create(properties?: apollo.prediction.IJunctionFeature): apollo.prediction.JunctionFeature;

            /**
             * Encodes the specified JunctionFeature message. Does not implicitly {@link apollo.prediction.JunctionFeature.verify|verify} messages.
             * @param message JunctionFeature message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IJunctionFeature, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified JunctionFeature message, length delimited. Does not implicitly {@link apollo.prediction.JunctionFeature.verify|verify} messages.
             * @param message JunctionFeature message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IJunctionFeature, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a JunctionFeature message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns JunctionFeature
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.JunctionFeature;

            /**
             * Decodes a JunctionFeature message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns JunctionFeature
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.JunctionFeature;

            /**
             * Verifies a JunctionFeature message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a JunctionFeature message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns JunctionFeature
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.JunctionFeature;

            /**
             * Creates a plain object from a JunctionFeature message. Also converts values to other types if specified.
             * @param message JunctionFeature
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.JunctionFeature, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this JunctionFeature to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for JunctionFeature
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObstaclePriority. */
        interface IObstaclePriority {

            /** ObstaclePriority priority */
            priority?: (apollo.prediction.ObstaclePriority.Priority|null);
        }

        /** Represents an ObstaclePriority. */
        class ObstaclePriority implements IObstaclePriority {

            /**
             * Constructs a new ObstaclePriority.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IObstaclePriority);

            /** ObstaclePriority priority. */
            public priority: apollo.prediction.ObstaclePriority.Priority;

            /**
             * Creates a new ObstaclePriority instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObstaclePriority instance
             */
            public static create(properties?: apollo.prediction.IObstaclePriority): apollo.prediction.ObstaclePriority;

            /**
             * Encodes the specified ObstaclePriority message. Does not implicitly {@link apollo.prediction.ObstaclePriority.verify|verify} messages.
             * @param message ObstaclePriority message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IObstaclePriority, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObstaclePriority message, length delimited. Does not implicitly {@link apollo.prediction.ObstaclePriority.verify|verify} messages.
             * @param message ObstaclePriority message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IObstaclePriority, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObstaclePriority message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObstaclePriority
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.ObstaclePriority;

            /**
             * Decodes an ObstaclePriority message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObstaclePriority
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.ObstaclePriority;

            /**
             * Verifies an ObstaclePriority message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObstaclePriority message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObstaclePriority
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.ObstaclePriority;

            /**
             * Creates a plain object from an ObstaclePriority message. Also converts values to other types if specified.
             * @param message ObstaclePriority
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.ObstaclePriority, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObstaclePriority to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObstaclePriority
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ObstaclePriority {

            /** Priority enum. */
            enum Priority {
                CAUTION = 1,
                NORMAL = 2,
                IGNORE = 3
            }
        }

        /** Properties of an ObstacleInteractiveTag. */
        interface IObstacleInteractiveTag {

            /** ObstacleInteractiveTag interactiveTag */
            interactiveTag?: (apollo.prediction.ObstacleInteractiveTag.InteractiveTag|null);
        }

        /** Represents an ObstacleInteractiveTag. */
        class ObstacleInteractiveTag implements IObstacleInteractiveTag {

            /**
             * Constructs a new ObstacleInteractiveTag.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IObstacleInteractiveTag);

            /** ObstacleInteractiveTag interactiveTag. */
            public interactiveTag: apollo.prediction.ObstacleInteractiveTag.InteractiveTag;

            /**
             * Creates a new ObstacleInteractiveTag instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObstacleInteractiveTag instance
             */
            public static create(properties?: apollo.prediction.IObstacleInteractiveTag): apollo.prediction.ObstacleInteractiveTag;

            /**
             * Encodes the specified ObstacleInteractiveTag message. Does not implicitly {@link apollo.prediction.ObstacleInteractiveTag.verify|verify} messages.
             * @param message ObstacleInteractiveTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IObstacleInteractiveTag, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObstacleInteractiveTag message, length delimited. Does not implicitly {@link apollo.prediction.ObstacleInteractiveTag.verify|verify} messages.
             * @param message ObstacleInteractiveTag message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IObstacleInteractiveTag, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObstacleInteractiveTag message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObstacleInteractiveTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.ObstacleInteractiveTag;

            /**
             * Decodes an ObstacleInteractiveTag message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObstacleInteractiveTag
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.ObstacleInteractiveTag;

            /**
             * Verifies an ObstacleInteractiveTag message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObstacleInteractiveTag message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObstacleInteractiveTag
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.ObstacleInteractiveTag;

            /**
             * Creates a plain object from an ObstacleInteractiveTag message. Also converts values to other types if specified.
             * @param message ObstacleInteractiveTag
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.ObstacleInteractiveTag, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObstacleInteractiveTag to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObstacleInteractiveTag
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ObstacleInteractiveTag {

            /** InteractiveTag enum. */
            enum InteractiveTag {
                INTERACTION = 1,
                NONINTERACTION = 2
            }
        }

        /** Properties of a Trajectory. */
        interface ITrajectory {

            /** Trajectory probability */
            probability?: (number|null);

            /** Trajectory trajectoryPoint */
            trajectoryPoint?: (apollo.common.ITrajectoryPoint[]|null);
        }

        /** Represents a Trajectory. */
        class Trajectory implements ITrajectory {

            /**
             * Constructs a new Trajectory.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ITrajectory);

            /** Trajectory probability. */
            public probability: number;

            /** Trajectory trajectoryPoint. */
            public trajectoryPoint: apollo.common.ITrajectoryPoint[];

            /**
             * Creates a new Trajectory instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Trajectory instance
             */
            public static create(properties?: apollo.prediction.ITrajectory): apollo.prediction.Trajectory;

            /**
             * Encodes the specified Trajectory message. Does not implicitly {@link apollo.prediction.Trajectory.verify|verify} messages.
             * @param message Trajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ITrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Trajectory message, length delimited. Does not implicitly {@link apollo.prediction.Trajectory.verify|verify} messages.
             * @param message Trajectory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ITrajectory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Trajectory message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Trajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.Trajectory;

            /**
             * Decodes a Trajectory message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Trajectory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.Trajectory;

            /**
             * Verifies a Trajectory message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Trajectory message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Trajectory
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.Trajectory;

            /**
             * Creates a plain object from a Trajectory message. Also converts values to other types if specified.
             * @param message Trajectory
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.Trajectory, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Trajectory to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Trajectory
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Feature. */
        interface IFeature {

            /** Feature id */
            id?: (number|null);

            /** Feature polygonPoint */
            polygonPoint?: (apollo.common.IPoint3D[]|null);

            /** Feature position */
            position?: (apollo.common.IPoint3D|null);

            /** Feature frontPosition */
            frontPosition?: (apollo.common.IPoint3D|null);

            /** Feature velocity */
            velocity?: (apollo.common.IPoint3D|null);

            /** Feature rawVelocity */
            rawVelocity?: (apollo.common.IPoint3D|null);

            /** Feature acceleration */
            acceleration?: (apollo.common.IPoint3D|null);

            /** Feature velocityHeading */
            velocityHeading?: (number|null);

            /** Feature speed */
            speed?: (number|null);

            /** Feature acc */
            acc?: (number|null);

            /** Feature theta */
            theta?: (number|null);

            /** Feature length */
            length?: (number|null);

            /** Feature width */
            width?: (number|null);

            /** Feature height */
            height?: (number|null);

            /** Feature trackingTime */
            trackingTime?: (number|null);

            /** Feature timestamp */
            timestamp?: (number|null);

            /** Feature lane */
            lane?: (apollo.prediction.ILane|null);

            /** Feature junctionFeature */
            junctionFeature?: (apollo.prediction.IJunctionFeature|null);

            /** Feature tPosition */
            tPosition?: (apollo.common.IPoint3D|null);

            /** Feature tVelocity */
            tVelocity?: (apollo.common.IPoint3D|null);

            /** Feature tVelocityHeading */
            tVelocityHeading?: (number|null);

            /** Feature tSpeed */
            tSpeed?: (number|null);

            /** Feature tAcceleration */
            tAcceleration?: (apollo.common.IPoint3D|null);

            /** Feature tAcc */
            tAcc?: (number|null);

            /** Feature isStill */
            isStill?: (boolean|null);

            /** Feature type */
            type?: (apollo.perception.PerceptionObstacle.Type|null);

            /** Feature labelUpdateTimeDelta */
            labelUpdateTimeDelta?: (number|null);

            /** Feature priority */
            priority?: (apollo.prediction.IObstaclePriority|null);

            /** Feature interactiveTag */
            interactiveTag?: (apollo.prediction.IObstacleInteractiveTag|null);

            /** Feature isNearJunction */
            isNearJunction?: (boolean|null);

            /** Feature futureTrajectoryPoints */
            futureTrajectoryPoints?: (apollo.prediction.IPredictionTrajectoryPoint[]|null);

            /** Feature shortTermPredictedTrajectoryPoints */
            shortTermPredictedTrajectoryPoints?: (apollo.common.ITrajectoryPoint[]|null);

            /** Feature predictedTrajectory */
            predictedTrajectory?: (apollo.prediction.ITrajectory[]|null);

            /** Feature adcTrajectoryPoint */
            adcTrajectoryPoint?: (apollo.common.ITrajectoryPoint[]|null);

            /** Feature adcTimestamp */
            adcTimestamp?: (number|null);

            /** Feature adcLocalization */
            adcLocalization?: (apollo.perception.IPerceptionObstacle|null);

            /** Feature surroundingLaneId */
            surroundingLaneId?: (string[]|null);

            /** Feature withinLaneId */
            withinLaneId?: (string[]|null);
        }

        /** Represents a Feature. */
        class Feature implements IFeature {

            /**
             * Constructs a new Feature.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IFeature);

            /** Feature id. */
            public id: number;

            /** Feature polygonPoint. */
            public polygonPoint: apollo.common.IPoint3D[];

            /** Feature position. */
            public position?: (apollo.common.IPoint3D|null);

            /** Feature frontPosition. */
            public frontPosition?: (apollo.common.IPoint3D|null);

            /** Feature velocity. */
            public velocity?: (apollo.common.IPoint3D|null);

            /** Feature rawVelocity. */
            public rawVelocity?: (apollo.common.IPoint3D|null);

            /** Feature acceleration. */
            public acceleration?: (apollo.common.IPoint3D|null);

            /** Feature velocityHeading. */
            public velocityHeading: number;

            /** Feature speed. */
            public speed: number;

            /** Feature acc. */
            public acc: number;

            /** Feature theta. */
            public theta: number;

            /** Feature length. */
            public length: number;

            /** Feature width. */
            public width: number;

            /** Feature height. */
            public height: number;

            /** Feature trackingTime. */
            public trackingTime: number;

            /** Feature timestamp. */
            public timestamp: number;

            /** Feature lane. */
            public lane?: (apollo.prediction.ILane|null);

            /** Feature junctionFeature. */
            public junctionFeature?: (apollo.prediction.IJunctionFeature|null);

            /** Feature tPosition. */
            public tPosition?: (apollo.common.IPoint3D|null);

            /** Feature tVelocity. */
            public tVelocity?: (apollo.common.IPoint3D|null);

            /** Feature tVelocityHeading. */
            public tVelocityHeading: number;

            /** Feature tSpeed. */
            public tSpeed: number;

            /** Feature tAcceleration. */
            public tAcceleration?: (apollo.common.IPoint3D|null);

            /** Feature tAcc. */
            public tAcc: number;

            /** Feature isStill. */
            public isStill: boolean;

            /** Feature type. */
            public type: apollo.perception.PerceptionObstacle.Type;

            /** Feature labelUpdateTimeDelta. */
            public labelUpdateTimeDelta: number;

            /** Feature priority. */
            public priority?: (apollo.prediction.IObstaclePriority|null);

            /** Feature interactiveTag. */
            public interactiveTag?: (apollo.prediction.IObstacleInteractiveTag|null);

            /** Feature isNearJunction. */
            public isNearJunction: boolean;

            /** Feature futureTrajectoryPoints. */
            public futureTrajectoryPoints: apollo.prediction.IPredictionTrajectoryPoint[];

            /** Feature shortTermPredictedTrajectoryPoints. */
            public shortTermPredictedTrajectoryPoints: apollo.common.ITrajectoryPoint[];

            /** Feature predictedTrajectory. */
            public predictedTrajectory: apollo.prediction.ITrajectory[];

            /** Feature adcTrajectoryPoint. */
            public adcTrajectoryPoint: apollo.common.ITrajectoryPoint[];

            /** Feature adcTimestamp. */
            public adcTimestamp: number;

            /** Feature adcLocalization. */
            public adcLocalization?: (apollo.perception.IPerceptionObstacle|null);

            /** Feature surroundingLaneId. */
            public surroundingLaneId: string[];

            /** Feature withinLaneId. */
            public withinLaneId: string[];

            /**
             * Creates a new Feature instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Feature instance
             */
            public static create(properties?: apollo.prediction.IFeature): apollo.prediction.Feature;

            /**
             * Encodes the specified Feature message. Does not implicitly {@link apollo.prediction.Feature.verify|verify} messages.
             * @param message Feature message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IFeature, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Feature message, length delimited. Does not implicitly {@link apollo.prediction.Feature.verify|verify} messages.
             * @param message Feature message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IFeature, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Feature message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Feature
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.Feature;

            /**
             * Decodes a Feature message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Feature
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.Feature;

            /**
             * Verifies a Feature message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Feature message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Feature
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.Feature;

            /**
             * Creates a plain object from a Feature message. Also converts values to other types if specified.
             * @param message Feature
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.Feature, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Feature to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Feature
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObstacleHistory. */
        interface IObstacleHistory {

            /** ObstacleHistory feature */
            feature?: (apollo.prediction.IFeature[]|null);

            /** ObstacleHistory isTrainable */
            isTrainable?: (boolean|null);
        }

        /** Represents an ObstacleHistory. */
        class ObstacleHistory implements IObstacleHistory {

            /**
             * Constructs a new ObstacleHistory.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IObstacleHistory);

            /** ObstacleHistory feature. */
            public feature: apollo.prediction.IFeature[];

            /** ObstacleHistory isTrainable. */
            public isTrainable: boolean;

            /**
             * Creates a new ObstacleHistory instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObstacleHistory instance
             */
            public static create(properties?: apollo.prediction.IObstacleHistory): apollo.prediction.ObstacleHistory;

            /**
             * Encodes the specified ObstacleHistory message. Does not implicitly {@link apollo.prediction.ObstacleHistory.verify|verify} messages.
             * @param message ObstacleHistory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IObstacleHistory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObstacleHistory message, length delimited. Does not implicitly {@link apollo.prediction.ObstacleHistory.verify|verify} messages.
             * @param message ObstacleHistory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IObstacleHistory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObstacleHistory message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObstacleHistory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.ObstacleHistory;

            /**
             * Decodes an ObstacleHistory message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObstacleHistory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.ObstacleHistory;

            /**
             * Verifies an ObstacleHistory message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObstacleHistory message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObstacleHistory
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.ObstacleHistory;

            /**
             * Creates a plain object from an ObstacleHistory message. Also converts values to other types if specified.
             * @param message ObstacleHistory
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.ObstacleHistory, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObstacleHistory to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObstacleHistory
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a FrameEnv. */
        interface IFrameEnv {

            /** FrameEnv timestamp */
            timestamp?: (number|null);

            /** FrameEnv egoHistory */
            egoHistory?: (apollo.prediction.IObstacleHistory|null);

            /** FrameEnv obstaclesHistory */
            obstaclesHistory?: (apollo.prediction.IObstacleHistory[]|null);
        }

        /** Represents a FrameEnv. */
        class FrameEnv implements IFrameEnv {

            /**
             * Constructs a new FrameEnv.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IFrameEnv);

            /** FrameEnv timestamp. */
            public timestamp: number;

            /** FrameEnv egoHistory. */
            public egoHistory?: (apollo.prediction.IObstacleHistory|null);

            /** FrameEnv obstaclesHistory. */
            public obstaclesHistory: apollo.prediction.IObstacleHistory[];

            /**
             * Creates a new FrameEnv instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FrameEnv instance
             */
            public static create(properties?: apollo.prediction.IFrameEnv): apollo.prediction.FrameEnv;

            /**
             * Encodes the specified FrameEnv message. Does not implicitly {@link apollo.prediction.FrameEnv.verify|verify} messages.
             * @param message FrameEnv message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IFrameEnv, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FrameEnv message, length delimited. Does not implicitly {@link apollo.prediction.FrameEnv.verify|verify} messages.
             * @param message FrameEnv message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IFrameEnv, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FrameEnv message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FrameEnv
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.FrameEnv;

            /**
             * Decodes a FrameEnv message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FrameEnv
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.FrameEnv;

            /**
             * Verifies a FrameEnv message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FrameEnv message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FrameEnv
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.FrameEnv;

            /**
             * Creates a plain object from a FrameEnv message. Also converts values to other types if specified.
             * @param message FrameEnv
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.FrameEnv, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FrameEnv to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for FrameEnv
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LanePoint. */
        interface ILanePoint {

            /** LanePoint position */
            position?: (apollo.common.IPoint3D|null);

            /** LanePoint heading */
            heading?: (number|null);

            /** LanePoint width */
            width?: (number|null);

            /** LanePoint relativeS */
            relativeS?: (number|null);

            /** LanePoint relativeL */
            relativeL?: (number|null);

            /** LanePoint angleDiff */
            angleDiff?: (number|null);

            /** LanePoint kappa */
            kappa?: (number|null);

            /** LanePoint scenarioType */
            scenarioType?: (apollo.prediction.LanePoint.ScenarioType|null);

            /** LanePoint speedLimit */
            speedLimit?: (number|null);
        }

        /** Represents a LanePoint. */
        class LanePoint implements ILanePoint {

            /**
             * Constructs a new LanePoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ILanePoint);

            /** LanePoint position. */
            public position?: (apollo.common.IPoint3D|null);

            /** LanePoint heading. */
            public heading: number;

            /** LanePoint width. */
            public width: number;

            /** LanePoint relativeS. */
            public relativeS: number;

            /** LanePoint relativeL. */
            public relativeL: number;

            /** LanePoint angleDiff. */
            public angleDiff: number;

            /** LanePoint kappa. */
            public kappa: number;

            /** LanePoint scenarioType. */
            public scenarioType: apollo.prediction.LanePoint.ScenarioType;

            /** LanePoint speedLimit. */
            public speedLimit: number;

            /**
             * Creates a new LanePoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LanePoint instance
             */
            public static create(properties?: apollo.prediction.ILanePoint): apollo.prediction.LanePoint;

            /**
             * Encodes the specified LanePoint message. Does not implicitly {@link apollo.prediction.LanePoint.verify|verify} messages.
             * @param message LanePoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ILanePoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LanePoint message, length delimited. Does not implicitly {@link apollo.prediction.LanePoint.verify|verify} messages.
             * @param message LanePoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ILanePoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LanePoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LanePoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.LanePoint;

            /**
             * Decodes a LanePoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LanePoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.LanePoint;

            /**
             * Verifies a LanePoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LanePoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LanePoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.LanePoint;

            /**
             * Creates a plain object from a LanePoint message. Also converts values to other types if specified.
             * @param message LanePoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.LanePoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LanePoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LanePoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace LanePoint {

            /** ScenarioType enum. */
            enum ScenarioType {
                URBAN_ROAD = 0,
                JUNCTION = 1,
                HIGHWAY = 2
            }
        }

        /** Properties of a LaneSegment. */
        interface ILaneSegment {

            /** LaneSegment laneId */
            laneId?: (string|null);

            /** LaneSegment startS */
            startS?: (number|null);

            /** LaneSegment endS */
            endS?: (number|null);

            /** LaneSegment laneTurnType */
            laneTurnType?: (number|null);

            /** LaneSegment lanePoint */
            lanePoint?: (apollo.prediction.ILanePoint[]|null);

            /** LaneSegment adcS */
            adcS?: (number|null);

            /** LaneSegment adcLanePointIdx */
            adcLanePointIdx?: (number|null);

            /** LaneSegment totalLength */
            totalLength?: (number|null);
        }

        /** Represents a LaneSegment. */
        class LaneSegment implements ILaneSegment {

            /**
             * Constructs a new LaneSegment.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ILaneSegment);

            /** LaneSegment laneId. */
            public laneId: string;

            /** LaneSegment startS. */
            public startS: number;

            /** LaneSegment endS. */
            public endS: number;

            /** LaneSegment laneTurnType. */
            public laneTurnType: number;

            /** LaneSegment lanePoint. */
            public lanePoint: apollo.prediction.ILanePoint[];

            /** LaneSegment adcS. */
            public adcS: number;

            /** LaneSegment adcLanePointIdx. */
            public adcLanePointIdx: number;

            /** LaneSegment totalLength. */
            public totalLength: number;

            /**
             * Creates a new LaneSegment instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneSegment instance
             */
            public static create(properties?: apollo.prediction.ILaneSegment): apollo.prediction.LaneSegment;

            /**
             * Encodes the specified LaneSegment message. Does not implicitly {@link apollo.prediction.LaneSegment.verify|verify} messages.
             * @param message LaneSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ILaneSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneSegment message, length delimited. Does not implicitly {@link apollo.prediction.LaneSegment.verify|verify} messages.
             * @param message LaneSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ILaneSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneSegment message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.LaneSegment;

            /**
             * Decodes a LaneSegment message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.LaneSegment;

            /**
             * Verifies a LaneSegment message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneSegment message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneSegment
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.LaneSegment;

            /**
             * Creates a plain object from a LaneSegment message. Also converts values to other types if specified.
             * @param message LaneSegment
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.LaneSegment, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneSegment to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneSegment
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a NearbyObstacle. */
        interface INearbyObstacle {

            /** NearbyObstacle id */
            id?: (number|null);

            /** NearbyObstacle s */
            s?: (number|null);

            /** NearbyObstacle l */
            l?: (number|null);
        }

        /** Represents a NearbyObstacle. */
        class NearbyObstacle implements INearbyObstacle {

            /**
             * Constructs a new NearbyObstacle.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.INearbyObstacle);

            /** NearbyObstacle id. */
            public id: number;

            /** NearbyObstacle s. */
            public s: number;

            /** NearbyObstacle l. */
            public l: number;

            /**
             * Creates a new NearbyObstacle instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NearbyObstacle instance
             */
            public static create(properties?: apollo.prediction.INearbyObstacle): apollo.prediction.NearbyObstacle;

            /**
             * Encodes the specified NearbyObstacle message. Does not implicitly {@link apollo.prediction.NearbyObstacle.verify|verify} messages.
             * @param message NearbyObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.INearbyObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NearbyObstacle message, length delimited. Does not implicitly {@link apollo.prediction.NearbyObstacle.verify|verify} messages.
             * @param message NearbyObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.INearbyObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NearbyObstacle message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NearbyObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.NearbyObstacle;

            /**
             * Decodes a NearbyObstacle message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NearbyObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.NearbyObstacle;

            /**
             * Verifies a NearbyObstacle message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NearbyObstacle message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NearbyObstacle
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.NearbyObstacle;

            /**
             * Creates a plain object from a NearbyObstacle message. Also converts values to other types if specified.
             * @param message NearbyObstacle
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.NearbyObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NearbyObstacle to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for NearbyObstacle
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a StopSign. */
        interface IStopSign {

            /** StopSign stopSignId */
            stopSignId?: (string|null);

            /** StopSign laneId */
            laneId?: (string|null);

            /** StopSign laneS */
            laneS?: (number|null);

            /** StopSign laneSequenceS */
            laneSequenceS?: (number|null);
        }

        /** Represents a StopSign. */
        class StopSign implements IStopSign {

            /**
             * Constructs a new StopSign.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IStopSign);

            /** StopSign stopSignId. */
            public stopSignId: string;

            /** StopSign laneId. */
            public laneId: string;

            /** StopSign laneS. */
            public laneS: number;

            /** StopSign laneSequenceS. */
            public laneSequenceS: number;

            /**
             * Creates a new StopSign instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StopSign instance
             */
            public static create(properties?: apollo.prediction.IStopSign): apollo.prediction.StopSign;

            /**
             * Encodes the specified StopSign message. Does not implicitly {@link apollo.prediction.StopSign.verify|verify} messages.
             * @param message StopSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IStopSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StopSign message, length delimited. Does not implicitly {@link apollo.prediction.StopSign.verify|verify} messages.
             * @param message StopSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IStopSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StopSign message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StopSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.StopSign;

            /**
             * Decodes a StopSign message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StopSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.StopSign;

            /**
             * Verifies a StopSign message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StopSign message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StopSign
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.StopSign;

            /**
             * Creates a plain object from a StopSign message. Also converts values to other types if specified.
             * @param message StopSign
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.StopSign, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StopSign to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for StopSign
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneSequence. */
        interface ILaneSequence {

            /** LaneSequence laneSequenceId */
            laneSequenceId?: (number|null);

            /** LaneSequence laneSegment */
            laneSegment?: (apollo.prediction.ILaneSegment[]|null);

            /** LaneSequence adcLaneSegmentIdx */
            adcLaneSegmentIdx?: (number|null);

            /** LaneSequence pathPoint */
            pathPoint?: (apollo.common.IPathPoint[]|null);

            /** LaneSequence laneType */
            laneType?: (apollo.hdmap.Lane.LaneType|null);

            /** LaneSequence laneS */
            laneS?: (number|null);

            /** LaneSequence laneL */
            laneL?: (number|null);

            /** LaneSequence vehicleOnLane */
            vehicleOnLane?: (boolean|null);

            /** LaneSequence nearbyObstacle */
            nearbyObstacle?: (apollo.prediction.INearbyObstacle[]|null);

            /** LaneSequence stopSign */
            stopSign?: (apollo.prediction.IStopSign|null);

            /** LaneSequence rightOfWay */
            rightOfWay?: (number|null);

            /** LaneSequence features */
            features?: (apollo.prediction.LaneSequence.IFeatures|null);

            /** LaneSequence label */
            label?: (number|null);

            /** LaneSequence probability */
            probability?: (number|null);

            /** LaneSequence acceleration */
            acceleration?: (number|null);

            /** LaneSequence timeToLaneCenter */
            timeToLaneCenter?: (number|null);

            /** LaneSequence timeToLaneEdge */
            timeToLaneEdge?: (number|null);

            /** LaneSequence behaviorType */
            behaviorType?: (apollo.prediction.LaneSequence.BehaviorType|null);

            /** LaneSequence currLanePoint */
            currLanePoint?: (apollo.prediction.ILanePoint[]|null);

            /** LaneSequence leftNeighborPoint */
            leftNeighborPoint?: (apollo.prediction.ILanePoint[]|null);

            /** LaneSequence rightNeighborPoint */
            rightNeighborPoint?: (apollo.prediction.ILanePoint[]|null);

            /** LaneSequence leftNearbyObstacle */
            leftNearbyObstacle?: (apollo.prediction.INearbyObstacle[]|null);

            /** LaneSequence rightNearbyObstacle */
            rightNearbyObstacle?: (apollo.prediction.INearbyObstacle[]|null);
        }

        /** Represents a LaneSequence. */
        class LaneSequence implements ILaneSequence {

            /**
             * Constructs a new LaneSequence.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ILaneSequence);

            /** LaneSequence laneSequenceId. */
            public laneSequenceId: number;

            /** LaneSequence laneSegment. */
            public laneSegment: apollo.prediction.ILaneSegment[];

            /** LaneSequence adcLaneSegmentIdx. */
            public adcLaneSegmentIdx: number;

            /** LaneSequence pathPoint. */
            public pathPoint: apollo.common.IPathPoint[];

            /** LaneSequence laneType. */
            public laneType: apollo.hdmap.Lane.LaneType;

            /** LaneSequence laneS. */
            public laneS: number;

            /** LaneSequence laneL. */
            public laneL: number;

            /** LaneSequence vehicleOnLane. */
            public vehicleOnLane: boolean;

            /** LaneSequence nearbyObstacle. */
            public nearbyObstacle: apollo.prediction.INearbyObstacle[];

            /** LaneSequence stopSign. */
            public stopSign?: (apollo.prediction.IStopSign|null);

            /** LaneSequence rightOfWay. */
            public rightOfWay: number;

            /** LaneSequence features. */
            public features?: (apollo.prediction.LaneSequence.IFeatures|null);

            /** LaneSequence label. */
            public label: number;

            /** LaneSequence probability. */
            public probability: number;

            /** LaneSequence acceleration. */
            public acceleration: number;

            /** LaneSequence timeToLaneCenter. */
            public timeToLaneCenter: number;

            /** LaneSequence timeToLaneEdge. */
            public timeToLaneEdge: number;

            /** LaneSequence behaviorType. */
            public behaviorType: apollo.prediction.LaneSequence.BehaviorType;

            /** LaneSequence currLanePoint. */
            public currLanePoint: apollo.prediction.ILanePoint[];

            /** LaneSequence leftNeighborPoint. */
            public leftNeighborPoint: apollo.prediction.ILanePoint[];

            /** LaneSequence rightNeighborPoint. */
            public rightNeighborPoint: apollo.prediction.ILanePoint[];

            /** LaneSequence leftNearbyObstacle. */
            public leftNearbyObstacle: apollo.prediction.INearbyObstacle[];

            /** LaneSequence rightNearbyObstacle. */
            public rightNearbyObstacle: apollo.prediction.INearbyObstacle[];

            /**
             * Creates a new LaneSequence instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneSequence instance
             */
            public static create(properties?: apollo.prediction.ILaneSequence): apollo.prediction.LaneSequence;

            /**
             * Encodes the specified LaneSequence message. Does not implicitly {@link apollo.prediction.LaneSequence.verify|verify} messages.
             * @param message LaneSequence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ILaneSequence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneSequence message, length delimited. Does not implicitly {@link apollo.prediction.LaneSequence.verify|verify} messages.
             * @param message LaneSequence message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ILaneSequence, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneSequence message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneSequence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.LaneSequence;

            /**
             * Decodes a LaneSequence message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneSequence
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.LaneSequence;

            /**
             * Verifies a LaneSequence message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneSequence message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneSequence
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.LaneSequence;

            /**
             * Creates a plain object from a LaneSequence message. Also converts values to other types if specified.
             * @param message LaneSequence
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.LaneSequence, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneSequence to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneSequence
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace LaneSequence {

            /** Properties of a Features. */
            interface IFeatures {

                /** Features mlpFeatures */
                mlpFeatures?: (number[]|null);
            }

            /** Represents a Features. */
            class Features implements IFeatures {

                /**
                 * Constructs a new Features.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.prediction.LaneSequence.IFeatures);

                /** Features mlpFeatures. */
                public mlpFeatures: number[];

                /**
                 * Creates a new Features instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Features instance
                 */
                public static create(properties?: apollo.prediction.LaneSequence.IFeatures): apollo.prediction.LaneSequence.Features;

                /**
                 * Encodes the specified Features message. Does not implicitly {@link apollo.prediction.LaneSequence.Features.verify|verify} messages.
                 * @param message Features message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.prediction.LaneSequence.IFeatures, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Features message, length delimited. Does not implicitly {@link apollo.prediction.LaneSequence.Features.verify|verify} messages.
                 * @param message Features message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.prediction.LaneSequence.IFeatures, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Features message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Features
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.LaneSequence.Features;

                /**
                 * Decodes a Features message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Features
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.LaneSequence.Features;

                /**
                 * Verifies a Features message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Features message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Features
                 */
                public static fromObject(object: { [k: string]: any }): apollo.prediction.LaneSequence.Features;

                /**
                 * Creates a plain object from a Features message. Also converts values to other types if specified.
                 * @param message Features
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.prediction.LaneSequence.Features, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Features to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Features
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** BehaviorType enum. */
            enum BehaviorType {
                NOT_GOTO_LANE = 1,
                CONSTANT_SPEED = 2,
                SMALL_ACCELERATION = 3,
                LARGE_ACCELERATION = 4,
                SMALL_DECELERATION = 5,
                LARGE_DECELERATION = 6
            }
        }

        /** Properties of a LaneGraph. */
        interface ILaneGraph {

            /** LaneGraph laneSequence */
            laneSequence?: (apollo.prediction.ILaneSequence[]|null);
        }

        /** Represents a LaneGraph. */
        class LaneGraph implements ILaneGraph {

            /**
             * Constructs a new LaneGraph.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ILaneGraph);

            /** LaneGraph laneSequence. */
            public laneSequence: apollo.prediction.ILaneSequence[];

            /**
             * Creates a new LaneGraph instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneGraph instance
             */
            public static create(properties?: apollo.prediction.ILaneGraph): apollo.prediction.LaneGraph;

            /**
             * Encodes the specified LaneGraph message. Does not implicitly {@link apollo.prediction.LaneGraph.verify|verify} messages.
             * @param message LaneGraph message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ILaneGraph, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneGraph message, length delimited. Does not implicitly {@link apollo.prediction.LaneGraph.verify|verify} messages.
             * @param message LaneGraph message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ILaneGraph, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneGraph message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneGraph
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.LaneGraph;

            /**
             * Decodes a LaneGraph message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneGraph
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.LaneGraph;

            /**
             * Verifies a LaneGraph message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneGraph message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneGraph
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.LaneGraph;

            /**
             * Creates a plain object from a LaneGraph message. Also converts values to other types if specified.
             * @param message LaneGraph
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.LaneGraph, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneGraph to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneGraph
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneObstacle. */
        interface ILaneObstacle {

            /** LaneObstacle obstacleId */
            obstacleId?: (number|null);

            /** LaneObstacle laneId */
            laneId?: (string|null);

            /** LaneObstacle laneS */
            laneS?: (number|null);

            /** LaneObstacle laneL */
            laneL?: (number|null);
        }

        /** Represents a LaneObstacle. */
        class LaneObstacle implements ILaneObstacle {

            /**
             * Constructs a new LaneObstacle.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.ILaneObstacle);

            /** LaneObstacle obstacleId. */
            public obstacleId: number;

            /** LaneObstacle laneId. */
            public laneId: string;

            /** LaneObstacle laneS. */
            public laneS: number;

            /** LaneObstacle laneL. */
            public laneL: number;

            /**
             * Creates a new LaneObstacle instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneObstacle instance
             */
            public static create(properties?: apollo.prediction.ILaneObstacle): apollo.prediction.LaneObstacle;

            /**
             * Encodes the specified LaneObstacle message. Does not implicitly {@link apollo.prediction.LaneObstacle.verify|verify} messages.
             * @param message LaneObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.ILaneObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneObstacle message, length delimited. Does not implicitly {@link apollo.prediction.LaneObstacle.verify|verify} messages.
             * @param message LaneObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.ILaneObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneObstacle message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.LaneObstacle;

            /**
             * Decodes a LaneObstacle message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.LaneObstacle;

            /**
             * Verifies a LaneObstacle message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneObstacle message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneObstacle
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.LaneObstacle;

            /**
             * Creates a plain object from a LaneObstacle message. Also converts values to other types if specified.
             * @param message LaneObstacle
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.LaneObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneObstacle to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneObstacle
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObstacleIntent. */
        interface IObstacleIntent {

            /** ObstacleIntent type */
            type?: (apollo.prediction.ObstacleIntent.Type|null);
        }

        /** Represents an ObstacleIntent. */
        class ObstacleIntent implements IObstacleIntent {

            /**
             * Constructs a new ObstacleIntent.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IObstacleIntent);

            /** ObstacleIntent type. */
            public type: apollo.prediction.ObstacleIntent.Type;

            /**
             * Creates a new ObstacleIntent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObstacleIntent instance
             */
            public static create(properties?: apollo.prediction.IObstacleIntent): apollo.prediction.ObstacleIntent;

            /**
             * Encodes the specified ObstacleIntent message. Does not implicitly {@link apollo.prediction.ObstacleIntent.verify|verify} messages.
             * @param message ObstacleIntent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IObstacleIntent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObstacleIntent message, length delimited. Does not implicitly {@link apollo.prediction.ObstacleIntent.verify|verify} messages.
             * @param message ObstacleIntent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IObstacleIntent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObstacleIntent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObstacleIntent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.ObstacleIntent;

            /**
             * Decodes an ObstacleIntent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObstacleIntent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.ObstacleIntent;

            /**
             * Verifies an ObstacleIntent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObstacleIntent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObstacleIntent
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.ObstacleIntent;

            /**
             * Creates a plain object from an ObstacleIntent message. Also converts values to other types if specified.
             * @param message ObstacleIntent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.ObstacleIntent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObstacleIntent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObstacleIntent
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ObstacleIntent {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                STOP = 1,
                STATIONARY = 2,
                MOVING = 3,
                CHANGE_LANE = 4,
                LOW_ACCELERATION = 5,
                HIGH_ACCELERATION = 6,
                LOW_DECELERATION = 7,
                HIGH_DECELERATION = 8
            }
        }

        /** Properties of an Intent. */
        interface IIntent {

            /** Intent type */
            type?: (apollo.prediction.Intent.Type|null);
        }

        /** Represents an Intent. */
        class Intent implements IIntent {

            /**
             * Constructs a new Intent.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IIntent);

            /** Intent type. */
            public type: apollo.prediction.Intent.Type;

            /**
             * Creates a new Intent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Intent instance
             */
            public static create(properties?: apollo.prediction.IIntent): apollo.prediction.Intent;

            /**
             * Encodes the specified Intent message. Does not implicitly {@link apollo.prediction.Intent.verify|verify} messages.
             * @param message Intent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IIntent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Intent message, length delimited. Does not implicitly {@link apollo.prediction.Intent.verify|verify} messages.
             * @param message Intent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IIntent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Intent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Intent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.Intent;

            /**
             * Decodes an Intent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Intent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.Intent;

            /**
             * Verifies an Intent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Intent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Intent
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.Intent;

            /**
             * Creates a plain object from an Intent message. Also converts values to other types if specified.
             * @param message Intent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.Intent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Intent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Intent
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Intent {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                STOP = 1,
                CRUISE = 2,
                CHANGE_LANE = 3
            }
        }

        /** Properties of a PredictionObstacle. */
        interface IPredictionObstacle {

            /** PredictionObstacle perceptionObstacle */
            perceptionObstacle?: (apollo.perception.IPerceptionObstacle|null);

            /** PredictionObstacle timestamp */
            timestamp?: (number|null);

            /** PredictionObstacle predictedPeriod */
            predictedPeriod?: (number|null);

            /** PredictionObstacle trajectory */
            trajectory?: (apollo.prediction.ITrajectory[]|null);

            /** PredictionObstacle intent */
            intent?: (apollo.prediction.IObstacleIntent|null);

            /** PredictionObstacle priority */
            priority?: (apollo.prediction.IObstaclePriority|null);

            /** PredictionObstacle interactiveTag */
            interactiveTag?: (apollo.prediction.IObstacleInteractiveTag|null);

            /** PredictionObstacle isStatic */
            isStatic?: (boolean|null);

            /** PredictionObstacle feature */
            feature?: (apollo.prediction.IFeature[]|null);
        }

        /** Represents a PredictionObstacle. */
        class PredictionObstacle implements IPredictionObstacle {

            /**
             * Constructs a new PredictionObstacle.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IPredictionObstacle);

            /** PredictionObstacle perceptionObstacle. */
            public perceptionObstacle?: (apollo.perception.IPerceptionObstacle|null);

            /** PredictionObstacle timestamp. */
            public timestamp: number;

            /** PredictionObstacle predictedPeriod. */
            public predictedPeriod: number;

            /** PredictionObstacle trajectory. */
            public trajectory: apollo.prediction.ITrajectory[];

            /** PredictionObstacle intent. */
            public intent?: (apollo.prediction.IObstacleIntent|null);

            /** PredictionObstacle priority. */
            public priority?: (apollo.prediction.IObstaclePriority|null);

            /** PredictionObstacle interactiveTag. */
            public interactiveTag?: (apollo.prediction.IObstacleInteractiveTag|null);

            /** PredictionObstacle isStatic. */
            public isStatic: boolean;

            /** PredictionObstacle feature. */
            public feature: apollo.prediction.IFeature[];

            /**
             * Creates a new PredictionObstacle instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PredictionObstacle instance
             */
            public static create(properties?: apollo.prediction.IPredictionObstacle): apollo.prediction.PredictionObstacle;

            /**
             * Encodes the specified PredictionObstacle message. Does not implicitly {@link apollo.prediction.PredictionObstacle.verify|verify} messages.
             * @param message PredictionObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IPredictionObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PredictionObstacle message, length delimited. Does not implicitly {@link apollo.prediction.PredictionObstacle.verify|verify} messages.
             * @param message PredictionObstacle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IPredictionObstacle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PredictionObstacle message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PredictionObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.PredictionObstacle;

            /**
             * Decodes a PredictionObstacle message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PredictionObstacle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.PredictionObstacle;

            /**
             * Verifies a PredictionObstacle message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PredictionObstacle message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PredictionObstacle
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.PredictionObstacle;

            /**
             * Creates a plain object from a PredictionObstacle message. Also converts values to other types if specified.
             * @param message PredictionObstacle
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.PredictionObstacle, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PredictionObstacle to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PredictionObstacle
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PredictionObstacles. */
        interface IPredictionObstacles {

            /** PredictionObstacles header */
            header?: (apollo.common.IHeader|null);

            /** PredictionObstacles predictionObstacle */
            predictionObstacle?: (apollo.prediction.IPredictionObstacle[]|null);

            /** PredictionObstacles perceptionErrorCode */
            perceptionErrorCode?: (apollo.common.ErrorCode|null);

            /** PredictionObstacles startTimestamp */
            startTimestamp?: (number|null);

            /** PredictionObstacles endTimestamp */
            endTimestamp?: (number|null);

            /** PredictionObstacles intent */
            intent?: (apollo.prediction.IIntent|null);

            /** PredictionObstacles scenario */
            scenario?: (apollo.prediction.IScenario|null);
        }

        /** Represents a PredictionObstacles. */
        class PredictionObstacles implements IPredictionObstacles {

            /**
             * Constructs a new PredictionObstacles.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IPredictionObstacles);

            /** PredictionObstacles header. */
            public header?: (apollo.common.IHeader|null);

            /** PredictionObstacles predictionObstacle. */
            public predictionObstacle: apollo.prediction.IPredictionObstacle[];

            /** PredictionObstacles perceptionErrorCode. */
            public perceptionErrorCode: apollo.common.ErrorCode;

            /** PredictionObstacles startTimestamp. */
            public startTimestamp: number;

            /** PredictionObstacles endTimestamp. */
            public endTimestamp: number;

            /** PredictionObstacles intent. */
            public intent?: (apollo.prediction.IIntent|null);

            /** PredictionObstacles scenario. */
            public scenario?: (apollo.prediction.IScenario|null);

            /**
             * Creates a new PredictionObstacles instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PredictionObstacles instance
             */
            public static create(properties?: apollo.prediction.IPredictionObstacles): apollo.prediction.PredictionObstacles;

            /**
             * Encodes the specified PredictionObstacles message. Does not implicitly {@link apollo.prediction.PredictionObstacles.verify|verify} messages.
             * @param message PredictionObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IPredictionObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PredictionObstacles message, length delimited. Does not implicitly {@link apollo.prediction.PredictionObstacles.verify|verify} messages.
             * @param message PredictionObstacles message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IPredictionObstacles, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PredictionObstacles message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PredictionObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.PredictionObstacles;

            /**
             * Decodes a PredictionObstacles message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PredictionObstacles
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.PredictionObstacles;

            /**
             * Verifies a PredictionObstacles message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PredictionObstacles message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PredictionObstacles
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.PredictionObstacles;

            /**
             * Creates a plain object from a PredictionObstacles message. Also converts values to other types if specified.
             * @param message PredictionObstacles
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.PredictionObstacles, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PredictionObstacles to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PredictionObstacles
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PredictionPathPoint. */
        interface IPredictionPathPoint {

            /** PredictionPathPoint x */
            x: number;

            /** PredictionPathPoint y */
            y: number;

            /** PredictionPathPoint velocityHeading */
            velocityHeading?: (number|null);
        }

        /** Represents a PredictionPathPoint. */
        class PredictionPathPoint implements IPredictionPathPoint {

            /**
             * Constructs a new PredictionPathPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IPredictionPathPoint);

            /** PredictionPathPoint x. */
            public x: number;

            /** PredictionPathPoint y. */
            public y: number;

            /** PredictionPathPoint velocityHeading. */
            public velocityHeading: number;

            /**
             * Creates a new PredictionPathPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PredictionPathPoint instance
             */
            public static create(properties?: apollo.prediction.IPredictionPathPoint): apollo.prediction.PredictionPathPoint;

            /**
             * Encodes the specified PredictionPathPoint message. Does not implicitly {@link apollo.prediction.PredictionPathPoint.verify|verify} messages.
             * @param message PredictionPathPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IPredictionPathPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PredictionPathPoint message, length delimited. Does not implicitly {@link apollo.prediction.PredictionPathPoint.verify|verify} messages.
             * @param message PredictionPathPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IPredictionPathPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PredictionPathPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PredictionPathPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.PredictionPathPoint;

            /**
             * Decodes a PredictionPathPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PredictionPathPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.PredictionPathPoint;

            /**
             * Verifies a PredictionPathPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PredictionPathPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PredictionPathPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.PredictionPathPoint;

            /**
             * Creates a plain object from a PredictionPathPoint message. Also converts values to other types if specified.
             * @param message PredictionPathPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.PredictionPathPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PredictionPathPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PredictionPathPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PredictionTrajectoryPoint. */
        interface IPredictionTrajectoryPoint {

            /** PredictionTrajectoryPoint pathPoint */
            pathPoint: apollo.prediction.IPredictionPathPoint;

            /** PredictionTrajectoryPoint timestamp */
            timestamp: number;
        }

        /** Represents a PredictionTrajectoryPoint. */
        class PredictionTrajectoryPoint implements IPredictionTrajectoryPoint {

            /**
             * Constructs a new PredictionTrajectoryPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IPredictionTrajectoryPoint);

            /** PredictionTrajectoryPoint pathPoint. */
            public pathPoint: apollo.prediction.IPredictionPathPoint;

            /** PredictionTrajectoryPoint timestamp. */
            public timestamp: number;

            /**
             * Creates a new PredictionTrajectoryPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PredictionTrajectoryPoint instance
             */
            public static create(properties?: apollo.prediction.IPredictionTrajectoryPoint): apollo.prediction.PredictionTrajectoryPoint;

            /**
             * Encodes the specified PredictionTrajectoryPoint message. Does not implicitly {@link apollo.prediction.PredictionTrajectoryPoint.verify|verify} messages.
             * @param message PredictionTrajectoryPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IPredictionTrajectoryPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PredictionTrajectoryPoint message, length delimited. Does not implicitly {@link apollo.prediction.PredictionTrajectoryPoint.verify|verify} messages.
             * @param message PredictionTrajectoryPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IPredictionTrajectoryPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PredictionTrajectoryPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PredictionTrajectoryPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.PredictionTrajectoryPoint;

            /**
             * Decodes a PredictionTrajectoryPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PredictionTrajectoryPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.PredictionTrajectoryPoint;

            /**
             * Verifies a PredictionTrajectoryPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PredictionTrajectoryPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PredictionTrajectoryPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.PredictionTrajectoryPoint;

            /**
             * Creates a plain object from a PredictionTrajectoryPoint message. Also converts values to other types if specified.
             * @param message PredictionTrajectoryPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.PredictionTrajectoryPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PredictionTrajectoryPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PredictionTrajectoryPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Scenario. */
        interface IScenario {

            /** Scenario type */
            type?: (apollo.prediction.Scenario.Type|null);

            /** Scenario junctionId */
            junctionId?: (string|null);
        }

        /** Represents a Scenario. */
        class Scenario implements IScenario {

            /**
             * Constructs a new Scenario.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.prediction.IScenario);

            /** Scenario type. */
            public type: apollo.prediction.Scenario.Type;

            /** Scenario junctionId. */
            public junctionId: string;

            /**
             * Creates a new Scenario instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Scenario instance
             */
            public static create(properties?: apollo.prediction.IScenario): apollo.prediction.Scenario;

            /**
             * Encodes the specified Scenario message. Does not implicitly {@link apollo.prediction.Scenario.verify|verify} messages.
             * @param message Scenario message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.prediction.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Scenario message, length delimited. Does not implicitly {@link apollo.prediction.Scenario.verify|verify} messages.
             * @param message Scenario message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.prediction.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Scenario message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Scenario
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.prediction.Scenario;

            /**
             * Decodes a Scenario message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Scenario
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.prediction.Scenario;

            /**
             * Verifies a Scenario message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Scenario message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Scenario
             */
            public static fromObject(object: { [k: string]: any }): apollo.prediction.Scenario;

            /**
             * Creates a plain object from a Scenario message. Also converts values to other types if specified.
             * @param message Scenario
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.prediction.Scenario, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Scenario to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Scenario
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Scenario {

            /** Type enum. */
            enum Type {
                UNKNOWN = 0,
                CRUISE = 1000,
                CRUISE_URBAN = 1001,
                CRUISE_HIGHWAY = 1002,
                JUNCTION = 2000,
                JUNCTION_TRAFFIC_LIGHT = 2001,
                JUNCTION_STOP_SIGN = 2002
            }
        }
    }

    /** Namespace routing. */
    namespace routing {

        /** Properties of a LaneWaypoint. */
        interface ILaneWaypoint {

            /** LaneWaypoint id */
            id?: (string|null);

            /** LaneWaypoint s */
            s?: (number|null);

            /** LaneWaypoint pose */
            pose?: (apollo.common.IPointENU|null);

            /** LaneWaypoint heading */
            heading?: (number|null);
        }

        /** Represents a LaneWaypoint. */
        class LaneWaypoint implements ILaneWaypoint {

            /**
             * Constructs a new LaneWaypoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.ILaneWaypoint);

            /** LaneWaypoint id. */
            public id: string;

            /** LaneWaypoint s. */
            public s: number;

            /** LaneWaypoint pose. */
            public pose?: (apollo.common.IPointENU|null);

            /** LaneWaypoint heading. */
            public heading: number;

            /**
             * Creates a new LaneWaypoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneWaypoint instance
             */
            public static create(properties?: apollo.routing.ILaneWaypoint): apollo.routing.LaneWaypoint;

            /**
             * Encodes the specified LaneWaypoint message. Does not implicitly {@link apollo.routing.LaneWaypoint.verify|verify} messages.
             * @param message LaneWaypoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.ILaneWaypoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneWaypoint message, length delimited. Does not implicitly {@link apollo.routing.LaneWaypoint.verify|verify} messages.
             * @param message LaneWaypoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.ILaneWaypoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneWaypoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneWaypoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.LaneWaypoint;

            /**
             * Decodes a LaneWaypoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneWaypoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.LaneWaypoint;

            /**
             * Verifies a LaneWaypoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneWaypoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneWaypoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.LaneWaypoint;

            /**
             * Creates a plain object from a LaneWaypoint message. Also converts values to other types if specified.
             * @param message LaneWaypoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.LaneWaypoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneWaypoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneWaypoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LaneSegment. */
        interface ILaneSegment {

            /** LaneSegment id */
            id?: (string|null);

            /** LaneSegment startS */
            startS?: (number|null);

            /** LaneSegment endS */
            endS?: (number|null);
        }

        /** Represents a LaneSegment. */
        class LaneSegment implements ILaneSegment {

            /**
             * Constructs a new LaneSegment.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.ILaneSegment);

            /** LaneSegment id. */
            public id: string;

            /** LaneSegment startS. */
            public startS: number;

            /** LaneSegment endS. */
            public endS: number;

            /**
             * Creates a new LaneSegment instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LaneSegment instance
             */
            public static create(properties?: apollo.routing.ILaneSegment): apollo.routing.LaneSegment;

            /**
             * Encodes the specified LaneSegment message. Does not implicitly {@link apollo.routing.LaneSegment.verify|verify} messages.
             * @param message LaneSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.ILaneSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LaneSegment message, length delimited. Does not implicitly {@link apollo.routing.LaneSegment.verify|verify} messages.
             * @param message LaneSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.ILaneSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LaneSegment message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LaneSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.LaneSegment;

            /**
             * Decodes a LaneSegment message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LaneSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.LaneSegment;

            /**
             * Verifies a LaneSegment message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LaneSegment message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LaneSegment
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.LaneSegment;

            /**
             * Creates a plain object from a LaneSegment message. Also converts values to other types if specified.
             * @param message LaneSegment
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.LaneSegment, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LaneSegment to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LaneSegment
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** DeadEndRoutingType enum. */
        enum DeadEndRoutingType {
            ROUTING_OTHER = 0,
            ROUTING_IN = 1,
            ROUTING_OUT = 2
        }

        /** Properties of a Measurement. */
        interface IMeasurement {

            /** Measurement distance */
            distance?: (number|null);
        }

        /** Represents a Measurement. */
        class Measurement implements IMeasurement {

            /**
             * Constructs a new Measurement.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.IMeasurement);

            /** Measurement distance. */
            public distance: number;

            /**
             * Creates a new Measurement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Measurement instance
             */
            public static create(properties?: apollo.routing.IMeasurement): apollo.routing.Measurement;

            /**
             * Encodes the specified Measurement message. Does not implicitly {@link apollo.routing.Measurement.verify|verify} messages.
             * @param message Measurement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.IMeasurement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Measurement message, length delimited. Does not implicitly {@link apollo.routing.Measurement.verify|verify} messages.
             * @param message Measurement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.IMeasurement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Measurement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Measurement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.Measurement;

            /**
             * Decodes a Measurement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Measurement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.Measurement;

            /**
             * Verifies a Measurement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Measurement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Measurement
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.Measurement;

            /**
             * Creates a plain object from a Measurement message. Also converts values to other types if specified.
             * @param message Measurement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.Measurement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Measurement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Measurement
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** ChangeLaneType enum. */
        enum ChangeLaneType {
            FORWARD = 0,
            LEFT = 1,
            RIGHT = 2
        }

        /** Properties of a Passage. */
        interface IPassage {

            /** Passage segment */
            segment?: (apollo.routing.ILaneSegment[]|null);

            /** Passage canExit */
            canExit?: (boolean|null);

            /** Passage changeLaneType */
            changeLaneType?: (apollo.routing.ChangeLaneType|null);
        }

        /** Represents a Passage. */
        class Passage implements IPassage {

            /**
             * Constructs a new Passage.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.IPassage);

            /** Passage segment. */
            public segment: apollo.routing.ILaneSegment[];

            /** Passage canExit. */
            public canExit: boolean;

            /** Passage changeLaneType. */
            public changeLaneType: apollo.routing.ChangeLaneType;

            /**
             * Creates a new Passage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Passage instance
             */
            public static create(properties?: apollo.routing.IPassage): apollo.routing.Passage;

            /**
             * Encodes the specified Passage message. Does not implicitly {@link apollo.routing.Passage.verify|verify} messages.
             * @param message Passage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.IPassage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Passage message, length delimited. Does not implicitly {@link apollo.routing.Passage.verify|verify} messages.
             * @param message Passage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.IPassage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Passage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Passage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.Passage;

            /**
             * Decodes a Passage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Passage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.Passage;

            /**
             * Verifies a Passage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Passage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Passage
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.Passage;

            /**
             * Creates a plain object from a Passage message. Also converts values to other types if specified.
             * @param message Passage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.Passage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Passage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Passage
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoadSegment. */
        interface IRoadSegment {

            /** RoadSegment id */
            id?: (string|null);

            /** RoadSegment passage */
            passage?: (apollo.routing.IPassage[]|null);
        }

        /** Represents a RoadSegment. */
        class RoadSegment implements IRoadSegment {

            /**
             * Constructs a new RoadSegment.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.IRoadSegment);

            /** RoadSegment id. */
            public id: string;

            /** RoadSegment passage. */
            public passage: apollo.routing.IPassage[];

            /**
             * Creates a new RoadSegment instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoadSegment instance
             */
            public static create(properties?: apollo.routing.IRoadSegment): apollo.routing.RoadSegment;

            /**
             * Encodes the specified RoadSegment message. Does not implicitly {@link apollo.routing.RoadSegment.verify|verify} messages.
             * @param message RoadSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.IRoadSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoadSegment message, length delimited. Does not implicitly {@link apollo.routing.RoadSegment.verify|verify} messages.
             * @param message RoadSegment message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.IRoadSegment, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoadSegment message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoadSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.RoadSegment;

            /**
             * Decodes a RoadSegment message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoadSegment
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.RoadSegment;

            /**
             * Verifies a RoadSegment message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoadSegment message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoadSegment
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.RoadSegment;

            /**
             * Creates a plain object from a RoadSegment message. Also converts values to other types if specified.
             * @param message RoadSegment
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.RoadSegment, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoadSegment to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoadSegment
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** ParkingSpaceType enum. */
        enum ParkingSpaceType {
            VERTICAL_PLOT = 0,
            PARALLEL_PARKING = 1
        }

        /** Properties of a ParkingInfo. */
        interface IParkingInfo {

            /** ParkingInfo parkingSpaceId */
            parkingSpaceId?: (string|null);

            /** ParkingInfo parkingPoint */
            parkingPoint?: (apollo.common.IPointENU|null);

            /** ParkingInfo parkingSpaceType */
            parkingSpaceType?: (apollo.routing.ParkingSpaceType|null);

            /** ParkingInfo cornerPoint */
            cornerPoint?: (apollo.hdmap.IPolygon|null);
        }

        /** Represents a ParkingInfo. */
        class ParkingInfo implements IParkingInfo {

            /**
             * Constructs a new ParkingInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.IParkingInfo);

            /** ParkingInfo parkingSpaceId. */
            public parkingSpaceId: string;

            /** ParkingInfo parkingPoint. */
            public parkingPoint?: (apollo.common.IPointENU|null);

            /** ParkingInfo parkingSpaceType. */
            public parkingSpaceType: apollo.routing.ParkingSpaceType;

            /** ParkingInfo cornerPoint. */
            public cornerPoint?: (apollo.hdmap.IPolygon|null);

            /**
             * Creates a new ParkingInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ParkingInfo instance
             */
            public static create(properties?: apollo.routing.IParkingInfo): apollo.routing.ParkingInfo;

            /**
             * Encodes the specified ParkingInfo message. Does not implicitly {@link apollo.routing.ParkingInfo.verify|verify} messages.
             * @param message ParkingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.IParkingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ParkingInfo message, length delimited. Does not implicitly {@link apollo.routing.ParkingInfo.verify|verify} messages.
             * @param message ParkingInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.IParkingInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ParkingInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ParkingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.ParkingInfo;

            /**
             * Decodes a ParkingInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ParkingInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.ParkingInfo;

            /**
             * Verifies a ParkingInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ParkingInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ParkingInfo
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.ParkingInfo;

            /**
             * Creates a plain object from a ParkingInfo message. Also converts values to other types if specified.
             * @param message ParkingInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.ParkingInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ParkingInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ParkingInfo
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Landmark. */
        interface ILandmark {

            /** Landmark name */
            name?: (string|null);

            /** Landmark waypoint */
            waypoint?: (apollo.routing.ILaneWaypoint[]|null);

            /** Landmark parkingSpaceId */
            parkingSpaceId?: (string|null);

            /** Landmark parkingInfo */
            parkingInfo?: (apollo.routing.IParkingInfo|null);

            /** Landmark cycleNumber */
            cycleNumber?: (number|null);
        }

        /** Represents a Landmark. */
        class Landmark implements ILandmark {

            /**
             * Constructs a new Landmark.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.ILandmark);

            /** Landmark name. */
            public name: string;

            /** Landmark waypoint. */
            public waypoint: apollo.routing.ILaneWaypoint[];

            /** Landmark parkingSpaceId. */
            public parkingSpaceId: string;

            /** Landmark parkingInfo. */
            public parkingInfo?: (apollo.routing.IParkingInfo|null);

            /** Landmark cycleNumber. */
            public cycleNumber: number;

            /**
             * Creates a new Landmark instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Landmark instance
             */
            public static create(properties?: apollo.routing.ILandmark): apollo.routing.Landmark;

            /**
             * Encodes the specified Landmark message. Does not implicitly {@link apollo.routing.Landmark.verify|verify} messages.
             * @param message Landmark message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.ILandmark, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Landmark message, length delimited. Does not implicitly {@link apollo.routing.Landmark.verify|verify} messages.
             * @param message Landmark message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.ILandmark, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Landmark message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Landmark
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.Landmark;

            /**
             * Decodes a Landmark message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Landmark
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.Landmark;

            /**
             * Verifies a Landmark message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Landmark message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Landmark
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.Landmark;

            /**
             * Creates a plain object from a Landmark message. Also converts values to other types if specified.
             * @param message Landmark
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.Landmark, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Landmark to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Landmark
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a POI. */
        interface IPOI {

            /** POI landmark */
            landmark?: (apollo.routing.ILandmark[]|null);
        }

        /** Represents a POI. */
        class POI implements IPOI {

            /**
             * Constructs a new POI.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.IPOI);

            /** POI landmark. */
            public landmark: apollo.routing.ILandmark[];

            /**
             * Creates a new POI instance using the specified properties.
             * @param [properties] Properties to set
             * @returns POI instance
             */
            public static create(properties?: apollo.routing.IPOI): apollo.routing.POI;

            /**
             * Encodes the specified POI message. Does not implicitly {@link apollo.routing.POI.verify|verify} messages.
             * @param message POI message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.IPOI, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified POI message, length delimited. Does not implicitly {@link apollo.routing.POI.verify|verify} messages.
             * @param message POI message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.IPOI, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a POI message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns POI
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.POI;

            /**
             * Decodes a POI message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns POI
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.POI;

            /**
             * Verifies a POI message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a POI message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns POI
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.POI;

            /**
             * Creates a plain object from a POI message. Also converts values to other types if specified.
             * @param message POI
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.POI, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this POI to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for POI
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoutingRequest. */
        interface IRoutingRequest {

            /** RoutingRequest header */
            header?: (apollo.common.IHeader|null);

            /** RoutingRequest waypoint */
            waypoint?: (apollo.routing.ILaneWaypoint[]|null);

            /** RoutingRequest blacklistedLane */
            blacklistedLane?: (apollo.routing.ILaneSegment[]|null);

            /** RoutingRequest blacklistedRoad */
            blacklistedRoad?: (string[]|null);

            /** RoutingRequest broadcast */
            broadcast?: (boolean|null);

            /** RoutingRequest parkingInfo */
            parkingInfo?: (apollo.routing.IParkingInfo|null);

            /** RoutingRequest isStartPoseSet */
            isStartPoseSet?: (boolean|null);
        }

        /** Represents a RoutingRequest. */
        class RoutingRequest implements IRoutingRequest {

            /**
             * Constructs a new RoutingRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.IRoutingRequest);

            /** RoutingRequest header. */
            public header?: (apollo.common.IHeader|null);

            /** RoutingRequest waypoint. */
            public waypoint: apollo.routing.ILaneWaypoint[];

            /** RoutingRequest blacklistedLane. */
            public blacklistedLane: apollo.routing.ILaneSegment[];

            /** RoutingRequest blacklistedRoad. */
            public blacklistedRoad: string[];

            /** RoutingRequest broadcast. */
            public broadcast: boolean;

            /** RoutingRequest parkingInfo. */
            public parkingInfo?: (apollo.routing.IParkingInfo|null);

            /** RoutingRequest isStartPoseSet. */
            public isStartPoseSet: boolean;

            /**
             * Creates a new RoutingRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoutingRequest instance
             */
            public static create(properties?: apollo.routing.IRoutingRequest): apollo.routing.RoutingRequest;

            /**
             * Encodes the specified RoutingRequest message. Does not implicitly {@link apollo.routing.RoutingRequest.verify|verify} messages.
             * @param message RoutingRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.IRoutingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoutingRequest message, length delimited. Does not implicitly {@link apollo.routing.RoutingRequest.verify|verify} messages.
             * @param message RoutingRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.IRoutingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoutingRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoutingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.RoutingRequest;

            /**
             * Decodes a RoutingRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoutingRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.RoutingRequest;

            /**
             * Verifies a RoutingRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoutingRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoutingRequest
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.RoutingRequest;

            /**
             * Creates a plain object from a RoutingRequest message. Also converts values to other types if specified.
             * @param message RoutingRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.RoutingRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoutingRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoutingRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoutingResponse. */
        interface IRoutingResponse {

            /** RoutingResponse header */
            header?: (apollo.common.IHeader|null);

            /** RoutingResponse road */
            road?: (apollo.routing.IRoadSegment[]|null);

            /** RoutingResponse measurement */
            measurement?: (apollo.routing.IMeasurement|null);

            /** RoutingResponse routingRequest */
            routingRequest?: (apollo.routing.IRoutingRequest|null);

            /** RoutingResponse mapVersion */
            mapVersion?: (Uint8Array|null);

            /** RoutingResponse status */
            status?: (apollo.common.IStatusPb|null);
        }

        /** Represents a RoutingResponse. */
        class RoutingResponse implements IRoutingResponse {

            /**
             * Constructs a new RoutingResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.routing.IRoutingResponse);

            /** RoutingResponse header. */
            public header?: (apollo.common.IHeader|null);

            /** RoutingResponse road. */
            public road: apollo.routing.IRoadSegment[];

            /** RoutingResponse measurement. */
            public measurement?: (apollo.routing.IMeasurement|null);

            /** RoutingResponse routingRequest. */
            public routingRequest?: (apollo.routing.IRoutingRequest|null);

            /** RoutingResponse mapVersion. */
            public mapVersion: Uint8Array;

            /** RoutingResponse status. */
            public status?: (apollo.common.IStatusPb|null);

            /**
             * Creates a new RoutingResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoutingResponse instance
             */
            public static create(properties?: apollo.routing.IRoutingResponse): apollo.routing.RoutingResponse;

            /**
             * Encodes the specified RoutingResponse message. Does not implicitly {@link apollo.routing.RoutingResponse.verify|verify} messages.
             * @param message RoutingResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.routing.IRoutingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoutingResponse message, length delimited. Does not implicitly {@link apollo.routing.RoutingResponse.verify|verify} messages.
             * @param message RoutingResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.routing.IRoutingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoutingResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoutingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.routing.RoutingResponse;

            /**
             * Decodes a RoutingResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoutingResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.routing.RoutingResponse;

            /**
             * Verifies a RoutingResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoutingResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoutingResponse
             */
            public static fromObject(object: { [k: string]: any }): apollo.routing.RoutingResponse;

            /**
             * Creates a plain object from a RoutingResponse message. Also converts values to other types if specified.
             * @param message RoutingResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.routing.RoutingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoutingResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoutingResponse
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace simulation. */
    namespace simulation {

        /** Properties of an AgentConfig. */
        interface IAgentConfig {

            /** AgentConfig id */
            id?: (number|null);

            /** AgentConfig description */
            description?: (string|null);

            /** AgentConfig width */
            width?: (number|null);

            /** AgentConfig length */
            length?: (number|null);

            /** AgentConfig height */
            height?: (number|null);

            /** AgentConfig type */
            type?: (apollo.simulation.AgentConfig.Type|null);

            /** AgentConfig appearTime */
            appearTime?: (number|null);

            /** AgentConfig disappearTime */
            disappearTime?: (number|null);

            /** AgentConfig trackedPoint */
            trackedPoint?: (apollo.simulation.AgentConfig.ITrackedPoint[]|null);

            /** AgentConfig motiontype */
            motiontype?: (apollo.simulation.AgentConfig.MotionType|null);

            /** AgentConfig distance */
            distance?: (number|null);

            /** AgentConfig startPosition */
            startPosition?: (apollo.simulation.AgentConfig.ITrackedPoint|null);

            /** AgentConfig endPosition */
            endPosition?: (apollo.simulation.AgentConfig.ITrackedPoint|null);

            /** AgentConfig startLane */
            startLane?: (string|null);

            /** AgentConfig endLane */
            endLane?: (string|null);

            /** AgentConfig triggerType */
            triggerType?: (apollo.simulation.AgentConfig.TriggerType|null);

            /** AgentConfig startDistance */
            startDistance?: (number|null);

            /** AgentConfig startTime */
            startTime?: (number|null);

            /** AgentConfig avoidRearEndCollision */
            avoidRearEndCollision?: (boolean|null);

            /** AgentConfig rearEndCollisionDistance */
            rearEndCollisionDistance?: (number|null);
        }

        /** Represents an AgentConfig. */
        class AgentConfig implements IAgentConfig {

            /**
             * Constructs a new AgentConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IAgentConfig);

            /** AgentConfig id. */
            public id: number;

            /** AgentConfig description. */
            public description: string;

            /** AgentConfig width. */
            public width: number;

            /** AgentConfig length. */
            public length: number;

            /** AgentConfig height. */
            public height: number;

            /** AgentConfig type. */
            public type: apollo.simulation.AgentConfig.Type;

            /** AgentConfig appearTime. */
            public appearTime: number;

            /** AgentConfig disappearTime. */
            public disappearTime: number;

            /** AgentConfig trackedPoint. */
            public trackedPoint: apollo.simulation.AgentConfig.ITrackedPoint[];

            /** AgentConfig motiontype. */
            public motiontype: apollo.simulation.AgentConfig.MotionType;

            /** AgentConfig distance. */
            public distance: number;

            /** AgentConfig startPosition. */
            public startPosition?: (apollo.simulation.AgentConfig.ITrackedPoint|null);

            /** AgentConfig endPosition. */
            public endPosition?: (apollo.simulation.AgentConfig.ITrackedPoint|null);

            /** AgentConfig startLane. */
            public startLane: string;

            /** AgentConfig endLane. */
            public endLane: string;

            /** AgentConfig triggerType. */
            public triggerType: apollo.simulation.AgentConfig.TriggerType;

            /** AgentConfig startDistance. */
            public startDistance: number;

            /** AgentConfig startTime. */
            public startTime: number;

            /** AgentConfig avoidRearEndCollision. */
            public avoidRearEndCollision: boolean;

            /** AgentConfig rearEndCollisionDistance. */
            public rearEndCollisionDistance: number;

            /**
             * Creates a new AgentConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AgentConfig instance
             */
            public static create(properties?: apollo.simulation.IAgentConfig): apollo.simulation.AgentConfig;

            /**
             * Encodes the specified AgentConfig message. Does not implicitly {@link apollo.simulation.AgentConfig.verify|verify} messages.
             * @param message AgentConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IAgentConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AgentConfig message, length delimited. Does not implicitly {@link apollo.simulation.AgentConfig.verify|verify} messages.
             * @param message AgentConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IAgentConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AgentConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AgentConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.AgentConfig;

            /**
             * Decodes an AgentConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AgentConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.AgentConfig;

            /**
             * Verifies an AgentConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AgentConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AgentConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.AgentConfig;

            /**
             * Creates a plain object from an AgentConfig message. Also converts values to other types if specified.
             * @param message AgentConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.AgentConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AgentConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AgentConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace AgentConfig {

            /** Type enum. */
            enum Type {
                VEHICLE = 0,
                BICYCLE = 1,
                PEDESTRIAN = 2,
                UNKNOWN_UNMOVABLE = 3,
                UNKNOWN_MOVABLE = 4,
                BIG_TRUCK = 5
            }

            /** Properties of a TrackedPoint. */
            interface ITrackedPoint {

                /** TrackedPoint x */
                x?: (number|null);

                /** TrackedPoint y */
                y?: (number|null);

                /** TrackedPoint heading */
                heading?: (number|null);

                /** TrackedPoint speed */
                speed?: (number|null);

                /** TrackedPoint acceleration */
                acceleration?: (number|null);
            }

            /** Represents a TrackedPoint. */
            class TrackedPoint implements ITrackedPoint {

                /**
                 * Constructs a new TrackedPoint.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.simulation.AgentConfig.ITrackedPoint);

                /** TrackedPoint x. */
                public x: number;

                /** TrackedPoint y. */
                public y: number;

                /** TrackedPoint heading. */
                public heading: number;

                /** TrackedPoint speed. */
                public speed: number;

                /** TrackedPoint acceleration. */
                public acceleration: number;

                /**
                 * Creates a new TrackedPoint instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TrackedPoint instance
                 */
                public static create(properties?: apollo.simulation.AgentConfig.ITrackedPoint): apollo.simulation.AgentConfig.TrackedPoint;

                /**
                 * Encodes the specified TrackedPoint message. Does not implicitly {@link apollo.simulation.AgentConfig.TrackedPoint.verify|verify} messages.
                 * @param message TrackedPoint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.simulation.AgentConfig.ITrackedPoint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TrackedPoint message, length delimited. Does not implicitly {@link apollo.simulation.AgentConfig.TrackedPoint.verify|verify} messages.
                 * @param message TrackedPoint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.simulation.AgentConfig.ITrackedPoint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TrackedPoint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TrackedPoint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.AgentConfig.TrackedPoint;

                /**
                 * Decodes a TrackedPoint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TrackedPoint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.AgentConfig.TrackedPoint;

                /**
                 * Verifies a TrackedPoint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TrackedPoint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TrackedPoint
                 */
                public static fromObject(object: { [k: string]: any }): apollo.simulation.AgentConfig.TrackedPoint;

                /**
                 * Creates a plain object from a TrackedPoint message. Also converts values to other types if specified.
                 * @param message TrackedPoint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.simulation.AgentConfig.TrackedPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TrackedPoint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TrackedPoint
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** MotionType enum. */
            enum MotionType {
                STATIC = 0,
                LANE_FOLLOW = 1,
                TRACKED = 2
            }

            /** TriggerType enum. */
            enum TriggerType {
                DISTANCE = 0,
                TIME = 1
            }
        }

        /** Properties of a Condition. */
        interface ICondition {

            /** Condition logicalCondition */
            logicalCondition?: (apollo.simulation.ILogicalCondition|null);

            /** Condition speedCondition */
            speedCondition?: (apollo.simulation.ISpeedCondition|null);

            /** Condition accelerationCondition */
            accelerationCondition?: (apollo.simulation.IAccelerationCondition|null);

            /** Condition jerkCondition */
            jerkCondition?: (apollo.simulation.IJerkCondition|null);

            /** Condition objectOverlapCondition */
            objectOverlapCondition?: (apollo.simulation.IObjectOverlapCondition|null);

            /** Condition regionOverlapCondition */
            regionOverlapCondition?: (apollo.simulation.IRegionOverlapCondition|null);

            /** Condition regionOverlapLwCondition */
            regionOverlapLwCondition?: (apollo.simulation.IRegionOverlapLWCondition|null);

            /** Condition spinCondition */
            spinCondition?: (apollo.simulation.ISpinCondition|null);

            /** Condition onRoadCondition */
            onRoadCondition?: (apollo.simulation.IOnRoadCondition|null);

            /** Condition runRedLightCondition */
            runRedLightCondition?: (apollo.simulation.IRunRedLightCondition|null);

            /** Condition changeLaneAtJunctionCondition */
            changeLaneAtJunctionCondition?: (apollo.simulation.IChangeLaneAtJunctionCondition|null);

            /** Condition routingCondition */
            routingCondition?: (apollo.simulation.IRoutingCondition|null);

            /** Condition crosswalkYieldCondition */
            crosswalkYieldCondition?: (apollo.simulation.ICrosswalkYieldCondition|null);

            /** Condition abnormalStopCondition */
            abnormalStopCondition?: (apollo.simulation.IAbnormalStopCondition|null);

            /** Condition brakeTapCondition */
            brakeTapCondition?: (apollo.simulation.IBrakeTapCondition|null);

            /** Condition runStopSignCondition */
            runStopSignCondition?: (apollo.simulation.IRunStopSignCondition|null);

            /** Condition checkpointCondition */
            checkpointCondition?: (apollo.simulation.ICheckpointCondition|null);

            /** Condition distToEndCondition */
            distToEndCondition?: (apollo.simulation.IDistToEndCondition|null);

            /** Condition distToLaneCenterCondition */
            distToLaneCenterCondition?: (apollo.simulation.IDistToLaneCenterCondition|null);

            /** Condition crosswalkStopCondition */
            crosswalkStopCondition?: (apollo.simulation.ICrosswalkStopCondition|null);

            /** Condition redLightStopCondition */
            redLightStopCondition?: (apollo.simulation.IRedLightStopCondition|null);

            /** Condition speedbumpLimitCondition */
            speedbumpLimitCondition?: (apollo.simulation.ISpeedbumpLimitCondition|null);

            /** Condition workingZoneAvoidLimitCondition */
            workingZoneAvoidLimitCondition?: (apollo.simulation.IWorkingZoneAvoidLimitCondition|null);

            /** Condition limitedTimeParkingCondition */
            limitedTimeParkingCondition?: (apollo.simulation.ILimitedTimeParkingCondition|null);

            /** Condition followAndBypassCondition */
            followAndBypassCondition?: (apollo.simulation.IFollowAndBypassCondition|null);

            /** Condition obstacleBypassCondition */
            obstacleBypassCondition?: (apollo.simulation.IObstacleBypassCondition|null);

            /** Condition centripetalAccelerationCondition */
            centripetalAccelerationCondition?: (apollo.simulation.ICentripetalAccelerationCondition|null);

            /** Condition timeLimitCondition */
            timeLimitCondition?: (apollo.simulation.ITimeLimitCondition|null);

            /** Condition antiCheatingCondition */
            antiCheatingCondition?: (apollo.simulation.IAntiCheatingCondition|null);

            /** Condition keyPointCondition */
            keyPointCondition?: (apollo.simulation.IKeyPointCondition|null);

            /** Condition gradePlanning */
            gradePlanning?: (apollo.simulation.IGradePlanning|null);
        }

        /** Represents a Condition. */
        class Condition implements ICondition {

            /**
             * Constructs a new Condition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ICondition);

            /** Condition logicalCondition. */
            public logicalCondition?: (apollo.simulation.ILogicalCondition|null);

            /** Condition speedCondition. */
            public speedCondition?: (apollo.simulation.ISpeedCondition|null);

            /** Condition accelerationCondition. */
            public accelerationCondition?: (apollo.simulation.IAccelerationCondition|null);

            /** Condition jerkCondition. */
            public jerkCondition?: (apollo.simulation.IJerkCondition|null);

            /** Condition objectOverlapCondition. */
            public objectOverlapCondition?: (apollo.simulation.IObjectOverlapCondition|null);

            /** Condition regionOverlapCondition. */
            public regionOverlapCondition?: (apollo.simulation.IRegionOverlapCondition|null);

            /** Condition regionOverlapLwCondition. */
            public regionOverlapLwCondition?: (apollo.simulation.IRegionOverlapLWCondition|null);

            /** Condition spinCondition. */
            public spinCondition?: (apollo.simulation.ISpinCondition|null);

            /** Condition onRoadCondition. */
            public onRoadCondition?: (apollo.simulation.IOnRoadCondition|null);

            /** Condition runRedLightCondition. */
            public runRedLightCondition?: (apollo.simulation.IRunRedLightCondition|null);

            /** Condition changeLaneAtJunctionCondition. */
            public changeLaneAtJunctionCondition?: (apollo.simulation.IChangeLaneAtJunctionCondition|null);

            /** Condition routingCondition. */
            public routingCondition?: (apollo.simulation.IRoutingCondition|null);

            /** Condition crosswalkYieldCondition. */
            public crosswalkYieldCondition?: (apollo.simulation.ICrosswalkYieldCondition|null);

            /** Condition abnormalStopCondition. */
            public abnormalStopCondition?: (apollo.simulation.IAbnormalStopCondition|null);

            /** Condition brakeTapCondition. */
            public brakeTapCondition?: (apollo.simulation.IBrakeTapCondition|null);

            /** Condition runStopSignCondition. */
            public runStopSignCondition?: (apollo.simulation.IRunStopSignCondition|null);

            /** Condition checkpointCondition. */
            public checkpointCondition?: (apollo.simulation.ICheckpointCondition|null);

            /** Condition distToEndCondition. */
            public distToEndCondition?: (apollo.simulation.IDistToEndCondition|null);

            /** Condition distToLaneCenterCondition. */
            public distToLaneCenterCondition?: (apollo.simulation.IDistToLaneCenterCondition|null);

            /** Condition crosswalkStopCondition. */
            public crosswalkStopCondition?: (apollo.simulation.ICrosswalkStopCondition|null);

            /** Condition redLightStopCondition. */
            public redLightStopCondition?: (apollo.simulation.IRedLightStopCondition|null);

            /** Condition speedbumpLimitCondition. */
            public speedbumpLimitCondition?: (apollo.simulation.ISpeedbumpLimitCondition|null);

            /** Condition workingZoneAvoidLimitCondition. */
            public workingZoneAvoidLimitCondition?: (apollo.simulation.IWorkingZoneAvoidLimitCondition|null);

            /** Condition limitedTimeParkingCondition. */
            public limitedTimeParkingCondition?: (apollo.simulation.ILimitedTimeParkingCondition|null);

            /** Condition followAndBypassCondition. */
            public followAndBypassCondition?: (apollo.simulation.IFollowAndBypassCondition|null);

            /** Condition obstacleBypassCondition. */
            public obstacleBypassCondition?: (apollo.simulation.IObstacleBypassCondition|null);

            /** Condition centripetalAccelerationCondition. */
            public centripetalAccelerationCondition?: (apollo.simulation.ICentripetalAccelerationCondition|null);

            /** Condition timeLimitCondition. */
            public timeLimitCondition?: (apollo.simulation.ITimeLimitCondition|null);

            /** Condition antiCheatingCondition. */
            public antiCheatingCondition?: (apollo.simulation.IAntiCheatingCondition|null);

            /** Condition keyPointCondition. */
            public keyPointCondition?: (apollo.simulation.IKeyPointCondition|null);

            /** Condition gradePlanning. */
            public gradePlanning?: (apollo.simulation.IGradePlanning|null);

            /** Condition condition. */
            public condition?: ("logicalCondition"|"speedCondition"|"accelerationCondition"|"jerkCondition"|"objectOverlapCondition"|"regionOverlapCondition"|"regionOverlapLwCondition"|"spinCondition"|"onRoadCondition"|"runRedLightCondition"|"changeLaneAtJunctionCondition"|"routingCondition"|"crosswalkYieldCondition"|"abnormalStopCondition"|"brakeTapCondition"|"runStopSignCondition"|"checkpointCondition"|"distToEndCondition"|"distToLaneCenterCondition"|"crosswalkStopCondition"|"redLightStopCondition"|"speedbumpLimitCondition"|"workingZoneAvoidLimitCondition"|"limitedTimeParkingCondition"|"followAndBypassCondition"|"obstacleBypassCondition"|"centripetalAccelerationCondition"|"timeLimitCondition"|"antiCheatingCondition"|"keyPointCondition");

            /**
             * Creates a new Condition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Condition instance
             */
            public static create(properties?: apollo.simulation.ICondition): apollo.simulation.Condition;

            /**
             * Encodes the specified Condition message. Does not implicitly {@link apollo.simulation.Condition.verify|verify} messages.
             * @param message Condition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ICondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Condition message, length delimited. Does not implicitly {@link apollo.simulation.Condition.verify|verify} messages.
             * @param message Condition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ICondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Condition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Condition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.Condition;

            /**
             * Decodes a Condition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Condition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.Condition;

            /**
             * Verifies a Condition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Condition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Condition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.Condition;

            /**
             * Creates a plain object from a Condition message. Also converts values to other types if specified.
             * @param message Condition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.Condition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Condition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Condition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a GradePlanning. */
        interface IGradePlanning {

            /** GradePlanning duration */
            duration?: (number|null);

            /** GradePlanning updateObstacles */
            updateObstacles?: (boolean|null);

            /** GradePlanning usePlanningAsHistory */
            usePlanningAsHistory?: (boolean|null);
        }

        /** Represents a GradePlanning. */
        class GradePlanning implements IGradePlanning {

            /**
             * Constructs a new GradePlanning.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IGradePlanning);

            /** GradePlanning duration. */
            public duration: number;

            /** GradePlanning updateObstacles. */
            public updateObstacles: boolean;

            /** GradePlanning usePlanningAsHistory. */
            public usePlanningAsHistory: boolean;

            /**
             * Creates a new GradePlanning instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GradePlanning instance
             */
            public static create(properties?: apollo.simulation.IGradePlanning): apollo.simulation.GradePlanning;

            /**
             * Encodes the specified GradePlanning message. Does not implicitly {@link apollo.simulation.GradePlanning.verify|verify} messages.
             * @param message GradePlanning message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IGradePlanning, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GradePlanning message, length delimited. Does not implicitly {@link apollo.simulation.GradePlanning.verify|verify} messages.
             * @param message GradePlanning message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IGradePlanning, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GradePlanning message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GradePlanning
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.GradePlanning;

            /**
             * Decodes a GradePlanning message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GradePlanning
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.GradePlanning;

            /**
             * Verifies a GradePlanning message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GradePlanning message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GradePlanning
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.GradePlanning;

            /**
             * Creates a plain object from a GradePlanning message. Also converts values to other types if specified.
             * @param message GradePlanning
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.GradePlanning, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GradePlanning to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for GradePlanning
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LogicalCondition. */
        interface ILogicalCondition {

            /** LogicalCondition operatorType */
            operatorType?: (apollo.simulation.LogicalCondition.OperatorType|null);

            /** LogicalCondition subCondition */
            subCondition?: (apollo.simulation.ICondition[]|null);
        }

        /** Represents a LogicalCondition. */
        class LogicalCondition implements ILogicalCondition {

            /**
             * Constructs a new LogicalCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ILogicalCondition);

            /** LogicalCondition operatorType. */
            public operatorType: apollo.simulation.LogicalCondition.OperatorType;

            /** LogicalCondition subCondition. */
            public subCondition: apollo.simulation.ICondition[];

            /**
             * Creates a new LogicalCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LogicalCondition instance
             */
            public static create(properties?: apollo.simulation.ILogicalCondition): apollo.simulation.LogicalCondition;

            /**
             * Encodes the specified LogicalCondition message. Does not implicitly {@link apollo.simulation.LogicalCondition.verify|verify} messages.
             * @param message LogicalCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ILogicalCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LogicalCondition message, length delimited. Does not implicitly {@link apollo.simulation.LogicalCondition.verify|verify} messages.
             * @param message LogicalCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ILogicalCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LogicalCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LogicalCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.LogicalCondition;

            /**
             * Decodes a LogicalCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LogicalCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.LogicalCondition;

            /**
             * Verifies a LogicalCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LogicalCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LogicalCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.LogicalCondition;

            /**
             * Creates a plain object from a LogicalCondition message. Also converts values to other types if specified.
             * @param message LogicalCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.LogicalCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LogicalCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LogicalCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace LogicalCondition {

            /** OperatorType enum. */
            enum OperatorType {
                UNKNOWN = 0,
                NOT = 1,
                AND = 2,
                OR = 3,
                IMPLY = 4,
                XOR = 5
            }
        }

        /** Properties of a SpeedCondition. */
        interface ISpeedCondition {

            /** SpeedCondition name */
            name?: (string|null);

            /** SpeedCondition minSpeed */
            minSpeed?: (number|null);

            /** SpeedCondition maxSpeed */
            maxSpeed?: (number|null);

            /** SpeedCondition useScore */
            useScore?: (boolean|null);

            /** SpeedCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents a SpeedCondition. */
        class SpeedCondition implements ISpeedCondition {

            /**
             * Constructs a new SpeedCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ISpeedCondition);

            /** SpeedCondition name. */
            public name: string;

            /** SpeedCondition minSpeed. */
            public minSpeed: number;

            /** SpeedCondition maxSpeed. */
            public maxSpeed: number;

            /** SpeedCondition useScore. */
            public useScore: boolean;

            /** SpeedCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new SpeedCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedCondition instance
             */
            public static create(properties?: apollo.simulation.ISpeedCondition): apollo.simulation.SpeedCondition;

            /**
             * Encodes the specified SpeedCondition message. Does not implicitly {@link apollo.simulation.SpeedCondition.verify|verify} messages.
             * @param message SpeedCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ISpeedCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedCondition message, length delimited. Does not implicitly {@link apollo.simulation.SpeedCondition.verify|verify} messages.
             * @param message SpeedCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ISpeedCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.SpeedCondition;

            /**
             * Decodes a SpeedCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.SpeedCondition;

            /**
             * Verifies a SpeedCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.SpeedCondition;

            /**
             * Creates a plain object from a SpeedCondition message. Also converts values to other types if specified.
             * @param message SpeedCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.SpeedCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CentripetalAccelerationCondition. */
        interface ICentripetalAccelerationCondition {

            /** CentripetalAccelerationCondition name */
            name?: (string|null);

            /** CentripetalAccelerationCondition maxCentripetalAcceleration */
            maxCentripetalAcceleration?: (number|null);

            /** CentripetalAccelerationCondition useScore */
            useScore?: (boolean|null);

            /** CentripetalAccelerationCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents a CentripetalAccelerationCondition. */
        class CentripetalAccelerationCondition implements ICentripetalAccelerationCondition {

            /**
             * Constructs a new CentripetalAccelerationCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ICentripetalAccelerationCondition);

            /** CentripetalAccelerationCondition name. */
            public name: string;

            /** CentripetalAccelerationCondition maxCentripetalAcceleration. */
            public maxCentripetalAcceleration: number;

            /** CentripetalAccelerationCondition useScore. */
            public useScore: boolean;

            /** CentripetalAccelerationCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new CentripetalAccelerationCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CentripetalAccelerationCondition instance
             */
            public static create(properties?: apollo.simulation.ICentripetalAccelerationCondition): apollo.simulation.CentripetalAccelerationCondition;

            /**
             * Encodes the specified CentripetalAccelerationCondition message. Does not implicitly {@link apollo.simulation.CentripetalAccelerationCondition.verify|verify} messages.
             * @param message CentripetalAccelerationCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ICentripetalAccelerationCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CentripetalAccelerationCondition message, length delimited. Does not implicitly {@link apollo.simulation.CentripetalAccelerationCondition.verify|verify} messages.
             * @param message CentripetalAccelerationCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ICentripetalAccelerationCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CentripetalAccelerationCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CentripetalAccelerationCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.CentripetalAccelerationCondition;

            /**
             * Decodes a CentripetalAccelerationCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CentripetalAccelerationCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.CentripetalAccelerationCondition;

            /**
             * Verifies a CentripetalAccelerationCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CentripetalAccelerationCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CentripetalAccelerationCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.CentripetalAccelerationCondition;

            /**
             * Creates a plain object from a CentripetalAccelerationCondition message. Also converts values to other types if specified.
             * @param message CentripetalAccelerationCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.CentripetalAccelerationCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CentripetalAccelerationCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CentripetalAccelerationCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an AccelerationCondition. */
        interface IAccelerationCondition {

            /** AccelerationCondition name */
            name?: (string|null);

            /** AccelerationCondition minAcceleration */
            minAcceleration?: (number|null);

            /** AccelerationCondition maxAcceleration */
            maxAcceleration?: (number|null);

            /** AccelerationCondition useScore */
            useScore?: (boolean|null);

            /** AccelerationCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents an AccelerationCondition. */
        class AccelerationCondition implements IAccelerationCondition {

            /**
             * Constructs a new AccelerationCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IAccelerationCondition);

            /** AccelerationCondition name. */
            public name: string;

            /** AccelerationCondition minAcceleration. */
            public minAcceleration: number;

            /** AccelerationCondition maxAcceleration. */
            public maxAcceleration: number;

            /** AccelerationCondition useScore. */
            public useScore: boolean;

            /** AccelerationCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new AccelerationCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AccelerationCondition instance
             */
            public static create(properties?: apollo.simulation.IAccelerationCondition): apollo.simulation.AccelerationCondition;

            /**
             * Encodes the specified AccelerationCondition message. Does not implicitly {@link apollo.simulation.AccelerationCondition.verify|verify} messages.
             * @param message AccelerationCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IAccelerationCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AccelerationCondition message, length delimited. Does not implicitly {@link apollo.simulation.AccelerationCondition.verify|verify} messages.
             * @param message AccelerationCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IAccelerationCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AccelerationCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AccelerationCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.AccelerationCondition;

            /**
             * Decodes an AccelerationCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AccelerationCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.AccelerationCondition;

            /**
             * Verifies an AccelerationCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AccelerationCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AccelerationCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.AccelerationCondition;

            /**
             * Creates a plain object from an AccelerationCondition message. Also converts values to other types if specified.
             * @param message AccelerationCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.AccelerationCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AccelerationCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AccelerationCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a JerkCondition. */
        interface IJerkCondition {

            /** JerkCondition name */
            name?: (string|null);

            /** JerkCondition minJerk */
            minJerk?: (number|null);

            /** JerkCondition maxJerk */
            maxJerk?: (number|null);
        }

        /** Represents a JerkCondition. */
        class JerkCondition implements IJerkCondition {

            /**
             * Constructs a new JerkCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IJerkCondition);

            /** JerkCondition name. */
            public name: string;

            /** JerkCondition minJerk. */
            public minJerk: number;

            /** JerkCondition maxJerk. */
            public maxJerk: number;

            /**
             * Creates a new JerkCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns JerkCondition instance
             */
            public static create(properties?: apollo.simulation.IJerkCondition): apollo.simulation.JerkCondition;

            /**
             * Encodes the specified JerkCondition message. Does not implicitly {@link apollo.simulation.JerkCondition.verify|verify} messages.
             * @param message JerkCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IJerkCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified JerkCondition message, length delimited. Does not implicitly {@link apollo.simulation.JerkCondition.verify|verify} messages.
             * @param message JerkCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IJerkCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a JerkCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns JerkCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.JerkCondition;

            /**
             * Decodes a JerkCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns JerkCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.JerkCondition;

            /**
             * Verifies a JerkCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a JerkCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns JerkCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.JerkCondition;

            /**
             * Creates a plain object from a JerkCondition message. Also converts values to other types if specified.
             * @param message JerkCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.JerkCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this JerkCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for JerkCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpinCondition. */
        interface ISpinCondition {

            /** SpinCondition name */
            name?: (string|null);

            /** SpinCondition minSpin */
            minSpin?: (number|null);

            /** SpinCondition maxSpin */
            maxSpin?: (number|null);
        }

        /** Represents a SpinCondition. */
        class SpinCondition implements ISpinCondition {

            /**
             * Constructs a new SpinCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ISpinCondition);

            /** SpinCondition name. */
            public name: string;

            /** SpinCondition minSpin. */
            public minSpin: number;

            /** SpinCondition maxSpin. */
            public maxSpin: number;

            /**
             * Creates a new SpinCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpinCondition instance
             */
            public static create(properties?: apollo.simulation.ISpinCondition): apollo.simulation.SpinCondition;

            /**
             * Encodes the specified SpinCondition message. Does not implicitly {@link apollo.simulation.SpinCondition.verify|verify} messages.
             * @param message SpinCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ISpinCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpinCondition message, length delimited. Does not implicitly {@link apollo.simulation.SpinCondition.verify|verify} messages.
             * @param message SpinCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ISpinCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpinCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpinCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.SpinCondition;

            /**
             * Decodes a SpinCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpinCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.SpinCondition;

            /**
             * Verifies a SpinCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpinCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpinCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.SpinCondition;

            /**
             * Creates a plain object from a SpinCondition message. Also converts values to other types if specified.
             * @param message SpinCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.SpinCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpinCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpinCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObjectOverlapCondition. */
        interface IObjectOverlapCondition {

            /** ObjectOverlapCondition sourceObjectIds */
            sourceObjectIds?: (string|null);

            /** ObjectOverlapCondition targetObjectIds */
            targetObjectIds?: (string|null);

            /** ObjectOverlapCondition distance */
            distance?: (number|null);

            /** ObjectOverlapCondition direction */
            direction?: (apollo.simulation.ObjectOverlapCondition.DirectionType|null);

            /** ObjectOverlapCondition ignoreObjectIds */
            ignoreObjectIds?: (string[]|null);

            /** ObjectOverlapCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents an ObjectOverlapCondition. */
        class ObjectOverlapCondition implements IObjectOverlapCondition {

            /**
             * Constructs a new ObjectOverlapCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IObjectOverlapCondition);

            /** ObjectOverlapCondition sourceObjectIds. */
            public sourceObjectIds: string;

            /** ObjectOverlapCondition targetObjectIds. */
            public targetObjectIds: string;

            /** ObjectOverlapCondition distance. */
            public distance: number;

            /** ObjectOverlapCondition direction. */
            public direction: apollo.simulation.ObjectOverlapCondition.DirectionType;

            /** ObjectOverlapCondition ignoreObjectIds. */
            public ignoreObjectIds: string[];

            /** ObjectOverlapCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new ObjectOverlapCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectOverlapCondition instance
             */
            public static create(properties?: apollo.simulation.IObjectOverlapCondition): apollo.simulation.ObjectOverlapCondition;

            /**
             * Encodes the specified ObjectOverlapCondition message. Does not implicitly {@link apollo.simulation.ObjectOverlapCondition.verify|verify} messages.
             * @param message ObjectOverlapCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IObjectOverlapCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectOverlapCondition message, length delimited. Does not implicitly {@link apollo.simulation.ObjectOverlapCondition.verify|verify} messages.
             * @param message ObjectOverlapCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IObjectOverlapCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectOverlapCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectOverlapCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.ObjectOverlapCondition;

            /**
             * Decodes an ObjectOverlapCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectOverlapCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.ObjectOverlapCondition;

            /**
             * Verifies an ObjectOverlapCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectOverlapCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectOverlapCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.ObjectOverlapCondition;

            /**
             * Creates a plain object from an ObjectOverlapCondition message. Also converts values to other types if specified.
             * @param message ObjectOverlapCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.ObjectOverlapCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectOverlapCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObjectOverlapCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace ObjectOverlapCondition {

            /** DirectionType enum. */
            enum DirectionType {
                EXCLUDE_BACK = 0,
                INCLUDE_BACK = 1
            }
        }

        /** Properties of a RegionOverlapCondition. */
        interface IRegionOverlapCondition {

            /** RegionOverlapCondition objectIds */
            objectIds?: (string|null);

            /** RegionOverlapCondition regionCornerXy */
            regionCornerXy?: (number[]|null);

            /** RegionOverlapCondition requireFullyContain */
            requireFullyContain?: (boolean|null);

            /** RegionOverlapCondition heading */
            heading?: (number|null);

            /** RegionOverlapCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents a RegionOverlapCondition. */
        class RegionOverlapCondition implements IRegionOverlapCondition {

            /**
             * Constructs a new RegionOverlapCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IRegionOverlapCondition);

            /** RegionOverlapCondition objectIds. */
            public objectIds: string;

            /** RegionOverlapCondition regionCornerXy. */
            public regionCornerXy: number[];

            /** RegionOverlapCondition requireFullyContain. */
            public requireFullyContain: boolean;

            /** RegionOverlapCondition heading. */
            public heading: number;

            /** RegionOverlapCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new RegionOverlapCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RegionOverlapCondition instance
             */
            public static create(properties?: apollo.simulation.IRegionOverlapCondition): apollo.simulation.RegionOverlapCondition;

            /**
             * Encodes the specified RegionOverlapCondition message. Does not implicitly {@link apollo.simulation.RegionOverlapCondition.verify|verify} messages.
             * @param message RegionOverlapCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IRegionOverlapCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RegionOverlapCondition message, length delimited. Does not implicitly {@link apollo.simulation.RegionOverlapCondition.verify|verify} messages.
             * @param message RegionOverlapCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IRegionOverlapCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RegionOverlapCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RegionOverlapCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.RegionOverlapCondition;

            /**
             * Decodes a RegionOverlapCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RegionOverlapCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.RegionOverlapCondition;

            /**
             * Verifies a RegionOverlapCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RegionOverlapCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RegionOverlapCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.RegionOverlapCondition;

            /**
             * Creates a plain object from a RegionOverlapCondition message. Also converts values to other types if specified.
             * @param message RegionOverlapCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.RegionOverlapCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RegionOverlapCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RegionOverlapCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RegionOverlapLWCondition. */
        interface IRegionOverlapLWCondition {

            /** RegionOverlapLWCondition objectIds */
            objectIds?: (string|null);

            /** RegionOverlapLWCondition x */
            x?: (number|null);

            /** RegionOverlapLWCondition y */
            y?: (number|null);

            /** RegionOverlapLWCondition length */
            length?: (number|null);

            /** RegionOverlapLWCondition width */
            width?: (number|null);

            /** RegionOverlapLWCondition requireFullyContain */
            requireFullyContain?: (boolean|null);

            /** RegionOverlapLWCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents a RegionOverlapLWCondition. */
        class RegionOverlapLWCondition implements IRegionOverlapLWCondition {

            /**
             * Constructs a new RegionOverlapLWCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IRegionOverlapLWCondition);

            /** RegionOverlapLWCondition objectIds. */
            public objectIds: string;

            /** RegionOverlapLWCondition x. */
            public x: number;

            /** RegionOverlapLWCondition y. */
            public y: number;

            /** RegionOverlapLWCondition length. */
            public length: number;

            /** RegionOverlapLWCondition width. */
            public width: number;

            /** RegionOverlapLWCondition requireFullyContain. */
            public requireFullyContain: boolean;

            /** RegionOverlapLWCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new RegionOverlapLWCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RegionOverlapLWCondition instance
             */
            public static create(properties?: apollo.simulation.IRegionOverlapLWCondition): apollo.simulation.RegionOverlapLWCondition;

            /**
             * Encodes the specified RegionOverlapLWCondition message. Does not implicitly {@link apollo.simulation.RegionOverlapLWCondition.verify|verify} messages.
             * @param message RegionOverlapLWCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IRegionOverlapLWCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RegionOverlapLWCondition message, length delimited. Does not implicitly {@link apollo.simulation.RegionOverlapLWCondition.verify|verify} messages.
             * @param message RegionOverlapLWCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IRegionOverlapLWCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RegionOverlapLWCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RegionOverlapLWCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.RegionOverlapLWCondition;

            /**
             * Decodes a RegionOverlapLWCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RegionOverlapLWCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.RegionOverlapLWCondition;

            /**
             * Verifies a RegionOverlapLWCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RegionOverlapLWCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RegionOverlapLWCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.RegionOverlapLWCondition;

            /**
             * Creates a plain object from a RegionOverlapLWCondition message. Also converts values to other types if specified.
             * @param message RegionOverlapLWCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.RegionOverlapLWCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RegionOverlapLWCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RegionOverlapLWCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an OnRoadCondition. */
        interface IOnRoadCondition {

            /** OnRoadCondition useRoadBoundary */
            useRoadBoundary?: (boolean|null);

            /** OnRoadCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents an OnRoadCondition. */
        class OnRoadCondition implements IOnRoadCondition {

            /**
             * Constructs a new OnRoadCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IOnRoadCondition);

            /** OnRoadCondition useRoadBoundary. */
            public useRoadBoundary: boolean;

            /** OnRoadCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new OnRoadCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OnRoadCondition instance
             */
            public static create(properties?: apollo.simulation.IOnRoadCondition): apollo.simulation.OnRoadCondition;

            /**
             * Encodes the specified OnRoadCondition message. Does not implicitly {@link apollo.simulation.OnRoadCondition.verify|verify} messages.
             * @param message OnRoadCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IOnRoadCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OnRoadCondition message, length delimited. Does not implicitly {@link apollo.simulation.OnRoadCondition.verify|verify} messages.
             * @param message OnRoadCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IOnRoadCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OnRoadCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OnRoadCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.OnRoadCondition;

            /**
             * Decodes an OnRoadCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OnRoadCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.OnRoadCondition;

            /**
             * Verifies an OnRoadCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OnRoadCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OnRoadCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.OnRoadCondition;

            /**
             * Creates a plain object from an OnRoadCondition message. Also converts values to other types if specified.
             * @param message OnRoadCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.OnRoadCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OnRoadCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for OnRoadCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RunRedLightCondition. */
        interface IRunRedLightCondition {

            /** RunRedLightCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents a RunRedLightCondition. */
        class RunRedLightCondition implements IRunRedLightCondition {

            /**
             * Constructs a new RunRedLightCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IRunRedLightCondition);

            /** RunRedLightCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new RunRedLightCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RunRedLightCondition instance
             */
            public static create(properties?: apollo.simulation.IRunRedLightCondition): apollo.simulation.RunRedLightCondition;

            /**
             * Encodes the specified RunRedLightCondition message. Does not implicitly {@link apollo.simulation.RunRedLightCondition.verify|verify} messages.
             * @param message RunRedLightCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IRunRedLightCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RunRedLightCondition message, length delimited. Does not implicitly {@link apollo.simulation.RunRedLightCondition.verify|verify} messages.
             * @param message RunRedLightCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IRunRedLightCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RunRedLightCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RunRedLightCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.RunRedLightCondition;

            /**
             * Decodes a RunRedLightCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RunRedLightCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.RunRedLightCondition;

            /**
             * Verifies a RunRedLightCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RunRedLightCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RunRedLightCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.RunRedLightCondition;

            /**
             * Creates a plain object from a RunRedLightCondition message. Also converts values to other types if specified.
             * @param message RunRedLightCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.RunRedLightCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RunRedLightCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RunRedLightCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RedLightStopCondition. */
        interface IRedLightStopCondition {

            /** RedLightStopCondition minDistance */
            minDistance?: (number|null);

            /** RedLightStopCondition maxDistance */
            maxDistance?: (number|null);

            /** RedLightStopCondition useScore */
            useScore?: (boolean|null);

            /** RedLightStopCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents a RedLightStopCondition. */
        class RedLightStopCondition implements IRedLightStopCondition {

            /**
             * Constructs a new RedLightStopCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IRedLightStopCondition);

            /** RedLightStopCondition minDistance. */
            public minDistance: number;

            /** RedLightStopCondition maxDistance. */
            public maxDistance: number;

            /** RedLightStopCondition useScore. */
            public useScore: boolean;

            /** RedLightStopCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new RedLightStopCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RedLightStopCondition instance
             */
            public static create(properties?: apollo.simulation.IRedLightStopCondition): apollo.simulation.RedLightStopCondition;

            /**
             * Encodes the specified RedLightStopCondition message. Does not implicitly {@link apollo.simulation.RedLightStopCondition.verify|verify} messages.
             * @param message RedLightStopCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IRedLightStopCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RedLightStopCondition message, length delimited. Does not implicitly {@link apollo.simulation.RedLightStopCondition.verify|verify} messages.
             * @param message RedLightStopCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IRedLightStopCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RedLightStopCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RedLightStopCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.RedLightStopCondition;

            /**
             * Decodes a RedLightStopCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RedLightStopCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.RedLightStopCondition;

            /**
             * Verifies a RedLightStopCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RedLightStopCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RedLightStopCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.RedLightStopCondition;

            /**
             * Creates a plain object from a RedLightStopCondition message. Also converts values to other types if specified.
             * @param message RedLightStopCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.RedLightStopCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RedLightStopCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RedLightStopCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ChangeLaneAtJunctionCondition. */
        interface IChangeLaneAtJunctionCondition {
        }

        /** Represents a ChangeLaneAtJunctionCondition. */
        class ChangeLaneAtJunctionCondition implements IChangeLaneAtJunctionCondition {

            /**
             * Constructs a new ChangeLaneAtJunctionCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IChangeLaneAtJunctionCondition);

            /**
             * Creates a new ChangeLaneAtJunctionCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChangeLaneAtJunctionCondition instance
             */
            public static create(properties?: apollo.simulation.IChangeLaneAtJunctionCondition): apollo.simulation.ChangeLaneAtJunctionCondition;

            /**
             * Encodes the specified ChangeLaneAtJunctionCondition message. Does not implicitly {@link apollo.simulation.ChangeLaneAtJunctionCondition.verify|verify} messages.
             * @param message ChangeLaneAtJunctionCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IChangeLaneAtJunctionCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChangeLaneAtJunctionCondition message, length delimited. Does not implicitly {@link apollo.simulation.ChangeLaneAtJunctionCondition.verify|verify} messages.
             * @param message ChangeLaneAtJunctionCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IChangeLaneAtJunctionCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChangeLaneAtJunctionCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChangeLaneAtJunctionCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.ChangeLaneAtJunctionCondition;

            /**
             * Decodes a ChangeLaneAtJunctionCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChangeLaneAtJunctionCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.ChangeLaneAtJunctionCondition;

            /**
             * Verifies a ChangeLaneAtJunctionCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChangeLaneAtJunctionCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChangeLaneAtJunctionCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.ChangeLaneAtJunctionCondition;

            /**
             * Creates a plain object from a ChangeLaneAtJunctionCondition message. Also converts values to other types if specified.
             * @param message ChangeLaneAtJunctionCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.ChangeLaneAtJunctionCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChangeLaneAtJunctionCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ChangeLaneAtJunctionCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RoutingCondition. */
        interface IRoutingCondition {
        }

        /** Represents a RoutingCondition. */
        class RoutingCondition implements IRoutingCondition {

            /**
             * Constructs a new RoutingCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IRoutingCondition);

            /**
             * Creates a new RoutingCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoutingCondition instance
             */
            public static create(properties?: apollo.simulation.IRoutingCondition): apollo.simulation.RoutingCondition;

            /**
             * Encodes the specified RoutingCondition message. Does not implicitly {@link apollo.simulation.RoutingCondition.verify|verify} messages.
             * @param message RoutingCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IRoutingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoutingCondition message, length delimited. Does not implicitly {@link apollo.simulation.RoutingCondition.verify|verify} messages.
             * @param message RoutingCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IRoutingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoutingCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoutingCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.RoutingCondition;

            /**
             * Decodes a RoutingCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoutingCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.RoutingCondition;

            /**
             * Verifies a RoutingCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoutingCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoutingCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.RoutingCondition;

            /**
             * Creates a plain object from a RoutingCondition message. Also converts values to other types if specified.
             * @param message RoutingCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.RoutingCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoutingCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoutingCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CrosswalkYieldCondition. */
        interface ICrosswalkYieldCondition {
        }

        /** Represents a CrosswalkYieldCondition. */
        class CrosswalkYieldCondition implements ICrosswalkYieldCondition {

            /**
             * Constructs a new CrosswalkYieldCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ICrosswalkYieldCondition);

            /**
             * Creates a new CrosswalkYieldCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CrosswalkYieldCondition instance
             */
            public static create(properties?: apollo.simulation.ICrosswalkYieldCondition): apollo.simulation.CrosswalkYieldCondition;

            /**
             * Encodes the specified CrosswalkYieldCondition message. Does not implicitly {@link apollo.simulation.CrosswalkYieldCondition.verify|verify} messages.
             * @param message CrosswalkYieldCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ICrosswalkYieldCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CrosswalkYieldCondition message, length delimited. Does not implicitly {@link apollo.simulation.CrosswalkYieldCondition.verify|verify} messages.
             * @param message CrosswalkYieldCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ICrosswalkYieldCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CrosswalkYieldCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrosswalkYieldCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.CrosswalkYieldCondition;

            /**
             * Decodes a CrosswalkYieldCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CrosswalkYieldCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.CrosswalkYieldCondition;

            /**
             * Verifies a CrosswalkYieldCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CrosswalkYieldCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CrosswalkYieldCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.CrosswalkYieldCondition;

            /**
             * Creates a plain object from a CrosswalkYieldCondition message. Also converts values to other types if specified.
             * @param message CrosswalkYieldCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.CrosswalkYieldCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CrosswalkYieldCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CrosswalkYieldCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CrosswalkStopCondition. */
        interface ICrosswalkStopCondition {

            /** CrosswalkStopCondition minDistance */
            minDistance?: (number|null);

            /** CrosswalkStopCondition maxDistance */
            maxDistance?: (number|null);

            /** CrosswalkStopCondition useScore */
            useScore?: (boolean|null);

            /** CrosswalkStopCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents a CrosswalkStopCondition. */
        class CrosswalkStopCondition implements ICrosswalkStopCondition {

            /**
             * Constructs a new CrosswalkStopCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ICrosswalkStopCondition);

            /** CrosswalkStopCondition minDistance. */
            public minDistance: number;

            /** CrosswalkStopCondition maxDistance. */
            public maxDistance: number;

            /** CrosswalkStopCondition useScore. */
            public useScore: boolean;

            /** CrosswalkStopCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new CrosswalkStopCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CrosswalkStopCondition instance
             */
            public static create(properties?: apollo.simulation.ICrosswalkStopCondition): apollo.simulation.CrosswalkStopCondition;

            /**
             * Encodes the specified CrosswalkStopCondition message. Does not implicitly {@link apollo.simulation.CrosswalkStopCondition.verify|verify} messages.
             * @param message CrosswalkStopCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ICrosswalkStopCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CrosswalkStopCondition message, length delimited. Does not implicitly {@link apollo.simulation.CrosswalkStopCondition.verify|verify} messages.
             * @param message CrosswalkStopCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ICrosswalkStopCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CrosswalkStopCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrosswalkStopCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.CrosswalkStopCondition;

            /**
             * Decodes a CrosswalkStopCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CrosswalkStopCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.CrosswalkStopCondition;

            /**
             * Verifies a CrosswalkStopCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CrosswalkStopCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CrosswalkStopCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.CrosswalkStopCondition;

            /**
             * Creates a plain object from a CrosswalkStopCondition message. Also converts values to other types if specified.
             * @param message CrosswalkStopCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.CrosswalkStopCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CrosswalkStopCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CrosswalkStopCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an AbnormalStopCondition. */
        interface IAbnormalStopCondition {

            /** AbnormalStopCondition duration */
            duration?: (number|null);

            /** AbnormalStopCondition distance */
            distance?: (number|null);

            /** AbnormalStopCondition x */
            x?: (number|null);

            /** AbnormalStopCondition y */
            y?: (number|null);
        }

        /** Represents an AbnormalStopCondition. */
        class AbnormalStopCondition implements IAbnormalStopCondition {

            /**
             * Constructs a new AbnormalStopCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IAbnormalStopCondition);

            /** AbnormalStopCondition duration. */
            public duration: number;

            /** AbnormalStopCondition distance. */
            public distance: number;

            /** AbnormalStopCondition x. */
            public x: number;

            /** AbnormalStopCondition y. */
            public y: number;

            /**
             * Creates a new AbnormalStopCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AbnormalStopCondition instance
             */
            public static create(properties?: apollo.simulation.IAbnormalStopCondition): apollo.simulation.AbnormalStopCondition;

            /**
             * Encodes the specified AbnormalStopCondition message. Does not implicitly {@link apollo.simulation.AbnormalStopCondition.verify|verify} messages.
             * @param message AbnormalStopCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IAbnormalStopCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AbnormalStopCondition message, length delimited. Does not implicitly {@link apollo.simulation.AbnormalStopCondition.verify|verify} messages.
             * @param message AbnormalStopCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IAbnormalStopCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AbnormalStopCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AbnormalStopCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.AbnormalStopCondition;

            /**
             * Decodes an AbnormalStopCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AbnormalStopCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.AbnormalStopCondition;

            /**
             * Verifies an AbnormalStopCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AbnormalStopCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AbnormalStopCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.AbnormalStopCondition;

            /**
             * Creates a plain object from an AbnormalStopCondition message. Also converts values to other types if specified.
             * @param message AbnormalStopCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.AbnormalStopCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AbnormalStopCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AbnormalStopCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a BrakeTapCondition. */
        interface IBrakeTapCondition {

            /** BrakeTapCondition minDuration */
            minDuration?: (number|null);

            /** BrakeTapCondition maxDuration */
            maxDuration?: (number|null);
        }

        /** Represents a BrakeTapCondition. */
        class BrakeTapCondition implements IBrakeTapCondition {

            /**
             * Constructs a new BrakeTapCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IBrakeTapCondition);

            /** BrakeTapCondition minDuration. */
            public minDuration: number;

            /** BrakeTapCondition maxDuration. */
            public maxDuration: number;

            /**
             * Creates a new BrakeTapCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BrakeTapCondition instance
             */
            public static create(properties?: apollo.simulation.IBrakeTapCondition): apollo.simulation.BrakeTapCondition;

            /**
             * Encodes the specified BrakeTapCondition message. Does not implicitly {@link apollo.simulation.BrakeTapCondition.verify|verify} messages.
             * @param message BrakeTapCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IBrakeTapCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BrakeTapCondition message, length delimited. Does not implicitly {@link apollo.simulation.BrakeTapCondition.verify|verify} messages.
             * @param message BrakeTapCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IBrakeTapCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BrakeTapCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BrakeTapCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.BrakeTapCondition;

            /**
             * Decodes a BrakeTapCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BrakeTapCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.BrakeTapCondition;

            /**
             * Verifies a BrakeTapCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BrakeTapCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BrakeTapCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.BrakeTapCondition;

            /**
             * Creates a plain object from a BrakeTapCondition message. Also converts values to other types if specified.
             * @param message BrakeTapCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.BrakeTapCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BrakeTapCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for BrakeTapCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a RunStopSignCondition. */
        interface IRunStopSignCondition {

            /** RunStopSignCondition distance */
            distance?: (number|null);
        }

        /** Represents a RunStopSignCondition. */
        class RunStopSignCondition implements IRunStopSignCondition {

            /**
             * Constructs a new RunStopSignCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IRunStopSignCondition);

            /** RunStopSignCondition distance. */
            public distance: number;

            /**
             * Creates a new RunStopSignCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RunStopSignCondition instance
             */
            public static create(properties?: apollo.simulation.IRunStopSignCondition): apollo.simulation.RunStopSignCondition;

            /**
             * Encodes the specified RunStopSignCondition message. Does not implicitly {@link apollo.simulation.RunStopSignCondition.verify|verify} messages.
             * @param message RunStopSignCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IRunStopSignCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RunStopSignCondition message, length delimited. Does not implicitly {@link apollo.simulation.RunStopSignCondition.verify|verify} messages.
             * @param message RunStopSignCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IRunStopSignCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RunStopSignCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RunStopSignCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.RunStopSignCondition;

            /**
             * Decodes a RunStopSignCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RunStopSignCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.RunStopSignCondition;

            /**
             * Verifies a RunStopSignCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RunStopSignCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RunStopSignCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.RunStopSignCondition;

            /**
             * Creates a plain object from a RunStopSignCondition message. Also converts values to other types if specified.
             * @param message RunStopSignCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.RunStopSignCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RunStopSignCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RunStopSignCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CheckpointCondition. */
        interface ICheckpointCondition {

            /** CheckpointCondition checkpoint */
            checkpoint?: (apollo.simulation.ICondition[]|null);
        }

        /** Represents a CheckpointCondition. */
        class CheckpointCondition implements ICheckpointCondition {

            /**
             * Constructs a new CheckpointCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ICheckpointCondition);

            /** CheckpointCondition checkpoint. */
            public checkpoint: apollo.simulation.ICondition[];

            /**
             * Creates a new CheckpointCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckpointCondition instance
             */
            public static create(properties?: apollo.simulation.ICheckpointCondition): apollo.simulation.CheckpointCondition;

            /**
             * Encodes the specified CheckpointCondition message. Does not implicitly {@link apollo.simulation.CheckpointCondition.verify|verify} messages.
             * @param message CheckpointCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ICheckpointCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckpointCondition message, length delimited. Does not implicitly {@link apollo.simulation.CheckpointCondition.verify|verify} messages.
             * @param message CheckpointCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ICheckpointCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckpointCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckpointCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.CheckpointCondition;

            /**
             * Decodes a CheckpointCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckpointCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.CheckpointCondition;

            /**
             * Verifies a CheckpointCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckpointCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckpointCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.CheckpointCondition;

            /**
             * Creates a plain object from a CheckpointCondition message. Also converts values to other types if specified.
             * @param message CheckpointCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.CheckpointCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckpointCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CheckpointCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DistToEndCondition. */
        interface IDistToEndCondition {
        }

        /** Represents a DistToEndCondition. */
        class DistToEndCondition implements IDistToEndCondition {

            /**
             * Constructs a new DistToEndCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IDistToEndCondition);

            /**
             * Creates a new DistToEndCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DistToEndCondition instance
             */
            public static create(properties?: apollo.simulation.IDistToEndCondition): apollo.simulation.DistToEndCondition;

            /**
             * Encodes the specified DistToEndCondition message. Does not implicitly {@link apollo.simulation.DistToEndCondition.verify|verify} messages.
             * @param message DistToEndCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IDistToEndCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DistToEndCondition message, length delimited. Does not implicitly {@link apollo.simulation.DistToEndCondition.verify|verify} messages.
             * @param message DistToEndCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IDistToEndCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DistToEndCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DistToEndCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.DistToEndCondition;

            /**
             * Decodes a DistToEndCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DistToEndCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.DistToEndCondition;

            /**
             * Verifies a DistToEndCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DistToEndCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DistToEndCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.DistToEndCondition;

            /**
             * Creates a plain object from a DistToEndCondition message. Also converts values to other types if specified.
             * @param message DistToEndCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.DistToEndCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DistToEndCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DistToEndCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DistToLaneCenterCondition. */
        interface IDistToLaneCenterCondition {
        }

        /** Represents a DistToLaneCenterCondition. */
        class DistToLaneCenterCondition implements IDistToLaneCenterCondition {

            /**
             * Constructs a new DistToLaneCenterCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IDistToLaneCenterCondition);

            /**
             * Creates a new DistToLaneCenterCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DistToLaneCenterCondition instance
             */
            public static create(properties?: apollo.simulation.IDistToLaneCenterCondition): apollo.simulation.DistToLaneCenterCondition;

            /**
             * Encodes the specified DistToLaneCenterCondition message. Does not implicitly {@link apollo.simulation.DistToLaneCenterCondition.verify|verify} messages.
             * @param message DistToLaneCenterCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IDistToLaneCenterCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DistToLaneCenterCondition message, length delimited. Does not implicitly {@link apollo.simulation.DistToLaneCenterCondition.verify|verify} messages.
             * @param message DistToLaneCenterCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IDistToLaneCenterCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DistToLaneCenterCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DistToLaneCenterCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.DistToLaneCenterCondition;

            /**
             * Decodes a DistToLaneCenterCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DistToLaneCenterCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.DistToLaneCenterCondition;

            /**
             * Verifies a DistToLaneCenterCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DistToLaneCenterCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DistToLaneCenterCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.DistToLaneCenterCondition;

            /**
             * Creates a plain object from a DistToLaneCenterCondition message. Also converts values to other types if specified.
             * @param message DistToLaneCenterCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.DistToLaneCenterCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DistToLaneCenterCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DistToLaneCenterCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TimeLimitCondition. */
        interface ITimeLimitCondition {

            /** TimeLimitCondition timeout */
            timeout?: (number|null);

            /** TimeLimitCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents a TimeLimitCondition. */
        class TimeLimitCondition implements ITimeLimitCondition {

            /**
             * Constructs a new TimeLimitCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ITimeLimitCondition);

            /** TimeLimitCondition timeout. */
            public timeout: number;

            /** TimeLimitCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new TimeLimitCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TimeLimitCondition instance
             */
            public static create(properties?: apollo.simulation.ITimeLimitCondition): apollo.simulation.TimeLimitCondition;

            /**
             * Encodes the specified TimeLimitCondition message. Does not implicitly {@link apollo.simulation.TimeLimitCondition.verify|verify} messages.
             * @param message TimeLimitCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ITimeLimitCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TimeLimitCondition message, length delimited. Does not implicitly {@link apollo.simulation.TimeLimitCondition.verify|verify} messages.
             * @param message TimeLimitCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ITimeLimitCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TimeLimitCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TimeLimitCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.TimeLimitCondition;

            /**
             * Decodes a TimeLimitCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TimeLimitCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.TimeLimitCondition;

            /**
             * Verifies a TimeLimitCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TimeLimitCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TimeLimitCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.TimeLimitCondition;

            /**
             * Creates a plain object from a TimeLimitCondition message. Also converts values to other types if specified.
             * @param message TimeLimitCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.TimeLimitCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TimeLimitCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TimeLimitCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SpeedbumpLimitCondition. */
        interface ISpeedbumpLimitCondition {

            /** SpeedbumpLimitCondition speedbumpHalfWidth */
            speedbumpHalfWidth?: (number|null);

            /** SpeedbumpLimitCondition maxSpeed */
            maxSpeed?: (number|null);

            /** SpeedbumpLimitCondition deductionSpeedUnit */
            deductionSpeedUnit?: (number|null);

            /** SpeedbumpLimitCondition useScore */
            useScore?: (boolean|null);

            /** SpeedbumpLimitCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents a SpeedbumpLimitCondition. */
        class SpeedbumpLimitCondition implements ISpeedbumpLimitCondition {

            /**
             * Constructs a new SpeedbumpLimitCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ISpeedbumpLimitCondition);

            /** SpeedbumpLimitCondition speedbumpHalfWidth. */
            public speedbumpHalfWidth: number;

            /** SpeedbumpLimitCondition maxSpeed. */
            public maxSpeed: number;

            /** SpeedbumpLimitCondition deductionSpeedUnit. */
            public deductionSpeedUnit: number;

            /** SpeedbumpLimitCondition useScore. */
            public useScore: boolean;

            /** SpeedbumpLimitCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new SpeedbumpLimitCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SpeedbumpLimitCondition instance
             */
            public static create(properties?: apollo.simulation.ISpeedbumpLimitCondition): apollo.simulation.SpeedbumpLimitCondition;

            /**
             * Encodes the specified SpeedbumpLimitCondition message. Does not implicitly {@link apollo.simulation.SpeedbumpLimitCondition.verify|verify} messages.
             * @param message SpeedbumpLimitCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ISpeedbumpLimitCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SpeedbumpLimitCondition message, length delimited. Does not implicitly {@link apollo.simulation.SpeedbumpLimitCondition.verify|verify} messages.
             * @param message SpeedbumpLimitCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ISpeedbumpLimitCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SpeedbumpLimitCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SpeedbumpLimitCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.SpeedbumpLimitCondition;

            /**
             * Decodes a SpeedbumpLimitCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SpeedbumpLimitCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.SpeedbumpLimitCondition;

            /**
             * Verifies a SpeedbumpLimitCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SpeedbumpLimitCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SpeedbumpLimitCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.SpeedbumpLimitCondition;

            /**
             * Creates a plain object from a SpeedbumpLimitCondition message. Also converts values to other types if specified.
             * @param message SpeedbumpLimitCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.SpeedbumpLimitCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SpeedbumpLimitCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SpeedbumpLimitCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a WorkingZoneAvoidLimitCondition. */
        interface IWorkingZoneAvoidLimitCondition {

            /** WorkingZoneAvoidLimitCondition workingZone */
            workingZone?: (apollo.hdmap.IPolygon[]|null);

            /** WorkingZoneAvoidLimitCondition maxSpeed */
            maxSpeed?: (number|null);

            /** WorkingZoneAvoidLimitCondition wholeArea */
            wholeArea?: (apollo.hdmap.IPolygon|null);

            /** WorkingZoneAvoidLimitCondition useScore */
            useScore?: (boolean|null);

            /** WorkingZoneAvoidLimitCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents a WorkingZoneAvoidLimitCondition. */
        class WorkingZoneAvoidLimitCondition implements IWorkingZoneAvoidLimitCondition {

            /**
             * Constructs a new WorkingZoneAvoidLimitCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IWorkingZoneAvoidLimitCondition);

            /** WorkingZoneAvoidLimitCondition workingZone. */
            public workingZone: apollo.hdmap.IPolygon[];

            /** WorkingZoneAvoidLimitCondition maxSpeed. */
            public maxSpeed: number;

            /** WorkingZoneAvoidLimitCondition wholeArea. */
            public wholeArea?: (apollo.hdmap.IPolygon|null);

            /** WorkingZoneAvoidLimitCondition useScore. */
            public useScore: boolean;

            /** WorkingZoneAvoidLimitCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new WorkingZoneAvoidLimitCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WorkingZoneAvoidLimitCondition instance
             */
            public static create(properties?: apollo.simulation.IWorkingZoneAvoidLimitCondition): apollo.simulation.WorkingZoneAvoidLimitCondition;

            /**
             * Encodes the specified WorkingZoneAvoidLimitCondition message. Does not implicitly {@link apollo.simulation.WorkingZoneAvoidLimitCondition.verify|verify} messages.
             * @param message WorkingZoneAvoidLimitCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IWorkingZoneAvoidLimitCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified WorkingZoneAvoidLimitCondition message, length delimited. Does not implicitly {@link apollo.simulation.WorkingZoneAvoidLimitCondition.verify|verify} messages.
             * @param message WorkingZoneAvoidLimitCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IWorkingZoneAvoidLimitCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a WorkingZoneAvoidLimitCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WorkingZoneAvoidLimitCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.WorkingZoneAvoidLimitCondition;

            /**
             * Decodes a WorkingZoneAvoidLimitCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WorkingZoneAvoidLimitCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.WorkingZoneAvoidLimitCondition;

            /**
             * Verifies a WorkingZoneAvoidLimitCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WorkingZoneAvoidLimitCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WorkingZoneAvoidLimitCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.WorkingZoneAvoidLimitCondition;

            /**
             * Creates a plain object from a WorkingZoneAvoidLimitCondition message. Also converts values to other types if specified.
             * @param message WorkingZoneAvoidLimitCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.WorkingZoneAvoidLimitCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WorkingZoneAvoidLimitCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for WorkingZoneAvoidLimitCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a LimitedTimeParkingCondition. */
        interface ILimitedTimeParkingCondition {

            /** LimitedTimeParkingCondition parkingLot */
            parkingLot?: (apollo.hdmap.IPolygon|null);

            /** LimitedTimeParkingCondition useScore */
            useScore?: (boolean|null);

            /** LimitedTimeParkingCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents a LimitedTimeParkingCondition. */
        class LimitedTimeParkingCondition implements ILimitedTimeParkingCondition {

            /**
             * Constructs a new LimitedTimeParkingCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.ILimitedTimeParkingCondition);

            /** LimitedTimeParkingCondition parkingLot. */
            public parkingLot?: (apollo.hdmap.IPolygon|null);

            /** LimitedTimeParkingCondition useScore. */
            public useScore: boolean;

            /** LimitedTimeParkingCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new LimitedTimeParkingCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LimitedTimeParkingCondition instance
             */
            public static create(properties?: apollo.simulation.ILimitedTimeParkingCondition): apollo.simulation.LimitedTimeParkingCondition;

            /**
             * Encodes the specified LimitedTimeParkingCondition message. Does not implicitly {@link apollo.simulation.LimitedTimeParkingCondition.verify|verify} messages.
             * @param message LimitedTimeParkingCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.ILimitedTimeParkingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LimitedTimeParkingCondition message, length delimited. Does not implicitly {@link apollo.simulation.LimitedTimeParkingCondition.verify|verify} messages.
             * @param message LimitedTimeParkingCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.ILimitedTimeParkingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LimitedTimeParkingCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LimitedTimeParkingCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.LimitedTimeParkingCondition;

            /**
             * Decodes a LimitedTimeParkingCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LimitedTimeParkingCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.LimitedTimeParkingCondition;

            /**
             * Verifies a LimitedTimeParkingCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LimitedTimeParkingCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LimitedTimeParkingCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.LimitedTimeParkingCondition;

            /**
             * Creates a plain object from a LimitedTimeParkingCondition message. Also converts values to other types if specified.
             * @param message LimitedTimeParkingCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.LimitedTimeParkingCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LimitedTimeParkingCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for LimitedTimeParkingCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a FollowAndBypassCondition. */
        interface IFollowAndBypassCondition {

            /** FollowAndBypassCondition testRange */
            testRange?: (apollo.hdmap.IPolygon|null);

            /** FollowAndBypassCondition divideSpeed */
            divideSpeed?: (number|null);

            /** FollowAndBypassCondition obstacleId */
            obstacleId?: (string|null);

            /** FollowAndBypassCondition endLine */
            endLine?: (apollo.hdmap.ILineSegment|null);

            /** FollowAndBypassCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents a FollowAndBypassCondition. */
        class FollowAndBypassCondition implements IFollowAndBypassCondition {

            /**
             * Constructs a new FollowAndBypassCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IFollowAndBypassCondition);

            /** FollowAndBypassCondition testRange. */
            public testRange?: (apollo.hdmap.IPolygon|null);

            /** FollowAndBypassCondition divideSpeed. */
            public divideSpeed: number;

            /** FollowAndBypassCondition obstacleId. */
            public obstacleId: string;

            /** FollowAndBypassCondition endLine. */
            public endLine?: (apollo.hdmap.ILineSegment|null);

            /** FollowAndBypassCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new FollowAndBypassCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FollowAndBypassCondition instance
             */
            public static create(properties?: apollo.simulation.IFollowAndBypassCondition): apollo.simulation.FollowAndBypassCondition;

            /**
             * Encodes the specified FollowAndBypassCondition message. Does not implicitly {@link apollo.simulation.FollowAndBypassCondition.verify|verify} messages.
             * @param message FollowAndBypassCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IFollowAndBypassCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FollowAndBypassCondition message, length delimited. Does not implicitly {@link apollo.simulation.FollowAndBypassCondition.verify|verify} messages.
             * @param message FollowAndBypassCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IFollowAndBypassCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FollowAndBypassCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FollowAndBypassCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.FollowAndBypassCondition;

            /**
             * Decodes a FollowAndBypassCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FollowAndBypassCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.FollowAndBypassCondition;

            /**
             * Verifies a FollowAndBypassCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FollowAndBypassCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FollowAndBypassCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.FollowAndBypassCondition;

            /**
             * Creates a plain object from a FollowAndBypassCondition message. Also converts values to other types if specified.
             * @param message FollowAndBypassCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.FollowAndBypassCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FollowAndBypassCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for FollowAndBypassCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ObstacleBypassCondition. */
        interface IObstacleBypassCondition {

            /** ObstacleBypassCondition testRange */
            testRange?: (apollo.hdmap.IPolygon|null);

            /** ObstacleBypassCondition obstacleId */
            obstacleId?: (string|null);

            /** ObstacleBypassCondition minLateralDistance */
            minLateralDistance?: (number|null);

            /** ObstacleBypassCondition maxSpeed */
            maxSpeed?: (number|null);

            /** ObstacleBypassCondition useScore */
            useScore?: (boolean|null);

            /** ObstacleBypassCondition singleDeduction */
            singleDeduction?: (number|null);
        }

        /** Represents an ObstacleBypassCondition. */
        class ObstacleBypassCondition implements IObstacleBypassCondition {

            /**
             * Constructs a new ObstacleBypassCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IObstacleBypassCondition);

            /** ObstacleBypassCondition testRange. */
            public testRange?: (apollo.hdmap.IPolygon|null);

            /** ObstacleBypassCondition obstacleId. */
            public obstacleId: string;

            /** ObstacleBypassCondition minLateralDistance. */
            public minLateralDistance: number;

            /** ObstacleBypassCondition maxSpeed. */
            public maxSpeed: number;

            /** ObstacleBypassCondition useScore. */
            public useScore: boolean;

            /** ObstacleBypassCondition singleDeduction. */
            public singleDeduction: number;

            /**
             * Creates a new ObstacleBypassCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObstacleBypassCondition instance
             */
            public static create(properties?: apollo.simulation.IObstacleBypassCondition): apollo.simulation.ObstacleBypassCondition;

            /**
             * Encodes the specified ObstacleBypassCondition message. Does not implicitly {@link apollo.simulation.ObstacleBypassCondition.verify|verify} messages.
             * @param message ObstacleBypassCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IObstacleBypassCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObstacleBypassCondition message, length delimited. Does not implicitly {@link apollo.simulation.ObstacleBypassCondition.verify|verify} messages.
             * @param message ObstacleBypassCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IObstacleBypassCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObstacleBypassCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObstacleBypassCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.ObstacleBypassCondition;

            /**
             * Decodes an ObstacleBypassCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObstacleBypassCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.ObstacleBypassCondition;

            /**
             * Verifies an ObstacleBypassCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObstacleBypassCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObstacleBypassCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.ObstacleBypassCondition;

            /**
             * Creates a plain object from an ObstacleBypassCondition message. Also converts values to other types if specified.
             * @param message ObstacleBypassCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.ObstacleBypassCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObstacleBypassCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ObstacleBypassCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an AntiCheatingCondition. */
        interface IAntiCheatingCondition {

            /** AntiCheatingCondition useScore */
            useScore?: (boolean|null);
        }

        /** Represents an AntiCheatingCondition. */
        class AntiCheatingCondition implements IAntiCheatingCondition {

            /**
             * Constructs a new AntiCheatingCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IAntiCheatingCondition);

            /** AntiCheatingCondition useScore. */
            public useScore: boolean;

            /**
             * Creates a new AntiCheatingCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AntiCheatingCondition instance
             */
            public static create(properties?: apollo.simulation.IAntiCheatingCondition): apollo.simulation.AntiCheatingCondition;

            /**
             * Encodes the specified AntiCheatingCondition message. Does not implicitly {@link apollo.simulation.AntiCheatingCondition.verify|verify} messages.
             * @param message AntiCheatingCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IAntiCheatingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AntiCheatingCondition message, length delimited. Does not implicitly {@link apollo.simulation.AntiCheatingCondition.verify|verify} messages.
             * @param message AntiCheatingCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IAntiCheatingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AntiCheatingCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AntiCheatingCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.AntiCheatingCondition;

            /**
             * Decodes an AntiCheatingCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AntiCheatingCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.AntiCheatingCondition;

            /**
             * Verifies an AntiCheatingCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AntiCheatingCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AntiCheatingCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.AntiCheatingCondition;

            /**
             * Creates a plain object from an AntiCheatingCondition message. Also converts values to other types if specified.
             * @param message AntiCheatingCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.AntiCheatingCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AntiCheatingCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AntiCheatingCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a KeyPoint. */
        interface IKeyPoint {

            /** KeyPoint x */
            x?: (number|null);

            /** KeyPoint y */
            y?: (number|null);

            /** KeyPoint z */
            z?: (number|null);

            /** KeyPoint radius */
            radius?: (number|null);
        }

        /** Represents a KeyPoint. */
        class KeyPoint implements IKeyPoint {

            /**
             * Constructs a new KeyPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IKeyPoint);

            /** KeyPoint x. */
            public x: number;

            /** KeyPoint y. */
            public y: number;

            /** KeyPoint z. */
            public z: number;

            /** KeyPoint radius. */
            public radius: number;

            /**
             * Creates a new KeyPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns KeyPoint instance
             */
            public static create(properties?: apollo.simulation.IKeyPoint): apollo.simulation.KeyPoint;

            /**
             * Encodes the specified KeyPoint message. Does not implicitly {@link apollo.simulation.KeyPoint.verify|verify} messages.
             * @param message KeyPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IKeyPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified KeyPoint message, length delimited. Does not implicitly {@link apollo.simulation.KeyPoint.verify|verify} messages.
             * @param message KeyPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IKeyPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a KeyPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns KeyPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.KeyPoint;

            /**
             * Decodes a KeyPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns KeyPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.KeyPoint;

            /**
             * Verifies a KeyPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a KeyPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns KeyPoint
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.KeyPoint;

            /**
             * Creates a plain object from a KeyPoint message. Also converts values to other types if specified.
             * @param message KeyPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.KeyPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this KeyPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for KeyPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a KeyPointCondition. */
        interface IKeyPointCondition {

            /** KeyPointCondition useScore */
            useScore?: (boolean|null);

            /** KeyPointCondition inOrder */
            inOrder?: (boolean|null);

            /** KeyPointCondition radius */
            radius?: (number|null);

            /** KeyPointCondition point */
            point?: (apollo.simulation.IKeyPoint[]|null);
        }

        /** Represents a KeyPointCondition. */
        class KeyPointCondition implements IKeyPointCondition {

            /**
             * Constructs a new KeyPointCondition.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IKeyPointCondition);

            /** KeyPointCondition useScore. */
            public useScore: boolean;

            /** KeyPointCondition inOrder. */
            public inOrder: boolean;

            /** KeyPointCondition radius. */
            public radius: number;

            /** KeyPointCondition point. */
            public point: apollo.simulation.IKeyPoint[];

            /**
             * Creates a new KeyPointCondition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns KeyPointCondition instance
             */
            public static create(properties?: apollo.simulation.IKeyPointCondition): apollo.simulation.KeyPointCondition;

            /**
             * Encodes the specified KeyPointCondition message. Does not implicitly {@link apollo.simulation.KeyPointCondition.verify|verify} messages.
             * @param message KeyPointCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IKeyPointCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified KeyPointCondition message, length delimited. Does not implicitly {@link apollo.simulation.KeyPointCondition.verify|verify} messages.
             * @param message KeyPointCondition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IKeyPointCondition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a KeyPointCondition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns KeyPointCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.KeyPointCondition;

            /**
             * Decodes a KeyPointCondition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns KeyPointCondition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.KeyPointCondition;

            /**
             * Verifies a KeyPointCondition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a KeyPointCondition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns KeyPointCondition
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.KeyPointCondition;

            /**
             * Creates a plain object from a KeyPointCondition message. Also converts values to other types if specified.
             * @param message KeyPointCondition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.KeyPointCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this KeyPointCondition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for KeyPointCondition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a GradingConfig. */
        interface IGradingConfig {

            /** GradingConfig metric */
            metric?: (apollo.simulation.IMetric[]|null);

            /** GradingConfig useScore */
            useScore?: (boolean|null);

            /** GradingConfig useTime */
            useTime?: (boolean|null);

            /** GradingConfig computeTimeMetricName */
            computeTimeMetricName?: (string|null);

            /** GradingConfig computeTimeAsFirstTrue */
            computeTimeAsFirstTrue?: (boolean|null);
        }

        /** Represents a GradingConfig. */
        class GradingConfig implements IGradingConfig {

            /**
             * Constructs a new GradingConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IGradingConfig);

            /** GradingConfig metric. */
            public metric: apollo.simulation.IMetric[];

            /** GradingConfig useScore. */
            public useScore: boolean;

            /** GradingConfig useTime. */
            public useTime: boolean;

            /** GradingConfig computeTimeMetricName. */
            public computeTimeMetricName: string;

            /** GradingConfig computeTimeAsFirstTrue. */
            public computeTimeAsFirstTrue: boolean;

            /**
             * Creates a new GradingConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GradingConfig instance
             */
            public static create(properties?: apollo.simulation.IGradingConfig): apollo.simulation.GradingConfig;

            /**
             * Encodes the specified GradingConfig message. Does not implicitly {@link apollo.simulation.GradingConfig.verify|verify} messages.
             * @param message GradingConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IGradingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GradingConfig message, length delimited. Does not implicitly {@link apollo.simulation.GradingConfig.verify|verify} messages.
             * @param message GradingConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IGradingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GradingConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GradingConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.GradingConfig;

            /**
             * Decodes a GradingConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GradingConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.GradingConfig;

            /**
             * Verifies a GradingConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GradingConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GradingConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.GradingConfig;

            /**
             * Creates a plain object from a GradingConfig message. Also converts values to other types if specified.
             * @param message GradingConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.GradingConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GradingConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for GradingConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Metric. */
        interface IMetric {

            /** Metric name */
            name?: (string|null);

            /** Metric description */
            description?: (string|null);

            /** Metric condition */
            condition?: (apollo.simulation.ICondition|null);

            /** Metric isCritical */
            isCritical?: (boolean|null);

            /** Metric requireAllTimePass */
            requireAllTimePass?: (boolean|null);

            /** Metric oncePassStayPass */
            oncePassStayPass?: (boolean|null);

            /** Metric getDeductionScore */
            getDeductionScore?: (boolean|null);
        }

        /** Represents a Metric. */
        class Metric implements IMetric {

            /**
             * Constructs a new Metric.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IMetric);

            /** Metric name. */
            public name: string;

            /** Metric description. */
            public description: string;

            /** Metric condition. */
            public condition?: (apollo.simulation.ICondition|null);

            /** Metric isCritical. */
            public isCritical: boolean;

            /** Metric requireAllTimePass. */
            public requireAllTimePass: boolean;

            /** Metric oncePassStayPass. */
            public oncePassStayPass: boolean;

            /** Metric getDeductionScore. */
            public getDeductionScore: boolean;

            /**
             * Creates a new Metric instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Metric instance
             */
            public static create(properties?: apollo.simulation.IMetric): apollo.simulation.Metric;

            /**
             * Encodes the specified Metric message. Does not implicitly {@link apollo.simulation.Metric.verify|verify} messages.
             * @param message Metric message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IMetric, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Metric message, length delimited. Does not implicitly {@link apollo.simulation.Metric.verify|verify} messages.
             * @param message Metric message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IMetric, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Metric message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Metric
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.Metric;

            /**
             * Decodes a Metric message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Metric
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.Metric;

            /**
             * Verifies a Metric message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Metric message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Metric
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.Metric;

            /**
             * Creates a plain object from a Metric message. Also converts values to other types if specified.
             * @param message Metric
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.Metric, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Metric to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Metric
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a FuzzingConfig. */
        interface IFuzzingConfig {
        }

        /** Represents a FuzzingConfig. */
        class FuzzingConfig implements IFuzzingConfig {

            /**
             * Constructs a new FuzzingConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IFuzzingConfig);

            /**
             * Creates a new FuzzingConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FuzzingConfig instance
             */
            public static create(properties?: apollo.simulation.IFuzzingConfig): apollo.simulation.FuzzingConfig;

            /**
             * Encodes the specified FuzzingConfig message. Does not implicitly {@link apollo.simulation.FuzzingConfig.verify|verify} messages.
             * @param message FuzzingConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IFuzzingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FuzzingConfig message, length delimited. Does not implicitly {@link apollo.simulation.FuzzingConfig.verify|verify} messages.
             * @param message FuzzingConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IFuzzingConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FuzzingConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FuzzingConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.FuzzingConfig;

            /**
             * Decodes a FuzzingConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FuzzingConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.FuzzingConfig;

            /**
             * Verifies a FuzzingConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FuzzingConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FuzzingConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.FuzzingConfig;

            /**
             * Creates a plain object from a FuzzingConfig message. Also converts values to other types if specified.
             * @param message FuzzingConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.FuzzingConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FuzzingConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for FuzzingConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DriveActionConfig. */
        interface IDriveActionConfig {

            /** DriveActionConfig driveAction */
            driveAction?: (apollo.planning.PadMessage.DrivingAction|null);

            /** DriveActionConfig triggerTime */
            triggerTime?: (number|null);
        }

        /** Represents a DriveActionConfig. */
        class DriveActionConfig implements IDriveActionConfig {

            /**
             * Constructs a new DriveActionConfig.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IDriveActionConfig);

            /** DriveActionConfig driveAction. */
            public driveAction: apollo.planning.PadMessage.DrivingAction;

            /** DriveActionConfig triggerTime. */
            public triggerTime: number;

            /**
             * Creates a new DriveActionConfig instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DriveActionConfig instance
             */
            public static create(properties?: apollo.simulation.IDriveActionConfig): apollo.simulation.DriveActionConfig;

            /**
             * Encodes the specified DriveActionConfig message. Does not implicitly {@link apollo.simulation.DriveActionConfig.verify|verify} messages.
             * @param message DriveActionConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IDriveActionConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DriveActionConfig message, length delimited. Does not implicitly {@link apollo.simulation.DriveActionConfig.verify|verify} messages.
             * @param message DriveActionConfig message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IDriveActionConfig, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DriveActionConfig message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DriveActionConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.DriveActionConfig;

            /**
             * Decodes a DriveActionConfig message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DriveActionConfig
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.DriveActionConfig;

            /**
             * Verifies a DriveActionConfig message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DriveActionConfig message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DriveActionConfig
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.DriveActionConfig;

            /**
             * Creates a plain object from a DriveActionConfig message. Also converts values to other types if specified.
             * @param message DriveActionConfig
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.DriveActionConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DriveActionConfig to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DriveActionConfig
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Scenario. */
        interface IScenario {

            /** Scenario name */
            name?: (string|null);

            /** Scenario description */
            description?: (string|null);

            /** Scenario start */
            start?: (apollo.simulation.Scenario.IPoint|null);

            /** Scenario end */
            end?: (apollo.simulation.Scenario.IPoint|null);

            /** Scenario parkingPoint */
            parkingPoint?: (apollo.simulation.Scenario.IPoint|null);

            /** Scenario originLogFilePath */
            originLogFilePath?: (string[]|null);

            /** Scenario logFileStartTime */
            logFileStartTime?: (number|null);

            /** Scenario logFileEndTime */
            logFileEndTime?: (number|null);

            /** Scenario routingRequest */
            routingRequest?: (apollo.routing.IRoutingRequest|null);

            /** Scenario mapDir */
            mapDir?: (string|null);

            /** Scenario gradeConfig */
            gradeConfig?: (apollo.simulation.IGradingConfig|null);

            /** Scenario agent */
            agent?: (apollo.simulation.IAgentConfig[]|null);

            /** Scenario driveActionConfig */
            driveActionConfig?: (apollo.simulation.IDriveActionConfig[]|null);

            /** Scenario fuzzingConfig */
            fuzzingConfig?: (apollo.simulation.IFuzzingConfig|null);

            /** Scenario simulatorTime */
            simulatorTime?: (number|null);

            /** Scenario startVelocity */
            startVelocity?: (number|null);

            /** Scenario startAcceleration */
            startAcceleration?: (number|null);

            /** Scenario baseGradeConfigFile */
            baseGradeConfigFile?: (string|null);

            /** Scenario detectDistance */
            detectDistance?: (number|null);

            /** Scenario defaultLightBehavior */
            defaultLightBehavior?: (apollo.simulation.Scenario.DefaultLightBehavior|null);

            /** Scenario redTime */
            redTime?: (number|null);

            /** Scenario greenTime */
            greenTime?: (number|null);

            /** Scenario yellowTime */
            yellowTime?: (number|null);

            /** Scenario trafficLights */
            trafficLights?: (apollo.simulation.Scenario.ITL[]|null);

            /** Scenario mode */
            mode?: (apollo.simulation.Scenario.Mode|null);

            /** Scenario selectDefaultMetric */
            selectDefaultMetric?: (string[]|null);

            /** Scenario deselectDefaultMetric */
            deselectDefaultMetric?: (string[]|null);

            /** Scenario backtrackTime */
            backtrackTime?: (number|null);

            /** Scenario vehicle */
            vehicle?: (string|null);

            /** Scenario trafficFlow */
            trafficFlow?: (boolean|null);
        }

        /** Represents a Scenario. */
        class Scenario implements IScenario {

            /**
             * Constructs a new Scenario.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.simulation.IScenario);

            /** Scenario name. */
            public name: string;

            /** Scenario description. */
            public description: string;

            /** Scenario start. */
            public start?: (apollo.simulation.Scenario.IPoint|null);

            /** Scenario end. */
            public end?: (apollo.simulation.Scenario.IPoint|null);

            /** Scenario parkingPoint. */
            public parkingPoint?: (apollo.simulation.Scenario.IPoint|null);

            /** Scenario originLogFilePath. */
            public originLogFilePath: string[];

            /** Scenario logFileStartTime. */
            public logFileStartTime: number;

            /** Scenario logFileEndTime. */
            public logFileEndTime: number;

            /** Scenario routingRequest. */
            public routingRequest?: (apollo.routing.IRoutingRequest|null);

            /** Scenario mapDir. */
            public mapDir: string;

            /** Scenario gradeConfig. */
            public gradeConfig?: (apollo.simulation.IGradingConfig|null);

            /** Scenario agent. */
            public agent: apollo.simulation.IAgentConfig[];

            /** Scenario driveActionConfig. */
            public driveActionConfig: apollo.simulation.IDriveActionConfig[];

            /** Scenario fuzzingConfig. */
            public fuzzingConfig?: (apollo.simulation.IFuzzingConfig|null);

            /** Scenario simulatorTime. */
            public simulatorTime: number;

            /** Scenario startVelocity. */
            public startVelocity: number;

            /** Scenario startAcceleration. */
            public startAcceleration: number;

            /** Scenario baseGradeConfigFile. */
            public baseGradeConfigFile: string;

            /** Scenario detectDistance. */
            public detectDistance: number;

            /** Scenario defaultLightBehavior. */
            public defaultLightBehavior: apollo.simulation.Scenario.DefaultLightBehavior;

            /** Scenario redTime. */
            public redTime: number;

            /** Scenario greenTime. */
            public greenTime: number;

            /** Scenario yellowTime. */
            public yellowTime: number;

            /** Scenario trafficLights. */
            public trafficLights: apollo.simulation.Scenario.ITL[];

            /** Scenario mode. */
            public mode: apollo.simulation.Scenario.Mode;

            /** Scenario selectDefaultMetric. */
            public selectDefaultMetric: string[];

            /** Scenario deselectDefaultMetric. */
            public deselectDefaultMetric: string[];

            /** Scenario backtrackTime. */
            public backtrackTime: number;

            /** Scenario vehicle. */
            public vehicle: string;

            /** Scenario trafficFlow. */
            public trafficFlow: boolean;

            /**
             * Creates a new Scenario instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Scenario instance
             */
            public static create(properties?: apollo.simulation.IScenario): apollo.simulation.Scenario;

            /**
             * Encodes the specified Scenario message. Does not implicitly {@link apollo.simulation.Scenario.verify|verify} messages.
             * @param message Scenario message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.simulation.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Scenario message, length delimited. Does not implicitly {@link apollo.simulation.Scenario.verify|verify} messages.
             * @param message Scenario message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.simulation.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Scenario message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Scenario
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.Scenario;

            /**
             * Decodes a Scenario message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Scenario
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.Scenario;

            /**
             * Verifies a Scenario message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Scenario message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Scenario
             */
            public static fromObject(object: { [k: string]: any }): apollo.simulation.Scenario;

            /**
             * Creates a plain object from a Scenario message. Also converts values to other types if specified.
             * @param message Scenario
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.simulation.Scenario, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Scenario to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Scenario
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace Scenario {

            /** Properties of a Point. */
            interface IPoint {

                /** Point x */
                x?: (number|null);

                /** Point y */
                y?: (number|null);

                /** Point heading */
                heading?: (number|null);
            }

            /** Represents a Point. */
            class Point implements IPoint {

                /**
                 * Constructs a new Point.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.simulation.Scenario.IPoint);

                /** Point x. */
                public x: number;

                /** Point y. */
                public y: number;

                /** Point heading. */
                public heading: number;

                /**
                 * Creates a new Point instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Point instance
                 */
                public static create(properties?: apollo.simulation.Scenario.IPoint): apollo.simulation.Scenario.Point;

                /**
                 * Encodes the specified Point message. Does not implicitly {@link apollo.simulation.Scenario.Point.verify|verify} messages.
                 * @param message Point message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.simulation.Scenario.IPoint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Point message, length delimited. Does not implicitly {@link apollo.simulation.Scenario.Point.verify|verify} messages.
                 * @param message Point message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.simulation.Scenario.IPoint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Point message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Point
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.Scenario.Point;

                /**
                 * Decodes a Point message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Point
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.Scenario.Point;

                /**
                 * Verifies a Point message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Point message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Point
                 */
                public static fromObject(object: { [k: string]: any }): apollo.simulation.Scenario.Point;

                /**
                 * Creates a plain object from a Point message. Also converts values to other types if specified.
                 * @param message Point
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.simulation.Scenario.Point, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Point to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Point
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** DefaultLightBehavior enum. */
            enum DefaultLightBehavior {
                ALWAYS_GREEN = 0,
                CYCLICAL = 1
            }

            /** Properties of a TL. */
            interface ITL {

                /** TL id */
                id?: (string|null);

                /** TL location */
                location?: (apollo.simulation.Scenario.TL.ILocation|null);

                /** TL triggerType */
                triggerType?: (apollo.simulation.Scenario.TL.TriggerType|null);

                /** TL triggerValue */
                triggerValue?: (number|null);

                /** TL initialState */
                initialState?: (apollo.simulation.Scenario.TL.IState|null);

                /** TL stateGroup */
                stateGroup?: (apollo.simulation.Scenario.TL.IState[]|null);
            }

            /** Represents a TL. */
            class TL implements ITL {

                /**
                 * Constructs a new TL.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: apollo.simulation.Scenario.ITL);

                /** TL id. */
                public id: string;

                /** TL location. */
                public location?: (apollo.simulation.Scenario.TL.ILocation|null);

                /** TL triggerType. */
                public triggerType: apollo.simulation.Scenario.TL.TriggerType;

                /** TL triggerValue. */
                public triggerValue: number;

                /** TL initialState. */
                public initialState?: (apollo.simulation.Scenario.TL.IState|null);

                /** TL stateGroup. */
                public stateGroup: apollo.simulation.Scenario.TL.IState[];

                /**
                 * Creates a new TL instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TL instance
                 */
                public static create(properties?: apollo.simulation.Scenario.ITL): apollo.simulation.Scenario.TL;

                /**
                 * Encodes the specified TL message. Does not implicitly {@link apollo.simulation.Scenario.TL.verify|verify} messages.
                 * @param message TL message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: apollo.simulation.Scenario.ITL, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TL message, length delimited. Does not implicitly {@link apollo.simulation.Scenario.TL.verify|verify} messages.
                 * @param message TL message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: apollo.simulation.Scenario.ITL, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TL message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TL
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.Scenario.TL;

                /**
                 * Decodes a TL message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TL
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.Scenario.TL;

                /**
                 * Verifies a TL message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TL message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TL
                 */
                public static fromObject(object: { [k: string]: any }): apollo.simulation.Scenario.TL;

                /**
                 * Creates a plain object from a TL message. Also converts values to other types if specified.
                 * @param message TL
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: apollo.simulation.Scenario.TL, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TL to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TL
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace TL {

                /** Properties of a Location. */
                interface ILocation {

                    /** Location x */
                    x?: (number|null);

                    /** Location y */
                    y?: (number|null);

                    /** Location z */
                    z?: (number|null);
                }

                /** Represents a Location. */
                class Location implements ILocation {

                    /**
                     * Constructs a new Location.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: apollo.simulation.Scenario.TL.ILocation);

                    /** Location x. */
                    public x: number;

                    /** Location y. */
                    public y: number;

                    /** Location z. */
                    public z: number;

                    /**
                     * Creates a new Location instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Location instance
                     */
                    public static create(properties?: apollo.simulation.Scenario.TL.ILocation): apollo.simulation.Scenario.TL.Location;

                    /**
                     * Encodes the specified Location message. Does not implicitly {@link apollo.simulation.Scenario.TL.Location.verify|verify} messages.
                     * @param message Location message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: apollo.simulation.Scenario.TL.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link apollo.simulation.Scenario.TL.Location.verify|verify} messages.
                     * @param message Location message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: apollo.simulation.Scenario.TL.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.Scenario.TL.Location;

                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.Scenario.TL.Location;

                    /**
                     * Verifies a Location message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Location
                     */
                    public static fromObject(object: { [k: string]: any }): apollo.simulation.Scenario.TL.Location;

                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @param message Location
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: apollo.simulation.Scenario.TL.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Location to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };

                    /**
                     * Gets the default type url for Location
                     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns The default type url
                     */
                    public static getTypeUrl(typeUrlPrefix?: string): string;
                }

                /** TriggerType enum. */
                enum TriggerType {
                    NA = 0,
                    DISTANCE = 1,
                    TIME = 2
                }

                /** Properties of a State. */
                interface IState {

                    /** State color */
                    color?: (apollo.perception.TrafficLight.Color|null);

                    /** State blink */
                    blink?: (boolean|null);

                    /** State keepTime */
                    keepTime?: (number|null);
                }

                /** Represents a State. */
                class State implements IState {

                    /**
                     * Constructs a new State.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: apollo.simulation.Scenario.TL.IState);

                    /** State color. */
                    public color: apollo.perception.TrafficLight.Color;

                    /** State blink. */
                    public blink: boolean;

                    /** State keepTime. */
                    public keepTime: number;

                    /**
                     * Creates a new State instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns State instance
                     */
                    public static create(properties?: apollo.simulation.Scenario.TL.IState): apollo.simulation.Scenario.TL.State;

                    /**
                     * Encodes the specified State message. Does not implicitly {@link apollo.simulation.Scenario.TL.State.verify|verify} messages.
                     * @param message State message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: apollo.simulation.Scenario.TL.IState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified State message, length delimited. Does not implicitly {@link apollo.simulation.Scenario.TL.State.verify|verify} messages.
                     * @param message State message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: apollo.simulation.Scenario.TL.IState, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a State message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns State
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.simulation.Scenario.TL.State;

                    /**
                     * Decodes a State message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns State
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.simulation.Scenario.TL.State;

                    /**
                     * Verifies a State message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a State message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns State
                     */
                    public static fromObject(object: { [k: string]: any }): apollo.simulation.Scenario.TL.State;

                    /**
                     * Creates a plain object from a State message. Also converts values to other types if specified.
                     * @param message State
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: apollo.simulation.Scenario.TL.State, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this State to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };

                    /**
                     * Gets the default type url for State
                     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns The default type url
                     */
                    public static getTypeUrl(typeUrlPrefix?: string): string;
                }
            }

            /** Mode enum. */
            enum Mode {
                WORLDSIM = 0,
                LOGSIM = 1,
                LOGSIM_CONTROL = 2,
                LOGSIM_PERCEPTION = 3
            }
        }
    }

    /** Namespace storytelling. */
    namespace storytelling {

        /** Properties of a CloseToCrosswalk. */
        interface ICloseToCrosswalk {

            /** CloseToCrosswalk id */
            id?: (string|null);

            /** CloseToCrosswalk distance */
            distance?: (number|null);
        }

        /** Represents a CloseToCrosswalk. */
        class CloseToCrosswalk implements ICloseToCrosswalk {

            /**
             * Constructs a new CloseToCrosswalk.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.storytelling.ICloseToCrosswalk);

            /** CloseToCrosswalk id. */
            public id: string;

            /** CloseToCrosswalk distance. */
            public distance: number;

            /**
             * Creates a new CloseToCrosswalk instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloseToCrosswalk instance
             */
            public static create(properties?: apollo.storytelling.ICloseToCrosswalk): apollo.storytelling.CloseToCrosswalk;

            /**
             * Encodes the specified CloseToCrosswalk message. Does not implicitly {@link apollo.storytelling.CloseToCrosswalk.verify|verify} messages.
             * @param message CloseToCrosswalk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.storytelling.ICloseToCrosswalk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloseToCrosswalk message, length delimited. Does not implicitly {@link apollo.storytelling.CloseToCrosswalk.verify|verify} messages.
             * @param message CloseToCrosswalk message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.storytelling.ICloseToCrosswalk, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloseToCrosswalk message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloseToCrosswalk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.storytelling.CloseToCrosswalk;

            /**
             * Decodes a CloseToCrosswalk message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloseToCrosswalk
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.storytelling.CloseToCrosswalk;

            /**
             * Verifies a CloseToCrosswalk message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloseToCrosswalk message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloseToCrosswalk
             */
            public static fromObject(object: { [k: string]: any }): apollo.storytelling.CloseToCrosswalk;

            /**
             * Creates a plain object from a CloseToCrosswalk message. Also converts values to other types if specified.
             * @param message CloseToCrosswalk
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.storytelling.CloseToCrosswalk, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloseToCrosswalk to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloseToCrosswalk
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CloseToClearArea. */
        interface ICloseToClearArea {

            /** CloseToClearArea id */
            id?: (string|null);

            /** CloseToClearArea distance */
            distance?: (number|null);
        }

        /** Represents a CloseToClearArea. */
        class CloseToClearArea implements ICloseToClearArea {

            /**
             * Constructs a new CloseToClearArea.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.storytelling.ICloseToClearArea);

            /** CloseToClearArea id. */
            public id: string;

            /** CloseToClearArea distance. */
            public distance: number;

            /**
             * Creates a new CloseToClearArea instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloseToClearArea instance
             */
            public static create(properties?: apollo.storytelling.ICloseToClearArea): apollo.storytelling.CloseToClearArea;

            /**
             * Encodes the specified CloseToClearArea message. Does not implicitly {@link apollo.storytelling.CloseToClearArea.verify|verify} messages.
             * @param message CloseToClearArea message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.storytelling.ICloseToClearArea, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloseToClearArea message, length delimited. Does not implicitly {@link apollo.storytelling.CloseToClearArea.verify|verify} messages.
             * @param message CloseToClearArea message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.storytelling.ICloseToClearArea, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloseToClearArea message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloseToClearArea
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.storytelling.CloseToClearArea;

            /**
             * Decodes a CloseToClearArea message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloseToClearArea
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.storytelling.CloseToClearArea;

            /**
             * Verifies a CloseToClearArea message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloseToClearArea message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloseToClearArea
             */
            public static fromObject(object: { [k: string]: any }): apollo.storytelling.CloseToClearArea;

            /**
             * Creates a plain object from a CloseToClearArea message. Also converts values to other types if specified.
             * @param message CloseToClearArea
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.storytelling.CloseToClearArea, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloseToClearArea to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloseToClearArea
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CloseToJunction. */
        interface ICloseToJunction {

            /** CloseToJunction id */
            id?: (string|null);

            /** CloseToJunction type */
            type?: (apollo.storytelling.CloseToJunction.JunctionType|null);

            /** CloseToJunction distance */
            distance?: (number|null);
        }

        /** Represents a CloseToJunction. */
        class CloseToJunction implements ICloseToJunction {

            /**
             * Constructs a new CloseToJunction.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.storytelling.ICloseToJunction);

            /** CloseToJunction id. */
            public id: string;

            /** CloseToJunction type. */
            public type: apollo.storytelling.CloseToJunction.JunctionType;

            /** CloseToJunction distance. */
            public distance: number;

            /**
             * Creates a new CloseToJunction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloseToJunction instance
             */
            public static create(properties?: apollo.storytelling.ICloseToJunction): apollo.storytelling.CloseToJunction;

            /**
             * Encodes the specified CloseToJunction message. Does not implicitly {@link apollo.storytelling.CloseToJunction.verify|verify} messages.
             * @param message CloseToJunction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.storytelling.ICloseToJunction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloseToJunction message, length delimited. Does not implicitly {@link apollo.storytelling.CloseToJunction.verify|verify} messages.
             * @param message CloseToJunction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.storytelling.ICloseToJunction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloseToJunction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloseToJunction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.storytelling.CloseToJunction;

            /**
             * Decodes a CloseToJunction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloseToJunction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.storytelling.CloseToJunction;

            /**
             * Verifies a CloseToJunction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloseToJunction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloseToJunction
             */
            public static fromObject(object: { [k: string]: any }): apollo.storytelling.CloseToJunction;

            /**
             * Creates a plain object from a CloseToJunction message. Also converts values to other types if specified.
             * @param message CloseToJunction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.storytelling.CloseToJunction, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloseToJunction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloseToJunction
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace CloseToJunction {

            /** JunctionType enum. */
            enum JunctionType {
                PNC_JUNCTION = 1,
                JUNCTION = 2
            }
        }

        /** Properties of a CloseToSignal. */
        interface ICloseToSignal {

            /** CloseToSignal id */
            id?: (string|null);

            /** CloseToSignal distance */
            distance?: (number|null);
        }

        /** Represents a CloseToSignal. */
        class CloseToSignal implements ICloseToSignal {

            /**
             * Constructs a new CloseToSignal.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.storytelling.ICloseToSignal);

            /** CloseToSignal id. */
            public id: string;

            /** CloseToSignal distance. */
            public distance: number;

            /**
             * Creates a new CloseToSignal instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloseToSignal instance
             */
            public static create(properties?: apollo.storytelling.ICloseToSignal): apollo.storytelling.CloseToSignal;

            /**
             * Encodes the specified CloseToSignal message. Does not implicitly {@link apollo.storytelling.CloseToSignal.verify|verify} messages.
             * @param message CloseToSignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.storytelling.ICloseToSignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloseToSignal message, length delimited. Does not implicitly {@link apollo.storytelling.CloseToSignal.verify|verify} messages.
             * @param message CloseToSignal message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.storytelling.ICloseToSignal, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloseToSignal message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloseToSignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.storytelling.CloseToSignal;

            /**
             * Decodes a CloseToSignal message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloseToSignal
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.storytelling.CloseToSignal;

            /**
             * Verifies a CloseToSignal message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloseToSignal message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloseToSignal
             */
            public static fromObject(object: { [k: string]: any }): apollo.storytelling.CloseToSignal;

            /**
             * Creates a plain object from a CloseToSignal message. Also converts values to other types if specified.
             * @param message CloseToSignal
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.storytelling.CloseToSignal, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloseToSignal to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloseToSignal
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CloseToStopSign. */
        interface ICloseToStopSign {

            /** CloseToStopSign id */
            id?: (string|null);

            /** CloseToStopSign distance */
            distance?: (number|null);
        }

        /** Represents a CloseToStopSign. */
        class CloseToStopSign implements ICloseToStopSign {

            /**
             * Constructs a new CloseToStopSign.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.storytelling.ICloseToStopSign);

            /** CloseToStopSign id. */
            public id: string;

            /** CloseToStopSign distance. */
            public distance: number;

            /**
             * Creates a new CloseToStopSign instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloseToStopSign instance
             */
            public static create(properties?: apollo.storytelling.ICloseToStopSign): apollo.storytelling.CloseToStopSign;

            /**
             * Encodes the specified CloseToStopSign message. Does not implicitly {@link apollo.storytelling.CloseToStopSign.verify|verify} messages.
             * @param message CloseToStopSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.storytelling.ICloseToStopSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloseToStopSign message, length delimited. Does not implicitly {@link apollo.storytelling.CloseToStopSign.verify|verify} messages.
             * @param message CloseToStopSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.storytelling.ICloseToStopSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloseToStopSign message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloseToStopSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.storytelling.CloseToStopSign;

            /**
             * Decodes a CloseToStopSign message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloseToStopSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.storytelling.CloseToStopSign;

            /**
             * Verifies a CloseToStopSign message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloseToStopSign message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloseToStopSign
             */
            public static fromObject(object: { [k: string]: any }): apollo.storytelling.CloseToStopSign;

            /**
             * Creates a plain object from a CloseToStopSign message. Also converts values to other types if specified.
             * @param message CloseToStopSign
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.storytelling.CloseToStopSign, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloseToStopSign to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloseToStopSign
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a CloseToYieldSign. */
        interface ICloseToYieldSign {

            /** CloseToYieldSign id */
            id?: (string|null);

            /** CloseToYieldSign distance */
            distance?: (number|null);
        }

        /** Represents a CloseToYieldSign. */
        class CloseToYieldSign implements ICloseToYieldSign {

            /**
             * Constructs a new CloseToYieldSign.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.storytelling.ICloseToYieldSign);

            /** CloseToYieldSign id. */
            public id: string;

            /** CloseToYieldSign distance. */
            public distance: number;

            /**
             * Creates a new CloseToYieldSign instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CloseToYieldSign instance
             */
            public static create(properties?: apollo.storytelling.ICloseToYieldSign): apollo.storytelling.CloseToYieldSign;

            /**
             * Encodes the specified CloseToYieldSign message. Does not implicitly {@link apollo.storytelling.CloseToYieldSign.verify|verify} messages.
             * @param message CloseToYieldSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.storytelling.ICloseToYieldSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CloseToYieldSign message, length delimited. Does not implicitly {@link apollo.storytelling.CloseToYieldSign.verify|verify} messages.
             * @param message CloseToYieldSign message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.storytelling.ICloseToYieldSign, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CloseToYieldSign message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CloseToYieldSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.storytelling.CloseToYieldSign;

            /**
             * Decodes a CloseToYieldSign message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CloseToYieldSign
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.storytelling.CloseToYieldSign;

            /**
             * Verifies a CloseToYieldSign message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CloseToYieldSign message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CloseToYieldSign
             */
            public static fromObject(object: { [k: string]: any }): apollo.storytelling.CloseToYieldSign;

            /**
             * Creates a plain object from a CloseToYieldSign message. Also converts values to other types if specified.
             * @param message CloseToYieldSign
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.storytelling.CloseToYieldSign, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CloseToYieldSign to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CloseToYieldSign
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Stories. */
        interface IStories {

            /** Stories header */
            header?: (apollo.common.IHeader|null);

            /** Stories closeToClearArea */
            closeToClearArea?: (apollo.storytelling.ICloseToClearArea|null);

            /** Stories closeToCrosswalk */
            closeToCrosswalk?: (apollo.storytelling.ICloseToCrosswalk|null);

            /** Stories closeToJunction */
            closeToJunction?: (apollo.storytelling.ICloseToJunction|null);

            /** Stories closeToSignal */
            closeToSignal?: (apollo.storytelling.ICloseToSignal|null);

            /** Stories closeToStopSign */
            closeToStopSign?: (apollo.storytelling.ICloseToStopSign|null);

            /** Stories closeToYieldSign */
            closeToYieldSign?: (apollo.storytelling.ICloseToYieldSign|null);
        }

        /** Represents a Stories. */
        class Stories implements IStories {

            /**
             * Constructs a new Stories.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.storytelling.IStories);

            /** Stories header. */
            public header?: (apollo.common.IHeader|null);

            /** Stories closeToClearArea. */
            public closeToClearArea?: (apollo.storytelling.ICloseToClearArea|null);

            /** Stories closeToCrosswalk. */
            public closeToCrosswalk?: (apollo.storytelling.ICloseToCrosswalk|null);

            /** Stories closeToJunction. */
            public closeToJunction?: (apollo.storytelling.ICloseToJunction|null);

            /** Stories closeToSignal. */
            public closeToSignal?: (apollo.storytelling.ICloseToSignal|null);

            /** Stories closeToStopSign. */
            public closeToStopSign?: (apollo.storytelling.ICloseToStopSign|null);

            /** Stories closeToYieldSign. */
            public closeToYieldSign?: (apollo.storytelling.ICloseToYieldSign|null);

            /**
             * Creates a new Stories instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Stories instance
             */
            public static create(properties?: apollo.storytelling.IStories): apollo.storytelling.Stories;

            /**
             * Encodes the specified Stories message. Does not implicitly {@link apollo.storytelling.Stories.verify|verify} messages.
             * @param message Stories message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.storytelling.IStories, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Stories message, length delimited. Does not implicitly {@link apollo.storytelling.Stories.verify|verify} messages.
             * @param message Stories message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.storytelling.IStories, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Stories message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Stories
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.storytelling.Stories;

            /**
             * Decodes a Stories message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Stories
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.storytelling.Stories;

            /**
             * Verifies a Stories message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Stories message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Stories
             */
            public static fromObject(object: { [k: string]: any }): apollo.storytelling.Stories;

            /**
             * Creates a plain object from a Stories message. Also converts values to other types if specified.
             * @param message Stories
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.storytelling.Stories, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Stories to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Stories
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace task_manager. */
    namespace task_manager {

        /** TaskType enum. */
        enum TaskType {
            CYCLE_ROUTING = 0,
            PARKING_ROUTING = 1,
            PARK_GO_ROUTING = 2
        }

        /** JunctionType enum. */
        enum JunctionType {
            UNKNOWN = 0,
            IN_ROAD = 1,
            CROSS_ROAD = 2,
            FORK_ROAD = 3,
            MAIN_SIDE = 4
        }

        /** Properties of a CycleRoutingTask. */
        interface ICycleRoutingTask {

            /** CycleRoutingTask cycleNum */
            cycleNum?: (number|null);

            /** CycleRoutingTask laneFollowCommand */
            laneFollowCommand?: (apollo.external_command.ILaneFollowCommand|null);
        }

        /** Represents a CycleRoutingTask. */
        class CycleRoutingTask implements ICycleRoutingTask {

            /**
             * Constructs a new CycleRoutingTask.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.task_manager.ICycleRoutingTask);

            /** CycleRoutingTask cycleNum. */
            public cycleNum: number;

            /** CycleRoutingTask laneFollowCommand. */
            public laneFollowCommand?: (apollo.external_command.ILaneFollowCommand|null);

            /**
             * Creates a new CycleRoutingTask instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CycleRoutingTask instance
             */
            public static create(properties?: apollo.task_manager.ICycleRoutingTask): apollo.task_manager.CycleRoutingTask;

            /**
             * Encodes the specified CycleRoutingTask message. Does not implicitly {@link apollo.task_manager.CycleRoutingTask.verify|verify} messages.
             * @param message CycleRoutingTask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.task_manager.ICycleRoutingTask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CycleRoutingTask message, length delimited. Does not implicitly {@link apollo.task_manager.CycleRoutingTask.verify|verify} messages.
             * @param message CycleRoutingTask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.task_manager.ICycleRoutingTask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CycleRoutingTask message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CycleRoutingTask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.task_manager.CycleRoutingTask;

            /**
             * Decodes a CycleRoutingTask message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CycleRoutingTask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.task_manager.CycleRoutingTask;

            /**
             * Verifies a CycleRoutingTask message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CycleRoutingTask message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CycleRoutingTask
             */
            public static fromObject(object: { [k: string]: any }): apollo.task_manager.CycleRoutingTask;

            /**
             * Creates a plain object from a CycleRoutingTask message. Also converts values to other types if specified.
             * @param message CycleRoutingTask
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.task_manager.CycleRoutingTask, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CycleRoutingTask to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for CycleRoutingTask
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ParkingRoutingTask. */
        interface IParkingRoutingTask {

            /** ParkingRoutingTask laneWidth */
            laneWidth?: (number|null);

            /** ParkingRoutingTask routingRequest */
            routingRequest?: (apollo.routing.IRoutingRequest|null);
        }

        /** Represents a ParkingRoutingTask. */
        class ParkingRoutingTask implements IParkingRoutingTask {

            /**
             * Constructs a new ParkingRoutingTask.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.task_manager.IParkingRoutingTask);

            /** ParkingRoutingTask laneWidth. */
            public laneWidth: number;

            /** ParkingRoutingTask routingRequest. */
            public routingRequest?: (apollo.routing.IRoutingRequest|null);

            /**
             * Creates a new ParkingRoutingTask instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ParkingRoutingTask instance
             */
            public static create(properties?: apollo.task_manager.IParkingRoutingTask): apollo.task_manager.ParkingRoutingTask;

            /**
             * Encodes the specified ParkingRoutingTask message. Does not implicitly {@link apollo.task_manager.ParkingRoutingTask.verify|verify} messages.
             * @param message ParkingRoutingTask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.task_manager.IParkingRoutingTask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ParkingRoutingTask message, length delimited. Does not implicitly {@link apollo.task_manager.ParkingRoutingTask.verify|verify} messages.
             * @param message ParkingRoutingTask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.task_manager.IParkingRoutingTask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ParkingRoutingTask message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ParkingRoutingTask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.task_manager.ParkingRoutingTask;

            /**
             * Decodes a ParkingRoutingTask message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ParkingRoutingTask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.task_manager.ParkingRoutingTask;

            /**
             * Verifies a ParkingRoutingTask message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ParkingRoutingTask message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ParkingRoutingTask
             */
            public static fromObject(object: { [k: string]: any }): apollo.task_manager.ParkingRoutingTask;

            /**
             * Creates a plain object from a ParkingRoutingTask message. Also converts values to other types if specified.
             * @param message ParkingRoutingTask
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.task_manager.ParkingRoutingTask, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ParkingRoutingTask to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ParkingRoutingTask
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ParkGoRoutingTask. */
        interface IParkGoRoutingTask {

            /** ParkGoRoutingTask parkTime */
            parkTime?: (number|null);

            /** ParkGoRoutingTask routingRequest */
            routingRequest?: (apollo.routing.IRoutingRequest|null);
        }

        /** Represents a ParkGoRoutingTask. */
        class ParkGoRoutingTask implements IParkGoRoutingTask {

            /**
             * Constructs a new ParkGoRoutingTask.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.task_manager.IParkGoRoutingTask);

            /** ParkGoRoutingTask parkTime. */
            public parkTime: number;

            /** ParkGoRoutingTask routingRequest. */
            public routingRequest?: (apollo.routing.IRoutingRequest|null);

            /**
             * Creates a new ParkGoRoutingTask instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ParkGoRoutingTask instance
             */
            public static create(properties?: apollo.task_manager.IParkGoRoutingTask): apollo.task_manager.ParkGoRoutingTask;

            /**
             * Encodes the specified ParkGoRoutingTask message. Does not implicitly {@link apollo.task_manager.ParkGoRoutingTask.verify|verify} messages.
             * @param message ParkGoRoutingTask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.task_manager.IParkGoRoutingTask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ParkGoRoutingTask message, length delimited. Does not implicitly {@link apollo.task_manager.ParkGoRoutingTask.verify|verify} messages.
             * @param message ParkGoRoutingTask message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.task_manager.IParkGoRoutingTask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ParkGoRoutingTask message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ParkGoRoutingTask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.task_manager.ParkGoRoutingTask;

            /**
             * Decodes a ParkGoRoutingTask message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ParkGoRoutingTask
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.task_manager.ParkGoRoutingTask;

            /**
             * Verifies a ParkGoRoutingTask message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ParkGoRoutingTask message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ParkGoRoutingTask
             */
            public static fromObject(object: { [k: string]: any }): apollo.task_manager.ParkGoRoutingTask;

            /**
             * Creates a plain object from a ParkGoRoutingTask message. Also converts values to other types if specified.
             * @param message ParkGoRoutingTask
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.task_manager.ParkGoRoutingTask, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ParkGoRoutingTask to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ParkGoRoutingTask
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a Task. */
        interface ITask {

            /** Task header */
            header?: (apollo.common.IHeader|null);

            /** Task taskName */
            taskName?: (string|null);

            /** Task taskType */
            taskType?: (apollo.task_manager.TaskType|null);

            /** Task cycleRoutingTask */
            cycleRoutingTask?: (apollo.task_manager.ICycleRoutingTask|null);

            /** Task parkingRoutingTask */
            parkingRoutingTask?: (apollo.task_manager.IParkingRoutingTask|null);

            /** Task parkGoRoutingTask */
            parkGoRoutingTask?: (apollo.task_manager.IParkGoRoutingTask|null);
        }

        /** Represents a Task. */
        class Task implements ITask {

            /**
             * Constructs a new Task.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.task_manager.ITask);

            /** Task header. */
            public header?: (apollo.common.IHeader|null);

            /** Task taskName. */
            public taskName: string;

            /** Task taskType. */
            public taskType: apollo.task_manager.TaskType;

            /** Task cycleRoutingTask. */
            public cycleRoutingTask?: (apollo.task_manager.ICycleRoutingTask|null);

            /** Task parkingRoutingTask. */
            public parkingRoutingTask?: (apollo.task_manager.IParkingRoutingTask|null);

            /** Task parkGoRoutingTask. */
            public parkGoRoutingTask?: (apollo.task_manager.IParkGoRoutingTask|null);

            /**
             * Creates a new Task instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Task instance
             */
            public static create(properties?: apollo.task_manager.ITask): apollo.task_manager.Task;

            /**
             * Encodes the specified Task message. Does not implicitly {@link apollo.task_manager.Task.verify|verify} messages.
             * @param message Task message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.task_manager.ITask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Task message, length delimited. Does not implicitly {@link apollo.task_manager.Task.verify|verify} messages.
             * @param message Task message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.task_manager.ITask, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Task message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Task
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.task_manager.Task;

            /**
             * Decodes a Task message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Task
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.task_manager.Task;

            /**
             * Verifies a Task message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Task message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Task
             */
            public static fromObject(object: { [k: string]: any }): apollo.task_manager.Task;

            /**
             * Creates a plain object from a Task message. Also converts values to other types if specified.
             * @param message Task
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.task_manager.Task, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Task to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Task
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace transform. */
    namespace transform {

        /** Properties of a Transform. */
        interface ITransform {

            /** Transform translation */
            translation?: (apollo.common.IPoint3D|null);

            /** Transform rotation */
            rotation?: (apollo.common.IQuaternion|null);
        }

        /** Represents a Transform. */
        class Transform implements ITransform {

            /**
             * Constructs a new Transform.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.transform.ITransform);

            /** Transform translation. */
            public translation?: (apollo.common.IPoint3D|null);

            /** Transform rotation. */
            public rotation?: (apollo.common.IQuaternion|null);

            /**
             * Creates a new Transform instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Transform instance
             */
            public static create(properties?: apollo.transform.ITransform): apollo.transform.Transform;

            /**
             * Encodes the specified Transform message. Does not implicitly {@link apollo.transform.Transform.verify|verify} messages.
             * @param message Transform message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.transform.ITransform, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Transform message, length delimited. Does not implicitly {@link apollo.transform.Transform.verify|verify} messages.
             * @param message Transform message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.transform.ITransform, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Transform message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Transform
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.transform.Transform;

            /**
             * Decodes a Transform message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Transform
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.transform.Transform;

            /**
             * Verifies a Transform message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Transform message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Transform
             */
            public static fromObject(object: { [k: string]: any }): apollo.transform.Transform;

            /**
             * Creates a plain object from a Transform message. Also converts values to other types if specified.
             * @param message Transform
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.transform.Transform, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Transform to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Transform
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TransformStamped. */
        interface ITransformStamped {

            /** TransformStamped header */
            header?: (apollo.common.IHeader|null);

            /** TransformStamped childFrameId */
            childFrameId?: (string|null);

            /** TransformStamped transform */
            transform?: (apollo.transform.ITransform|null);
        }

        /** Represents a TransformStamped. */
        class TransformStamped implements ITransformStamped {

            /**
             * Constructs a new TransformStamped.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.transform.ITransformStamped);

            /** TransformStamped header. */
            public header?: (apollo.common.IHeader|null);

            /** TransformStamped childFrameId. */
            public childFrameId: string;

            /** TransformStamped transform. */
            public transform?: (apollo.transform.ITransform|null);

            /**
             * Creates a new TransformStamped instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TransformStamped instance
             */
            public static create(properties?: apollo.transform.ITransformStamped): apollo.transform.TransformStamped;

            /**
             * Encodes the specified TransformStamped message. Does not implicitly {@link apollo.transform.TransformStamped.verify|verify} messages.
             * @param message TransformStamped message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.transform.ITransformStamped, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TransformStamped message, length delimited. Does not implicitly {@link apollo.transform.TransformStamped.verify|verify} messages.
             * @param message TransformStamped message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.transform.ITransformStamped, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TransformStamped message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TransformStamped
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.transform.TransformStamped;

            /**
             * Decodes a TransformStamped message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TransformStamped
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.transform.TransformStamped;

            /**
             * Verifies a TransformStamped message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TransformStamped message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TransformStamped
             */
            public static fromObject(object: { [k: string]: any }): apollo.transform.TransformStamped;

            /**
             * Creates a plain object from a TransformStamped message. Also converts values to other types if specified.
             * @param message TransformStamped
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.transform.TransformStamped, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TransformStamped to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TransformStamped
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a TransformStampeds. */
        interface ITransformStampeds {

            /** TransformStampeds header */
            header?: (apollo.common.IHeader|null);

            /** TransformStampeds transforms */
            transforms?: (apollo.transform.ITransformStamped[]|null);
        }

        /** Represents a TransformStampeds. */
        class TransformStampeds implements ITransformStampeds {

            /**
             * Constructs a new TransformStampeds.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.transform.ITransformStampeds);

            /** TransformStampeds header. */
            public header?: (apollo.common.IHeader|null);

            /** TransformStampeds transforms. */
            public transforms: apollo.transform.ITransformStamped[];

            /**
             * Creates a new TransformStampeds instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TransformStampeds instance
             */
            public static create(properties?: apollo.transform.ITransformStampeds): apollo.transform.TransformStampeds;

            /**
             * Encodes the specified TransformStampeds message. Does not implicitly {@link apollo.transform.TransformStampeds.verify|verify} messages.
             * @param message TransformStampeds message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.transform.ITransformStampeds, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TransformStampeds message, length delimited. Does not implicitly {@link apollo.transform.TransformStampeds.verify|verify} messages.
             * @param message TransformStampeds message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.transform.ITransformStampeds, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TransformStampeds message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TransformStampeds
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.transform.TransformStampeds;

            /**
             * Decodes a TransformStampeds message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TransformStampeds
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.transform.TransformStampeds;

            /**
             * Verifies a TransformStampeds message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TransformStampeds message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TransformStampeds
             */
            public static fromObject(object: { [k: string]: any }): apollo.transform.TransformStampeds;

            /**
             * Creates a plain object from a TransformStampeds message. Also converts values to other types if specified.
             * @param message TransformStampeds
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.transform.TransformStampeds, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TransformStampeds to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for TransformStampeds
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace v2x. */
    namespace v2x {

        /** Properties of a SingleTrafficLight. */
        interface ISingleTrafficLight {

            /** SingleTrafficLight color */
            color?: (apollo.v2x.SingleTrafficLight.Color|null);

            /** SingleTrafficLight trafficLightType */
            trafficLightType?: (apollo.v2x.SingleTrafficLight.Type[]|null);

            /** SingleTrafficLight id */
            id?: (string|null);

            /** SingleTrafficLight colorRemainingTimeS */
            colorRemainingTimeS?: (number|null);

            /** SingleTrafficLight rightTurnLight */
            rightTurnLight?: (boolean|null);

            /** SingleTrafficLight nextColor */
            nextColor?: (apollo.v2x.SingleTrafficLight.Color|null);

            /** SingleTrafficLight nextRemainingTimeS */
            nextRemainingTimeS?: (number|null);
        }

        /** Represents a SingleTrafficLight. */
        class SingleTrafficLight implements ISingleTrafficLight {

            /**
             * Constructs a new SingleTrafficLight.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.v2x.ISingleTrafficLight);

            /** SingleTrafficLight color. */
            public color: apollo.v2x.SingleTrafficLight.Color;

            /** SingleTrafficLight trafficLightType. */
            public trafficLightType: apollo.v2x.SingleTrafficLight.Type[];

            /** SingleTrafficLight id. */
            public id: string;

            /** SingleTrafficLight colorRemainingTimeS. */
            public colorRemainingTimeS: number;

            /** SingleTrafficLight rightTurnLight. */
            public rightTurnLight: boolean;

            /** SingleTrafficLight nextColor. */
            public nextColor: apollo.v2x.SingleTrafficLight.Color;

            /** SingleTrafficLight nextRemainingTimeS. */
            public nextRemainingTimeS: number;

            /**
             * Creates a new SingleTrafficLight instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SingleTrafficLight instance
             */
            public static create(properties?: apollo.v2x.ISingleTrafficLight): apollo.v2x.SingleTrafficLight;

            /**
             * Encodes the specified SingleTrafficLight message. Does not implicitly {@link apollo.v2x.SingleTrafficLight.verify|verify} messages.
             * @param message SingleTrafficLight message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.v2x.ISingleTrafficLight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SingleTrafficLight message, length delimited. Does not implicitly {@link apollo.v2x.SingleTrafficLight.verify|verify} messages.
             * @param message SingleTrafficLight message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.v2x.ISingleTrafficLight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SingleTrafficLight message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SingleTrafficLight
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.v2x.SingleTrafficLight;

            /**
             * Decodes a SingleTrafficLight message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SingleTrafficLight
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.v2x.SingleTrafficLight;

            /**
             * Verifies a SingleTrafficLight message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SingleTrafficLight message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SingleTrafficLight
             */
            public static fromObject(object: { [k: string]: any }): apollo.v2x.SingleTrafficLight;

            /**
             * Creates a plain object from a SingleTrafficLight message. Also converts values to other types if specified.
             * @param message SingleTrafficLight
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.v2x.SingleTrafficLight, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SingleTrafficLight to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SingleTrafficLight
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        namespace SingleTrafficLight {

            /** Color enum. */
            enum Color {
                UNKNOWN = 0,
                RED = 1,
                YELLOW = 2,
                GREEN = 3,
                BLACK = 4,
                FLASH_GREEN = 5
            }

            /** Type enum. */
            enum Type {
                STRAIGHT = 0,
                LEFT = 1,
                RIGHT = 2,
                U_TURN = 3
            }
        }

        /** Properties of a RoadTrafficLight. */
        interface IRoadTrafficLight {

            /** RoadTrafficLight gpsXM */
            gpsXM?: (number|null);

            /** RoadTrafficLight gpsYM */
            gpsYM?: (number|null);

            /** RoadTrafficLight singleTrafficLight */
            singleTrafficLight?: (apollo.v2x.ISingleTrafficLight[]|null);

            /** RoadTrafficLight roadAttribute */
            roadAttribute?: (apollo.common.Direction|null);
        }

        /** Represents a RoadTrafficLight. */
        class RoadTrafficLight implements IRoadTrafficLight {

            /**
             * Constructs a new RoadTrafficLight.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.v2x.IRoadTrafficLight);

            /** RoadTrafficLight gpsXM. */
            public gpsXM: number;

            /** RoadTrafficLight gpsYM. */
            public gpsYM: number;

            /** RoadTrafficLight singleTrafficLight. */
            public singleTrafficLight: apollo.v2x.ISingleTrafficLight[];

            /** RoadTrafficLight roadAttribute. */
            public roadAttribute: apollo.common.Direction;

            /**
             * Creates a new RoadTrafficLight instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoadTrafficLight instance
             */
            public static create(properties?: apollo.v2x.IRoadTrafficLight): apollo.v2x.RoadTrafficLight;

            /**
             * Encodes the specified RoadTrafficLight message. Does not implicitly {@link apollo.v2x.RoadTrafficLight.verify|verify} messages.
             * @param message RoadTrafficLight message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.v2x.IRoadTrafficLight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoadTrafficLight message, length delimited. Does not implicitly {@link apollo.v2x.RoadTrafficLight.verify|verify} messages.
             * @param message RoadTrafficLight message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.v2x.IRoadTrafficLight, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoadTrafficLight message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoadTrafficLight
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.v2x.RoadTrafficLight;

            /**
             * Decodes a RoadTrafficLight message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoadTrafficLight
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.v2x.RoadTrafficLight;

            /**
             * Verifies a RoadTrafficLight message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoadTrafficLight message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoadTrafficLight
             */
            public static fromObject(object: { [k: string]: any }): apollo.v2x.RoadTrafficLight;

            /**
             * Creates a plain object from a RoadTrafficLight message. Also converts values to other types if specified.
             * @param message RoadTrafficLight
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.v2x.RoadTrafficLight, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoadTrafficLight to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for RoadTrafficLight
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an IntersectionTrafficLightData. */
        interface IIntersectionTrafficLightData {

            /** IntersectionTrafficLightData header */
            header?: (apollo.common.IHeader|null);

            /** IntersectionTrafficLightData roadTrafficLight */
            roadTrafficLight?: (apollo.v2x.IRoadTrafficLight[]|null);

            /** IntersectionTrafficLightData intersectionId */
            intersectionId?: (number|null);

            /** IntersectionTrafficLightData confidence */
            confidence?: (number|null);
        }

        /** Represents an IntersectionTrafficLightData. */
        class IntersectionTrafficLightData implements IIntersectionTrafficLightData {

            /**
             * Constructs a new IntersectionTrafficLightData.
             * @param [properties] Properties to set
             */
            constructor(properties?: apollo.v2x.IIntersectionTrafficLightData);

            /** IntersectionTrafficLightData header. */
            public header?: (apollo.common.IHeader|null);

            /** IntersectionTrafficLightData roadTrafficLight. */
            public roadTrafficLight: apollo.v2x.IRoadTrafficLight[];

            /** IntersectionTrafficLightData intersectionId. */
            public intersectionId: number;

            /** IntersectionTrafficLightData confidence. */
            public confidence: number;

            /**
             * Creates a new IntersectionTrafficLightData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns IntersectionTrafficLightData instance
             */
            public static create(properties?: apollo.v2x.IIntersectionTrafficLightData): apollo.v2x.IntersectionTrafficLightData;

            /**
             * Encodes the specified IntersectionTrafficLightData message. Does not implicitly {@link apollo.v2x.IntersectionTrafficLightData.verify|verify} messages.
             * @param message IntersectionTrafficLightData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: apollo.v2x.IIntersectionTrafficLightData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified IntersectionTrafficLightData message, length delimited. Does not implicitly {@link apollo.v2x.IntersectionTrafficLightData.verify|verify} messages.
             * @param message IntersectionTrafficLightData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: apollo.v2x.IIntersectionTrafficLightData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an IntersectionTrafficLightData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IntersectionTrafficLightData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): apollo.v2x.IntersectionTrafficLightData;

            /**
             * Decodes an IntersectionTrafficLightData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns IntersectionTrafficLightData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): apollo.v2x.IntersectionTrafficLightData;

            /**
             * Verifies an IntersectionTrafficLightData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an IntersectionTrafficLightData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns IntersectionTrafficLightData
             */
            public static fromObject(object: { [k: string]: any }): apollo.v2x.IntersectionTrafficLightData;

            /**
             * Creates a plain object from an IntersectionTrafficLightData message. Also converts values to other types if specified.
             * @param message IntersectionTrafficLightData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: apollo.v2x.IntersectionTrafficLightData, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this IntersectionTrafficLightData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for IntersectionTrafficLightData
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Creates a new Any instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Any instance
             */
            public static create(properties?: google.protobuf.IAny): google.protobuf.Any;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Any
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }
}
